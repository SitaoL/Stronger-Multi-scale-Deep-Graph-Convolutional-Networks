%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig_GCN_compare_all.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Harry Zhao
%%CreationDate: 5/15/2019
%%BoundingBox: 0 0 355 279
%%HiResBoundingBox: 0 0 354.6221 278.8912
%%CropBox: 0 0 354.6221 278.8912
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.2 x274 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 11644 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA8FFA8A8A8FD7AFF7DA87D7D7DA8FFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FF7DA87DA87DFFA8FD17FF
%A8FD45FFA8FD17FFA8FD06FFA8FDF8FFA8FD89FFA8FD80FFA8FD73FFA8FD
%0AFFA8FD80FF7D303054295430A7CCCEA1CAFD68FFA8FD0BFFCA69778585
%845B03A5805E7CCBFD68FFA8FD0BFFBC6EFD04FF55035817397DFD74FFC3
%99AEFD04FF55245A1158CAFD2DFFA9FD11FF7FFD0DFFA9FD19FFA8FD0BFF
%CA93AEFD04FFA82A253611547FA9A97F7FFFFFFFA9A9A9FD05FFA9FD07FF
%A9A9A9FFFFFFA9FFA9FFFFFFA9A9A9FFA9FFFFFFA97F7FFD05FFFD07A9FF
%7FA97F7F7FFFFD04A97FA9A9A97FA97F7F7FFFA9FD07FFA9FFFFFFA9A97F
%A9A9FD05FFA9FFFFFFA8A8A87DA87DFFA8FFCAB583FD05FFA655F90E0655
%55FD047FA9FD057FA97FA97FA9A9A97FA97FA97F7F557F7FFF7FA9A9A97F
%A9FD077FA9A97F557F7FA97FA9A9FD067FA97F7F7FA9FD067F5555FD067F
%55FD047FA97FFD04A97F7FA9FD077FA97FA97F7FA9FFFF7DA8A87D7DA8A9
%FFA8FF9283FD05FFCC7D790808032BF92B7F7F5555557F7F7F557F7F7F55
%7F55FD057F2BF955FD057F557F7F7F555555FD057FF92BF955FD067F5555
%2B552B7F55552B55557F5555552BF9557F55557FFD072B7F557F7F7FF955
%7F7F557F55FD077F54FD04FFA8A87DA87DFD04FFB57DFD05FFCDCE7F8513
%0C307F2B2B2B552B2B2B552B2B2B7FFD072B55FD052B55FD052B55FD052B
%552B552B557F7F2B2B2B55FD052B55FD052B55FD072B7FFD052B557F7F55
%7F55FD042B552B55FD092B552B2B2B55A9FD0AFFAFFFB5A0AFFD04FFCECC
%FFA95F112E7E7F55FD057F55557F55F92B5555557FFD04557F7F2B552B55
%557F7F55557F7F7F552B2B7F2B55A9A97F7FFD0755FD047F55FD067F55FD
%057F55FD067FA9A9A97F5555552B557F7F55FD057F55552B55555554A9FD
%0CFFBC9AFD05FFCECDFFFFAE3F107DA97F7FFFA9A97F7F7FA97F7F7FA9A9
%A9FD057FA9A9FD057FA9FF7F7F7FA9A9A9FD057FFFFFFFA9A9FD077FA97F
%A97FA9FD087FA9FFFD057FFD06FFA97FA97F7F7FFFA9FD0A7FA97F7FA8FD
%0CFFBC99AFFD04FFCEFEFFFFFF3F162CA87FFFFFFFA9A97FA9FFFF7FA9FD
%04FF7FA9A9A9FFFF7F7FA9A9A9FFFFFFA9FFA9FFA97F7FFFA9A9FD04FFA9
%A9A9FF7FA97FFFA9FFFFFFA9FFA9A97FFFA9FFA9FFFFFF7FFFA9A9FD0AFF
%7FFFFFFFA9FFFD06A97FA9A9A97FFD0DFFC493FD05FFCFCCFFFFFFAEFA32
%58FD0BFFA9FD17FFA9FD3FFFCFFD0CFFC393AEFD05FFFECFFFFFAE3F102D
%A8FD6CFFA8FFFFCA92FD06FFCCCEFFFFFF643F2C7DFD6DFFA8FFCA93A7FD
%05FFCCCEFFFFFF89FA3327A8FD36FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0A
%FFA8FFFFFF92AEFD05FFCDCDFFFFFFAE64395176FD6CFFA8FFFFB57CFD05
%FFCDCDFD04FF643F514BA8FD41FF7D7D7DA87DFFA87DFF7DA8FD11FFA8FF
%A8FD0EFFB5A0FD05FFCECCFD04FF89FA8227A1FD34FFA8FFFFFFA9FFFFFF
%A9FD04FFA852A87D7DFFCA52FF7DFD15FFA8FFFFA8A87DA87DA8FD05FFBC
%75FD05FFCECCFD04FFAE3F5D524BFD35FFA8A9A8A984A9A8A984A984FFA8
%76A8A87DFFA87DFFA8A8FD11FFA8FD05FFA87DA87DA87DFFA8FFFFFFBC9A
%AFFD04FFCFCCFD05FF3F647C4C7DFD33FFA8FD0CFFA852A87D7D7DA87D7D
%7DFD15FFA8FFFFA8A87D7D7DA8FFFFA8FFFFC392AFFD04FFCFCCCFFD04FF
%641CAD4B52A8FD33FFA8FD0BFFA8FFA8FFA8A8FFFFA8FD13FFA8FFA8FD06
%FFA8FFFFFFA8FFFFFFC393AEFD05FFCCCFFD04FF893F887D27A8FD69FFA8
%FFFFC48CA8FD05FFCCCEFD04FFAE3F647D4C52FD3FFFA8FFA8FD07FFA8FF
%FFFFA8FD09FFA8FFFFFFA8FFA8FD0AFFA8FFFFFFCAB5A7FD05FFCCCEFD04
%FFAE643FAE764BA8FD3EFF7D7DFF52FD06FFA87DA87DA87DFD04FFA8FFFF
%FF7DA8FD10FFA8FFFFFF8CA1FD05FFCDCCFD05FF893F89A1277CFD32FFCA
%CAA8CACACAA8CACACAA1FFA87D7D7DA8FD047DA852FD057D52A852A87D7D
%52A87D7D7DFFA8FFA8FD0FFFB599FD05FFCECCFD05FFAE3F64A7764BCAFD
%30FFA8FFCAFFCAFFCAFFCAFFCAFFFFA87DA852A8527D7DA87DA852FFA876
%7DA87D7DA8A87DA87D7D52FD05FFA8FD0EFFB593A8FD04FFCFFEFD05FFAE
%643FAE764B76FD31FFA8FD0BFF7DA1A87D7D7D767DA8A8FD097DA8527D7D
%7D527D7DFFA8FD11FFC392FD05FFCFCCCFFD05FF643F89CA4B76A8FD2FFF
%A8FD2BFFA8FD0EFFC38CA7FD05FFFECEFD05FFAEFA89A87627A1FD30FFA8
%FD27FFA8FD0CFFA8FD04FFCAFCA7FD05FFCDCDFD05FFAE3F64FFA14C52FD
%3CFFA87DFFFD057DFF7DA8A87DFD1DFFA8FFFFFFA8B576FD05FFCDCDFD06
%FF3F3FAECF4B4B7DFD2FFFA8FFA8FFAEFFA8FFAEFFA8FF7D7DA87D52FF7D
%A8FF7D7DFF7DFD0FFFA8FFA8FD0AFFA8FD05FFB59AAFFD04FFCECCFD06FF
%893FAEFFA12776A8FD2FFFA8FFAEAEA8FFAEAEA8AEFFFFA87D7D7DA8A8A8
%FF7DA8FFA8FD17FF7DA87DA8FFFFA8FD04FFBC92AEFD04FFCECCCFFD05FF
%893F89FFA75227A1FD3AFFFD067D527D7DA8527DA8FD0FFFA8FFA8FD05FF
%7D7DA87EFFA8FD05FF9AB5A1FD05FFFECEFD05FFAE3F64FFFF764C76FD2D
%FFA8FD2BFFA8FD04FF7DA87DA8FD07FFC38CA083FD04FFCDCCFD05FFAE3F
%3FFFFFCA274B7DFD2DFFA8FD27FFA8FD12FFCAB599A7A8FFFFFFCECCFD06
%FF643FAEFFFF7D2776FD2CFFA8FD0DFFA8FD05FFA8FFFFFFA8FD09FFA8FD
%09FFA8FD10FF8C937C84A8FFFFCFFECFFD05FF89FA89FFFFA14C4BA8FD2C
%FFAFFD0BFF527DA8FFA8FF527D7DFFA87D7DFFA8FF7DA8A8FF7D7DFD06FF
%A8FD0CFFA8FD06FFA1FC9A83AFFFFFFFCCCDFD05FFAE3F64FFFFFF524C76
%FD2DFFC9CFCACFCACFCACFCACFCFA87DA8FD067D52A8FD097DA852A8FD13
%FFA8FD05FFA1938C7D83FFFFFFCDCCCFFD04FFAE3F64AEFFFFA12751A1FD
%2BFFCACFCAFFCACFCAFFCACFCAFFA8A8527D7D7D52A87DA852527D7D52A8
%7D7D52A852527DFD05FFA8FFA8FD0AFFA8FD06FFCA9AB576A1A1FFFFCFFE
%CFFD05FF643FAEFFFFCA764B7CFD37FFA87DFFFD08A87DFD05A87DFD06A8
%FD12FFA8FD05FFCAA18C93759AA8FFFFCCCCFD05FF643F89FFFFFF7C4C4B
%A7FD52FFA8FFA8FD12FFA8BC8CA09AA1A8FFCECCCFFD04FFAE3F89AEFFFF
%CA4C5276FD29FFA8FD2BFFA8FD12FFA1B58CB576A1A8FFCCCDFD04FFAE3F
%3FAEFFFFCFA127517DFD29FFA8FD0BFF7D7D7DA8FD04FFA8A1FD04FF7DFD
%04FFA8FFFFFFA8A8FFFFFFA8FD15FFCB9AB5FCB59AC3C3CEFECEFD04FF3F
%6489FFFFFFCA762776A8FD27FFAEFD0DFF7DFD05A87DFF527DA8A8A87D7D
%A87DA87DA87DA87DA8A8FD05FFA8FD13FFC376A08CB59AA1A1C7FECFFFFF
%AE89FA89AEFFFFFF764C4BA1FD28FFA8CBA8CBA8CBA8CBA8CBA8FFFFA8A8
%A827FD047DA87D7D76A87D7D527DA8FD047DA852A8FFFFA8FD07FFFD04A8
%FFA8FD09FFCAC376A093B593BCA0CCCCFFFFFF893F64AEFFFFFFCF4C5276
%A8FD34FF52A87D52527DA87D52A8FD047DA87D52FF7D7D7DA8527D7DFD0A
%FF537D7DA8FFFFA8FD09FFA1A1767C6F938CB599FEABFFFFAE3F3F89FFFF
%FFCFA1275176FD34FFA8A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FF
%A8A8A8FFA8FFA8FFA8FD05FF7D7DA87DFFA8FD0BFFA8A8A0A076A093B5BA
%FECCFFAE893F89FD04FFC9764B76A8FD56FFA8FFA8FD0EFFCF83847DA075
%A07693BAFEA5A8893F64FD05FF7C4C4B7CA8FD4DFFA8FD1AFF848483837D
%A7769A98FE9F893F64AEFD04FFCF764C4BA8FD24FFA8FD0CFF7D7DFF7D7D
%FD06FF7DFFA8A8FD10FFA8FD18FFA8AE848483A87D9B9EFE9F64FAAEFD04
%FFCFA14B4B76FD25FFA8A87DA87DA87DA87DA87DFFA8A8A87D7DA8527D52
%7D7D527DA852527D7DFD0AFFA8FD1EFFA9AFA8AF84A8C7FE813F89FD05FF
%CAA14B52A1FD25FFA8FFA8FFA8FFA8FFA8FFFFA87D7DA87D527D52A87D7D
%7DA87DA8A87DA8FD0DFFA8FD20FFA9A8C6FE3865FD06FFA1522776A8FD2F
%FFFD057DA87D7D7DA87D7D52A87DFF7DFD0BFFA8FD0CFFA8FD17FFAFCAC6
%FE5DFD07FF764C4B7DFD3EFFA8A8FD19FFA8FD17FFA9A7C6A483FD06FFC9
%4B4C4BA1FD3DFFA8A8FD0BFFA8FFA8FD0AFFA8FD1AFFA6C6C7A8FD05FFCF
%A14B5276FD2EFFA87DFFA8FD0BFFA8FF7DA8FD17FFA8FD19FF8380C6A6A9
%FD05FFA776275176FD21FFAEAE89AEAEAE89AEAEAE89FFFD047DA87D7D7D
%527D52A87D7D7DA8A8527DFD09FFA8FFA8FD25FFAF39A4C6A7FD06FFA176
%27767DFD1FFFCBAEFD0A6489FFA87D7DA852A87DA17DA852A1A87D7D7DA8
%7DFD0CFFA8FD24FFAE6456C6A4A7FD05FFCF754C2776A8FD1FFFA8FD0BFF
%FD087D527D7D7D76FD067DFD09FFA8FD08FFA8A87DFD1DFF893FA0FEA4CF
%FD05FFCA76524BA1FD1EFFA8FD10FFA87D7DA8FD17FFA8FD04FF527DA8A8
%A8FFA8FD1AFFAEFA899FFEA5FD06FFA14B4C4BA1FD1EFFA8FD0FFFA8A8A8
%FD15FFA8FFA8FD05FFA87DA87DFFA8FD1BFFAE3F3FAEC1FEA6FD05FFCFA0
%4C5251A8FD2AFFA8FD05FFA8FFA8FFFFA8FD19FFA8FFFFFFA8FD1BFF643F
%89CA9EFE7CFD05FFA776274B51A8FD28FF7D7D52A8A8FF527DFF7D7DFF7D
%FD0FFFA8FFA8FD0AFFA8FD1CFFAEFA89FFCAC6FEA7FD05FFA176277676FD
%1CFFCAFD0ABCCAFF52A8A8527DA8A8FF7DFFFFA8FD1DFFA8FD1BFFAE3F3F
%AEFFCAC6C6A1FD05FF764C27767CFD1BFFCAC3C3CAC3CAC3CAC3CAC3FFFD
%047D527D7D7DA87D7DA87DFD0FFFA8FFA8FD28FF643F89FFFFCAC6C6A7FD
%05FF76522776A1FD19FFA8FD0CFFA8A8FFFD04A87DA8A8A87DFD13FFA8FD
%26FFAE89FA64AEFFAFC9C69EA1FD04FFCA4B4C27767DFD19FFA8FD27FFA8
%FD2AFFAE643FAEFFFFFFC9C6C7A8FD04FFC94B524B76A7FD17FFA8FD2BFF
%A8FD28FF643F89FD04FFC9C6C7A8FFFFFFCFA14B4C4B76A1FD17FFA9FD0B
%FF7D7DFD06FF7DA8FD04FF7D7D7DFFFFFF52FFFF7DA8A87DFFA8FD0CFFA8
%FD1EFFAE3F64AEFD04FFCEC6C7A8FFFFFFCFA14B524B76A7FD17FFCEFD09
%CFFFA87DFFFFFD05A87DA87DA8A87D7D7DA8A8A87DA8FF52FFA8A8FD0FFF
%A8FD1DFFAE64FA89FD05FFCEC6C6A7FFFFFFCAA04B4C4B767DFD15FFCECD
%CCFD07CDCCCFA8A8FF7D277D5252A852A1A152A87D52A87D277D7DFFFF7D
%FFFFA8FFA8FFA8FD0AFFA8FD1FFF89643FAEFD05FFCFFEC6A7FFFFFFCFA1
%4B524B76A1FD20FFA852A8FD047D527D52A8A87DFF7D7DA87D7DA87D7DA8
%7D7D7DFD0AFFFD04A8FD22FF893F64FD06FFCAC6C6A0FFFFFFCAA04B4B4B
%76A1FD1FFFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFFFFFA8FFA8A8A8FFA8
%FFFFFFA8FD08FF7DA87DFFA8FD21FF643F64FD07FFC7FE9FFFFFFFC9A04B
%524B76A7FD11FFA8FD17FF7DFD13FFA8FD04FFFD047DFFFFA8FD20FFAE3F
%FA64FD07FFA5C69ECFFFFFA7764B4C4B76A1FD11FFA8FD0BFF7D7D7DFD05
%FFA8A8FD12FFA8FFA8FD06FFA8FFA8FD25FF64FA3FFD07FFA6FEC6CEFFFF
%CA7C4B524B76A1FD0FFFA8FD0DFF527DFD04A87DFF52A8A8FD13FFA8FD2E
%FF893FFAAEFD06FFA1C7C6A6A8FFA8764B4C4B7676FD0FFF7E5555552B55
%55552B552B7FFFA8A8A827FD047DA8527DFD10FFA8FD0CFFA8FD25FFAE64
%FA64AEFD05FFA8C8C6CCADFFFFA14B524B7676CAFD0EFFFD0BA9FF52A87D
%52527DA87D52A87DFD1EFFA8FD26FFAE3F3F3F89AEFFFFFFA9C99EC6A4CF
%CAA77552274C4BA1A8FD18FFA8A8FFA8A8A8FFA8A8A8FD11FFA8FFA8FD0A
%FFA8FD29FFAE893F3F89AEFD04FFA7CCC6CDCECA76764B52517CA8FD40FF
%A8FD2BFF8964FA3F64AEFFFFA8C8C0FECCCE7C76274C4B767CCAFD08FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FD3AFF89643F3F64AEAFCBC2C7C6CCA5A04B
%524B7675A1FD32FFA8FD3CFF89643F3F3F655E819EC6C6C77552274C4B7C
%A8FD70FFAEAE64643F3F5CA4C6FEC69F6F5227767DFD2FFFA8FD44FF8965
%39635CAAA4C69E994B4B4B777DCBFD35FFA8FD3EFFAE898987ABAAFEC6A4
%747575A1A1CFCACFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACF
%CFCFCACFCFCFCACFCFCFCACFCFCFCACFA8FD06FF7DA8FFA8A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCBFFA9FF
%A8AEA7CEA6CCA4CCA4C6A4C6A4C6FD11A4C6FD12A47AA7FD05FFA8A8A8FF
%A8FD17FFA8FD33FFCFFFCFFFCFFFAEFFAECFCACFA8CFCFCFA8CFA8CFA8CF
%CFCFA8CFCFCFA8CFCFCFA8CFCFCFA8CFCFCFA8CFFD07FF7DA8FD81FFA8FD
%15FFA8FFA8FD17FFA8FD15FFA8FFA8FD2DFFA8FFA8FD06FFA87DA8FD14FF
%A87D7D7DFD13FFA87D7D7DA8FD13FF7DA87DA8FD13FFA8527E7DA8FD12FF
%7DA8FD047DFD06FFA87DA8FD14FFA8A87DA8FD13FFA852A87DA8FD13FF7D
%7DA8A8FD13FFA87D7DA8A8FD13FF7DA87DA87DFD06FFA8A8A8FD14FFFD04
%A8FD14FFFD04A8FD13FFA8A87EA8FD14FFA8A87DFD13FFA8FFFD04A8FDFC
%FFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-15T03:19:30-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7rqOm+e1m46fMZ7YarFc&#xA;u09z6Uz2ym3JjXhG6iHabmnwnw5VIZVEeWbfzDYafqUt7HcJcLEhiF7cfWg9xHG3qyx0lk4RO9KJ&#xA;VafyjFWSKmocRymiLdyImA+71DirfC+/37F/yLb/AKqYq7hff79i/wCRbf8AVTFXcL7/AH7F/wAi&#xA;2/6qYq7hff79i/5Ft/1UxVbIuohRwkiJqtQY26Eip/vOwxVdwvv9+xf8i2/6qYq7hff79i/5Ft/1&#xA;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&#xA;q7FXYq7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 7.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BookAntiqua</stFnt:fontName>
                  <stFnt:fontFamily>Book Antiqua</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.35</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BKANT.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -278.891 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 278.891 li
354.622 278.891 li
354.622 0 li
cp
clp
20.875 261.519 mo
346.375 261.519 li
346.375 4.64404 li
20.875 4.64404 li
20.875 261.519 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
30.4409 40.5391 mo
28.9839 33.9209 li
28.835 32.7861 li
30.146 36.8511 li
30.4409 40.5391 li
31.3672 52.123 mo
31.3501 51.9961 li
31.3149 51.4829 li
31.3672 52.123 li
38.5269 124.269 mo
37.1499 119.114 li
36.3218 111.668 li
37.1499 116.699 li
38.5269 124.269 li
60.6772 139.836 mo
59.9351 139.284 li
56.6802 136.307 li
55.4639 134.082 li
56.6802 135.44 li
59.9351 138.917 li
60.6772 139.836 li
46.708 143.183 mo
43.6602 140.824 li
41.7041 135.101 li
43.6602 135.864 li
46.708 143.183 li
93.9868 174.512 mo
92.4849 173.099 li
89.23 170.451 li
85.9751 168.022 li
82.7202 166.982 li
79.4648 166.07 li
76.21 165.653 li
72.9551 165.739 li
69.7002 162.962 li
68.2671 162.071 li
69.7002 161.819 li
72.9551 161.877 li
76.21 161.582 li
78.8789 161.349 li
79.4648 161.736 li
82.7202 162.865 li
85.9751 165.035 li
89.23 168.642 li
92.4849 172.552 li
93.7871 173.835 li
93.9868 174.512 li
128.113 212.708 mo
125.035 210.154 li
121.78 207.308 li
118.525 203.426 li
115.27 200.231 li
112.015 196.526 li
110.773 194.898 li
112.015 196.227 li
115.27 199.464 li
117.947 201.854 li
118.525 202.485 li
121.78 205.881 li
122.274 206.435 li
125.035 209.658 li
126.728 211.28 li
128.113 212.708 li
139.678 216.253 mo
138.055 215.138 li
137.582 214.594 li
138.055 214.988 li
139.678 216.253 li
159.297 231.694 mo
157.8 230.94 li
157.77 230.918 li
157.585 230.747 li
157.16 230.466 li
155.665 229.358 li
154.33 228.333 li
153.317 227.409 li
154.33 228.074 li
157.585 230.562 li
159.297 231.694 li
173.364 239.671 mo
171.597 239.08 li
170.605 238.365 li
168.267 237.257 li
170.605 238.051 li
173.364 239.671 li
186.063 250.455 mo
183.625 249.981 li
180.37 249.398 li
180.321 249.394 li
177.115 247.449 li
173.86 245.95 li
170.605 244.371 li
167.35 242.946 li
164.095 240.911 li
160.84 239.114 li
157.585 236.883 li
154.33 234.43 li
151.075 232.877 li
147.82 230.2 li
144.565 227.474 li
141.31 224.799 li
138.055 222.562 li
134.8 219.431 li
131.545 216.778 li
128.465 213.066 li
131.545 216.149 li
134.8 218.655 li
138.055 221.727 li
138.736 222.172 li
141.31 224.419 li
144.565 226.974 li
147.336 228.765 li
147.82 229.111 li
147.982 229.211 li
151.075 231.774 li
154.33 234.139 li
157.585 236.717 li
160.84 238.177 li
164.095 239.574 li
164.789 239.916 li
167.35 241.448 li
168.084 241.815 li
170.605 244.02 li
173.86 244.988 li
177.115 247.053 li
179.524 247.664 li
180.37 248.077 li
182.364 248.577 li
182.98 248.777 li
183.625 249 li
186.063 250.455 li
219.098 259.437 mo
216.175 259.112 li
212.92 258.977 li
209.757 258.285 li
211.858 258.311 li
212.678 258.472 li
212.92 258.539 li
214.305 258.728 li
216.175 259.009 li
218.977 259.403 li
219.098 259.437 li
.253422 .106081 .0665904 0 cmyk
f
24.1299 26.1621 mo
27.3848 26.1621 li
27.6021 26.1621 27.7939 26.3013 27.8608 26.5083 cv
31.1162 36.6001 li
31.1382 36.7129 li
34.3921 77.4351 li
37.644 103.092 li
40.8911 118.741 li
44.083 129.627 li
47.1611 131.362 li
47.3008 131.479 li
50.5562 135.424 li
50.6099 135.505 li
53.835 141.503 li
57.0449 144.942 li
57.0581 144.957 li
60.2881 148.688 li
63.4399 151.354 li
66.605 152.424 li
66.6401 152.437 li
69.895 153.813 li
70.0161 153.887 li
73.1958 156.485 li
76.3579 157.466 li
76.4048 157.483 li
79.6602 158.859 li
79.6812 158.869 li
82.936 160.428 li
82.9458 160.433 li
86.2012 162.085 li
86.3042 162.154 li
89.5591 164.998 li
89.5952 165.033 li
92.8462 168.514 li
96.0962 171.812 li
96.1479 171.875 li
99.3872 176.439 li
102.624 180.088 li
102.636 180.102 li
105.891 184.046 li
105.505 184.365 li
105.887 184.042 li
109.142 187.895 li
109.149 187.904 li
112.397 191.932 li
115.637 195.584 li
118.886 198.973 li
118.914 199.005 li
122.147 203.013 li
125.372 206.013 li
128.625 208.947 li
128.672 208.996 li
131.9 212.817 li
135.123 215.542 li
135.135 215.552 li
138.371 218.471 li
141.606 220.841 li
141.65 220.879 li
144.888 223.889 li
148.123 226.351 li
148.143 226.367 li
151.362 229.089 li
154.575 230.901 li
154.633 230.938 li
157.877 233.407 li
161.116 235.598 li
164.358 237.7 li
167.57 239.601 li
170.789 240.871 li
170.841 240.895 li
174.076 242.627 li
177.31 243.995 li
177.37 244.025 li
180.61 245.943 li
183.835 247.579 li
187.075 248.949 li
190.33 250.325 li
193.573 251.696 li
196.793 252.876 li
200.016 253.693 li
203.265 254.426 li
206.52 255.16 li
206.582 255.178 li
209.807 256.36 li
212.99 257.077 li
216.203 257.258 li
216.258 257.265 li
219.486 257.811 li
222.713 257.992 li
222.727 257.993 li
225.968 258.267 li
229.209 258.359 li
229.223 258.359 li
232.471 258.542 li
235.719 258.634 li
238.968 258.725 li
242.215 258.725 li
242.229 258.726 li
245.477 258.817 li
248.725 258.817 li
251.98 258.817 li
251.994 258.817 li
255.242 258.909 li
258.49 258.909 li
261.745 258.909 li
261.759 258.909 li
265.008 259.001 li
268.255 259.001 li
271.51 259.001 li
274.765 259.001 li
278.02 259.001 li
281.275 259.001 li
284.53 259.001 li
287.785 259.001 li
287.799 259.001 li
291.054 259.093 li
294.302 259.184 li
297.55 259.184 li
300.805 259.184 li
304.06 259.184 li
307.315 259.184 li
310.57 259.184 li
313.825 259.184 li
317.08 259.184 li
320.335 259.184 li
323.59 259.184 li
326.845 259.184 li
330.1 259.184 li
333.355 259.184 li
336.61 259.184 li
339.865 259.184 li
343.12 259.184 li
346.375 259.184 li
346.375 260.184 li
343.12 260.184 li
339.865 260.184 li
336.61 260.184 li
333.355 260.184 li
330.1 260.184 li
326.845 260.184 li
323.59 260.184 li
320.335 260.184 li
317.08 260.184 li
313.825 260.184 li
310.57 260.184 li
307.315 260.184 li
304.06 260.184 li
300.805 260.184 li
297.55 260.184 li
294.295 260.184 li
294.281 260.184 li
291.026 260.092 li
287.777 260.001 li
284.53 260.001 li
281.275 260.001 li
278.02 260.001 li
274.765 260.001 li
271.51 260.001 li
268.255 260.001 li
265 260.001 li
264.986 260.001 li
261.738 259.909 li
258.49 259.909 li
255.235 259.909 li
255.221 259.909 li
251.973 259.817 li
248.725 259.817 li
245.47 259.817 li
245.456 259.817 li
242.208 259.725 li
238.96 259.725 li
238.946 259.725 li
235.691 259.634 li
232.436 259.542 li
232.422 259.541 li
229.175 259.358 li
225.926 259.267 li
225.898 259.265 li
222.65 258.99 li
219.402 258.807 li
219.347 258.801 li
216.119 258.255 li
212.892 258.073 li
212.81 258.062 li
209.555 257.328 li
209.493 257.31 li
206.268 256.128 li
203.045 255.401 li
199.79 254.667 li
199.777 254.664 li
196.522 253.839 li
196.473 253.823 li
193.218 252.631 li
193.195 252.622 li
189.94 251.246 li
186.685 249.87 li
183.43 248.494 li
183.399 248.479 li
180.144 246.828 li
180.115 246.812 li
176.889 244.903 li
173.665 243.541 li
173.624 243.52 li
170.395 241.791 li
167.166 240.517 li
167.095 240.482 li
163.84 238.555 li
163.823 238.545 li
160.568 236.435 li
160.56 236.429 li
157.305 234.227 li
157.282 234.211 li
154.055 231.755 li
150.83 229.937 li
150.752 229.883 li
147.506 227.139 li
144.262 224.67 li
144.225 224.638 li
140.991 221.631 li
137.759 219.263 li
137.72 219.231 li
134.47 216.3 li
131.222 213.553 li
131.163 213.494 li
127.93 209.667 li
124.7 206.754 li
124.695 206.75 li
121.44 203.721 li
121.391 203.669 li
118.149 199.649 li
114.909 196.27 li
114.896 196.256 li
111.641 192.586 li
111.626 192.568 li
108.375 188.537 li
105.123 184.687 li
105.119 184.683 li
101.87 180.745 li
98.6211 177.083 li
98.5869 177.041 li
95.355 172.485 li
92.1289 169.212 li
92.1191 169.202 li
88.8818 165.734 li
85.6929 162.948 li
82.5 161.328 li
79.2588 159.775 li
76.0381 158.413 li
72.8071 157.412 li
72.6392 157.321 li
69.439 154.707 li
66.2671 153.365 li
63.0298 152.27 li
62.8672 152.178 li
59.6118 149.426 li
59.5571 149.372 li
56.3081 145.617 li
53.0601 142.138 li
52.9849 142.034 li
49.7529 136.022 li
46.5889 132.187 li
43.4141 130.398 li
43.3008 130.334 43.2168 130.227 43.1802 130.103 cv
39.9248 119.002 li
39.915 118.963 li
36.6602 103.276 li
36.6538 103.237 li
33.3989 77.5488 li
33.397 77.5259 li
30.146 36.8511 li
27.021 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
.690089 .383154 .161959 .00335698 cmyk
f
69.4258 52.9551 mo
69.1958 52.7441 li
66.5591 47.918 li
66.7319 47.9399 li
69.4258 52.9551 li
70.208 54.519 mo
69.8599 53.936 li
69.8042 53.6812 li
70.208 54.519 li
218.148 252.669 mo
216.175 252.057 li
214.953 251.417 li
216.175 251.889 li
218.148 252.669 li
.00793469 .340276 .181827 0 cmyk
f
24.1299 26.1621 mo
27.3848 26.1621 li
30.6401 26.1621 li
33.895 26.1621 li
37.1499 26.1621 li
40.4048 26.1621 li
40.502 26.1709 li
43.7568 26.813 li
43.855 26.8442 li
47.1099 28.2202 li
47.1699 28.25 li
50.4248 30.1763 li
50.4731 30.209 li
53.728 32.686 li
53.7949 32.7471 li
57.0498 36.3252 li
57.0732 36.3521 li
60.3281 40.48 li
60.353 40.5151 li
63.6079 45.4692 li
63.6201 45.4902 li
66.875 50.9941 li
66.896 51.0322 li
70.1509 57.8208 li
69.7002 58.0371 li
70.1489 57.8159 li
73.4028 64.4219 li
73.4082 64.4312 li
76.6631 71.4028 li
76.6748 71.4321 li
79.9248 79.6743 li
83.1729 86.6323 li
83.1738 86.6353 li
86.4292 93.6992 li
86.4302 93.7012 li
89.6851 100.857 li
89.688 100.863 li
92.939 108.284 li
96.189 114.879 li
96.1968 114.898 li
99.4458 122.224 li
102.695 128.541 li
102.705 128.563 li
105.953 135.702 li
109.199 141.649 li
112.454 147.612 li
112.457 147.618 li
115.709 153.759 li
118.961 159.533 li
118.964 159.539 li
122.212 165.489 li
125.46 170.707 li
125.464 170.713 li
128.709 176.109 li
131.953 180.681 li
131.96 180.692 li
135.211 185.548 li
138.46 190.035 li
138.465 190.042 li
141.707 194.702 li
144.947 198.537 li
144.961 198.554 li
148.212 202.769 li
151.457 206.702 li
154.708 210.459 li
154.33 210.786 li
154.704 210.454 li
157.953 214.117 li
161.194 217.498 li
164.426 220.594 li
167.666 223.243 li
167.724 223.298 li
170.955 226.941 li
174.173 229.662 li
177.418 232.131 li
177.466 232.173 li
180.681 235.344 li
183.888 237.333 li
183.92 237.355 li
187.173 239.738 li
190.407 242.017 li
193.635 243.928 li
196.881 245.667 li
196.909 245.682 li
200.161 247.698 li
203.41 249.621 li
206.631 251.527 li
209.831 252.791 li
213.055 253.791 li
216.298 254.612 li
216.311 254.616 li
219.566 255.533 li
219.578 255.537 li
222.801 256.536 li
226.023 257.082 li
229.278 257.632 li
232.506 258.177 li
235.719 258.359 li
238.96 258.359 li
239.016 258.362 li
242.257 258.727 li
245.484 258.909 li
248.725 258.909 li
251.98 258.909 li
252.022 258.911 li
255.256 259.184 li
258.49 259.184 li
261.745 259.184 li
265 259.184 li
268.255 259.184 li
271.51 259.184 li
274.765 259.184 li
278.02 259.184 li
281.275 259.184 li
284.53 259.184 li
287.785 259.184 li
291.04 259.184 li
294.295 259.184 li
297.55 259.184 li
300.805 259.184 li
304.06 259.184 li
307.315 259.184 li
310.57 259.184 li
313.825 259.184 li
317.08 259.184 li
320.335 259.184 li
323.59 259.184 li
326.845 259.184 li
330.1 259.184 li
333.355 259.184 li
336.61 259.184 li
339.865 259.184 li
343.12 259.184 li
346.375 259.184 li
346.375 260.184 li
343.12 260.184 li
339.865 260.184 li
336.61 260.184 li
333.355 260.184 li
330.1 260.184 li
326.845 260.184 li
323.59 260.184 li
320.335 260.184 li
317.08 260.184 li
313.825 260.184 li
310.57 260.184 li
307.315 260.184 li
304.06 260.184 li
300.805 260.184 li
297.55 260.184 li
294.295 260.184 li
291.04 260.184 li
287.785 260.184 li
284.53 260.184 li
281.275 260.184 li
278.02 260.184 li
274.765 260.184 li
271.51 260.184 li
268.255 260.184 li
265 260.184 li
261.745 260.184 li
258.49 260.184 li
255.235 260.184 li
255.193 260.182 li
251.959 259.909 li
248.725 259.909 li
245.47 259.909 li
245.442 259.908 li
242.188 259.725 li
242.159 259.722 li
238.932 259.359 li
235.705 259.359 li
235.677 259.358 li
232.422 259.174 li
232.367 259.168 li
229.112 258.618 li
225.857 258.067 li
222.602 257.517 li
222.537 257.501 li
219.289 256.494 li
216.045 255.58 li
212.797 254.756 li
212.772 254.75 li
209.517 253.74 li
209.481 253.727 li
206.226 252.443 li
206.155 252.408 li
202.9 250.482 li
199.645 248.555 li
199.637 248.55 li
196.394 246.541 li
193.154 244.804 li
193.135 244.794 li
189.88 242.867 li
189.847 242.846 li
186.592 240.552 li
186.584 240.547 li
183.345 238.173 li
180.107 236.166 li
180.019 236.096 li
176.787 232.907 li
173.557 230.45 li
173.537 230.434 li
170.282 227.681 li
170.231 227.631 li
167.003 223.992 li
163.779 221.357 li
163.749 221.33 li
160.494 218.211 li
160.479 218.196 li
157.224 214.802 li
157.211 214.789 li
153.956 211.118 li
153.952 211.113 li
150.697 207.352 li
150.689 207.343 li
147.434 203.398 li
147.424 203.385 li
144.176 199.175 li
140.928 195.329 li
140.9 195.292 li
137.647 190.617 li
134.395 186.126 li
134.384 186.111 li
131.133 181.254 li
127.882 176.673 li
127.862 176.641 li
124.609 171.233 li
121.356 166.005 li
121.341 165.981 li
118.086 160.018 li
118.525 159.778 li
118.089 160.024 li
114.834 154.244 li
114.828 154.232 li
111.574 148.088 li
108.321 142.128 li
105.066 136.165 li
105.05 136.133 li
101.8 128.988 li
98.5498 122.668 li
98.5381 122.642 li
95.2871 115.312 li
92.0361 108.716 li
92.0269 108.696 li
88.7739 101.269 li
85.52 94.1152 li
85.521 94.1172 li
82.2661 87.0532 li
82.2671 87.0552 li
79.0122 80.083 li
79 80.0552 li
75.75 71.813 li
72.5039 64.8579 li
69.251 58.2583 li
69.249 58.2539 li
66.0029 51.4839 li
62.7661 46.0093 li
59.5288 41.082 li
56.2979 36.9849 li
53.0859 33.4541 li
49.8901 31.022 li
46.6899 29.1279 li
43.5132 27.7852 li
40.356 27.1621 li
37.1499 27.1621 li
33.895 27.1621 li
30.6401 27.1621 li
27.3848 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
.0242008 .874479 .715511 .00109865 cmyk
f
66.4448 162.392 mo
63.1899 162.132 li
59.9351 160.918 li
56.6802 159.074 li
53.4248 155.568 li
52.3179 150.98 li
53.0649 150.851 li
53.4248 151.385 li
56.6802 154.725 li
59.9351 158.735 li
63.1899 160.299 li
66.4448 160.938 li
68.2671 162.071 li
66.4448 162.392 li
.226078 0 .275914 0 cmyk
f
68.2671 162.071 mo
66.4448 160.938 li
63.1899 160.299 li
59.9351 158.735 li
56.6802 154.725 li
53.4248 151.385 li
53.0649 150.851 li
53.4248 150.789 li
56.6802 151.978 li
59.9351 154.869 li
63.1899 155.441 li
66.4448 157.703 li
69.7002 158.065 li
72.9551 158.42 li
76.21 159.588 li
78.8789 161.349 li
76.21 161.582 li
72.9551 161.877 li
69.7002 161.819 li
68.2671 162.071 li
182.364 248.577 mo
180.37 248.077 li
179.524 247.664 li
180.167 247.827 li
180.37 247.928 li
182.364 248.577 li
214.305 258.728 mo
212.92 258.539 li
212.678 258.472 li
212.92 258.52 li
214.305 258.728 li
.391821 .0626535 .345678 0 cmyk
f
32.9028 65.5103 mo
32.4839 61.9199 li
31.7339 51.6099 li
32.9028 65.5103 li
.640955 .217472 .435431 .0112612 cmyk
f
52.9229 130.671 mo
50.1699 124.436 li
46.915 119.71 li
44.0952 118.775 li
43.6602 117.509 li
42.981 115.965 li
40.4048 105.854 li
37.1499 86.3833 li
33.895 64.7173 li
33.54 61.1499 li
31.6748 38.9683 li
33.895 61.1011 li
37.1499 86.0371 li
40.4048 102.41 li
43.6602 114.481 li
46.915 115.937 li
50.1699 123.945 li
52.9429 130.659 li
52.9229 130.671 li
89.627 160.641 mo
89.3408 160.309 li
89.23 160.16 li
89.167 160.097 li
85.9751 155.885 li
82.7231 153.842 li
82.7202 153.84 li
81.104 151.727 li
82.7202 152.652 li
85.9751 154.296 li
88.6431 157.006 li
89.23 159.421 li
89.627 160.641 li
137.582 214.594 mo
135.844 213.146 li
134.8 212.042 li
132.64 210.384 li
131.545 209.425 li
128.29 205.657 li
126.108 203.526 li
125.035 202.25 li
121.78 198.916 li
121.008 198.268 li
118.525 195.071 li
115.27 191.471 li
113.194 189.159 li
113.139 189.087 li
112.015 187.5 li
111.815 187.292 li
108.76 182.598 li
105.505 179.61 li
102.25 175.394 li
101.533 174.477 li
100.698 171.313 li
102.25 173.75 li
105.505 177.443 li
108.76 181.732 li
112.015 185.482 li
115.27 190.123 li
118.525 193.68 li
121.78 197.636 li
125.035 201.154 li
128.29 204.547 li
131.545 208.551 li
134.8 211.396 li
137.582 214.594 li
153.317 227.409 mo
151.075 225.936 li
147.82 223.117 li
145.618 221.635 li
144.565 220.705 li
143.695 220.017 li
141.31 217.525 li
139.678 216.253 li
141.31 217.375 li
144.565 220.26 li
147.82 223.003 li
151.075 225.363 li
153.317 227.409 li
164.03 234.77 mo
162.727 234.133 li
160.84 232.714 li
159.297 231.694 li
160.84 232.47 li
164.03 234.77 li
168.267 237.257 mo
168.214 237.239 li
168.168 237.21 li
168.267 237.257 li
.226078 0 .275914 0 cmyk
f
42.981 115.965 mo
40.4048 110.11 li
37.1499 90.1909 li
36.106 85.002 li
34.3921 71.2881 li
33.54 61.1499 li
33.895 64.7173 li
37.1499 86.3833 li
40.4048 105.854 li
42.981 115.965 li
50.2671 132.355 mo
47.3452 127.414 li
47.2759 127.323 li
46.8989 126.929 li
44.0952 118.775 li
46.915 119.71 li
50.1699 124.436 li
52.9229 130.671 li
50.2671 132.355 li
89.3408 160.309 mo
89.23 160.18 li
89.167 160.097 li
89.23 160.16 li
89.3408 160.309 li
121.008 198.268 mo
118.525 196.191 li
115.27 191.909 li
113.194 189.159 li
115.27 191.471 li
118.525 195.071 li
121.008 198.268 li
132.64 210.384 mo
131.545 209.543 li
128.29 206.123 li
126.108 203.526 li
128.29 205.657 li
131.545 209.425 li
132.64 210.384 li
143.695 220.017 mo
141.31 218.13 li
138.055 215.483 li
135.844 213.146 li
137.582 214.594 li
138.055 215.138 li
139.678 216.253 li
141.31 217.525 li
143.695 220.017 li
155.665 229.358 mo
154.33 228.369 li
153.345 227.804 li
151.075 226 li
147.82 223.579 li
145.618 221.635 li
147.82 223.117 li
151.075 225.936 li
153.317 227.409 li
154.33 228.333 li
155.665 229.358 li
162.727 234.133 mo
160.84 233.21 li
157.8 230.94 li
159.297 231.694 li
160.84 232.714 li
162.727 234.133 li
171.597 239.08 mo
170.93 238.857 li
170.605 238.654 li
170.344 238.583 li
168.214 237.239 li
168.267 237.257 li
170.605 238.365 li
171.597 239.08 li
.391821 .0626535 .345678 0 cmyk
f
30.2461 33.9019 mo
29.4922 31.5649 li
30.1509 32.772 li
30.2461 33.9019 li
f
30.4111 35.8691 mo
28.4619 29.9399 li
28.417 29.5972 li
29.4922 31.5649 li
30.2461 33.9019 li
30.4111 35.8691 li
.640955 .217472 .435431 .0112612 cmyk
f
31 32.2422 mo
28.501 27.6621 li
29.0229 27.6621 li
30.6401 28.6499 li
31 32.2422 li
.226078 0 .275914 0 cmyk
f
24.1299 26.1621 mo
27.3848 26.1621 li
27.5679 26.1621 27.7358 26.2612 27.8242 26.4219 cv
31.0791 32.3853 li
31.1382 32.583 li
34.3921 71.2881 li
37.644 97.3188 li
40.8892 115.426 li
44.0918 124.003 li
47.2759 127.323 li
47.3452 127.414 li
50.6001 132.919 li
50.6489 133.029 li
53.876 143.761 li
57.0371 147.681 li
60.251 150.309 li
60.2642 150.319 li
63.48 153.129 li
66.5029 154.833 li
69.5518 153.888 li
69.728 153.866 li
72.9829 154.05 li
73.0781 154.064 li
76.3262 154.888 li
79.5752 155.621 li
79.6489 155.643 li
82.9038 156.928 li
82.936 156.942 li
86.1909 158.502 li
86.2979 158.571 li
89.5532 161.323 li
89.6001 161.368 li
92.855 164.946 li
92.8672 164.96 li
96.1221 168.813 li
96.1289 168.822 li
99.3838 172.859 li
99.3999 172.879 li
102.641 177.355 li
105.879 181.005 li
105.898 181.028 li
109.14 185.14 li
112.38 188.611 li
112.411 188.646 li
115.661 192.86 li
118.903 196.789 li
122.147 200.355 li
125.393 203.832 li
128.641 207.036 li
128.655 207.051 li
131.901 210.526 li
135.146 213.636 li
135.151 213.641 li
138.386 216.833 li
141.62 219.384 li
141.645 219.406 li
144.881 222.324 li
148.116 224.695 li
148.155 224.727 li
151.401 227.654 li
154.613 230.28 li
157.83 232.093 li
157.857 232.109 li
161.099 234.211 li
164.341 236.038 li
164.375 236.06 li
167.609 238.247 li
170.841 239.978 li
170.869 239.994 li
174.124 242.012 li
174.14 242.023 li
177.355 244.197 li
180.536 245.542 li
183.761 246.451 li
183.88 246.502 li
187.09 248.402 li
190.295 249.486 li
190.341 249.504 li
193.579 250.964 li
196.806 252.146 li
200.048 253.152 li
203.291 254.157 li
206.533 254.98 li
206.57 254.99 li
209.807 256.085 li
213.03 256.903 li
216.258 257.54 li
219.486 257.995 li
222.727 258.269 li
225.982 258.544 li
229.237 258.819 li
232.471 259.092 li
235.705 259.092 li
235.719 259.093 li
238.967 259.184 li
242.215 259.184 li
245.47 259.184 li
248.725 259.184 li
251.98 259.184 li
255.235 259.184 li
258.49 259.184 li
261.745 259.184 li
265 259.184 li
268.255 259.184 li
271.51 259.184 li
274.765 259.184 li
278.02 259.184 li
281.275 259.184 li
284.53 259.184 li
287.785 259.184 li
291.04 259.184 li
294.295 259.184 li
297.55 259.184 li
300.805 259.184 li
304.06 259.184 li
307.315 259.184 li
310.57 259.184 li
313.825 259.184 li
317.08 259.184 li
320.335 259.184 li
323.59 259.184 li
326.845 259.184 li
330.1 259.184 li
333.355 259.184 li
336.61 259.184 li
339.865 259.184 li
343.12 259.184 li
346.375 259.184 li
346.375 260.184 li
343.12 260.184 li
339.865 260.184 li
336.61 260.184 li
333.355 260.184 li
330.1 260.184 li
326.845 260.184 li
323.59 260.184 li
320.335 260.184 li
317.08 260.184 li
313.825 260.184 li
310.57 260.184 li
307.315 260.184 li
304.06 260.184 li
300.805 260.184 li
297.55 260.184 li
294.295 260.184 li
291.04 260.184 li
287.785 260.184 li
284.53 260.184 li
281.275 260.184 li
278.02 260.184 li
274.765 260.184 li
271.51 260.184 li
268.255 260.184 li
265 260.184 li
261.745 260.184 li
258.49 260.184 li
255.235 260.184 li
251.98 260.184 li
248.725 260.184 li
245.47 260.184 li
242.215 260.184 li
238.96 260.184 li
238.946 260.184 li
235.698 260.092 li
232.45 260.092 li
232.408 260.091 li
229.153 259.816 li
225.898 259.541 li
222.643 259.265 li
219.388 258.99 li
219.36 258.987 li
216.105 258.528 li
216.078 258.523 li
212.823 257.881 li
212.797 257.875 li
209.542 257.05 li
209.505 257.039 li
206.268 255.944 li
203.032 255.123 li
203.007 255.116 li
199.752 254.107 li
196.497 253.098 li
196.473 253.09 li
193.218 251.897 li
193.185 251.883 li
189.952 250.425 li
186.72 249.332 li
186.625 249.289 li
183.427 247.396 li
180.234 246.496 li
180.175 246.475 li
176.92 245.099 li
176.835 245.053 li
173.588 242.856 li
170.355 240.852 li
167.114 239.116 li
167.07 239.09 li
163.831 236.899 li
160.595 235.074 li
160.568 235.058 li
157.326 232.958 li
154.085 231.13 li
154.014 231.082 li
150.759 228.421 li
150.74 228.405 li
147.504 225.486 li
144.269 223.116 li
144.23 223.084 li
140.987 220.159 li
137.745 217.601 li
137.704 217.564 li
134.452 214.356 li
131.199 211.239 li
131.18 211.219 li
127.932 207.741 li
124.684 204.537 li
124.67 204.522 li
121.415 201.036 li
121.41 201.031 li
118.155 197.453 li
118.139 197.435 li
114.884 193.49 li
114.874 193.477 li
111.633 189.276 li
108.395 185.807 li
108.367 185.775 li
105.121 181.658 li
101.876 178 li
101.845 177.961 li
98.5972 173.476 li
95.356 169.457 li
92.1089 165.612 li
88.8818 162.065 li
85.7012 159.376 li
82.519 157.851 li
79.3169 156.588 li
76.1001 155.862 li
76.0869 155.859 li
72.8789 155.045 li
69.7622 154.87 li
66.5928 155.852 li
66.4619 155.893 66.3188 155.878 66.1992 155.81 cv
62.9438 153.975 li
62.8608 153.917 li
59.6128 151.078 li
56.3638 148.422 li
56.291 148.349 li
53.0361 144.312 li
52.9458 144.143 li
49.709 133.376 li
46.5142 127.973 li
43.2988 124.62 li
43.1919 124.449 li
39.937 115.734 li
39.9131 115.647 li
36.6582 97.4829 li
36.6538 97.4561 li
33.3989 71.4019 li
33.397 71.3818 li
30.1509 32.772 li
27.0879 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
.585565 .00601205 .761959 0 cmyk
f
186.272 245.129 mo
183.821 244.2 li
183.625 244.072 li
180.37 242.549 li
177.115 239.92 li
173.86 237.478 li
170.605 234.291 li
167.35 231.717 li
164.095 228.843 li
160.84 226.882 li
157.585 222.787 li
154.33 218.901 li
151.075 215.463 li
147.82 212.281 li
144.565 207.994 li
141.31 204.077 li
138.055 199.567 li
134.8 194.965 li
131.545 190.548 li
128.29 186.083 li
125.035 180.748 li
121.78 176.293 li
118.525 170.345 li
115.27 165.435 li
112.015 159.533 li
108.76 153.251 li
105.505 146.437 li
102.25 139.843 li
98.9951 132.893 li
95.7402 124.927 li
92.4849 117.771 li
89.23 111.067 li
85.9751 103.219 li
82.7202 94.8579 li
79.4648 87.6919 li
78.1621 84.6699 li
76.5908 78.9771 li
79.4648 85.5391 li
82.7202 93.0513 li
85.9751 100.701 li
87.7881 104.685 li
89.23 108.567 li
90.6738 111.189 li
92.4849 115.374 li
95.7402 123.144 li
98.9951 130.119 li
102.25 137.004 li
105.505 143.192 li
107.488 146.855 li
108.76 149.351 li
109.307 150.292 li
112.015 155.667 li
115.27 161.833 li
118.525 167.506 li
120.188 170.159 li
121.78 172.979 li
122.851 174.531 li
125.035 178.268 li
125.886 179.439 li
128.29 183.508 li
131.545 188.519 li
134.469 192.147 li
134.8 192.654 li
138.055 197.094 li
141.31 201.748 li
143.459 204.196 li
144.565 205.806 li
146.426 207.796 li
147.82 209.716 li
149.242 211.276 li
151.075 213.583 li
154.33 217.274 li
157.585 220.681 li
160.84 224.217 li
163.106 226.164 li
164.095 227.19 li
167.35 230.96 li
170.063 232.827 li
170.605 233.457 li
173.665 235.47 li
173.86 235.615 li
174.102 235.777 li
177.115 238 li
180.37 241.05 li
183.625 243.043 li
184.061 243.28 li
186.272 245.129 li
0 .176516 .327031 0 cmyk
f
109.307 150.292 mo
108.76 149.351 li
107.488 146.855 li
108.76 149.207 li
109.307 150.292 li
122.851 174.531 mo
121.78 172.979 li
120.188 170.159 li
121.78 172.698 li
122.851 174.531 li
143.459 204.196 mo
141.31 201.748 li
138.055 197.094 li
134.8 192.654 li
134.469 192.147 li
134.8 192.558 li
138.055 197.015 li
141.31 201.308 li
142.276 202.473 li
143.459 204.196 li
163.106 226.164 mo
160.84 224.217 li
157.585 220.681 li
154.33 217.274 li
151.075 213.583 li
149.242 211.276 li
151.075 213.289 li
154.33 216.12 li
157.585 220.047 li
160.84 223.814 li
163.106 226.164 li
173.665 235.47 mo
170.605 233.457 li
170.063 232.827 li
170.605 233.199 li
173.665 235.47 li
184.061 243.28 mo
183.625 243.043 li
180.37 241.05 li
177.115 238 li
174.102 235.777 li
177.115 237.797 li
180.37 240.396 li
183.625 242.917 li
184.061 243.28 li
190.363 246.909 mo
190.135 246.775 li
189.56 246.525 li
190.135 246.715 li
190.363 246.909 li
0 .395727 .485786 0 cmyk
f
50.9468 26.3252 mo
50.2798 26.1738 li
50.1699 26.1621 li
49.2461 26.1621 li
50.1699 25.9639 li
53.4248 25.2109 li
53.4932 25.3198 li
53.4248 25.249 li
50.9468 26.3252 li
185.21 232.333 mo
183.625 231.542 li
180.37 229.193 li
177.115 226.116 li
173.86 222.728 li
173.636 222.444 li
173.86 222.632 li
177.115 225.268 li
180.37 227.846 li
183.625 230.852 li
185.21 232.333 li
210.947 249.029 mo
209.665 248.17 li
206.41 245.572 li
203.155 243.861 li
199.9 242.815 li
198.2 241.419 li
199.9 241.941 li
203.155 243.132 li
206.41 245.369 li
209.665 248.019 li
210.947 249.029 li
0 .176516 .327031 0 cmyk
f
24.1299 26.1621 mo
27.3848 26.1621 li
30.6401 26.1621 li
33.895 26.1621 li
37.1499 26.1621 li
40.4048 26.1621 li
43.6602 26.1621 li
46.915 26.1621 li
46.9712 26.165 li
50.2261 26.5322 li
50.3418 26.5591 li
53.5972 27.752 li
53.7129 27.7949 53.8091 27.8779 53.8672 27.9878 cv
57.1221 34.1343 li
57.126 34.1421 li
60.3779 40.5571 li
63.6299 46.6079 li
63.6318 46.6108 li
66.8872 52.7583 li
66.8911 52.7651 li
70.146 59.187 li
70.1509 59.1973 li
73.4063 65.9858 li
73.4121 66 li
76.667 73.3389 li
79.9219 80.6782 li
83.1768 88.0171 li
83.1792 88.022 li
86.4341 95.5439 li
86.439 95.5562 li
89.686 103.609 li
92.9312 110.012 li
92.9438 110.039 li
96.1958 117.556 li
99.4502 124.71 li
99.4482 124.705 li
102.7 131.671 li
105.951 138.085 li
105.955 138.092 li
109.205 144.78 li
112.455 150.826 li
112.015 151.063 li
112.452 150.82 li
115.702 156.682 li
118.951 161.994 li
118.955 162.001 li
122.201 167.49 li
125.445 172.153 li
125.467 172.187 li
128.711 177.764 li
131.953 182.333 li
131.958 182.34 li
135.213 187.11 li
135.21 187.107 li
138.461 191.779 li
141.701 196.162 li
144.943 199.909 li
144.958 199.926 li
148.202 204.042 li
151.445 207.606 li
151.457 207.62 li
154.7 211.458 li
157.941 214.748 li
157.974 214.784 li
161.194 218.777 li
164.405 221.311 li
164.424 221.327 li
167.679 224.171 li
167.685 224.176 li
170.94 227.112 li
170.946 227.117 li
174.186 230.131 li
177.425 232.687 li
177.431 232.692 li
180.669 235.338 li
183.905 237.527 li
183.935 237.549 li
187.159 240.094 li
190.381 241.91 li
190.39 241.916 li
193.645 243.841 li
193.653 243.847 li
196.875 245.844 li
200.095 247.207 li
200.136 247.225 li
203.376 248.96 li
206.616 250.421 li
206.646 250.436 li
209.881 252.168 li
213.109 253.533 li
216.316 254.799 li
219.527 255.432 li
219.566 255.441 li
222.808 256.355 li
226.045 257.085 li
229.278 257.723 li
232.512 258.179 li
235.761 258.545 li
239.002 258.911 li
242.236 259.093 li
245.478 259.184 li
248.725 259.184 li
251.98 259.184 li
255.235 259.184 li
258.49 259.184 li
261.745 259.184 li
265 259.184 li
268.255 259.184 li
271.51 259.184 li
274.765 259.184 li
278.02 259.184 li
281.275 259.184 li
284.53 259.184 li
287.785 259.184 li
291.04 259.184 li
294.295 259.184 li
297.55 259.184 li
300.805 259.184 li
304.06 259.184 li
307.315 259.184 li
310.57 259.184 li
313.825 259.184 li
317.08 259.184 li
320.335 259.184 li
323.59 259.184 li
326.845 259.184 li
330.1 259.184 li
333.355 259.184 li
336.61 259.184 li
339.865 259.184 li
343.12 259.184 li
346.375 259.184 li
346.375 260.184 li
343.12 260.184 li
339.865 260.184 li
336.61 260.184 li
333.355 260.184 li
330.1 260.184 li
326.845 260.184 li
323.59 260.184 li
320.335 260.184 li
317.08 260.184 li
313.825 260.184 li
310.57 260.184 li
307.315 260.184 li
304.06 260.184 li
300.805 260.184 li
297.55 260.184 li
294.295 260.184 li
291.04 260.184 li
287.785 260.184 li
284.53 260.184 li
281.275 260.184 li
278.02 260.184 li
274.765 260.184 li
271.51 260.184 li
268.255 260.184 li
265 260.184 li
261.745 260.184 li
258.49 260.184 li
255.235 260.184 li
251.98 260.184 li
248.725 260.184 li
245.47 260.184 li
245.456 260.184 li
242.201 260.092 li
242.188 260.092 li
238.932 259.908 li
238.904 259.906 li
235.649 259.539 li
232.394 259.172 li
232.38 259.17 li
229.125 258.711 li
229.098 258.707 li
225.843 258.065 li
225.83 258.062 li
222.575 257.328 li
222.549 257.321 li
219.313 256.41 li
216.078 255.771 li
215.991 255.746 li
212.736 254.461 li
212.725 254.458 li
209.47 253.082 li
209.429 253.061 li
206.189 251.326 li
202.949 249.865 li
202.919 249.85 li
199.684 248.118 li
196.45 246.751 li
196.381 246.715 li
193.129 244.698 li
189.886 242.778 li
186.634 240.946 li
186.57 240.903 li
183.329 238.345 li
180.09 236.154 li
180.054 236.127 li
176.801 233.469 li
173.55 230.903 li
173.52 230.877 li
170.269 227.853 li
167.018 224.921 li
163.776 222.088 li
160.53 219.527 li
160.451 219.449 li
157.211 215.431 li
153.974 212.146 li
153.948 212.118 li
150.698 208.271 li
147.45 204.701 li
147.427 204.674 li
144.179 200.554 li
140.932 196.802 li
140.908 196.772 li
137.653 192.368 li
137.645 192.357 li
134.39 187.678 li
134.387 187.674 li
131.133 182.905 li
127.882 178.324 li
127.858 178.286 li
124.613 172.708 li
121.37 168.045 li
121.35 168.014 li
118.097 162.514 li
114.844 157.195 li
114.833 157.177 li
111.578 151.305 li
111.575 151.3 li
108.32 145.245 li
108.31 145.226 li
105.057 138.533 li
101.804 132.115 li
101.797 132.1 li
98.542 125.128 li
98.54 125.124 li
95.2852 117.968 li
95.2813 117.959 li
92.0322 110.45 li
88.7842 104.042 li
88.7661 104.003 li
85.5132 95.9341 li
82.2612 88.4189 li
82.2632 88.4229 li
79.0078 81.084 li
75.7529 73.7441 li
72.501 66.4111 li
69.252 59.6353 li
66.002 53.2231 li
62.748 47.0791 li
62.75 47.082 li
59.4951 41.0269 li
59.4888 41.0161 li
56.2358 34.5981 li
53.0732 28.625 li
50.0542 27.519 li
46.8872 27.1621 li
43.6602 27.1621 li
40.4048 27.1621 li
37.1499 27.1621 li
33.895 27.1621 li
30.6401 27.1621 li
27.3848 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
0 .475349 .876402 0 cmyk
f
242.134 258.317 mo
241.358 258.317 li
238.96 257.825 li
235.705 257.825 li
232.45 257.488 li
229.195 256.545 li
225.954 255.716 li
225.94 255.71 li
225.836 255.665 li
225.94 255.688 li
229.195 256.222 li
232.45 257.03 li
235.705 257.399 li
238.96 257.751 li
242.134 258.317 li
.106783 .228702 0 0 cmyk
f
241.358 258.317 mo
239.435 258.317 li
239.016 258.27 li
239.002 258.269 li
235.747 257.993 li
233.508 257.804 li
232.45 257.625 li
229.195 256.921 li
228.528 256.769 li
225.954 255.716 li
229.195 256.545 li
232.45 257.488 li
235.705 257.825 li
238.96 257.825 li
241.358 258.317 li
.120729 .454322 .0893568 0 cmyk
f
233.508 257.804 mo
233.048 257.765 li
232.45 257.625 li
229.195 257.042 li
228.528 256.769 li
229.195 256.921 li
232.45 257.625 li
233.508 257.804 li
.122713 .491737 .306523 0 cmyk
f
146.426 207.796 mo
144.565 205.806 li
143.459 204.196 li
144.565 205.457 li
146.168 207.441 li
146.426 207.796 li
.111116 .343908 .215946 0 cmyk
f
146.168 207.441 mo
144.565 205.457 li
143.459 204.196 li
142.276 202.473 li
144.565 205.233 li
146.168 207.441 li
.122713 .491737 .306523 0 cmyk
f
107.488 146.855 mo
105.505 143.192 li
102.25 137.004 li
98.9951 130.119 li
95.7402 123.144 li
92.4849 115.374 li
90.6738 111.189 li
91.4619 112.62 li
92.4849 115.205 li
93.9028 118.017 li
95.7402 122.601 li
97.8789 127.002 li
98.9951 129.789 li
101.942 135.383 li
102.25 136.019 li
102.596 136.711 li
105.505 142.966 li
107.488 146.855 li
120.188 170.159 mo
118.525 167.506 li
115.27 161.833 li
112.015 155.667 li
109.307 150.292 li
110.958 153.131 li
112.015 155.257 li
113.187 157.342 li
115.27 161.598 li
118.525 167.213 li
120.188 170.159 li
125.886 179.439 mo
125.035 178.268 li
122.851 174.531 li
123.92 176.08 li
125.035 177.998 li
125.886 179.439 li
.111116 .343908 .215946 0 cmyk
f
93.9028 118.017 mo
92.4849 115.205 li
91.4619 112.62 li
92.4849 114.478 li
93.9028 118.017 li
101.942 135.383 mo
98.9951 129.789 li
97.8789 127.002 li
98.9951 129.298 li
101.942 135.383 li
110.958 153.131 mo
109.307 150.292 li
108.76 149.207 li
107.488 146.855 li
105.505 142.966 li
102.596 136.711 li
105.505 142.535 li
108.76 148.708 li
110.958 153.131 li
123.92 176.08 mo
122.851 174.531 li
121.78 172.698 li
120.188 170.159 li
118.525 167.213 li
115.27 161.598 li
113.187 157.342 li
115.27 161.049 li
118.525 166.529 li
121.78 172.4 li
123.92 176.08 li
.122713 .491737 .306523 0 cmyk
f
87.7881 104.685 mo
85.9751 100.701 li
82.7202 93.0513 li
79.4648 85.5391 li
76.5908 78.9771 li
76.21 77.5972 li
75.6299 75.897 li
76.21 77.1973 li
77.5688 80.2021 li
79.4648 85.1343 li
81.8569 90.4521 li
82.7202 92.6372 li
84.062 95.5908 li
85.9751 100.184 li
86.606 101.501 li
87.7881 104.685 li
.111116 .343908 .215946 0 cmyk
f
81.8569 90.4521 mo
79.4648 85.1343 li
77.5688 80.2021 li
79.4648 84.394 li
81.8569 90.4521 li
86.606 101.501 mo
85.9751 100.184 li
84.062 95.5908 li
85.9751 99.8032 li
86.606 101.501 li
.122713 .491737 .306523 0 cmyk
f
59.917 36.771 mo
59.686 36.6519 li
56.6802 30.436 li
53.4932 25.3198 li
56.6802 28.6479 li
59.917 36.771 li
.106783 .228702 0 0 cmyk
f
59.686 36.6519 mo
59.1709 36.3892 li
57.1392 31.6929 li
57.085 31.5981 li
53.8301 27.1021 li
53.7588 27.0039 53.6538 26.9351 53.5352 26.9082 cv
50.9468 26.3252 li
53.4248 25.249 li
53.4932 25.3198 li
56.6802 30.436 li
59.686 36.6519 li
.111116 .343908 .215946 0 cmyk
f
53.313 28.0933 mo
51.1372 27.5151 li
50.9512 27.3501 li
53.1309 27.8423 li
53.313 28.0933 li
.105104 .543633 .622919 .00317388 cmyk
f
24.1299 26.1621 mo
27.3848 26.1621 li
30.6401 26.1621 li
33.895 26.1621 li
37.1499 26.1621 li
40.4048 26.1621 li
43.6602 26.1621 li
46.915 26.1621 li
50.1699 26.1621 li
50.2798 26.1738 li
53.5352 26.9082 li
53.6538 26.9351 53.7588 27.0039 53.8301 27.1021 cv
57.085 31.5981 li
57.1392 31.6929 li
60.3848 39.1938 li
63.6289 45.1372 li
63.6318 45.1431 li
66.8872 51.29 li
66.896 51.3081 li
70.1509 58.0962 li
70.1548 58.106 li
73.4102 65.2612 li
73.418 65.2793 li
76.6699 73.2529 li
79.9209 80.4922 li
83.1758 87.7402 li
83.1802 87.748 li
86.4321 95.3569 li
89.6841 102.414 li
89.6831 102.412 li
92.938 109.384 li
92.9438 109.397 li
96.1992 116.92 li
96.1982 116.918 li
99.4482 124.338 li
102.697 130.84 li
105.952 137.353 li
105.953 137.356 li
109.204 143.951 li
112.454 149.906 li
112.458 149.914 li
115.708 156.142 li
118.953 161.722 li
122.205 166.945 li
122.208 166.951 li
125.455 172.35 li
128.701 177.015 li
128.698 177.011 li
131.953 181.598 li
131.967 181.62 li
135.218 186.751 li
138.457 191.497 li
141.699 195.519 li
141.715 195.539 li
144.963 200.024 li
148.2 204.039 li
151.444 207.604 li
154.69 211.082 li
157.933 214.373 li
161.18 217.392 li
164.435 220.42 li
164.456 220.44 li
167.698 223.821 li
170.94 226.745 li
170.956 226.76 li
174.185 229.946 li
177.41 232.309 li
177.425 232.32 li
180.669 234.88 li
183.908 237.162 li
187.156 239.36 li
190.403 241.464 li
193.653 243.48 li
193.662 243.485 li
196.885 245.575 li
200.106 247.027 li
200.146 247.047 li
203.4 248.882 li
206.631 250.703 li
209.843 252.061 li
213.068 253.151 li
216.311 254.065 li
216.358 254.083 li
219.596 255.359 li
222.801 256.353 li
226.009 256.895 li
229.251 257.261 li
229.265 257.262 li
232.506 257.719 li
235.747 257.993 li
239.002 258.269 li
239.016 258.27 li
242.25 258.635 li
245.484 258.726 li
248.732 258.817 li
251.98 258.817 li
255.235 258.817 li
258.49 258.817 li
261.745 258.817 li
265 258.817 li
268.255 258.817 li
271.51 258.817 li
274.765 258.817 li
278.02 258.817 li
281.275 258.817 li
284.53 258.817 li
287.785 258.817 li
291.04 258.817 li
294.295 258.817 li
297.55 258.817 li
300.805 258.817 li
304.06 258.817 li
307.315 258.817 li
310.57 258.817 li
313.825 258.817 li
317.08 258.817 li
320.335 258.817 li
323.59 258.817 li
326.845 258.817 li
330.1 258.817 li
333.355 258.817 li
336.61 258.817 li
339.865 258.817 li
343.12 258.817 li
346.375 258.817 li
346.375 259.817 li
343.12 259.817 li
339.865 259.817 li
336.61 259.817 li
333.355 259.817 li
330.1 259.817 li
326.845 259.817 li
323.59 259.817 li
320.335 259.817 li
317.08 259.817 li
313.825 259.817 li
310.57 259.817 li
307.315 259.817 li
304.06 259.817 li
300.805 259.817 li
297.55 259.817 li
294.295 259.817 li
291.04 259.817 li
287.785 259.817 li
284.53 259.817 li
281.275 259.817 li
278.02 259.817 li
274.765 259.817 li
271.51 259.817 li
268.255 259.817 li
265 259.817 li
261.745 259.817 li
258.49 259.817 li
255.235 259.817 li
251.98 259.817 li
248.725 259.817 li
248.711 259.817 li
245.456 259.725 li
242.201 259.634 li
242.159 259.631 li
238.911 259.264 li
235.663 258.99 li
232.408 258.715 li
232.38 258.711 li
229.132 258.254 li
225.884 257.888 li
225.857 257.884 li
222.602 257.333 li
222.537 257.318 li
219.282 256.309 li
219.246 256.296 li
216.015 255.021 li
212.784 254.111 li
212.76 254.103 li
209.505 253.002 li
209.47 252.989 li
206.215 251.613 li
206.165 251.588 li
202.91 249.753 li
199.674 247.929 li
196.439 246.471 li
196.373 246.434 li
193.121 244.326 li
189.871 242.311 li
189.863 242.306 li
186.608 240.196 li
186.6 240.191 li
183.345 237.989 li
183.337 237.983 li
180.082 235.69 li
180.06 235.674 li
176.812 233.11 li
173.564 230.73 li
173.509 230.683 li
170.262 227.48 li
167.015 224.552 li
166.989 224.526 li
163.744 221.142 li
160.499 218.125 li
157.244 215.097 li
157.229 215.082 li
153.974 211.779 li
153.965 211.77 li
150.71 208.283 li
150.705 208.279 li
147.45 204.701 li
147.431 204.678 li
144.176 200.641 li
144.16 200.621 li
140.912 196.136 li
137.666 192.11 li
137.642 192.078 li
134.387 187.307 li
134.378 187.293 li
131.13 182.167 li
127.882 177.59 li
127.88 177.586 li
124.625 172.907 li
124.607 172.88 li
121.354 167.471 li
118.101 162.244 li
118.093 162.231 li
114.838 156.635 li
114.827 156.615 li
111.573 150.38 li
108.321 144.422 li
108.312 144.403 li
105.057 137.798 li
105.058 137.8 li
101.803 131.287 li
98.5479 124.773 li
98.5371 124.75 li
95.2822 117.319 li
95.2813 117.317 li
92.0288 109.8 li
88.7769 102.835 li
88.7759 102.833 li
85.521 95.769 li
85.5151 95.7559 li
82.2622 88.146 li
79.0088 80.9019 li
75.7539 73.6553 li
75.7471 73.6392 li
72.4961 65.667 li
69.2471 58.5239 li
65.999 51.749 li
62.75 45.6143 li
59.4961 39.6528 li
59.4761 39.6118 li
56.2432 32.1401 li
53.1309 27.8423 li
50.1138 27.1621 li
46.915 27.1621 li
43.6602 27.1621 li
40.4048 27.1621 li
37.1499 27.1621 li
33.895 27.1621 li
30.6401 27.1621 li
27.3848 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
.330388 .645045 0 0 cmyk
f
149.242 211.276 mo
147.82 209.716 li
146.426 207.796 li
146.636 208.021 li
147.82 209.487 li
149.242 211.276 li
170.063 232.827 mo
167.35 230.96 li
164.095 227.19 li
163.106 226.164 li
164.095 227.014 li
167.35 229.672 li
170.063 232.827 li
174.102 235.777 mo
173.86 235.615 li
173.665 235.47 li
173.86 235.598 li
174.102 235.777 li
188.732 246.166 mo
186.88 245.36 li
186.272 245.129 li
184.061 243.28 li
186.88 244.815 li
188.732 246.166 li
194.183 248.976 mo
193.39 248.683 li
192.278 248.031 li
193.39 248.468 li
194.183 248.976 li
.383673 .45362 .598413 .0927443 cmyk
f
202.363 251.711 mo
199.9 251.16 li
199.574 251.098 li
196.645 249.886 li
194.183 248.976 li
193.39 248.468 li
192.278 248.031 li
190.363 246.909 li
190.135 246.715 li
189.56 246.525 li
188.732 246.166 li
186.88 244.815 li
184.061 243.28 li
183.625 242.917 li
180.37 240.396 li
177.115 237.797 li
174.102 235.777 li
173.86 235.598 li
173.665 235.47 li
170.605 233.199 li
170.063 232.827 li
167.35 229.672 li
164.095 227.014 li
163.106 226.164 li
160.84 223.814 li
157.585 220.047 li
154.33 216.12 li
151.075 213.289 li
149.242 211.276 li
147.82 209.487 li
146.636 208.021 li
147.82 209.287 li
151.075 212.438 li
154.33 216.031 li
157.585 219.082 li
160.84 221.5 li
164.095 225.048 li
167.35 228.127 li
170.605 230.81 li
173.86 234.288 li
177.115 236.398 li
180.37 238.664 li
183.625 241.351 li
186.88 243.147 li
190.135 245.207 li
193.39 246.717 li
196.645 248.759 li
199.9 250.24 li
202.363 251.711 li
.342535 .592462 .697749 .17377 cmyk
f
134.469 192.147 mo
131.545 188.519 li
128.29 183.508 li
125.886 179.439 li
127.064 181.058 li
128.29 183.091 li
131.545 187.679 li
134.469 192.147 li
.383673 .45362 .598413 .0927443 cmyk
f
142.276 202.473 mo
141.31 201.308 li
138.055 197.015 li
134.8 192.558 li
134.469 192.147 li
131.545 187.679 li
128.29 183.091 li
127.064 181.058 li
128.29 182.745 li
131.545 186.82 li
134.8 192.519 li
138.055 196.976 li
141.31 201.066 li
142.276 202.473 li
.342535 .592462 .697749 .17377 cmyk
f
90.6738 111.189 mo
89.23 108.567 li
87.7881 104.685 li
89.23 107.853 li
90.6738 111.189 li
.383673 .45362 .598413 .0927443 cmyk
f
77.5688 80.2021 mo
76.21 77.1973 li
75.6299 75.897 li
74.605 72.8921 li
76.21 76.667 li
77.5688 80.2021 li
84.062 95.5908 mo
82.7202 92.6372 li
81.8569 90.4521 li
82.7202 92.3711 li
84.062 95.5908 li
91.4619 112.62 mo
90.6738 111.189 li
89.23 107.853 li
87.7881 104.685 li
86.606 101.501 li
89.23 106.983 li
91.4619 112.62 li
97.8789 127.002 mo
95.7402 122.601 li
93.9028 118.017 li
95.7402 121.66 li
97.8789 127.002 li
102.596 136.711 mo
102.25 136.019 li
101.942 135.383 li
102.25 135.967 li
102.596 136.711 li
113.187 157.342 mo
112.015 155.257 li
110.958 153.131 li
112.015 154.948 li
113.187 157.342 li
127.064 181.058 mo
125.886 179.439 li
125.035 177.998 li
123.92 176.08 li
125.035 177.696 li
127.064 181.058 li
146.636 208.021 mo
146.426 207.796 li
146.168 207.441 li
146.636 208.021 li
.454932 .575372 .484718 .149355 cmyk
f
215.993 255.746 mo
214.162 255.421 li
212.92 255.056 li
209.665 254.157 li
206.41 253.197 li
203.155 251.889 li
202.363 251.711 li
199.9 250.24 li
196.645 248.759 li
193.39 246.717 li
190.135 245.207 li
186.88 243.147 li
183.625 241.351 li
180.37 238.664 li
177.115 236.398 li
173.86 234.288 li
170.605 230.81 li
167.35 228.127 li
164.095 225.048 li
160.84 221.5 li
157.585 219.082 li
154.33 216.031 li
151.075 212.438 li
147.82 209.287 li
146.636 208.021 li
146.168 207.441 li
144.565 205.233 li
142.276 202.473 li
141.31 201.066 li
138.055 196.976 li
134.8 192.519 li
131.545 186.82 li
128.29 182.745 li
127.064 181.058 li
125.035 177.696 li
123.92 176.08 li
121.78 172.4 li
118.525 166.529 li
115.27 161.049 li
113.187 157.342 li
112.015 154.948 li
110.958 153.131 li
108.76 148.708 li
105.505 142.535 li
102.596 136.711 li
102.25 135.967 li
101.942 135.383 li
98.9951 129.298 li
97.8789 127.002 li
95.7402 121.66 li
93.9028 118.017 li
92.4849 114.478 li
91.4619 112.62 li
89.23 106.983 li
86.606 101.501 li
85.9751 99.8032 li
84.062 95.5908 li
82.7202 92.3711 li
81.8569 90.4521 li
79.4648 84.394 li
77.5688 80.2021 li
76.21 76.667 li
74.605 72.8921 li
72.9551 68.0532 li
72.687 66.832 li
75.7529 73.7441 li
79.0078 81.084 li
82.2632 88.4229 li
85.5132 95.9341 li
88.7661 104.003 li
88.7842 104.042 li
92.0322 110.45 li
95.2813 117.959 li
95.2852 117.968 li
98.54 125.124 li
98.542 125.128 li
101.797 132.1 li
101.804 132.115 li
105.057 138.533 li
108.31 145.226 li
108.32 145.245 li
111.575 151.3 li
111.578 151.305 li
114.833 157.177 li
114.844 157.195 li
118.097 162.514 li
121.35 168.014 li
121.37 168.045 li
123.801 171.542 li
124.607 172.88 li
124.625 172.907 li
125.264 173.827 li
127.858 178.286 li
127.882 178.324 li
131.133 182.905 li
134.387 187.674 li
134.39 187.678 li
137.645 192.357 li
137.653 192.368 li
140.908 196.772 li
140.932 196.802 li
143.765 200.076 li
144.16 200.621 li
144.176 200.641 li
147.431 204.678 li
147.45 204.701 li
150.699 208.271 li
153.948 212.118 li
153.974 212.146 li
157.211 215.431 li
160.451 219.449 li
160.53 219.527 li
163.776 222.088 li
167.018 224.921 li
170.269 227.853 li
173.52 230.877 li
173.55 230.903 li
176.801 233.469 li
180.054 236.127 li
180.09 236.154 li
183.329 238.345 li
186.57 240.903 li
186.634 240.946 li
189.216 242.401 li
189.847 242.846 li
189.88 242.867 li
193.135 244.794 li
193.154 244.804 li
193.949 245.23 li
196.373 246.801 li
196.409 246.822 li
199.654 248.56 li
202.9 250.482 li
206.155 252.408 li
206.226 252.443 li
209.481 253.727 li
209.517 253.74 li
212.772 254.75 li
212.797 254.756 li
214.719 255.244 li
215.991 255.746 li
215.993 255.746 li
220.85 256.978 mo
219.43 256.84 li
217.398 256.354 li
216.218 255.799 li
218.228 256.195 li
219.289 256.494 li
220.85 256.978 li
.420874 .65835 .539147 .214054 cmyk
f
221.778 257.266 mo
219.43 256.921 li
217.4 256.355 li
217.398 256.354 li
219.43 256.84 li
220.85 256.978 li
221.778 257.266 li
.445624 .66833 .543206 .248661 cmyk
f
193.949 245.23 mo
193.154 244.804 li
193.135 244.794 li
189.88 242.867 li
189.847 242.846 li
189.216 242.401 li
189.886 242.778 li
193.127 244.697 li
193.949 245.23 li
214.719 255.244 mo
212.797 254.756 li
212.772 254.75 li
209.517 253.74 li
209.481 253.727 li
206.226 252.443 li
206.155 252.408 li
202.9 250.482 li
199.654 248.56 li
199.664 248.566 li
199.674 248.571 li
202.929 250.222 li
202.983 250.246 li
205.27 251.084 li
206.165 251.588 li
206.215 251.613 li
208.636 252.636 li
209.429 253.061 li
209.47 253.082 li
212.725 254.458 li
212.736 254.461 li
214.719 255.244 li
223.179 257.464 mo
222.685 257.399 li
221.778 257.266 li
220.85 256.978 li
219.289 256.494 li
218.228 256.195 li
219.313 256.41 li
222.549 257.321 li
222.575 257.328 li
223.179 257.464 li
.365209 .777859 .636805 .300145 cmyk
f
161.24 218.813 mo
161.194 218.777 li
161.173 218.751 li
161.24 218.813 li
f
123.801 171.542 mo
121.37 168.045 li
121.35 168.014 li
118.097 162.514 li
114.844 157.195 li
114.833 157.177 li
111.578 151.305 li
111.575 151.3 li
108.32 145.245 li
108.31 145.226 li
105.057 138.533 li
101.804 132.115 li
101.797 132.1 li
98.542 125.128 li
98.54 125.124 li
95.2852 117.968 li
95.2813 117.959 li
92.0322 110.45 li
88.7842 104.042 li
88.7661 104.003 li
85.5132 95.9341 li
82.2632 88.4229 li
79.0078 81.084 li
75.7529 73.7441 li
72.687 66.832 li
72.3721 65.394 li
72.4961 65.667 li
75.7471 73.6392 li
75.7539 73.6553 li
79.0088 80.9019 li
82.2622 88.146 li
85.5151 95.7559 li
85.521 95.769 li
88.7759 102.833 li
88.7769 102.835 li
92.0288 109.8 li
95.2813 117.317 li
95.2822 117.319 li
98.5371 124.75 li
98.5479 124.773 li
101.803 131.287 li
105.058 137.8 li
105.057 137.798 li
108.312 144.403 li
108.321 144.422 li
111.573 150.38 li
114.827 156.615 li
114.838 156.635 li
118.093 162.231 li
118.101 162.244 li
121.354 167.471 li
123.801 171.542 li
143.765 200.076 mo
140.932 196.802 li
140.908 196.772 li
137.653 192.368 li
137.645 192.357 li
134.39 187.678 li
134.387 187.674 li
131.133 182.905 li
127.882 178.324 li
127.858 178.286 li
125.264 173.827 li
127.88 177.586 li
127.882 177.59 li
131.13 182.167 li
134.378 187.293 li
134.387 187.307 li
137.642 192.078 li
137.666 192.11 li
140.912 196.136 li
143.765 200.076 li
193.127 244.697 mo
189.886 242.778 li
189.216 242.401 li
186.634 240.946 li
186.57 240.903 li
183.329 238.345 li
180.09 236.154 li
180.054 236.127 li
176.801 233.469 li
173.55 230.903 li
173.52 230.877 li
170.269 227.853 li
167.018 224.921 li
163.776 222.088 li
160.53 219.527 li
160.451 219.449 li
157.211 215.431 li
153.974 212.146 li
153.948 212.118 li
150.699 208.271 li
150.705 208.279 li
150.71 208.283 li
153.965 211.77 li
153.974 211.779 li
157.229 215.082 li
157.244 215.097 li
160.499 218.125 li
161.173 218.751 li
161.194 218.777 li
161.24 218.813 li
163.744 221.142 li
166.989 224.526 li
167.015 224.552 li
170.262 227.48 li
173.509 230.683 li
173.564 230.73 li
176.812 233.11 li
180.06 235.674 li
180.082 235.69 li
183.337 237.983 li
186.592 240.277 li
186.634 240.304 li
187.706 240.908 li
189.863 242.306 li
189.871 242.311 li
190.933 242.969 li
193.08 244.664 li
193.118 244.691 li
193.127 244.697 li
223.558 257.514 mo
223.179 257.464 li
222.575 257.328 li
222.549 257.321 li
219.313 256.41 li
218.228 256.195 li
216.218 255.799 li
216.175 255.778 li
215.993 255.746 li
215.991 255.746 li
214.719 255.244 li
212.736 254.461 li
212.725 254.458 li
209.47 253.082 li
209.429 253.061 li
208.636 252.636 li
209.47 252.989 li
212.725 254.365 li
212.772 254.382 li
216.027 255.391 li
216.052 255.398 li
218.625 256.051 li
219.246 256.296 li
219.282 256.309 li
222.537 257.318 li
222.602 257.333 li
223.388 257.466 li
223.558 257.514 li
.358221 .668666 .743954 .275395 cmyk
f
156.648 213.068 mo
154.69 211.082 li
151.444 207.604 li
148.201 204.042 li
144.958 199.926 li
144.943 199.909 li
144.55 199.455 li
141.715 195.539 li
141.699 195.519 li
138.457 191.497 li
135.218 186.751 li
133.499 184.037 li
134.392 185.296 li
134.401 185.308 li
137.652 189.614 li
140.902 194.195 li
140.924 194.224 li
144.17 198.158 li
147.418 202.551 li
147.431 202.568 li
150.686 206.605 li
150.71 206.632 li
153.96 210.114 li
153.96 210.114 li
156.648 213.068 li
.365209 .777859 .636805 .300145 cmyk
f
148.201 204.042 mo
148.2 204.039 li
144.963 200.024 li
144.55 199.455 li
144.943 199.909 li
144.958 199.926 li
148.201 204.042 li
.358221 .668666 .743954 .275395 cmyk
f
102.086 129.616 mo
100.8 127.043 li
101.8 128.988 li
102.086 129.616 li
119.466 162.545 mo
118.953 161.722 li
115.708 156.142 li
112.458 149.914 li
112.454 149.906 li
109.204 143.951 li
108.158 141.83 li
108.321 142.128 li
111.574 148.088 li
114.828 154.232 li
114.834 154.244 li
118.089 160.023 li
119.466 162.545 li
.420874 .65835 .539147 .214054 cmyk
f
127.114 174.734 mo
126.108 173.289 li
125.467 172.187 li
125.445 172.153 li
124.641 170.998 li
122.208 166.951 li
122.205 166.945 li
119.466 162.545 li
118.089 160.023 li
114.834 154.244 li
114.828 154.232 li
111.574 148.088 li
108.321 142.128 li
108.158 141.83 li
105.953 137.356 li
105.952 137.353 li
102.697 130.84 li
102.086 129.616 li
101.8 128.988 li
100.8 127.043 li
99.4482 124.338 li
96.1982 116.918 li
96.1992 116.92 li
95.4692 115.232 li
98.5439 121.646 li
98.5449 121.649 li
101.8 128.346 li
101.802 128.348 li
105.057 134.954 li
105.062 134.964 li
108.317 141.203 li
111.569 147.619 li
111.581 147.641 li
114.836 153.329 li
114.84 153.336 li
118.092 158.836 li
121.344 164.611 li
121.343 164.608 li
124.598 170.479 li
124.605 170.491 li
127.114 174.734 li
.365209 .777859 .636805 .300145 cmyk
f
126.108 173.289 mo
125.455 172.35 li
124.641 170.998 li
125.445 172.153 li
125.467 172.187 li
126.108 173.289 li
.358221 .668666 .743954 .275395 cmyk
f
183.337 237.983 mo
180.082 235.69 li
180.06 235.674 li
176.812 233.11 li
173.564 230.73 li
173.509 230.683 li
170.262 227.48 li
167.015 224.552 li
166.989 224.526 li
163.744 221.142 li
161.24 218.813 li
161.173 218.751 li
160.499 218.125 li
157.244 215.097 li
157.229 215.082 li
153.974 211.779 li
153.965 211.77 li
150.71 208.283 li
150.705 208.279 li
150.699 208.271 li
147.45 204.701 li
147.431 204.678 li
144.176 200.641 li
144.16 200.621 li
143.765 200.076 li
140.912 196.136 li
137.666 192.11 li
137.642 192.078 li
134.387 187.307 li
134.378 187.293 li
131.13 182.167 li
127.882 177.59 li
127.88 177.586 li
125.264 173.827 li
124.625 172.907 li
124.607 172.88 li
123.801 171.542 li
121.354 167.471 li
118.101 162.244 li
118.093 162.231 li
114.838 156.635 li
114.827 156.615 li
111.573 150.38 li
108.321 144.422 li
108.312 144.403 li
105.057 137.798 li
105.058 137.8 li
101.803 131.287 li
98.5479 124.773 li
98.5371 124.75 li
95.2822 117.319 li
95.2813 117.317 li
92.0288 109.8 li
88.7769 102.835 li
88.7759 102.833 li
85.521 95.769 li
85.5151 95.7559 li
82.2622 88.146 li
79.0088 80.9019 li
75.7539 73.6553 li
75.7471 73.6392 li
72.4961 65.667 li
72.3721 65.394 li
72.0342 63.854 li
72.5068 64.7729 li
75.7568 71.5513 li
79.0088 78.6089 li
82.2612 86.125 li
82.2651 86.1343 li
85.5161 93.2813 li
88.7671 101.253 li
88.7842 101.29 li
92.0342 107.702 li
95.2852 114.849 li
95.2891 114.858 li
95.4692 115.232 li
96.1992 116.92 li
96.1982 116.918 li
99.4482 124.338 li
100.8 127.043 li
102.086 129.616 li
102.697 130.84 li
105.952 137.353 li
105.953 137.356 li
108.158 141.83 li
109.204 143.951 li
112.454 149.906 li
112.458 149.914 li
115.708 156.142 li
118.953 161.722 li
119.466 162.545 li
122.205 166.945 li
122.208 166.951 li
124.641 170.998 li
125.455 172.35 li
126.108 173.289 li
127.114 174.734 li
127.86 175.996 li
127.88 176.027 li
131.134 180.705 li
131.137 180.709 li
133.499 184.037 li
135.218 186.751 li
138.457 191.497 li
141.699 195.519 li
141.715 195.539 li
144.55 199.455 li
144.963 200.024 li
148.2 204.039 li
148.201 204.042 li
151.444 207.604 li
154.69 211.082 li
156.648 213.068 li
157.208 213.684 li
160.458 217.531 li
160.489 217.564 li
163.744 220.775 li
166.999 223.986 li
167.034 224.017 li
170.271 226.663 li
173.509 229.857 li
173.537 229.883 li
176.79 232.634 li
180.041 235.474 li
180.067 235.495 li
183.322 237.972 li
183.337 237.983 li
190.933 242.969 mo
189.871 242.311 li
189.863 242.306 li
187.706 240.908 li
189.856 242.119 li
190.933 242.969 li
209.47 252.989 mo
208.636 252.636 li
206.215 251.613 li
206.165 251.588 li
205.27 251.084 li
206.216 251.43 li
209.449 252.979 li
209.47 252.989 li
223.388 257.466 mo
222.602 257.333 li
222.537 257.318 li
219.282 256.309 li
219.246 256.296 li
218.625 256.051 li
219.295 256.221 li
222.537 257.226 li
222.549 257.23 li
223.388 257.466 li
.640772 .807858 .324804 .158572 cmyk
f
173.636 222.444 mo
170.605 219.9 li
167.35 216.59 li
164.095 213.847 li
160.84 210.592 li
157.585 206.703 li
155.007 204.67 li
154.33 203.851 li
152.403 201.597 li
151.075 199.847 li
147.82 195.852 li
144.913 192.366 li
144.565 191.895 li
141.31 187.904 li
138.055 183.222 li
134.8 178.688 li
131.545 173.969 li
128.29 169.4 li
126.984 167.228 li
125.035 163.72 li
124.037 162.217 li
121.78 158.219 li
118.525 152.061 li
115.27 146.12 li
112.015 140.526 li
108.76 134.186 li
105.505 128.681 li
102.25 121.371 li
98.9951 114.89 li
95.7402 108.39 li
92.4849 101.635 li
89.23 95.0342 li
85.9751 87.5132 li
82.7202 81.228 li
81.8291 79.395 li
79.4648 73.939 li
77.3691 69.356 li
76.21 66.4951 li
74.2471 62.7153 li
72.9551 60.0112 li
71.8711 57.9751 li
70.208 54.519 li
72.9551 59.1323 li
76.21 65.3901 li
79.4648 72.314 li
82.7202 79.085 li
85.9751 86.2251 li
89.23 93.3809 li
92.4849 100.331 li
95.7402 106.46 li
98.9951 113.335 li
102.25 119.996 li
105.505 126.682 li
108.76 132.977 li
112.015 139.249 li
115.27 144.809 li
118.525 150.322 li
121.78 155.983 li
125.035 162.13 li
128.29 167.604 li
131.545 171.892 li
134.8 177.061 li
138.055 181.186 li
141.31 186.072 li
144.565 190.01 li
147.82 194.287 li
151.075 198.816 li
154.33 203.016 li
157.585 206.158 li
160.84 210.062 li
164.095 213.03 li
167.35 215.498 li
170.605 218.613 li
173.636 222.444 li
198.2 241.419 mo
196.818 240.994 li
196.645 240.865 li
196.487 240.807 li
193.39 238.177 li
190.135 236.691 li
186.88 233.894 li
185.21 232.333 li
186.88 233.168 li
190.135 235.933 li
193.39 238.083 li
196.645 240.142 li
198.2 241.419 li
214.953 251.417 mo
213.22 250.747 li
212.92 250.584 li
210.947 249.029 li
212.92 250.352 li
214.953 251.417 li
225.836 255.665 mo
222.965 254.981 li
222.685 254.868 li
221.271 254.269 li
219.43 253.176 li
218.148 252.669 li
219.43 253.067 li
222.685 254.253 li
225.836 255.665 li
.426154 .347417 .353185 .00985733 cmyk
f
71.8711 57.9751 mo
69.958 54.3809 li
69.8599 53.936 li
70.208 54.519 li
71.8711 57.9751 li
77.3691 69.356 mo
76.21 66.8232 li
74.2471 62.7153 li
76.21 66.4951 li
77.3691 69.356 li
124.037 162.217 mo
121.78 158.817 li
118.525 153.82 li
115.27 148.071 li
112.015 142.254 li
108.76 136.462 li
105.505 129.907 li
102.25 123.683 li
98.9951 116.7 li
95.7402 110.411 li
92.4849 102.512 li
89.23 96.394 li
85.9751 88.0942 li
82.7202 81.4521 li
81.8291 79.395 li
82.7202 81.228 li
85.9751 87.5132 li
89.23 95.0342 li
92.4849 101.635 li
95.7402 108.39 li
98.9951 114.89 li
102.25 121.371 li
105.505 128.681 li
108.76 134.186 li
112.015 140.526 li
115.27 146.12 li
118.525 152.061 li
121.78 158.219 li
124.037 162.217 li
144.913 192.366 mo
144.565 191.949 li
141.31 188.396 li
138.055 184.145 li
134.8 179.409 li
131.545 174.273 li
128.29 169.577 li
126.984 167.228 li
128.29 169.4 li
131.545 173.969 li
134.8 178.688 li
138.055 183.222 li
141.31 187.904 li
144.565 191.895 li
144.913 192.366 li
155.007 204.67 mo
154.33 204.136 li
152.403 201.597 li
154.33 203.851 li
155.007 204.67 li
196.818 240.994 mo
196.645 240.941 li
196.487 240.807 li
196.645 240.865 li
196.818 240.994 li
221.271 254.269 mo
219.43 253.488 li
216.175 252.359 li
213.22 250.747 li
214.953 251.417 li
216.175 252.057 li
218.148 252.669 li
219.43 253.176 li
221.271 254.269 li
.397986 .5776 .48777 .1131 cmyk
f
74.2471 62.7153 mo
72.9551 60.2271 li
71.8711 57.9751 li
72.9551 60.0112 li
74.2471 62.7153 li
81.8291 79.395 mo
79.4648 74.5322 li
77.3691 69.356 li
79.4648 73.939 li
81.8291 79.395 li
126.984 167.228 mo
125.035 163.985 li
124.037 162.217 li
125.035 163.72 li
126.984 167.228 li
152.403 201.597 mo
151.075 200.043 li
147.82 196.299 li
144.913 192.366 li
147.82 195.852 li
151.075 199.847 li
152.403 201.597 li
196.487 240.807 mo
193.39 239.679 li
190.135 236.982 li
186.88 234.881 li
183.625 231.791 li
180.37 229.803 li
177.115 226.474 li
173.86 223.958 li
170.605 220.522 li
167.35 217.056 li
164.095 214.431 li
160.84 210.976 li
157.585 207.786 li
155.007 204.67 li
157.585 206.703 li
160.84 210.592 li
164.095 213.847 li
167.35 216.59 li
170.605 219.9 li
173.636 222.444 li
173.86 222.728 li
177.115 226.116 li
180.37 229.193 li
183.625 231.542 li
185.21 232.333 li
186.88 233.894 li
190.135 236.691 li
193.39 238.177 li
196.487 240.807 li
213.22 250.747 mo
212.92 250.631 li
209.665 248.896 li
206.41 247.258 li
203.155 244.971 li
199.9 243.308 li
196.818 240.994 li
198.2 241.419 li
199.9 242.815 li
203.155 243.861 li
206.41 245.572 li
209.665 248.17 li
210.947 249.029 li
212.92 250.584 li
213.22 250.747 li
222.965 254.981 mo
222.685 254.915 li
221.877 254.628 li
221.271 254.269 li
222.685 254.868 li
222.965 254.981 li
.383673 .45362 .598413 .0927443 cmyk
f
221.877 254.628 mo
219.43 253.763 li
216.175 252.633 li
212.92 251.458 li
209.665 250.053 li
206.41 248.308 li
203.155 246.054 li
199.9 244.417 li
196.645 242.998 li
193.39 240.844 li
190.135 238.255 li
186.88 236.119 li
183.625 233.469 li
180.37 231.662 li
177.115 228.772 li
173.86 226.095 li
170.605 223.211 li
167.35 220.012 li
164.095 216.287 li
160.84 213.849 li
157.585 210.167 li
154.33 206.603 li
151.075 203.25 li
147.82 199.22 li
144.565 194.591 li
141.31 190.381 li
138.055 186.416 li
134.8 181.32 li
131.545 176.798 li
128.29 171.674 li
125.035 166.791 li
121.78 161.555 li
118.525 156.296 li
115.27 150.791 li
112.015 144.484 li
108.76 139.048 li
105.505 131.831 li
102.25 124.984 li
98.9951 118.865 li
95.7402 110.965 li
92.4849 103.705 li
89.23 97.3071 li
85.9751 90.3369 li
82.7202 82.7632 li
79.4648 75.79 li
76.21 68.7339 li
72.9551 61.207 li
70.082 54.9463 li
69.958 54.3809 li
71.8711 57.9751 li
72.9551 60.2271 li
74.2471 62.7153 li
76.21 66.8232 li
77.3691 69.356 li
79.4648 74.5322 li
81.8291 79.395 li
82.7202 81.4521 li
85.9751 88.0942 li
89.23 96.394 li
92.4849 102.512 li
95.7402 110.411 li
98.9951 116.7 li
102.25 123.683 li
105.505 129.907 li
108.76 136.462 li
112.015 142.254 li
115.27 148.071 li
118.525 153.82 li
121.78 158.817 li
124.037 162.217 li
125.035 163.985 li
126.984 167.228 li
128.29 169.577 li
131.545 174.273 li
134.8 179.409 li
138.055 184.145 li
141.31 188.396 li
144.565 191.949 li
144.913 192.366 li
147.82 196.299 li
151.075 200.043 li
152.403 201.597 li
154.33 204.136 li
155.007 204.67 li
157.585 207.786 li
160.84 210.976 li
164.095 214.431 li
167.35 217.056 li
170.605 220.522 li
173.86 223.958 li
177.115 226.474 li
180.37 229.803 li
183.625 231.791 li
186.88 234.881 li
190.135 236.982 li
193.39 239.679 li
196.487 240.807 li
196.645 240.941 li
196.818 240.994 li
199.9 243.308 li
203.155 244.971 li
206.41 247.258 li
209.665 248.896 li
212.92 250.631 li
213.22 250.747 li
216.175 252.359 li
219.43 253.488 li
221.271 254.269 li
221.877 254.628 li
.342535 .592462 .697749 .17377 cmyk
f
69.1958 52.7441 mo
68.9121 52.4849 li
68.3521 51.481 li
66.5249 47.9141 li
66.5591 47.918 li
69.1958 52.7441 li
.397986 .5776 .48777 .1131 cmyk
f
68.9121 52.4849 mo
68.8252 52.4063 li
68.3521 51.481 li
68.9121 52.4849 li
.342535 .592462 .697749 .17377 cmyk
f
225.954 255.716 mo
225.94 255.712 li
223.793 255.314 li
222.965 254.981 li
225.836 255.665 li
225.94 255.71 li
225.954 255.716 li
.505547 .518822 .346044 .0569467 cmyk
f
228.528 256.769 mo
225.94 256.177 li
223.793 255.314 li
225.94 255.712 li
225.954 255.716 li
228.528 256.769 li
.47837 .665797 .413855 .144411 cmyk
f
223.793 255.314 mo
222.685 255.109 li
221.877 254.628 li
222.685 254.915 li
222.965 254.981 li
223.793 255.314 li
.454932 .575372 .484718 .149355 cmyk
f
233.048 257.765 mo
232.506 257.719 li
229.265 257.262 li
229.251 257.261 li
226.009 256.895 li
223.608 256.489 li
222.826 256.269 li
219.578 255.262 li
219.553 255.255 li
218.934 255.098 li
216.358 254.083 li
216.311 254.065 li
213.068 253.151 li
209.854 252.065 li
208.265 251.303 li
206.646 250.436 li
206.616 250.421 li
204.194 249.329 li
203.4 248.882 li
200.146 247.047 li
200.106 247.027 li
196.885 245.575 li
193.662 243.485 li
193.653 243.48 li
191.507 242.149 li
190.445 241.31 li
190.381 241.267 li
188.224 240.052 li
187.156 239.36 li
183.916 237.167 li
180.686 234.71 li
177.444 231.877 li
177.438 231.872 li
174.198 229.132 li
170.956 225.934 li
170.921 225.903 li
167.684 223.257 li
164.446 220.063 li
161.208 216.868 li
157.967 213.032 li
157.955 213.018 li
154.7 209.441 li
154.695 209.436 li
151.453 205.963 li
148.215 201.948 li
144.967 197.553 li
144.951 197.532 li
141.708 193.602 li
138.463 189.029 li
138.454 189.018 li
135.204 184.713 li
131.953 180.13 li
131.955 180.134 li
128.711 175.471 li
125.468 169.987 li
122.217 164.123 li
122.216 164.12 li
118.961 158.34 li
118.955 158.332 li
115.703 152.83 li
112.455 147.156 li
109.206 140.745 li
109.203 140.74 li
105.951 134.506 li
102.698 127.906 li
102.7 127.909 li
99.4448 121.212 li
99.4458 121.214 li
96.1929 114.43 li
92.9399 107.279 li
92.9312 107.26 li
89.6851 100.856 li
86.438 92.894 li
86.4302 92.875 li
83.1782 85.7251 li
79.9238 78.2051 li
79.9189 78.1948 li
76.6641 71.1299 li
76.6611 71.124 li
73.4063 64.335 li
73.3999 64.3223 li
72.3179 62.2183 li
71.1611 59.8721 li
70.082 54.9463 li
72.9551 61.207 li
76.21 68.7339 li
79.4648 75.79 li
82.7202 82.7632 li
85.9751 90.3369 li
89.23 97.3071 li
92.4849 103.705 li
95.7402 110.965 li
98.9951 118.865 li
102.25 124.984 li
105.505 131.831 li
108.76 139.048 li
112.015 144.484 li
115.27 150.791 li
118.525 156.296 li
121.78 161.555 li
125.035 166.791 li
128.29 171.674 li
131.545 176.798 li
134.8 181.32 li
138.055 186.416 li
141.31 190.381 li
144.565 194.591 li
147.82 199.22 li
151.075 203.25 li
154.33 206.603 li
157.585 210.167 li
160.84 213.849 li
164.095 216.287 li
167.35 220.012 li
170.605 223.211 li
173.86 226.095 li
177.115 228.772 li
180.37 231.662 li
183.625 233.469 li
186.88 236.119 li
190.135 238.255 li
193.39 240.844 li
196.645 242.998 li
199.9 244.417 li
203.155 246.054 li
206.41 248.308 li
209.665 250.053 li
212.92 251.458 li
216.175 252.633 li
219.43 253.763 li
221.877 254.628 li
222.685 255.109 li
223.793 255.314 li
225.94 256.177 li
228.528 256.769 li
229.195 257.042 li
232.45 257.625 li
233.048 257.765 li
.420874 .65835 .539147 .214054 cmyk
f
72.3179 62.2183 mo
71.1992 60.042 li
71.1611 59.8721 li
72.3179 62.2183 li
.365209 .777859 .636805 .300145 cmyk
f
208.265 251.303 mo
206.626 250.518 li
206.582 250.5 li
205.69 250.172 li
204.194 249.329 li
206.616 250.421 li
206.646 250.436 li
208.265 251.303 li
.358221 .668666 .743954 .275395 cmyk
f
68.3521 51.481 mo
66.4448 48.0649 li
66.3408 47.8989 li
66.4448 47.9038 li
66.5249 47.9141 li
68.3521 51.481 li
.47837 .665797 .413855 .144411 cmyk
f
68.8252 52.4063 mo
66.4448 50.231 li
65.5952 47.8599 li
66.3408 47.8989 li
66.4448 48.0649 li
68.3521 51.481 li
68.8252 52.4063 li
.420874 .65835 .539147 .214054 cmyk
f
188.224 240.052 mo
187.147 239.445 li
183.921 237.172 li
183.916 237.167 li
187.156 239.36 li
188.224 240.052 li
205.69 250.172 mo
203.355 249.317 li
200.131 247.681 li
196.9 245.951 li
193.682 243.865 li
191.507 242.149 li
193.653 243.48 li
193.662 243.485 li
196.885 245.575 li
200.106 247.027 li
200.146 247.047 li
203.4 248.882 li
204.194 249.329 li
205.69 250.172 li
218.934 255.098 mo
216.31 254.432 li
213.092 253.434 li
209.87 252.072 li
209.854 252.065 li
213.068 253.151 li
216.311 254.065 li
216.358 254.083 li
218.934 255.098 li
234.778 258.172 mo
232.506 258.044 li
229.251 257.86 li
229.223 257.859 li
229.047 257.854 li
226.063 257.181 li
223.608 256.489 li
226.009 256.895 li
229.251 257.261 li
229.265 257.262 li
232.506 257.719 li
233.048 257.765 li
234.778 258.172 li
.640772 .807858 .324804 .158572 cmyk
f
24.1299 26.1621 mo
27.3848 26.1621 li
30.6401 26.1621 li
33.895 26.1621 li
37.1499 26.1621 li
37.1641 26.1621 li
40.4189 26.2539 li
40.541 26.272 li
43.7959 27.1899 li
47.0508 28.1069 li
47.1411 28.1431 li
50.396 29.7939 li
50.499 29.8628 li
53.7539 32.707 li
53.7861 32.7378 li
57.041 36.1318 li
57.0762 36.1729 li
60.3311 40.3931 li
60.3569 40.4312 li
63.6118 45.5679 li
63.624 45.5869 li
66.8789 51.2749 li
66.895 51.3052 li
70.147 57.9971 li
73.3999 64.3223 li
73.4063 64.335 li
76.6611 71.124 li
76.6641 71.1299 li
79.9189 78.1948 li
79.9238 78.2051 li
83.1782 85.7251 li
86.4302 92.875 li
86.438 92.894 li
89.6851 100.856 li
92.9312 107.26 li
92.9399 107.279 li
96.1929 114.43 li
99.4458 121.214 li
99.4448 121.212 li
102.7 127.909 li
102.698 127.906 li
105.951 134.506 li
109.203 140.74 li
109.206 140.745 li
112.455 147.156 li
115.703 152.83 li
118.955 158.332 li
118.961 158.34 li
122.216 164.12 li
122.217 164.123 li
125.468 169.987 li
128.711 175.471 li
131.955 180.134 li
131.953 180.13 li
135.204 184.713 li
138.454 189.018 li
138.463 189.029 li
141.708 193.602 li
144.951 197.532 li
144.967 197.553 li
148.215 201.948 li
151.453 205.963 li
154.695 209.436 li
154.7 209.441 li
157.955 213.018 li
157.967 213.032 li
161.208 216.868 li
164.446 220.063 li
167.684 223.257 li
170.921 225.903 li
170.956 225.934 li
174.198 229.132 li
177.438 231.872 li
177.444 231.877 li
180.686 234.71 li
183.921 237.172 li
187.147 239.445 li
190.381 241.267 li
190.445 241.31 li
193.682 243.865 li
196.9 245.951 li
200.131 247.681 li
203.355 249.317 li
206.582 250.5 li
206.626 250.518 li
209.87 252.072 li
213.092 253.434 li
216.31 254.432 li
219.553 255.255 li
219.578 255.262 li
222.826 256.269 li
226.063 257.181 li
229.271 257.904 li
232.492 258.177 li
232.52 258.18 li
235.754 258.636 li
238.981 258.818 li
242.223 258.909 li
245.47 258.909 li
248.725 258.909 li
251.98 258.909 li
255.235 258.909 li
258.49 258.909 li
261.745 258.909 li
261.759 258.909 li
265.008 259.001 li
268.255 259.001 li
271.51 259.001 li
274.765 259.001 li
278.02 259.001 li
281.275 259.001 li
284.53 259.001 li
287.785 259.001 li
291.04 259.001 li
294.295 259.001 li
297.55 259.001 li
300.805 259.001 li
304.06 259.001 li
307.315 259.001 li
310.57 259.001 li
313.825 259.001 li
317.08 259.001 li
320.335 259.001 li
323.59 259.001 li
326.845 259.001 li
330.1 259.001 li
333.355 259.001 li
336.61 259.001 li
339.865 259.001 li
343.12 259.001 li
346.375 259.001 li
346.375 260.001 li
343.12 260.001 li
339.865 260.001 li
336.61 260.001 li
333.355 260.001 li
330.1 260.001 li
326.845 260.001 li
323.59 260.001 li
320.335 260.001 li
317.08 260.001 li
313.825 260.001 li
310.57 260.001 li
307.315 260.001 li
304.06 260.001 li
300.805 260.001 li
297.55 260.001 li
294.295 260.001 li
291.04 260.001 li
287.785 260.001 li
284.53 260.001 li
281.275 260.001 li
278.02 260.001 li
274.765 260.001 li
271.51 260.001 li
268.255 260.001 li
265 260.001 li
264.986 260.001 li
261.738 259.909 li
258.49 259.909 li
255.235 259.909 li
251.98 259.909 li
248.725 259.909 li
245.47 259.909 li
242.215 259.909 li
242.201 259.909 li
238.946 259.817 li
238.932 259.816 li
235.677 259.633 li
235.635 259.629 li
232.394 259.172 li
229.153 258.898 li
229.085 258.888 li
225.83 258.154 li
225.804 258.147 li
222.549 257.23 li
222.537 257.226 li
219.295 256.221 li
216.052 255.398 li
216.027 255.391 li
212.772 254.382 li
212.725 254.365 li
209.47 252.989 li
209.449 252.979 li
206.216 251.43 li
202.983 250.246 li
202.929 250.222 li
199.674 248.571 li
199.664 248.566 li
196.409 246.822 li
196.373 246.801 li
193.118 244.691 li
193.08 244.664 li
189.856 242.119 li
186.634 240.304 li
186.592 240.277 li
183.337 237.983 li
183.322 237.972 li
180.067 235.495 li
180.041 235.474 li
176.79 232.634 li
173.537 229.883 li
173.509 229.857 li
170.271 226.663 li
167.034 224.017 li
166.999 223.986 li
163.744 220.775 li
160.489 217.564 li
160.458 217.531 li
157.208 213.684 li
153.96 210.114 li
154.33 209.777 li
153.965 210.118 li
150.71 206.632 li
150.686 206.605 li
147.431 202.568 li
147.418 202.551 li
144.17 198.158 li
140.924 194.224 li
140.902 194.195 li
137.652 189.614 li
134.401 185.308 li
134.392 185.296 li
131.137 180.709 li
131.134 180.705 li
127.88 176.027 li
127.86 175.996 li
124.605 170.491 li
124.598 170.479 li
121.343 164.608 li
121.344 164.611 li
118.092 158.836 li
114.84 153.336 li
114.836 153.329 li
111.581 147.641 li
111.569 147.619 li
108.317 141.203 li
105.062 134.964 li
105.057 134.954 li
101.802 128.348 li
101.8 128.346 li
98.5449 121.649 li
98.5439 121.646 li
95.2891 114.858 li
95.2852 114.849 li
92.0342 107.702 li
88.7842 101.29 li
88.7671 101.253 li
85.5161 93.2813 li
82.2651 86.1343 li
82.2612 86.125 li
79.0088 78.6089 li
75.7568 71.5513 li
72.5068 64.7729 li
69.2549 58.4492 li
69.25 58.439 li
66.0029 51.7573 li
62.7622 46.0942 li
59.5249 40.9849 li
56.2998 36.8052 li
53.0801 33.4458 li
49.8882 30.6572 li
46.7319 29.0562 li
43.5239 28.1519 li
40.3291 27.252 li
37.144 27.1621 li
33.895 27.1621 li
30.6401 27.1621 li
27.3848 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
.67953 .634058 .618097 .562646 cmyk
f
41.0938 28.6362 mo
40.4048 28.5669 li
39.7749 28.291 li
40.2109 28.377 li
40.3491 28.394 li
40.981 28.4302 li
41.0938 28.6362 li
209.757 258.285 mo
209.665 258.283 li
206.41 257.873 li
203.155 256.925 li
199.9 256.549 li
196.645 256.18 li
193.39 255.397 li
190.135 254.916 li
186.88 254.419 li
183.625 253.116 li
180.37 252.259 li
177.115 251.65 li
173.86 250.983 li
170.605 250.4 li
167.35 249.259 li
164.095 248.332 li
160.84 247.171 li
157.585 246.592 li
154.33 245.631 li
151.075 244.449 li
147.82 243.536 li
144.565 241.669 li
141.31 240.538 li
138.055 239.612 li
134.8 238.68 li
131.545 237.525 li
128.29 235.501 li
125.035 234.025 li
121.78 232.019 li
118.525 229.977 li
115.27 227.428 li
112.015 223.624 li
108.76 218.729 li
105.505 211.86 li
102.25 204.327 li
98.9951 193.263 li
95.7402 180.435 li
93.9868 174.512 li
95.7402 176.161 li
97.853 179.148 li
98.0181 179.9 li
98.0313 179.953 li
101.286 191.696 li
101.308 191.763 li
104.563 200.937 li
104.568 200.953 li
107.823 209.668 li
107.861 209.755 li
111.116 216.453 li
111.166 216.544 li
114.421 221.773 li
114.499 221.881 li
117.754 225.826 li
117.833 225.911 li
121.088 229.031 li
121.174 229.105 li
124.429 231.582 li
124.491 231.625 li
127.736 233.729 li
130.985 235.926 li
131.113 236 li
134.368 237.559 li
134.433 237.587 li
137.688 238.873 li
137.711 238.881 li
140.943 240.065 li
144.144 241.418 li
147.368 243.053 li
147.549 243.125 li
150.792 244.038 li
154.034 245.043 li
157.289 246.052 li
157.365 246.073 li
160.533 246.787 li
163.706 248.128 li
163.875 248.183 li
167.092 248.908 li
170.309 249.906 li
170.411 249.932 li
173.639 250.568 li
176.869 251.388 li
176.975 251.408 li
180.19 251.861 li
183.366 252.578 li
186.584 253.575 li
186.686 253.601 li
189.941 254.243 li
189.968 254.248 li
193.17 254.791 li
196.374 255.693 li
196.478 255.716 li
199.733 256.267 li
199.76 256.271 li
199.9 256.291 li
199.9 256.291 li
203.146 256.784 li
206.114 257.704 li
206.298 257.742 li
208.884 258.034 li
209.665 258.264 li
209.757 258.285 li
.366217 0 .587488 0 cmyk
f
97.853 179.148 mo
95.7402 176.161 li
93.9868 174.512 li
93.7871 173.835 li
95.7402 175.761 li
97.6841 178.373 li
97.853 179.148 li
203.146 256.784 mo
199.9 256.291 li
202.936 256.718 li
203.146 256.784 li
211.858 258.311 mo
209.757 258.285 li
209.665 258.264 li
208.884 258.034 li
209.553 258.109 li
209.609 258.114 li
211.361 258.213 li
211.858 258.311 li
.519066 0 .665766 0 cmyk
f
182.94 250.431 mo
180.59 249.901 li
180.51 249.887 li
177.309 249.436 li
174.106 248.623 li
174.054 248.612 li
170.85 247.98 li
167.646 246.986 li
167.57 246.966 li
164.402 246.252 li
161.229 244.91 li
161.06 244.856 li
157.843 244.13 li
154.626 243.133 li
151.371 242.125 li
151.346 242.117 li
148.185 241.226 li
145.017 239.618 li
144.954 239.589 li
141.699 238.213 li
141.654 238.195 li
138.41 237.007 li
135.2 235.74 li
132.044 234.228 li
128.85 232.067 li
128.834 232.057 li
125.611 229.967 li
122.431 227.547 li
119.259 224.508 li
116.084 220.659 li
112.892 215.531 li
109.68 208.924 li
106.445 200.263 li
103.204 191.128 li
101.013 183.224 li
102.25 185.117 li
105.505 188.799 li
105.803 189.16 li
108.76 198.954 li
112.015 207.7 li
115.27 214.541 li
118.525 220.061 li
121.78 224.377 li
125.035 227.364 li
128.29 230.167 li
131.545 232.552 li
134.8 234.548 li
138.055 236.21 li
141.31 237.685 li
144.565 239.319 li
147.82 240.737 li
151.075 241.657 li
154.33 242.473 li
157.585 243.531 li
160.84 244.432 li
164.095 246.039 li
167.35 246.557 li
170.605 247.412 li
173.86 248.116 li
177.115 249.113 li
180.321 249.394 li
180.37 249.424 li
182.94 250.431 li
.366217 0 .587488 0 cmyk
f
189.117 252.042 mo
187.126 251.649 li
183.921 250.656 li
183.845 250.635 li
182.94 250.431 li
180.37 249.424 li
180.321 249.394 li
180.37 249.398 li
183.625 249.981 li
186.063 250.455 li
186.88 250.942 li
189.117 252.042 li
.519066 0 .665766 0 cmyk
f
100.698 171.313 mo
98.9951 168.639 li
97.0688 166.216 li
96.7168 164.61 li
96.7002 164.543 li
93.4448 153.442 li
93.4341 153.408 li
90.1899 143.625 li
86.9482 131.017 li
83.6982 115.899 li
83.689 115.862 li
80.4341 103.11 li
80.4341 103.112 li
77.1792 90.2681 li
77.1509 90.1763 li
73.9131 81.1392 li
70.6689 68.3423 li
70.6421 68.2529 li
68.5928 62.4771 li
69.7002 64.856 li
72.9551 72.2969 li
76.21 80.1421 li
78.1621 84.6699 li
79.4648 89.3901 li
82.7202 99.0908 li
85.9751 115.574 li
89.23 127.286 li
92.4849 136.757 li
95.7402 147.82 li
98.9951 164.859 li
100.698 171.313 li
.366217 0 .587488 0 cmyk
f
101.533 174.477 mo
98.9951 171.232 li
97.895 169.989 li
97.0688 166.216 li
98.9951 168.639 li
100.698 171.313 li
101.533 174.477 li
.48304 0 .753933 0 cmyk
f
78.1621 84.6699 mo
76.21 80.1421 li
72.9551 72.2969 li
69.7002 64.856 li
68.5928 62.4771 li
67.3872 59.0791 li
67.3789 59.0571 li
64.6421 51.8809 li
66.4448 55.3022 li
69.7002 62.7241 li
72.9551 69.897 li
73.5708 71.2793 li
76.21 78.1069 li
76.5908 78.9771 li
78.1621 84.6699 li
.411353 0 .770871 0 cmyk
f
69.8042 53.6812 mo
69.7002 53.4639 li
69.4258 52.9551 li
69.7002 53.2051 li
69.8042 53.6812 li
.366217 0 .587488 0 cmyk
f
69.8599 53.936 mo
69.7002 53.667 li
69.1958 52.7441 li
69.4258 52.9551 li
69.7002 53.4639 li
69.8042 53.6812 li
69.8599 53.936 li
.444343 0 .754665 0 cmyk
f
76.5908 78.9771 mo
76.21 78.1069 li
73.5708 71.2793 li
75.6299 75.897 li
76.21 77.5972 li
76.5908 78.9771 li
.506065 0 .77322 0 cmyk
f
73.5708 71.2793 mo
72.9551 69.897 li
69.7002 62.7241 li
66.4448 55.3022 li
64.6421 51.8809 li
64.127 50.5332 li
66.4448 55.2568 li
68.6802 60.208 li
69.7002 62.5591 li
70.0889 63.3311 li
72.9551 69.6841 li
73.5708 71.2793 li
.680049 .0388495 1 .000244144 cmyk
f
70.0889 63.3311 mo
69.7002 62.5591 li
68.6802 60.208 li
69.7002 62.4683 li
70.0889 63.3311 li
.699458 .130892 1 .0137942 cmyk
f
64.0239 50.3223 mo
62.6689 47.8403 li
62.689 47.8359 li
63.1621 48.564 li
63.1899 48.6221 li
64.0239 50.3223 li
.680049 .0388495 1 .000244144 cmyk
f
63.1621 48.564 mo
62.689 47.8359 li
62.793 47.8149 li
63.1621 48.564 li
.699458 .130892 1 .0137942 cmyk
f
68.6802 60.208 mo
66.4448 55.2568 li
64.127 50.5332 li
64.124 50.5249 li
64.0679 50.4019 li
64.0239 50.3223 li
63.1899 48.6221 li
63.1621 48.564 li
63.1899 48.6079 li
66.4448 55.0562 li
68.6802 60.208 li
75.6299 75.897 mo
73.5708 71.2793 li
72.9551 69.6841 li
70.0889 63.3311 li
72.9551 69.0103 li
74.605 72.8921 li
75.6299 75.897 li
.726162 .118135 1 .010132 cmyk
f
74.605 72.8921 mo
72.9551 69.0103 li
70.0889 63.3311 li
69.7002 62.4683 li
68.6802 60.208 li
66.4448 55.0562 li
63.1899 48.6079 li
63.1621 48.564 li
62.793 47.8149 li
63.105 47.752 li
66.002 53.2231 li
69.252 59.6353 li
72.501 66.4111 li
72.687 66.832 li
72.9551 68.0532 li
74.605 72.8921 li
.734066 .164218 1 .0271611 cmyk
f
72.687 66.832 mo
72.501 66.4111 li
69.252 59.6353 li
66.002 53.2231 li
63.105 47.752 li
63.1899 47.7349 li
63.7158 47.7622 li
66.002 51.7549 li
69.2471 58.5239 li
72.3721 65.394 li
72.687 66.832 li
.729152 .18381 1 .0398566 cmyk
f
72.3721 65.394 mo
69.2471 58.5239 li
66.002 51.7549 li
66.0029 51.7573 li
69.25 58.439 li
69.2549 58.4492 li
72.0342 63.854 li
72.3721 65.394 li
.785367 .210788 1 .0618296 cmyk
f
69.958 54.3809 mo
69.7002 53.897 li
68.9121 52.4849 li
69.1958 52.7441 li
69.7002 53.667 li
69.8599 53.936 li
69.958 54.3809 li
.699886 .11078 1 .00787366 cmyk
f
70.082 54.9463 mo
69.7002 54.1143 li
68.8252 52.4063 li
68.9121 52.4849 li
69.7002 53.897 li
69.958 54.3809 li
70.082 54.9463 li
.699458 .130892 1 .0137942 cmyk
f
71.1611 59.8721 mo
70.1499 57.8188 li
66.896 51.0322 li
66.875 50.9941 li
65.4858 48.645 li
65.0562 47.832 li
65.5952 47.8599 li
66.4448 50.231 li
68.8252 52.4063 li
69.7002 54.1143 li
70.082 54.9463 li
71.1611 59.8721 li
.734066 .164218 1 .0271611 cmyk
f
71.1992 60.042 mo
70.147 57.9971 li
66.9028 51.3232 li
66.896 51.3081 li
66.8872 51.29 li
65.4858 48.645 li
66.875 50.9941 li
66.896 51.0322 li
70.1499 57.8188 li
71.1611 59.8721 li
71.1992 60.042 li
.737087 .231357 1 .0771191 cmyk
f
66.9028 51.3232 mo
66.895 51.3052 li
66.8789 51.2749 li
64.9038 47.8242 li
65.0562 47.832 li
65.4858 48.645 li
66.8872 51.29 li
66.896 51.3081 li
66.9028 51.3232 li
.785367 .210788 1 .0618296 cmyk
f
72.0342 63.854 mo
69.2549 58.4492 li
69.25 58.439 li
66.0029 51.7573 li
66.002 51.7549 li
63.7158 47.7622 li
64.9038 47.8242 li
66.8789 51.2749 li
66.895 51.3052 li
66.9028 51.3232 li
70.147 57.9971 li
71.1992 60.042 li
72.0342 63.854 li
.876066 .338537 1 .281865 cmyk
f
94.167 163.012 mo
92.4849 161.374 li
89.23 157.602 li
88.6431 157.006 li
85.9751 146.024 li
82.7202 132.181 li
79.4648 116.732 li
76.21 102.959 li
72.9551 94.3291 li
69.7002 83.3779 li
66.4448 68.3921 li
63.1899 60.396 li
59.9351 50.4351 li
58.6392 47.813 li
59.9351 48.3931 li
60.6172 48.2549 li
62.2798 51.3013 li
65.5059 59.7583 li
68.7422 68.8779 li
71.9858 81.6772 li
72.0142 81.769 li
75.252 90.8062 li
78.4961 103.603 li
78.4961 103.605 li
81.7461 116.338 li
84.9971 131.457 li
85.0059 131.496 li
88.2612 144.156 li
88.2813 144.222 li
91.5298 154.021 li
94.167 163.012 li
.366217 0 .587488 0 cmyk
f
95.1792 166.936 mo
92.4849 163.97 li
89.627 160.641 li
89.23 159.421 li
88.6431 157.006 li
89.23 157.602 li
92.4849 161.374 li
94.167 163.012 li
94.771 165.072 li
95.1792 166.936 li
.48304 0 .753933 0 cmyk
f
52.522 30.3472 mo
51.8379 30.1152 li
50.1699 28.7109 li
48.5181 28.3052 li
48.207 27.311 li
48.4561 27.3389 li
50.1699 28.0923 li
52.522 30.3472 li
.366217 0 .587488 0 cmyk
f
55.4609 33.1353 mo
55.1738 32.8979 li
54.312 31.2451 li
54.1919 31.0151 53.9912 30.8433 53.7451 30.7603 cv
52.522 30.3472 li
50.1699 28.0923 li
48.4561 27.3389 li
50.0542 27.519 li
51.915 28.2012 li
53.4248 29.5322 li
54.8159 31.917 li
55.4609 33.1353 li
.411353 0 .770871 0 cmyk
f
51.915 28.2012 mo
50.0542 27.519 li
48.4561 27.3389 li
48.207 27.311 li
48.1602 27.1621 li
48.1938 27.1621 li
50.1699 27.2583 li
51.1372 27.5151 li
51.915 28.2012 li
55.5879 33.2402 mo
55.4609 33.1353 li
54.8159 31.917 li
55.5879 33.2402 li
.457282 .040528 1 0 cmyk
f
54.8159 31.917 mo
53.4248 29.5322 li
51.915 28.2012 li
53.0732 28.625 li
54.8159 31.917 li
.506065 0 .77322 0 cmyk
f
57.0342 33.9692 mo
55.584 31.229 li
56.2432 32.1401 li
57.0342 33.9692 li
f
57.4932 35.0303 mo
56.6802 34.1431 li
55.5879 33.2402 li
54.8159 31.917 li
53.0732 28.625 li
51.915 28.2012 li
51.1372 27.5151 li
53.313 28.0933 li
55.584 31.229 li
57.0342 33.9692 li
57.4932 35.0303 li
.537987 .0672312 1 0 cmyk
f
48.1938 27.1621 mo
48.1602 27.1621 li
48.1602 27.1602 li
48.1938 27.1621 li
58.479 36.0342 mo
58.3569 35.9722 li
57.4932 35.0303 li
57.0342 33.9692 li
56.2432 32.1401 li
55.584 31.229 li
53.313 28.0933 li
53.4248 28.123 li
56.6802 31.9619 li
58.479 36.0342 li
.63653 .127749 .742 .00653086 cmyk
f
55.7031 33.5923 mo
55.4302 33.3892 li
55.1738 32.8979 li
55.4609 33.1353 li
55.7031 33.5923 li
.680049 .0388495 1 .000244144 cmyk
f
56.4038 34.9302 mo
56.144 34.7573 li
55.4302 33.3892 li
55.7031 33.5923 li
56.2358 34.5981 li
56.4038 34.9302 li
.699458 .130892 1 .0137942 cmyk
f
56.6812 35.1128 mo
56.6802 35.1128 li
56.4038 34.9302 li
56.2358 34.5981 li
55.7031 33.5923 li
55.4609 33.1353 li
55.5879 33.2402 li
56.6802 35.1108 li
56.6812 35.1128 li
.694148 .163272 1 .0268559 cmyk
f
51.8379 30.1152 mo
50.5361 29.6753 li
50.3569 29.5942 li
50.1699 29.4541 li
48.5928 28.5449 li
48.5181 28.3052 li
50.1699 28.7109 li
51.8379 30.1152 li
.639124 0 .856565 0 cmyk
f
50.3569 29.5942 mo
48.686 28.8398 li
48.5928 28.5449 li
50.1699 29.4541 li
50.3569 29.5942 li
.699886 .11078 1 .00787366 cmyk
f
57.771 35.6719 mo
56.6812 35.1128 li
56.6802 35.1108 li
55.5879 33.2402 li
56.6802 34.1431 li
57.4932 35.0303 li
57.771 35.6719 li
.729152 .18381 1 .0398566 cmyk
f
58.3569 35.9722 mo
57.771 35.6719 li
57.4932 35.0303 li
58.3569 35.9722 li
.785367 .210788 1 .0618296 cmyk
f
24.1299 25.6621 mo
27.3848 25.6621 li
30.6401 25.6621 li
30.668 25.6621 li
33.9102 25.7539 li
37.1499 25.7539 li
37.3438 25.7729 li
40.5298 26.4009 li
43.7158 26.5811 li
43.8491 26.5879 43.9722 26.6201 44.0918 26.6772 cv
47.3359 28.2319 li
50.5361 29.6753 li
53.7451 30.7603 li
53.9912 30.8433 54.1919 31.0151 54.312 31.2451 cv
57.5669 37.4829 li
57.5859 37.5229 li
60.8281 44.4673 li
64.0679 50.4019 li
64.124 50.5249 li
67.3789 59.0571 li
67.3872 59.0791 li
70.6421 68.2529 li
70.6689 68.3423 li
73.9131 81.1392 li
77.1509 90.1763 li
77.1792 90.2681 li
80.4341 103.112 li
80.4341 103.11 li
83.689 115.862 li
83.6982 115.899 li
86.9482 131.017 li
90.1899 143.625 li
93.4341 153.408 li
93.4448 153.442 li
96.7002 164.543 li
96.7168 164.61 li
99.9658 179.445 li
103.204 191.128 li
106.445 200.263 li
109.68 208.924 li
112.892 215.531 li
116.084 220.659 li
119.259 224.508 li
122.431 227.547 li
125.611 229.967 li
128.834 232.057 li
128.85 232.067 li
132.044 234.228 li
135.2 235.74 li
138.41 237.007 li
141.654 238.195 li
141.699 238.213 li
144.954 239.589 li
145.017 239.618 li
148.185 241.226 li
151.346 242.117 li
151.371 242.125 li
154.626 243.133 li
157.843 244.13 li
161.06 244.856 li
161.229 244.91 li
164.402 246.252 li
167.57 246.966 li
167.646 246.986 li
170.85 247.98 li
174.054 248.612 li
174.106 248.623 li
177.309 249.436 li
180.51 249.887 li
180.59 249.901 li
183.845 250.635 li
183.921 250.656 li
187.126 251.649 li
190.315 252.279 li
193.557 252.827 li
193.661 252.85 li
196.865 253.753 li
200.053 254.292 li
203.295 254.75 li
203.451 254.784 li
206.616 255.765 li
209.75 256.119 li
212.976 256.3 li
213.06 256.309 li
216.315 256.767 li
219.556 257.224 li
222.769 257.586 li
225.982 257.768 li
229.223 257.859 li
229.251 257.86 li
232.506 258.044 li
235.747 258.226 li
238.988 258.318 li
242.229 258.409 li
245.47 258.409 li
245.498 258.409 li
248.739 258.501 li
251.98 258.501 li
255.235 258.501 li
258.49 258.501 li
261.745 258.501 li
265 258.501 li
268.255 258.501 li
271.51 258.501 li
274.765 258.501 li
278.02 258.501 li
281.275 258.501 li
284.53 258.501 li
287.785 258.501 li
291.04 258.501 li
294.295 258.501 li
297.55 258.501 li
300.805 258.501 li
304.06 258.501 li
307.315 258.501 li
310.57 258.501 li
313.825 258.501 li
317.08 258.501 li
320.335 258.501 li
323.59 258.501 li
326.845 258.501 li
330.1 258.501 li
333.355 258.501 li
336.61 258.501 li
339.865 258.501 li
343.12 258.501 li
346.375 258.501 li
346.375 260.501 li
343.12 260.501 li
339.865 260.501 li
336.61 260.501 li
333.355 260.501 li
330.1 260.501 li
326.845 260.501 li
323.59 260.501 li
320.335 260.501 li
317.08 260.501 li
313.825 260.501 li
310.57 260.501 li
307.315 260.501 li
304.06 260.501 li
300.805 260.501 li
297.55 260.501 li
294.295 260.501 li
291.04 260.501 li
287.785 260.501 li
284.53 260.501 li
281.275 260.501 li
278.02 260.501 li
274.765 260.501 li
271.51 260.501 li
268.255 260.501 li
265 260.501 li
261.745 260.501 li
258.49 260.501 li
255.235 260.501 li
251.98 260.501 li
248.725 260.501 li
248.697 260.5 li
245.456 260.409 li
242.215 260.409 li
242.188 260.409 li
238.932 260.317 li
235.677 260.225 li
235.649 260.224 li
232.394 260.041 li
229.153 259.858 li
225.912 259.766 li
225.884 259.765 li
222.629 259.582 li
222.573 259.577 li
219.318 259.21 li
219.29 259.207 li
216.035 258.748 li
212.822 258.295 li
209.609 258.114 li
209.553 258.109 li
206.298 257.742 li
206.114 257.704 li
202.936 256.718 li
199.76 256.271 li
199.733 256.267 li
196.478 255.716 li
196.374 255.693 li
193.17 254.791 li
189.968 254.248 li
189.941 254.243 li
186.686 253.601 li
186.584 253.575 li
183.366 252.578 li
180.19 251.861 li
176.975 251.408 li
176.869 251.388 li
173.639 250.568 li
170.411 249.932 li
170.309 249.906 li
167.092 248.908 li
163.875 248.183 li
163.706 248.128 li
160.533 246.787 li
157.365 246.073 li
157.289 246.052 li
154.034 245.043 li
150.792 244.038 li
147.549 243.125 li
147.368 243.053 li
144.144 241.418 li
140.943 240.065 li
137.711 238.881 li
137.688 238.873 li
134.433 237.587 li
134.368 237.559 li
131.113 236 li
130.985 235.926 li
127.736 233.729 li
124.491 231.625 li
124.429 231.582 li
121.174 229.105 li
121.088 229.031 li
117.833 225.911 li
117.754 225.826 li
114.499 221.881 li
114.421 221.773 li
111.166 216.544 li
111.116 216.453 li
107.861 209.755 li
107.823 209.668 li
104.568 200.953 li
104.563 200.937 li
101.308 191.763 li
101.286 191.696 li
98.0313 179.953 li
98.0181 179.9 li
94.771 165.072 li
91.5298 154.021 li
88.2813 144.222 li
88.2612 144.156 li
85.0059 131.496 li
84.9971 131.457 li
81.7461 116.338 li
78.4961 103.605 li
78.4961 103.603 li
75.252 90.8062 li
72.0142 81.769 li
71.9858 81.6772 li
68.7422 68.8779 li
65.5059 59.7583 li
62.2798 51.3013 li
59.0571 45.3979 li
59.0288 45.3413 li
55.7832 38.3892 li
52.7241 32.5259 li
49.8501 31.5542 li
49.7588 31.5181 li
46.5039 30.0503 li
46.4829 30.041 li
43.4063 28.5669 li
40.3491 28.394 li
40.2109 28.377 li
37.0522 27.7539 li
33.895 27.7539 li
33.8672 27.7529 li
30.626 27.6621 li
27.3848 27.6621 li
24.1299 27.6621 li
24.1299 25.6621 li
.626581 0 1 0 cmyk
f
55.4639 134.082 mo
53.4248 131.807 li
53.2998 131.524 li
52.9429 130.659 li
53.4248 130.354 li
55.4639 134.082 li
69.1611 145.106 mo
66.4448 144.548 li
63.1899 142.951 li
60.6772 139.836 li
63.1899 141.705 li
66.4448 141.182 li
67.5459 142.333 li
69.1611 145.106 li
0 .503777 .274907 0 cmyk
f
66.4448 148.117 mo
63.1899 144.59 li
59.9351 139.976 li
56.6802 136.429 li
53.4248 131.827 li
53.2998 131.524 li
53.4248 131.807 li
55.4639 134.082 li
56.6802 136.307 li
59.9351 139.284 li
60.6772 139.836 li
63.1899 142.951 li
66.4448 144.548 li
69.1611 145.106 li
69.7002 146.031 li
70.1948 146.691 li
69.7002 146.643 li
66.4448 148.117 li
.130831 .61532 .35227 .000122072 cmyk
f
32.5928 63.4082 mo
32.0659 58.332 li
32.4839 61.9199 li
32.5928 63.4082 li
.363348 .770443 .415045 .101686 cmyk
f
50.1919 134.983 mo
47.3008 131.479 li
47.1611 131.362 li
46.2378 130.842 li
44.5962 126.49 li
44.5591 126.394 44.5151 126.314 44.4521 126.232 cv
42.25 123.378 li
40.8911 118.741 li
40.6792 117.722 li
43.1919 124.449 li
43.2988 124.62 li
46.5142 127.973 li
49.709 133.376 li
50.1919 134.983 li
50.6602 140.804 mo
47.833 135.068 li
46.8789 132.539 li
49.7529 136.022 li
51.458 139.195 li
51.8062 140.351 li
50.6602 140.804 li
.202945 .59939 .550439 .0231937 cmyk
f
33.2979 70.2031 mo
32.5928 63.4082 li
32.4839 61.9199 li
32.9028 65.5103 li
33.2979 70.2031 li
35.7861 90.5093 mo
34.8862 85.5112 li
33.5361 72.4961 li
35.7861 90.5093 li
42.25 123.378 mo
41.3481 122.209 li
40.4868 117.207 li
40.6792 117.722 li
40.8911 118.741 li
42.25 123.378 li
51.458 139.195 mo
49.7529 136.022 li
46.8789 132.539 li
46.2378 130.842 li
47.1611 131.362 li
47.3008 131.479 li
50.1919 134.983 li
51.458 139.195 li
.309178 .678553 .584375 .130526 cmyk
f
44.0952 118.775 mo
43.6602 118.631 li
42.981 115.965 li
43.6602 117.509 li
44.0952 118.775 li
53.2998 131.524 mo
52.9229 130.671 li
52.9429 130.659 li
53.2998 131.524 li
.10956 .546899 .507347 3.0518e-05 cmyk
f
46.8989 126.929 mo
44.0918 124.003 li
40.8892 115.426 li
37.644 97.3188 li
36.106 85.002 li
37.1499 90.1909 li
40.4048 110.11 li
42.981 115.965 li
43.6602 118.631 li
44.0952 118.775 li
46.8989 126.929 li
73.7739 151.403 mo
73.4819 151.222 li
73.3809 151.159 73.2651 151.114 73.1489 151.091 cv
70.0508 150.48 li
66.936 148.724 li
66.7158 148.632 li
63.5332 147.735 li
60.4888 146.362 li
57.3818 143.56 li
54.1563 140.105 li
53.9629 139.899 53.6968 139.788 53.4248 139.788 cv
53.3008 139.788 53.1772 139.811 53.0581 139.858 cv
52.9692 139.893 li
52.3872 138.81 li
50.6489 133.029 li
50.6001 132.919 li
50.2671 132.355 li
52.9229 130.671 li
53.2998 131.524 li
53.4248 131.827 li
56.6802 136.429 li
59.9351 139.976 li
63.1899 144.59 li
66.4448 148.117 li
69.7002 146.643 li
70.1948 146.691 li
72.9551 150.373 li
73.7739 151.403 li
.202945 .59939 .550439 .0231937 cmyk
f
52.7402 139.983 mo
52.3872 138.81 li
52.9692 139.893 li
52.7402 139.983 li
.309178 .678553 .584375 .130526 cmyk
f
51.8062 140.351 mo
51.458 139.195 li
50.1919 134.983 li
49.709 133.376 li
46.5142 127.973 li
43.2988 124.62 li
43.1919 124.449 li
40.6792 117.722 li
40.4868 117.207 li
38.1348 103.555 li
38.1338 103.547 li
35.7861 90.5093 li
33.5361 72.4961 li
33.2979 70.2031 li
32.9028 65.5103 li
33.895 74.0171 li
36.106 85.002 li
37.644 97.3188 li
40.8892 115.426 li
44.0918 124.003 li
46.8989 126.929 li
46.915 126.976 li
50.1699 132.416 li
50.2671 132.355 li
50.6001 132.919 li
50.6489 133.029 li
52.3872 138.81 li
52.7402 139.983 li
51.8062 140.351 li
.283909 .555047 .82388 .112001 cmyk
f
27.3032 28.0352 mo
26.8608 27.6621 li
27.1821 27.6621 li
27.3032 28.0352 li
31.1431 50.418 mo
30.3359 44.2539 li
30.6401 46.1011 li
31.1431 50.418 li
0 .503777 .274907 0 cmyk
f
27.729 28.396 mo
27.3032 28.0352 li
27.1821 27.6621 li
27.3608 27.6621 li
27.7158 28.311 li
27.729 28.396 li
.363348 .770443 .415045 .101686 cmyk
f
27.7158 28.311 mo
27.3608 27.6621 li
27.3848 27.6621 li
27.6089 27.6621 li
27.7158 28.311 li
.283909 .555047 .82388 .112001 cmyk
f
222.422 257.466 mo
222.379 257.462 li
219.43 257.03 li
218.702 256.968 li
217.4 256.355 li
219.43 256.921 li
221.778 257.266 li
222.422 257.466 li
.216861 .93167 .841855 .123964 cmyk
f
223.644 257.569 mo
222.769 257.495 li
222.422 257.466 li
221.778 257.266 li
222.685 257.399 li
223.179 257.464 li
223.644 257.569 li
.208774 .972442 .960388 .118959 cmyk
f
223.8 257.582 mo
223.644 257.569 li
223.179 257.464 li
223.558 257.514 li
223.8 257.582 li
.201938 .937468 .998688 .104646 cmyk
f
224.577 257.648 mo
223.8 257.582 li
223.558 257.514 li
224.577 257.648 li
.335698 .984771 .964111 .524834 cmyk
f
204.746 252.897 mo
203.155 252.39 li
199.9 251.233 li
199.574 251.098 li
199.9 251.16 li
202.363 251.711 li
203.155 252.184 li
204.746 252.897 li
211.336 255.123 mo
209.945 255.054 li
209.936 255.052 li
209.885 255.039 li
209.475 254.946 li
207.655 254.045 li
209.665 254.694 li
211.336 255.123 li
.175418 .89984 .916991 .0678111 cmyk
f
214.162 255.421 mo
212.92 255.201 li
211.336 255.123 li
209.665 254.694 li
207.655 254.045 li
206.41 253.428 li
204.746 252.897 li
203.155 252.184 li
202.363 251.711 li
203.155 251.889 li
206.41 253.197 li
209.665 254.157 li
212.92 255.056 li
214.162 255.421 li
.204318 .924987 .834989 .103456 cmyk
f
186.476 250.535 mo
186.063 250.455 li
183.625 249 li
182.98 248.777 li
183.625 248.987 li
184.923 249.641 li
186.476 250.535 li
.130831 .61532 .35227 .000122072 cmyk
f
186.84 250.606 mo
186.476 250.535 li
184.923 249.641 li
186.84 250.606 li
.202945 .59939 .550439 .0231937 cmyk
f
179.524 247.664 mo
177.115 247.053 li
173.86 244.988 li
170.605 244.02 li
168.084 241.815 li
170.605 243.076 li
173.86 244.181 li
174.908 244.861 li
177.115 246.486 li
179.524 247.664 li
.130831 .61532 .35227 .000122072 cmyk
f
180.167 247.827 mo
179.524 247.664 li
177.115 246.486 li
174.908 244.861 li
177.115 246.293 li
180.167 247.827 li
.202945 .59939 .550439 .0231937 cmyk
f
164.789 239.916 mo
164.095 239.574 li
160.84 238.177 li
157.585 236.717 li
154.33 234.139 li
151.075 231.774 li
147.982 229.211 li
151.075 231.133 li
154.33 233.463 li
157.585 235.641 li
160.84 237.976 li
164.095 239.5 li
164.789 239.916 li
.130831 .61532 .35227 .000122072 cmyk
f
170.93 238.857 mo
170.605 238.749 li
170.344 238.583 li
170.605 238.654 li
170.93 238.857 li
.202945 .59939 .550439 .0231937 cmyk
f
147.336 228.765 mo
144.565 226.974 li
141.31 224.419 li
138.736 222.172 li
141.31 223.852 li
144.565 226.782 li
147.336 228.765 li
157.77 230.918 mo
157.585 230.78 li
157.16 230.466 li
157.585 230.747 li
157.77 230.918 li
.130831 .61532 .35227 .000122072 cmyk
f
113.194 189.159 mo
113.178 189.141 li
113.139 189.087 li
113.194 189.159 li
126.108 203.526 mo
125.035 202.478 li
122.357 199.833 li
121.78 199.08 li
121.344 198.702 li
121.008 198.268 li
121.78 198.916 li
125.035 202.25 li
126.108 203.526 li
135.844 213.146 mo
134.8 212.276 li
132.64 210.384 li
134.8 212.042 li
135.844 213.146 li
145.618 221.635 mo
144.565 220.926 li
143.695 220.017 li
144.565 220.705 li
145.618 221.635 li
.10956 .546899 .507347 3.0518e-05 cmyk
f
121.344 198.702 mo
118.525 196.258 li
115.27 192.095 li
113.178 189.141 li
113.194 189.159 li
115.27 191.909 li
118.525 196.191 li
121.008 198.268 li
121.344 198.702 li
153.345 227.804 mo
151.075 226.504 li
147.959 224.58 li
147.606 224.321 li
144.565 221.864 li
141.31 218.739 li
138.055 215.892 li
135.571 214.055 li
135.151 213.641 li
135.146 213.636 li
133.89 212.433 li
131.545 209.72 li
130.005 208.496 li
128.655 207.051 li
128.641 207.036 li
125.856 204.289 li
125.035 203.329 li
122.357 199.833 li
125.035 202.478 li
126.108 203.526 li
128.29 206.123 li
131.545 209.543 li
132.64 210.384 li
134.8 212.276 li
135.844 213.146 li
138.055 215.483 li
141.31 218.13 li
143.695 220.017 li
144.565 220.926 li
145.618 221.635 li
147.82 223.579 li
151.075 226 li
153.345 227.804 li
.202945 .59939 .550439 .0231937 cmyk
f
130.005 208.496 mo
128.29 207.133 li
125.856 204.289 li
128.641 207.036 li
128.655 207.051 li
130.005 208.496 li
135.571 214.055 mo
134.8 213.485 li
133.89 212.433 li
135.146 213.636 li
135.151 213.641 li
135.571 214.055 li
147.959 224.58 mo
147.82 224.494 li
147.606 224.321 li
147.959 224.58 li
.283909 .555047 .82388 .112001 cmyk
f
126.728 211.28 mo
125.035 209.658 li
122.274 206.435 li
125.035 209.532 li
126.728 211.28 li
.130831 .61532 .35227 .000122072 cmyk
f
110.773 194.898 mo
108.76 192.746 li
105.803 189.16 li
105.644 188.635 li
108.76 192.26 li
110.773 194.898 li
0 .503777 .274907 0 cmyk
f
117.947 201.854 mo
115.27 199.464 li
112.015 196.227 li
110.773 194.898 li
108.76 192.26 li
105.644 188.635 li
105.505 188.173 li
105.051 186.642 li
105.505 187.232 li
108.76 191.334 li
112.015 194.536 li
115.27 198.931 li
117.947 201.854 li
.130831 .61532 .35227 .000122072 cmyk
f
111.815 187.292 mo
109.052 184.401 li
108.76 184.061 li
106.367 181.182 li
105.505 180.132 li
105.398 180.019 li
102.25 176.311 li
101.918 175.937 li
101.533 174.477 li
102.25 175.394 li
105.505 179.61 li
108.76 182.598 li
111.815 187.292 li
.10956 .546899 .507347 3.0518e-05 cmyk
f
105.398 180.019 mo
102.25 176.675 li
102.024 176.337 li
101.918 175.937 li
102.25 176.311 li
105.398 180.019 li
109.052 184.401 mo
108.76 184.095 li
106.367 181.182 li
108.76 184.061 li
109.052 184.401 li
.202945 .59939 .550439 .0231937 cmyk
f
36.3218 111.668 mo
33.895 96.9121 li
32.3208 80.167 li
32.8999 85.7549 li
32.9111 85.8291 li
34.3208 93.6572 li
36.3218 111.668 li
41.7041 135.101 mo
40.4048 134.595 li
38.5269 124.269 li
40.4048 131.299 li
41.7041 135.101 li
50.1699 151.352 mo
46.915 143.68 li
46.708 143.183 li
46.915 143.343 li
50.1699 146.56 li
51.853 149.055 li
52.3179 150.98 li
50.1699 151.352 li
0 .503777 .274907 0 cmyk
f
51.853 149.055 mo
50.1699 146.56 li
46.915 143.343 li
46.708 143.183 li
43.6602 135.864 li
41.7041 135.101 li
40.4048 131.299 li
38.5269 124.269 li
37.1499 116.699 li
36.3218 111.668 li
34.3208 93.6572 li
36.166 103.902 li
36.165 103.894 li
39.4199 122.793 li
39.4448 122.943 39.5039 123.083 39.5928 123.206 cv
40.4048 128.139 li
43.6602 133.73 li
46.915 138.906 li
48.0322 139.995 li
49.2729 142.514 li
49.4458 142.866 49.7979 143.073 50.1689 143.073 cv
50.2461 143.073 50.3252 143.064 50.4028 143.045 cv
51.853 149.055 li
93.7871 173.835 mo
92.4849 172.552 li
89.23 168.642 li
85.9751 165.035 li
82.7202 162.865 li
79.4648 161.736 li
78.8789 161.349 li
79.4648 161.298 li
82.7202 162.029 li
84.8999 163.018 li
85.9751 164.336 li
89.23 168.207 li
92.4849 171.041 li
93.21 171.885 li
93.7871 173.835 li
.130831 .61532 .35227 .000122072 cmyk
f
52.3179 150.98 mo
51.853 149.055 li
53.0649 150.851 li
52.3179 150.98 li
.10956 .546899 .507347 3.0518e-05 cmyk
f
48.0322 139.995 mo
46.915 138.906 li
43.6602 133.73 li
40.4048 128.139 li
39.5928 123.206 li
39.5991 123.216 39.606 123.225 39.6128 123.234 cv
42.1182 126.482 li
43.1802 130.103 li
43.2168 130.227 43.3008 130.334 43.4141 130.398 cv
44.0732 130.769 li
45.979 135.82 li
46.0181 135.909 li
48.0322 139.995 li
82.6821 160.306 mo
79.6812 158.869 li
79.6602 158.859 li
76.4048 157.483 li
76.3579 157.466 li
73.1958 156.485 li
71.3271 154.958 li
72.8789 155.045 li
76.0869 155.859 li
76.1001 155.862 li
76.9341 156.05 li
78.8071 157.687 li
78.8838 157.755 78.96 157.804 79.0542 157.846 cv
81.2012 158.814 li
82.6821 160.306 li
84.8999 163.018 mo
82.7202 162.029 li
79.4648 161.298 li
78.8789 161.349 li
76.21 159.588 li
72.9551 158.42 li
69.7002 158.065 li
66.4448 157.703 li
63.1899 155.441 li
59.9351 154.869 li
56.6802 151.978 li
53.4248 150.789 li
53.0649 150.851 li
51.853 149.055 li
50.4028 143.045 li
50.4482 143.034 50.4932 143.02 50.5371 143.002 cv
52.3838 142.273 li
52.9458 144.143 li
53.0361 144.312 li
56.291 148.349 li
56.3638 148.422 li
59.6128 151.078 li
62.8608 153.917 li
62.9438 153.975 li
66.1992 155.81 li
66.2749 155.853 66.3599 155.875 66.4448 155.875 cv
66.4951 155.875 66.5449 155.867 66.5928 155.852 cv
69.6729 154.897 li
72.6392 157.321 li
72.8071 157.412 li
76.0381 158.413 li
79.2588 159.775 li
82.5 161.328 li
84.2432 162.212 li
84.8999 163.018 li
.202945 .59939 .550439 .0231937 cmyk
f
44.0732 130.769 mo
43.4141 130.398 li
43.3008 130.334 43.2168 130.227 43.1802 130.103 cv
42.1182 126.482 li
42.7769 127.336 li
44.0732 130.769 li
84.2432 162.212 mo
82.5 161.328 li
79.2588 159.775 li
76.0381 158.413 li
72.8071 157.412 li
72.6392 157.321 li
69.6729 154.897 li
69.7622 154.87 li
71.3271 154.958 li
73.1958 156.485 li
76.3579 157.466 li
76.4048 157.483 li
79.6602 158.859 li
79.6812 158.869 li
82.6821 160.306 li
82.7202 160.345 li
84.2432 162.212 li
.309178 .678553 .584375 .130526 cmyk
f
75.0962 154.576 mo
73.0781 154.064 li
72.9829 154.05 li
70.0088 153.882 li
69.895 153.813 li
66.6401 152.437 li
66.605 152.424 li
63.4399 151.354 li
60.2881 148.688 li
59.9722 148.323 li
62.7788 149.589 li
62.9189 149.64 li
66.0591 150.525 li
69.209 152.301 li
69.2979 152.351 69.4063 152.391 69.5059 152.411 cv
72.583 153.018 li
75.0962 154.576 li
66.5029 154.833 mo
63.48 153.129 li
60.2642 150.319 li
60.251 150.309 li
57.0371 147.681 li
53.876 143.761 li
53.5439 142.657 li
56.3081 145.617 li
59.5571 149.372 li
59.6118 149.426 li
62.8672 152.178 li
63.0298 152.27 li
66.2671 153.365 li
68.3701 154.254 li
66.5029 154.833 li
.202945 .59939 .550439 .0231937 cmyk
f
68.3701 154.254 mo
66.2671 153.365 li
63.0298 152.27 li
62.8672 152.178 li
59.6118 149.426 li
59.5571 149.372 li
56.3081 145.617 li
53.5439 142.657 li
53.4209 142.25 li
55.9492 144.957 li
56.0098 145.016 li
59.2651 147.952 li
59.3408 148.021 59.4302 148.079 59.5239 148.121 cv
59.9722 148.323 li
60.2881 148.688 li
63.4399 151.354 li
66.605 152.424 li
66.6401 152.437 li
69.895 153.813 li
70.0088 153.882 li
69.728 153.866 li
69.5518 153.888 li
68.3701 154.254 li
.309178 .678553 .584375 .130526 cmyk
f
76.9341 156.05 mo
76.1001 155.862 li
76.0869 155.859 li
72.8789 155.045 li
71.3271 154.958 li
69.7622 154.87 li
69.6729 154.897 li
66.5928 155.852 li
66.5449 155.867 66.4951 155.875 66.4448 155.875 cv
66.3599 155.875 66.2749 155.853 66.1992 155.81 cv
62.9438 153.975 li
62.8608 153.917 li
59.6128 151.078 li
56.3638 148.422 li
56.291 148.349 li
53.0361 144.312 li
52.9458 144.143 li
52.3838 142.273 li
53.1592 141.968 li
53.4209 142.25 li
53.5439 142.657 li
53.876 143.761 li
57.0371 147.681 li
60.251 150.309 li
60.2642 150.319 li
63.48 153.129 li
66.5029 154.833 li
68.3701 154.254 li
69.5518 153.888 li
69.728 153.866 li
70.0088 153.882 li
72.9829 154.05 li
73.0781 154.064 li
75.0962 154.576 li
75.6138 154.897 li
76.9341 156.05 li
.283909 .555047 .82388 .112001 cmyk
f
89.167 160.097 mo
86.3281 157.237 li
85.9751 156.802 li
82.7231 153.842 li
85.9751 155.885 li
89.167 160.097 li
89.6548 160.73 mo
89.3408 160.309 li
89.627 160.641 li
89.6548 160.73 li
.10956 .546899 .507347 3.0518e-05 cmyk
f
89.9829 161.74 mo
89.23 160.819 li
86.3281 157.237 li
89.167 160.097 li
89.23 160.18 li
89.3408 160.309 li
89.6548 160.73 li
89.9829 161.74 li
.202945 .59939 .550439 .0231937 cmyk
f
26.5962 31.0889 mo
25.5078 29.1372 li
26.4438 29.9282 li
26.5962 31.0889 li
0 .503777 .274907 0 cmyk
f
222.379 257.462 mo
219.583 257.226 li
218.942 257.082 li
218.702 256.968 li
219.43 257.03 li
222.379 257.462 li
.327214 .63415 1 .227481 cmyk
f
190.675 252.34 mo
190.315 252.279 li
189.117 252.042 li
186.88 250.942 li
186.063 250.455 li
186.476 250.535 li
186.88 250.768 li
190.135 252.109 li
190.154 252.114 li
190.675 252.34 li
.319158 .425727 .780148 .0734874 cmyk
f
190.154 252.114 mo
190.135 252.109 li
186.88 250.768 li
186.476 250.535 li
186.84 250.606 li
186.88 250.626 li
190.135 252.106 li
190.154 252.114 li
.361669 .406928 .889799 .096437 cmyk
f
105.803 189.16 mo
105.505 188.799 li
102.25 185.117 li
101.013 183.224 li
100.937 182.948 li
102.25 184.427 li
105.505 188.473 li
105.644 188.635 li
105.803 189.16 li
.238834 .386328 .739528 .02121 cmyk
f
97.6841 178.373 mo
95.7402 175.761 li
93.7871 173.835 li
93.21 171.885 li
95.7402 174.839 li
97.3711 176.947 li
97.6841 178.373 li
105.644 188.635 mo
105.505 188.473 li
102.25 184.427 li
100.937 182.948 li
100.292 180.622 li
102.25 183.003 li
105.051 186.642 li
105.505 188.173 li
105.644 188.635 li
.319158 .425727 .780148 .0734874 cmyk
f
101.918 175.937 mo
101.258 175.193 li
98.9951 171.812 li
98.0942 170.899 li
97.895 169.989 li
98.9951 171.232 li
101.533 174.477 li
101.918 175.937 li
.316869 .390021 .85275 .0593881 cmyk
f
102.024 176.337 mo
101.258 175.193 li
101.918 175.937 li
102.024 176.337 li
.361669 .406928 .889799 .096437 cmyk
f
95.3301 167.627 mo
92.4849 164.522 li
89.6548 160.73 li
89.627 160.641 li
92.4849 163.97 li
95.1792 166.936 li
95.3301 167.627 li
.316869 .390021 .85275 .0593881 cmyk
f
95.4038 167.963 mo
92.8672 164.96 li
92.855 164.946 li
90.395 162.243 li
89.9829 161.74 li
89.6548 160.73 li
92.4849 164.522 li
95.3301 167.627 li
95.4038 167.963 li
.361669 .406928 .889799 .096437 cmyk
f
95.4531 168.185 mo
92.4849 164.795 li
90.395 162.243 li
92.855 164.946 li
92.8672 164.96 li
95.4038 167.963 li
95.4531 168.185 li
.432959 .384161 1 .124605 cmyk
f
98.0942 170.899 mo
95.7402 168.514 li
95.4531 168.185 li
95.4038 167.963 li
95.3301 167.627 li
95.1792 166.936 li
95.7402 167.554 li
97.895 169.989 li
98.0942 170.899 li
101.013 183.224 mo
98.9951 180.135 li
97.6841 178.373 li
97.3711 176.947 li
98.9951 179.044 li
100.292 180.622 li
100.937 182.948 li
101.013 183.224 li
192.239 253.016 mo
190.135 252.543 li
189.117 252.042 li
190.315 252.279 li
190.675 252.34 li
192.239 253.016 li
207.621 257.254 mo
206.41 257.054 li
203.155 256.459 li
199.9 255.121 li
196.645 254.477 li
195.481 254.047 li
196.645 254.344 li
199.9 255.063 li
203.155 256.248 li
206.41 256.885 li
207.621 257.254 li
.660639 .197177 1 .0394903 cmyk
f
24.7759 25.8979 mo
28.0313 28.6509 li
28.2202 28.8101 28.3438 29.0391 28.376 29.2842 cv
31.6309 54.146 li
31.6348 54.1729 li
34.8862 85.5112 li
38.1338 103.547 li
38.1348 103.555 li
41.3481 122.209 li
44.4521 126.232 li
44.5151 126.314 44.5591 126.394 44.5962 126.49 cv
47.833 135.068 li
50.6602 140.804 li
53.0581 139.858 li
53.4399 139.707 53.876 139.805 54.1563 140.105 cv
57.3818 143.56 li
60.4888 146.362 li
63.5332 147.735 li
66.7158 148.632 li
66.936 148.724 li
70.0508 150.48 li
73.1489 151.091 li
73.2651 151.114 73.3809 151.159 73.4819 151.222 cv
76.7368 153.24 li
76.8682 153.337 li
80.0112 156.084 li
83.1309 157.49 li
83.2642 157.563 li
86.519 159.673 li
86.7461 159.876 li
89.9961 163.814 li
93.229 167.641 li
96.4619 171.012 li
96.5181 171.077 li
99.7729 175.113 li
99.811 175.162 li
103.044 179.719 li
106.257 183.613 li
109.491 187.077 li
109.552 187.148 li
112.79 191.346 li
116.018 195.077 li
119.242 198.62 li
122.472 201.716 li
122.52 201.765 li
125.769 205.337 li
128.996 208.793 li
132.196 211.769 li
135.42 214.313 li
135.531 214.416 li
138.746 217.859 li
141.942 220.562 li
145.179 223.116 li
148.426 225.586 li
148.439 225.597 li
151.689 228.162 li
154.928 230.626 li
158.161 232.995 li
161.384 235.175 li
164.566 237.149 li
167.761 238.59 li
167.859 238.641 li
171.067 240.539 li
174.271 241.984 li
174.351 242.024 li
177.535 243.819 li
180.714 244.984 li
180.737 244.993 li
183.992 246.277 li
184.116 246.336 li
187.311 248.137 li
190.467 249.383 li
193.686 250.381 li
193.757 250.406 li
196.928 251.657 li
200.094 252.281 li
200.22 252.315 li
203.451 253.408 li
206.656 254.311 li
209.885 255.039 li
209.936 255.052 li
213.14 255.955 li
216.342 256.496 li
216.395 256.507 li
219.583 257.226 li
222.769 257.495 li
226.01 257.769 li
229.251 257.952 li
232.492 258.135 li
235.733 258.226 li
238.974 258.317 li
242.215 258.317 li
242.243 258.318 li
245.484 258.409 li
248.725 258.409 li
251.98 258.409 li
255.235 258.409 li
255.263 258.409 li
258.504 258.501 li
261.745 258.501 li
261.773 258.501 li
265.014 258.592 li
268.255 258.592 li
271.51 258.592 li
274.765 258.592 li
278.02 258.592 li
281.275 258.592 li
284.53 258.592 li
287.785 258.592 li
291.04 258.592 li
294.295 258.592 li
297.55 258.592 li
300.805 258.592 li
304.06 258.592 li
307.315 258.592 li
310.57 258.592 li
313.825 258.592 li
317.08 258.592 li
320.335 258.592 li
323.59 258.592 li
326.845 258.592 li
330.1 258.592 li
333.355 258.592 li
336.61 258.592 li
339.865 258.592 li
343.12 258.592 li
346.375 258.592 li
346.375 260.592 li
343.12 260.592 li
339.865 260.592 li
336.61 260.592 li
333.355 260.592 li
330.1 260.592 li
326.845 260.592 li
323.59 260.592 li
320.335 260.592 li
317.08 260.592 li
313.825 260.592 li
310.57 260.592 li
307.315 260.592 li
304.06 260.592 li
300.805 260.592 li
297.55 260.592 li
294.295 260.592 li
291.04 260.592 li
287.785 260.592 li
284.53 260.592 li
281.275 260.592 li
278.02 260.592 li
274.765 260.592 li
271.51 260.592 li
268.255 260.592 li
265 260.592 li
264.972 260.592 li
261.731 260.501 li
258.49 260.501 li
258.462 260.5 li
255.221 260.409 li
251.98 260.409 li
248.725 260.409 li
245.47 260.409 li
245.442 260.409 li
242.201 260.317 li
238.96 260.317 li
238.932 260.317 li
235.677 260.225 li
232.422 260.133 li
232.394 260.132 li
229.139 259.949 li
225.884 259.765 li
225.856 259.763 li
222.601 259.488 li
219.346 259.213 li
219.21 259.192 li
215.982 258.464 li
212.753 257.918 li
212.649 257.894 li
209.42 256.984 li
206.19 256.256 li
206.139 256.243 li
202.884 255.326 li
202.835 255.311 li
199.642 254.231 li
196.451 253.601 li
196.278 253.55 li
193.058 252.28 li
189.839 251.282 li
189.768 251.257 li
186.513 249.972 li
186.389 249.913 li
183.194 248.112 li
180.015 246.858 li
176.771 245.669 li
176.624 245.601 li
173.408 243.789 li
170.194 242.339 li
170.096 242.289 li
166.889 240.39 li
163.684 238.945 li
163.568 238.883 li
160.313 236.865 li
160.28 236.843 li
157.025 234.642 li
156.994 234.62 li
153.739 232.235 li
153.724 232.224 li
150.469 229.748 li
150.455 229.736 li
147.206 227.171 li
143.959 224.701 li
143.945 224.69 li
140.69 222.121 li
140.664 222.1 li
137.409 219.348 li
137.324 219.267 li
134.121 215.836 li
130.925 213.314 li
130.864 213.262 li
127.609 210.234 li
127.559 210.184 li
124.304 206.698 li
124.295 206.689 li
121.063 203.136 li
117.833 200.042 li
117.785 199.992 li
114.53 196.414 li
114.514 196.395 li
111.259 192.634 li
111.223 192.59 li
107.997 188.407 li
104.774 184.955 li
104.734 184.909 li
101.479 180.965 li
101.435 180.907 li
98.1968 176.345 li
94.9888 172.366 li
91.7632 169.002 li
91.7212 168.955 li
88.4658 165.102 li
88.459 165.093 li
85.3018 161.267 li
82.2402 159.282 li
79.0542 157.846 li
78.96 157.804 78.8838 157.755 78.8071 157.687 cv
75.6138 154.897 li
72.583 153.018 li
69.5059 152.411 li
69.4063 152.391 69.2979 152.351 69.209 152.301 cv
66.0591 150.525 li
62.9189 149.64 li
62.7788 149.589 li
59.5239 148.121 li
59.4302 148.079 59.3408 148.021 59.2651 147.952 cv
56.0098 145.016 li
55.9492 144.957 li
53.1592 141.968 li
50.5371 143.002 li
50.0508 143.194 49.5039 142.982 49.2729 142.514 cv
46.0181 135.909 li
45.979 135.82 li
42.7769 127.336 li
39.6128 123.234 li
39.5132 123.104 39.4473 122.954 39.4199 122.793 cv
36.165 103.894 li
36.166 103.902 li
32.9111 85.8291 li
32.8999 85.7549 li
29.647 54.3921 li
26.4438 29.9282 li
23.4839 27.4253 li
24.7759 25.8979 li
0 .993286 1 0 cmyk
f
212.678 258.472 mo
211.858 258.311 li
212.11 258.314 li
212.678 258.472 li
218.977 259.403 mo
216.175 259.009 li
214.305 258.728 li
216.175 258.983 li
218.617 259.301 li
218.977 259.403 li
.176577 .0021973 .603937 0 cmyk
f
218.617 259.301 mo
216.175 258.983 li
214.305 258.728 li
212.92 258.52 li
212.678 258.472 li
212.11 258.314 li
212.354 258.317 li
212.92 258.469 li
215.349 258.651 li
216.035 258.748 li
217.271 258.922 li
218.617 259.301 li
.260655 0 .72903 0 cmyk
f
182.98 248.777 mo
182.364 248.577 li
182.49 248.609 li
182.98 248.777 li
.176577 .0021973 .603937 0 cmyk
f
182.49 248.609 mo
182.364 248.577 li
180.37 247.928 li
180.167 247.827 li
180.37 247.878 li
182.49 248.609 li
.260655 0 .72903 0 cmyk
f
147.982 229.211 mo
147.82 229.111 li
147.336 228.765 li
147.82 229.077 li
147.982 229.211 li
168.084 241.815 mo
167.35 241.448 li
164.789 239.916 li
167.35 241.173 li
168.084 241.815 li
.176577 .0021973 .603937 0 cmyk
f
128.465 213.066 mo
128.29 212.891 li
128.113 212.708 li
128.29 212.855 li
128.465 213.066 li
.0287785 0 .489662 0 cmyk
f
122.274 206.435 mo
121.78 205.881 li
118.525 202.485 li
117.947 201.854 li
118.525 202.37 li
121.78 205.859 li
122.274 206.435 li
138.736 222.172 mo
138.055 221.727 li
134.8 218.655 li
131.545 216.149 li
128.465 213.066 li
128.29 212.855 li
128.113 212.708 li
126.728 211.28 li
128.29 212.775 li
131.545 215.427 li
134.8 218.056 li
138.055 221.577 li
138.736 222.172 li
.176577 .0021973 .603937 0 cmyk
f
212.11 258.314 mo
211.858 258.311 li
211.361 258.213 li
211.846 258.24 li
212.11 258.314 li
.359472 0 .876066 0 cmyk
f
212.354 258.317 mo
212.11 258.314 li
211.846 258.24 li
212.128 258.256 li
212.354 258.317 li
.399786 0 .964813 0 cmyk
f
195.481 254.047 mo
193.39 253.514 li
192.239 253.016 li
193.39 253.274 li
195.481 254.047 li
212.128 258.256 mo
211.846 258.24 li
211.361 258.213 li
209.665 257.878 li
207.621 257.254 li
209.665 257.592 li
212.128 258.256 li
217.271 258.922 mo
216.035 258.748 li
215.349 258.651 li
216.175 258.713 li
217.116 258.878 li
217.271 258.922 li
.528679 0 1 0 cmyk
f
215.349 258.651 mo
212.92 258.469 li
212.354 258.317 li
212.92 258.324 li
213.262 258.357 li
215.349 258.651 li
.144289 .301305 .885588 .00109865 cmyk
f
174.908 244.861 mo
173.86 244.181 li
170.605 243.076 li
168.084 241.815 li
167.35 241.173 li
164.789 239.916 li
164.095 239.5 li
160.84 237.976 li
157.585 235.641 li
154.33 233.463 li
151.075 231.133 li
147.982 229.211 li
147.82 229.077 li
147.336 228.765 li
144.565 226.782 li
141.31 223.852 li
138.736 222.172 li
138.055 221.577 li
134.8 218.056 li
131.545 215.427 li
128.29 212.775 li
126.728 211.28 li
125.035 209.532 li
122.274 206.435 li
121.78 205.859 li
118.525 202.37 li
117.947 201.854 li
115.27 198.931 li
112.015 194.536 li
108.76 191.334 li
105.505 187.232 li
105.051 186.642 li
104.427 184.539 li
104.734 184.909 li
104.774 184.955 li
107.997 188.407 li
111.223 192.59 li
111.259 192.634 li
114.514 196.395 li
114.53 196.414 li
116.687 198.784 li
117.761 200.056 li
117.833 200.132 li
120.938 203.108 li
121.391 203.669 li
121.44 203.721 li
121.557 203.832 li
124.264 207.111 li
124.295 207.147 li
127.55 210.725 li
127.62 210.795 li
130.863 213.72 li
134.108 216.829 li
134.154 216.871 li
137.409 219.623 li
137.449 219.655 li
140.665 222.102 li
143.884 225.096 li
143.959 225.16 li
147.214 227.637 li
147.293 227.691 li
149.805 229.249 li
151.075 230.601 li
154.33 232.968 li
155.161 233.277 li
156.994 234.62 li
157.025 234.642 li
160.28 236.843 li
160.313 236.865 li
163.568 238.883 li
163.684 238.945 li
166.889 240.39 li
170.096 242.289 li
170.194 242.339 li
172.574 243.414 li
173.86 244.09 li
174.908 244.861 li
184.923 249.641 mo
183.625 248.987 li
182.98 248.777 li
182.49 248.609 li
183.625 248.893 li
184.923 249.641 li
.0920424 .310033 .801114 0 cmyk
f
121.557 203.832 mo
121.44 203.721 li
121.391 203.669 li
120.938 203.108 li
121.046 203.211 li
121.557 203.832 li
.238102 .392676 .900114 .0248112 cmyk
f
155.161 233.277 mo
154.33 232.968 li
151.075 230.601 li
149.805 229.249 li
149.957 229.342 li
150.455 229.736 li
150.469 229.748 li
153.724 232.224 li
153.739 232.235 li
155.161 233.277 li
190.524 251.494 mo
190.135 251.42 li
186.88 250.614 li
186.84 250.606 li
184.923 249.641 li
183.625 248.893 li
182.49 248.609 li
180.37 247.878 li
180.167 247.827 li
177.115 246.293 li
174.908 244.861 li
173.86 244.09 li
172.574 243.414 li
173.408 243.789 li
176.624 245.601 li
176.771 245.669 li
180.015 246.858 li
180.864 247.193 li
183.399 248.479 li
183.43 248.494 li
185.19 249.238 li
186.389 249.913 li
186.513 249.972 li
189.768 251.257 li
189.839 251.282 li
190.524 251.494 li
.144289 .301305 .885588 .00109865 cmyk
f
185.19 249.238 mo
183.43 248.494 li
183.399 248.479 li
180.864 247.193 li
183.194 248.112 li
185.19 249.238 li
.232914 .352209 .950835 .0148623 cmyk
f
93.21 171.885 mo
92.4849 171.041 li
89.23 168.207 li
85.9751 164.336 li
84.8999 163.018 li
85.9751 163.506 li
87.5972 164.611 li
88.8818 165.734 li
90.1211 167.061 li
91.7212 168.955 li
91.7632 169.002 li
92.6211 169.897 li
93.21 171.885 li
.0920424 .310033 .801114 0 cmyk
f
90.1211 167.061 mo
88.8818 165.734 li
87.5972 164.611 li
88.4902 165.22 li
88.5078 165.241 li
89.1382 165.897 li
90.1211 167.061 li
.238102 .392676 .900114 .0248112 cmyk
f
85.6841 161.822 mo
82.9458 160.433 li
82.936 160.428 li
82.6821 160.306 li
81.2012 158.814 li
82.2402 159.282 li
85.1108 161.144 li
85.2231 161.264 li
85.6841 161.822 li
87.5972 164.611 mo
85.9751 163.506 li
84.8999 163.018 li
84.2432 162.212 li
85.6929 162.948 li
87.5972 164.611 li
.144289 .301305 .885588 .00109865 cmyk
f
88.4902 165.22 mo
87.5972 164.611 li
85.6929 162.948 li
84.2432 162.212 li
82.7202 160.345 li
82.6821 160.306 li
82.936 160.428 li
82.9458 160.433 li
85.6841 161.822 li
88.459 165.185 li
88.4902 165.22 li
.232914 .352209 .950835 .0148623 cmyk
f
213.262 258.357 mo
212.92 258.324 li
212.354 258.317 li
212.128 258.256 li
212.822 258.295 li
213.262 258.357 li
.263828 .208042 1 .00180056 cmyk
f
191.452 252.471 mo
190.675 252.34 li
190.154 252.114 li
191.452 252.471 li
.232578 .214511 .978637 .000335698 cmyk
f
194.334 253.041 mo
193.661 252.85 li
193.557 252.827 li
191.452 252.471 li
190.154 252.114 li
190.135 252.106 li
186.88 250.626 li
186.84 250.606 li
186.88 250.614 li
190.135 251.42 li
190.524 251.494 li
190.538 251.499 li
193.195 252.622 li
193.218 252.631 li
194.334 253.041 li
.263828 .208042 1 .00180056 cmyk
f
199.363 254.176 mo
196.865 253.753 li
194.334 253.041 li
193.218 252.631 li
193.195 252.622 li
190.538 251.499 li
193.058 252.28 li
196.278 253.55 li
196.451 253.601 li
199.363 254.176 li
.315831 .232547 1 .00839246 cmyk
f
97.3711 176.947 mo
95.7402 174.839 li
93.21 171.885 li
92.6211 169.897 li
94.3701 171.721 li
95.7402 173.615 li
96.9712 175.119 li
97.3711 176.947 li
105.051 186.642 mo
102.25 183.003 li
100.292 180.622 li
99.9658 179.445 li
99.7729 178.566 li
101.435 180.907 li
101.479 180.965 li
104.427 184.539 li
105.051 186.642 li
.232578 .214511 .978637 .000335698 cmyk
f
96.9712 175.119 mo
95.7402 173.615 li
94.3701 171.721 li
94.9888 172.366 li
96.8818 174.714 li
96.9712 175.119 li
.263828 .208042 1 .00180056 cmyk
f
100.292 180.622 mo
98.9951 179.044 li
97.3711 176.947 li
96.9712 175.119 li
96.8818 174.714 li
98.1968 176.345 li
99.7729 178.566 li
99.9658 179.445 li
100.292 180.622 li
217.116 258.878 mo
216.175 258.713 li
215.349 258.651 li
213.262 258.357 li
212.822 258.295 li
212.128 258.256 li
209.665 257.592 li
207.621 257.254 li
206.41 256.885 li
203.155 256.248 li
199.9 255.063 li
196.645 254.344 li
195.481 254.047 li
193.39 253.274 li
192.239 253.016 li
190.675 252.34 li
191.452 252.471 li
193.557 252.827 li
193.661 252.85 li
194.334 253.041 li
196.865 253.753 li
199.363 254.176 li
199.629 254.228 li
202.811 255.394 li
202.909 255.424 li
206.102 256.234 li
209.298 257.495 li
209.526 257.555 li
212.767 258.012 li
215.955 258.551 li
217.116 258.878 li
.420081 .0589914 1 0 cmyk
f
71.0898 144.992 mo
69.7002 144.587 li
67.5459 142.333 li
66.4448 140.444 li
63.1899 134.178 li
59.9351 123.269 li
56.6802 110.555 li
53.4248 90.603 li
50.1699 62.1938 li
47.2358 37.8618 li
47.4341 38.1323 li
49.1802 48.272 li
52.4312 76.6831 li
52.4351 76.7119 li
55.6899 99.2798 li
55.7012 99.3398 li
58.9561 115.028 li
58.9741 115.102 li
62.229 126.386 li
62.2539 126.462 li
65.5088 135.086 li
65.541 135.161 li
68.7959 142.042 li
68.915 142.233 li
71.0898 144.992 li
.0287785 0 .489662 0 cmyk
f
72.585 146.924 mo
71.8032 146.848 li
69.7002 145.217 li
69.1611 145.106 li
67.5459 142.333 li
69.7002 144.587 li
71.0898 144.992 li
72.1611 146.349 li
72.585 146.924 li
0 .257572 .729152 0 cmyk
f
71.8032 146.848 mo
70.1948 146.691 li
69.7002 146.031 li
69.1611 145.106 li
69.7002 145.217 li
71.8032 146.848 li
.0920424 .310033 .801114 0 cmyk
f
73.4209 148.055 mo
72.9551 147.741 li
71.8032 146.848 li
72.585 146.924 li
73.4209 148.055 li
.0779126 .277134 .844297 0 cmyk
f
80.3672 155.927 mo
79.6489 155.643 li
79.5752 155.621 li
79.4492 155.592 li
76.8682 153.337 li
76.7368 153.24 li
73.7739 151.403 li
72.9551 150.373 li
70.1948 146.691 li
71.8032 146.848 li
72.9551 147.741 li
73.4209 148.055 li
75.4063 150.74 li
75.5078 150.857 li
78.7349 154.041 li
80.3672 155.927 li
.144289 .301305 .885588 .00109865 cmyk
f
80.8169 156.447 mo
80.0112 156.084 li
79.4492 155.592 li
79.5752 155.621 li
79.6489 155.643 li
80.3672 155.927 li
80.8169 156.447 li
.219059 .289677 1 .00497444 cmyk
f
85.1108 161.144 mo
82.2402 159.282 li
81.2012 158.814 li
79.4648 157.065 li
76.21 154.47 li
73.7739 151.403 li
76.7368 153.24 li
76.8682 153.337 li
79.4492 155.592 li
80.0112 156.084 li
80.8169 156.447 li
81.9639 157.772 li
81.9888 157.8 li
85.1108 161.144 li
116.687 198.784 mo
114.53 196.414 li
114.514 196.395 li
111.259 192.634 li
111.223 192.59 li
107.997 188.407 li
104.774 184.955 li
104.734 184.909 li
104.427 184.539 li
101.479 180.965 li
101.435 180.907 li
99.7729 178.566 li
98.1968 176.345 li
96.8818 174.714 li
94.9888 172.366 li
94.3701 171.721 li
92.6211 169.897 li
91.7632 169.002 li
91.7212 168.955 li
90.1211 167.061 li
89.1382 165.897 li
91.7461 168.617 li
94.9839 172.359 li
98.2139 176.091 li
101.446 180.464 li
101.486 180.515 li
104.733 184.359 li
107.982 188.387 li
108.048 188.461 li
111.249 191.71 li
114.46 196.144 li
114.506 196.203 li
116.687 198.784 li
199.629 254.228 mo
199.363 254.176 li
196.451 253.601 li
196.278 253.55 li
193.058 252.28 li
190.538 251.499 li
190.524 251.494 li
189.839 251.282 li
189.768 251.257 li
186.513 249.972 li
186.389 249.913 li
185.19 249.238 li
183.194 248.112 li
180.864 247.193 li
180.015 246.858 li
176.771 245.669 li
176.624 245.601 li
173.408 243.789 li
172.574 243.414 li
170.194 242.339 li
170.096 242.289 li
166.889 240.39 li
163.684 238.945 li
163.568 238.883 li
160.313 236.865 li
160.28 236.843 li
157.025 234.642 li
156.994 234.62 li
155.161 233.277 li
153.739 232.235 li
153.724 232.224 li
150.469 229.748 li
150.455 229.736 li
149.957 229.342 li
150.539 229.703 li
153.769 231.797 li
157.001 234.074 li
160.249 236.455 li
160.408 236.55 li
163.623 238.09 li
166.841 239.995 li
166.859 240.005 li
170.114 241.84 li
170.285 241.917 li
173.461 242.991 li
176.643 244.695 li
176.663 244.705 li
179.918 246.356 li
180.026 246.403 li
183.247 247.584 li
186.469 249.036 li
189.703 250.495 li
192.938 252.136 li
193.094 252.199 li
196.349 253.208 li
199.58 254.21 li
199.629 254.228 li
0 .74377 1 0 cmyk
f
217.398 256.354 mo
217.392 256.353 li
216.175 256.013 li
214.162 255.421 li
215.993 255.746 li
216.078 255.771 li
216.218 255.799 li
217.398 256.354 li
.305669 .333135 .975494 .0321355 cmyk
f
217.4 256.355 mo
217.392 256.353 li
217.398 256.354 li
217.4 256.355 li
.323247 .338689 .995392 .0404974 cmyk
f
216.218 255.799 mo
216.078 255.771 li
215.993 255.746 li
216.175 255.778 li
216.218 255.799 li
.297002 .358831 1 .0370489 cmyk
f
215.036 255.979 mo
212.92 255.826 li
211.96 255.623 li
209.945 255.054 li
211.336 255.123 li
212.92 255.529 li
215.036 255.979 li
.135439 .502708 1 .00967422 cmyk
f
217.434 256.741 mo
216.395 256.507 li
216.342 256.496 li
213.14 255.955 li
211.96 255.623 li
212.92 255.826 li
215.036 255.979 li
216.175 256.222 li
217.434 256.741 li
.154726 .516503 1 .0151369 cmyk
f
217.392 256.353 mo
216.175 256.062 li
215.036 255.979 li
212.92 255.529 li
211.336 255.123 li
212.92 255.201 li
214.162 255.421 li
216.175 256.013 li
217.392 256.353 li
.15729 .523552 1 .0160525 cmyk
f
218.702 256.968 mo
218.282 256.932 li
217.434 256.741 li
216.175 256.222 li
215.036 255.979 li
216.175 256.062 li
217.392 256.353 li
217.4 256.355 li
218.702 256.968 li
.166506 .528496 1 .0200504 cmyk
f
218.942 257.082 mo
218.282 256.932 li
218.702 256.968 li
218.942 257.082 li
.273472 .336736 1 .021912 cmyk
f
192.527 248.836 mo
191.252 248.316 li
190.135 247.585 li
186.88 246.792 li
183.625 244.828 li
182.89 244.597 li
180.37 242.991 li
177.115 241.168 li
173.86 239.962 li
173.364 239.671 li
173.86 239.836 li
177.115 241.144 li
180.37 242.792 li
183.625 244.125 li
183.821 244.2 li
186.88 246.193 li
190.135 247.248 li
192.527 248.836 li
.0287785 0 .489662 0 cmyk
f
182.89 244.597 mo
180.37 243.804 li
180.153 243.729 li
177.115 242.233 li
173.86 240.678 li
173.544 240.482 li
171.597 239.08 li
173.364 239.671 li
173.86 239.962 li
177.115 241.168 li
180.37 242.991 li
182.89 244.597 li
.176577 .0021973 .603937 0 cmyk
f
191.252 248.316 mo
190.135 247.861 li
187.671 247.197 li
186.88 246.897 li
183.625 245.065 li
182.89 244.597 li
183.625 244.828 li
186.88 246.792 li
190.135 247.585 li
191.252 248.316 li
.165133 0 .668452 0 cmyk
f
173.544 240.482 mo
170.93 238.857 li
171.597 239.08 li
173.544 240.482 li
187.671 247.197 mo
186.88 246.983 li
183.625 245.294 li
180.37 243.836 li
180.153 243.729 li
180.37 243.804 li
182.89 244.597 li
183.625 245.065 li
186.88 246.897 li
187.671 247.197 li
.260655 0 .72903 0 cmyk
f
192.741 248.924 mo
192.527 248.836 li
190.135 247.248 li
186.88 246.193 li
183.821 244.2 li
186.272 245.129 li
186.88 245.638 li
188.947 246.322 li
190.135 247.188 li
191.177 247.598 li
192.741 248.924 li
.0162661 .056611 .712856 0 cmyk
f
191.177 247.598 mo
190.135 247.188 li
188.947 246.322 li
189.56 246.525 li
190.135 246.775 li
190.363 246.909 li
191.177 247.598 li
.0109255 .192966 .806119 0 cmyk
f
196.59 250.517 mo
193.39 249.188 li
192.741 248.924 li
191.177 247.598 li
192.278 248.031 li
193.39 248.683 li
194.183 248.976 li
196.59 250.517 li
.270603 .222934 .932921 .00296025 cmyk
f
192.278 248.031 mo
191.177 247.598 li
190.363 246.909 li
192.278 248.031 li
199.574 251.098 mo
196.645 250.541 li
196.59 250.517 li
194.183 248.976 li
196.645 249.886 li
199.574 251.098 li
.269657 .310704 1 .0154421 cmyk
f
188.947 246.322 mo
186.88 245.638 li
186.272 245.129 li
186.88 245.36 li
188.732 246.166 li
188.947 246.322 li
.270603 .222934 .932921 .00296025 cmyk
f
189.56 246.525 mo
188.947 246.322 li
188.732 246.166 li
189.56 246.525 li
.269657 .310704 1 .0154421 cmyk
f
168.168 237.21 mo
167.35 236.822 li
164.095 234.817 li
164.03 234.77 li
164.095 234.801 li
167.35 236.693 li
168.168 237.21 li
.0287785 0 .489662 0 cmyk
f
157.8 230.94 mo
157.787 230.934 li
157.77 230.918 li
157.8 230.94 li
.176577 .0021973 .603937 0 cmyk
f
168.214 237.239 mo
167.35 236.945 li
164.095 235.161 li
162.727 234.133 li
164.03 234.77 li
164.095 234.817 li
167.35 236.822 li
168.168 237.21 li
168.214 237.239 li
.165133 0 .668452 0 cmyk
f
170.344 238.583 mo
167.35 237.763 li
166.222 237.304 li
166.171 237.274 li
164.375 236.06 li
164.341 236.038 li
162.023 234.732 li
160.84 233.757 li
157.787 230.934 li
157.8 230.94 li
160.84 233.21 li
162.727 234.133 li
164.095 235.161 li
167.35 236.945 li
168.214 237.239 li
170.344 238.583 li
.260655 0 .72903 0 cmyk
f
166.171 237.274 mo
164.604 236.347 li
164.527 236.306 li
163.107 235.626 li
162.023 234.732 li
164.341 236.038 li
164.375 236.06 li
166.171 237.274 li
.380041 0 .918395 0 cmyk
f
157.16 230.466 mo
156.771 230.207 li
155.665 229.358 li
157.16 230.466 li
.176577 .0021973 .603937 0 cmyk
f
156.771 230.207 mo
154.33 228.588 li
153.345 227.804 li
154.33 228.369 li
155.665 229.358 li
156.771 230.207 li
.260655 0 .72903 0 cmyk
f
113.139 189.087 mo
112.015 187.598 li
111.815 187.292 li
112.015 187.5 li
113.139 189.087 li
.165133 0 .668452 0 cmyk
f
81.104 151.727 mo
79.4648 150.789 li
77.1919 149.526 li
76.21 148.448 li
76.1782 148.419 li
73.7588 145.147 li
73.7402 145.123 li
70.5552 141.083 li
67.3662 134.342 li
64.1401 125.794 li
60.9063 114.584 li
57.665 98.9639 li
54.417 76.4399 li
51.1631 48.0161 li
51.1563 47.96 li
50.0898 41.771 li
50.1699 41.8809 li
51.2559 43.062 li
53.4248 61.979 li
56.6802 87.3022 li
59.9351 106.13 li
63.1899 117.792 li
66.4448 128.89 li
69.7002 137.113 li
72.9551 141.017 li
76.21 145.735 li
79.4648 149.583 li
81.104 151.727 li
.0287785 0 .489662 0 cmyk
f
82.7231 153.842 mo
82.7202 153.84 li
79.625 152.11 li
78.8472 151.342 li
77.1919 149.526 li
79.4648 150.789 li
81.104 151.727 li
82.7202 153.84 li
82.7231 153.842 li
.165133 0 .668452 0 cmyk
f
194.148 249.943 mo
193.39 249.716 li
191.252 248.316 li
192.527 248.836 li
193.041 249.178 li
193.39 249.473 li
194.148 249.943 li
0 .257572 .729152 0 cmyk
f
180.153 243.729 mo
177.142 242.693 li
177.043 242.64 li
173.86 240.709 li
173.544 240.482 li
173.86 240.678 li
177.115 242.233 li
180.153 243.729 li
.0920424 .310033 .801114 0 cmyk
f
194.918 250.421 mo
193.39 249.877 li
190.135 248.13 li
187.671 247.197 li
190.135 247.861 li
191.252 248.316 li
193.39 249.716 li
194.148 249.943 li
194.918 250.421 li
.0779126 .277134 .844297 0 cmyk
f
177.043 242.64 mo
174.332 241.188 li
174.18 241.123 li
171.014 240.052 li
167.851 238.269 li
166.222 237.304 li
167.35 237.763 li
170.344 238.583 li
170.605 238.749 li
170.93 238.857 li
173.544 240.482 li
173.86 240.709 li
177.043 242.64 li
195.724 250.921 mo
193.767 250.314 li
190.587 248.701 li
190.546 248.681 li
187.291 247.213 li
184.036 245.745 li
183.969 245.718 li
180.769 244.546 li
177.576 242.926 li
177.142 242.693 li
180.153 243.729 li
180.37 243.836 li
183.625 245.294 li
186.88 246.983 li
187.671 247.197 li
190.135 248.13 li
193.39 249.877 li
194.918 250.421 li
195.724 250.921 li
.144289 .301305 .885588 .00109865 cmyk
f
193.041 249.178 mo
192.527 248.836 li
192.741 248.924 li
193.041 249.178 li
0 .339025 .85568 0 cmyk
f
195.788 250.435 mo
194.148 249.943 li
193.39 249.473 li
193.041 249.178 li
193.39 249.409 li
195.788 250.435 li
.140688 .399451 .927672 .00396735 cmyk
f
197.492 251.205 mo
196.645 251.036 li
194.918 250.421 li
194.148 249.943 li
195.788 250.435 li
196.645 250.802 li
197.492 251.205 li
.195712 .41178 .996002 .0154421 cmyk
f
199.077 251.96 mo
196.941 251.298 li
195.724 250.921 li
194.918 250.421 li
196.645 251.036 li
197.492 251.205 li
199.077 251.96 li
.228275 .418982 1 .0276188 cmyk
f
197.165 250.811 mo
196.645 250.693 li
195.788 250.435 li
193.39 249.409 li
193.041 249.178 li
192.741 248.924 li
193.39 249.188 li
196.59 250.517 li
196.645 250.553 li
197.165 250.811 li
.137392 .452155 1 .00634775 cmyk
f
209.475 254.946 mo
208.983 254.836 li
206.41 253.701 li
203.155 252.711 li
201.121 252.071 li
199.9 251.433 li
197.165 250.811 li
196.645 250.553 li
196.59 250.517 li
196.645 250.541 li
199.574 251.098 li
199.9 251.233 li
203.155 252.39 li
204.746 252.897 li
206.41 253.642 li
207.655 254.045 li
209.475 254.946 li
.135439 .502708 1 .00967422 cmyk
f
208.983 254.836 mo
207.498 254.501 li
206.41 254.067 li
203.155 253.136 li
201.121 252.071 li
203.155 252.711 li
206.41 253.701 li
208.983 254.836 li
.154726 .516503 1 .0151369 cmyk
f
198.275 251.362 mo
197.492 251.205 li
196.645 250.802 li
195.788 250.435 li
196.645 250.693 li
197.165 250.811 li
198.275 251.362 li
.166506 .451759 1 .0116579 cmyk
f
200.055 252.263 mo
199.077 251.96 li
197.492 251.205 li
198.275 251.362 li
199.9 252.17 li
200.055 252.263 li
.184207 .466407 1 .0191348 cmyk
f
201.121 252.071 mo
199.9 251.688 li
198.275 251.362 li
197.165 250.811 li
199.9 251.433 li
201.121 252.071 li
.162112 .489357 1 .0149538 cmyk
f
207.498 254.501 mo
206.656 254.311 li
203.451 253.408 li
200.22 252.315 li
200.214 252.313 li
200.196 252.307 li
200.055 252.263 li
199.9 252.17 li
198.275 251.362 li
199.9 251.688 li
201.121 252.071 li
203.155 253.136 li
206.41 254.067 li
207.498 254.501 li
.177035 .493873 1 .0196231 cmyk
f
207.655 254.045 mo
206.41 253.642 li
204.746 252.897 li
206.41 253.428 li
207.655 254.045 li
.15729 .523552 1 .0160525 cmyk
f
157.787 230.934 mo
157.585 230.832 li
156.771 230.207 li
157.16 230.466 li
157.585 230.78 li
157.77 230.918 li
157.787 230.934 li
.0920424 .310033 .801114 0 cmyk
f
105.837 182.566 mo
104.045 180.445 li
105.121 181.658 li
105.837 182.566 li
111.178 188.788 mo
109.507 187.093 li
108.95 186.402 li
111.178 188.788 li
117.046 196.11 mo
116.058 194.94 li
115.893 194.713 li
117.046 196.11 li
.144289 .301305 .885588 .00109865 cmyk
f
106.367 181.182 mo
105.505 180.144 li
105.398 180.019 li
105.505 180.132 li
106.367 181.182 li
113.178 189.141 mo
112.015 187.847 li
109.052 184.401 li
111.815 187.292 li
112.015 187.598 li
113.139 189.087 li
113.178 189.141 li
122.357 199.833 mo
121.78 199.263 li
121.344 198.702 li
121.78 199.08 li
122.357 199.833 li
.0779126 .277134 .844297 0 cmyk
f
125.856 204.289 mo
125.393 203.832 li
122.147 200.355 li
118.903 196.789 li
115.661 192.86 li
112.411 188.646 li
112.38 188.611 li
109.14 185.14 li
105.898 181.028 li
105.879 181.005 li
102.641 177.355 li
102.093 176.598 li
102.024 176.337 li
102.25 176.675 li
105.398 180.019 li
105.505 180.144 li
106.367 181.182 li
108.76 184.095 li
109.052 184.401 li
112.015 187.847 li
113.178 189.141 li
115.27 192.095 li
118.525 196.258 li
121.344 198.702 li
121.78 199.263 li
122.357 199.833 li
125.035 203.329 li
125.856 204.289 li
133.89 212.433 mo
131.901 210.526 li
130.005 208.496 li
131.545 209.72 li
133.89 212.433 li
147.606 224.321 mo
144.881 222.324 li
141.645 219.406 li
141.62 219.384 li
138.386 216.833 li
135.571 214.055 li
138.055 215.892 li
141.31 218.739 li
144.565 221.864 li
147.606 224.321 li
162.023 234.732 mo
161.099 234.211 li
157.857 232.109 li
157.83 232.093 li
156.984 231.616 li
154.906 230.152 li
154.874 230.13 li
152.729 228.739 li
151.401 227.654 li
148.155 224.727 li
148.116 224.695 li
147.959 224.58 li
151.075 226.504 li
153.345 227.804 li
154.33 228.588 li
156.771 230.207 li
157.585 230.832 li
157.787 230.934 li
160.84 233.757 li
162.023 234.732 li
.144289 .301305 .885588 .00109865 cmyk
f
152.729 228.739 mo
151.619 228.02 li
151.602 228.009 li
151.108 227.703 li
148.439 225.597 li
148.426 225.586 li
145.179 223.116 li
141.942 220.562 li
138.746 217.859 li
135.531 214.416 li
135.42 214.313 li
132.196 211.769 li
128.996 208.793 li
125.769 205.337 li
122.52 201.765 li
122.472 201.716 li
119.242 198.62 li
118.192 197.467 li
117.046 196.11 li
115.893 194.713 li
112.825 190.475 li
112.727 190.36 li
111.178 188.788 li
108.95 186.402 li
106.284 183.095 li
106.269 183.077 li
105.837 182.566 li
105.121 181.658 li
104.045 180.445 li
103.035 179.25 li
102.742 178.852 li
102.25 177.194 li
102.093 176.598 li
102.641 177.355 li
105.879 181.005 li
105.898 181.028 li
109.14 185.14 li
112.38 188.611 li
112.411 188.646 li
115.661 192.86 li
118.903 196.789 li
122.147 200.355 li
125.393 203.832 li
125.856 204.289 li
128.29 207.133 li
130.005 208.496 li
131.901 210.526 li
133.89 212.433 li
134.8 213.485 li
135.571 214.055 li
138.386 216.833 li
141.62 219.384 li
141.645 219.406 li
144.881 222.324 li
147.606 224.321 li
147.82 224.494 li
147.959 224.58 li
148.116 224.695 li
148.155 224.727 li
151.401 227.654 li
152.729 228.739 li
163.107 235.626 mo
161.356 234.786 li
158.176 232.457 li
158.161 232.445 li
156.984 231.616 li
157.83 232.093 li
157.857 232.109 li
161.099 234.211 li
162.023 234.732 li
163.107 235.626 li
.219059 .289677 1 .00497444 cmyk
f
91.04 164.992 mo
90.625 164.559 li
89.9961 163.814 li
87.793 161.144 li
88.8818 162.065 li
90.7598 164.13 li
91.04 164.992 li
.144289 .301305 .885588 .00109865 cmyk
f
86.3281 157.237 mo
85.9751 156.882 li
82.7202 154.585 li
80.5601 153.094 li
80.2212 152.702 li
80.167 152.644 li
79.625 152.11 li
82.7202 153.84 li
82.7231 153.842 li
85.9751 156.802 li
86.3281 157.237 li
.0779126 .277134 .844297 0 cmyk
f
90.0088 161.818 mo
89.6001 161.368 li
89.5532 161.323 li
86.2979 158.571 li
86.1909 158.502 li
84.7241 157.799 li
83.4629 156.449 li
80.5601 153.094 li
82.7202 154.585 li
85.9751 156.882 li
86.3281 157.237 li
89.23 160.819 li
89.9829 161.74 li
90.0088 161.818 li
.144289 .301305 .885588 .00109865 cmyk
f
90.7598 164.13 mo
88.8818 162.065 li
87.793 161.144 li
86.7461 159.876 li
86.519 159.673 li
86.4048 159.599 li
84.7241 157.799 li
86.1909 158.502 li
86.2979 158.571 li
89.5532 161.323 li
89.6001 161.368 li
90.0088 161.818 li
90.7598 164.13 li
.219059 .289677 1 .00497444 cmyk
f
77.1919 149.526 mo
76.8589 149.341 li
76.1782 148.419 li
76.21 148.448 li
77.1919 149.526 li
0 .257572 .729152 0 cmyk
f
78.8472 151.342 mo
76.9678 149.488 li
76.8589 149.341 li
77.1919 149.526 li
78.8472 151.342 li
.0779126 .277134 .844297 0 cmyk
f
101.258 175.193 mo
100.264 174.073 li
99.3999 172.879 li
99.3838 172.859 li
98.2021 171.393 li
98.0942 170.899 li
98.9951 171.812 li
101.258 175.193 li
.225467 .190921 1 0 cmyk
f
102.093 176.598 mo
100.264 174.073 li
101.258 175.193 li
102.024 176.337 li
102.093 176.598 li
.263828 .208042 1 .00180056 cmyk
f
102.742 178.852 mo
99.7988 174.871 li
99.751 174.812 li
98.6802 173.574 li
98.2021 171.393 li
99.3838 172.859 li
99.3999 172.879 li
100.264 174.073 li
102.093 176.598 li
102.25 177.194 li
102.742 178.852 li
.306126 .198672 1 .00347906 cmyk
f
95.939 170.406 mo
93.2412 167.289 li
93.207 167.251 li
91.04 164.992 li
90.7598 164.13 li
92.1089 165.612 li
95.356 169.457 li
95.8711 170.094 li
95.939 170.406 li
.263828 .208042 1 .00180056 cmyk
f
90.395 162.243 mo
90.0088 161.818 li
89.9829 161.74 li
90.395 162.243 li
f
95.8711 170.094 mo
95.356 169.457 li
92.1089 165.612 li
90.7598 164.13 li
90.0088 161.818 li
90.395 162.243 li
92.4849 164.795 li
95.4531 168.185 li
95.8711 170.094 li
.306126 .198672 1 .00347906 cmyk
f
98.6802 173.574 mo
96.4961 171.05 li
95.939 170.406 li
95.8711 170.094 li
95.4531 168.185 li
95.7402 168.514 li
98.0942 170.899 li
98.2021 171.393 li
98.6802 173.574 li
.420081 .0589914 1 0 cmyk
f
90.625 164.559 mo
89.978 163.884 li
86.7461 159.967 li
86.7061 159.921 li
86.4048 159.599 li
86.519 159.673 li
86.7461 159.876 li
87.793 161.144 li
89.9961 163.814 li
90.625 164.559 li
151.108 227.703 mo
148.388 226.016 li
145.21 223.598 li
141.991 220.604 li
141.916 220.542 li
138.681 218.079 li
135.47 215.364 li
132.237 212.266 li
132.215 212.245 li
128.997 209.343 li
125.791 205.819 li
122.551 201.893 li
122.472 201.808 li
119.255 198.725 li
118.192 197.467 li
119.242 198.62 li
122.472 201.716 li
122.52 201.765 li
125.769 205.337 li
128.996 208.793 li
132.196 211.769 li
135.42 214.313 li
135.531 214.416 li
138.746 217.859 li
141.942 220.562 li
145.179 223.116 li
148.426 225.586 li
148.439 225.597 li
151.108 227.703 li
222.969 257.781 mo
222.755 257.769 li
219.609 257.503 li
216.446 256.612 li
216.342 256.588 li
213.087 256.038 li
213.06 256.034 li
209.922 255.591 li
206.777 254.35 li
206.656 254.311 li
203.451 253.498 li
200.244 252.323 li
200.214 252.313 li
200.22 252.315 li
203.451 253.408 li
206.656 254.311 li
207.498 254.501 li
208.983 254.836 li
209.475 254.946 li
209.665 255.041 li
209.945 255.054 li
211.96 255.623 li
213.14 255.955 li
216.342 256.496 li
216.395 256.507 li
217.434 256.741 li
218.282 256.932 li
218.942 257.082 li
219.43 257.311 li
222.685 257.751 li
222.969 257.781 li
0 .74377 1 0 cmyk
f
47.8472 26.1621 mo
46.915 26.1621 li
44.6411 26.1621 li
44.3462 25.9292 li
46.915 23.1821 li
47.8472 26.1621 li
.0287785 0 .489662 0 cmyk
f
48.1602 27.1602 mo
46.915 27.1001 li
45.3052 26.686 li
44.6411 26.1621 li
46.915 26.1621 li
47.8472 26.1621 li
48.1602 27.1602 li
.199832 .31281 .65835 .00375372 cmyk
f
48.5181 28.3052 mo
47.9209 28.1582 li
46.915 27.5791 li
46.0669 27.2881 li
45.9082 27.1621 li
46.8872 27.1621 li
48.207 27.311 li
48.5181 28.3052 li
.272251 0 .844724 0 cmyk
f
47.9209 28.1582 mo
46.915 27.9111 li
46.812 27.875 li
46.0669 27.2881 li
46.915 27.5791 li
47.9209 28.1582 li
.295445 0 .901701 0 cmyk
f
48.207 27.311 mo
46.8872 27.1621 li
46.915 27.1621 li
48.1602 27.1621 li
48.207 27.311 li
.289311 0 1 0 cmyk
f
48.1602 27.1621 mo
46.915 27.1621 li
46.8872 27.1621 li
45.9082 27.1621 li
45.3052 26.686 li
46.915 27.1001 li
48.1602 27.1602 li
48.1602 27.1621 li
.410925 .00830091 .962554 0 cmyk
f
48.5928 28.5449 mo
47.9209 28.1582 li
48.5181 28.3052 li
48.5928 28.5449 li
.426123 0 .980957 0 cmyk
f
48.686 28.8398 mo
47.3359 28.2319 li
47.1509 28.1431 li
46.812 27.875 li
46.915 27.9111 li
47.9209 28.1582 li
48.5928 28.5449 li
48.686 28.8398 li
.449317 .000274662 1 0 cmyk
f
49.2139 30.5269 mo
48.0928 30.1802 li
47.8999 29.061 li
47.8579 28.8169 47.729 28.5991 47.5342 28.4458 cv
47.1509 28.1431 li
47.3359 28.2319 li
48.686 28.8398 li
49.2139 30.5269 li
.528679 0 1 0 cmyk
f
24.1299 25.6621 mo
27.3848 25.6621 li
30.6401 25.6621 li
33.895 25.6621 li
37.1499 25.6621 li
40.4048 25.6621 li
43.6602 25.6621 li
43.8872 25.6621 44.1011 25.7358 44.2798 25.877 cv
47.5342 28.4458 li
47.729 28.5991 47.8579 28.8169 47.8999 29.061 cv
51.1563 47.96 li
51.1631 48.0161 li
54.417 76.4399 li
57.665 98.9639 li
60.9063 114.584 li
64.1401 125.794 li
67.3662 134.342 li
70.5552 141.083 li
73.7402 145.123 li
73.7588 145.147 li
76.9678 149.488 li
80.167 152.644 li
80.2212 152.702 li
83.4629 156.449 li
86.7061 159.921 li
86.7461 159.967 li
89.978 163.884 li
93.207 167.251 li
93.2412 167.289 li
96.4961 171.05 li
99.751 174.812 li
99.7988 174.871 li
103.035 179.25 li
106.269 183.077 li
106.284 183.095 li
109.507 187.093 li
112.727 190.36 li
112.825 190.475 li
116.058 194.94 li
119.255 198.725 li
122.472 201.808 li
122.551 201.893 li
125.791 205.819 li
128.997 209.343 li
132.215 212.245 li
132.237 212.266 li
135.47 215.364 li
138.681 218.079 li
141.916 220.542 li
141.991 220.604 li
145.21 223.598 li
148.388 226.016 li
151.602 228.009 li
151.619 228.02 li
154.874 230.13 li
154.906 230.152 li
158.161 232.445 li
158.176 232.457 li
161.356 234.786 li
164.527 236.306 li
164.604 236.347 li
167.851 238.269 li
171.014 240.052 li
174.18 241.123 li
174.332 241.188 li
177.576 242.926 li
180.769 244.546 li
183.969 245.718 li
184.036 245.745 li
187.291 247.213 li
190.546 248.681 li
190.587 248.701 li
193.767 250.314 li
196.941 251.298 li
200.196 252.307 li
200.244 252.323 li
203.451 253.498 li
206.656 254.311 li
206.777 254.35 li
209.922 255.591 li
213.06 256.034 li
213.087 256.038 li
216.342 256.588 li
216.446 256.612 li
219.609 257.503 li
222.755 257.769 li
225.996 257.952 li
229.251 258.135 li
229.334 258.143 li
232.534 258.594 li
235.719 258.684 li
238.96 258.684 li
242.215 258.684 li
245.47 258.684 li
248.725 258.684 li
251.98 258.684 li
255.235 258.684 li
258.49 258.684 li
261.745 258.684 li
265 258.684 li
268.255 258.684 li
271.51 258.684 li
274.765 258.684 li
278.02 258.684 li
281.275 258.684 li
284.53 258.684 li
287.785 258.684 li
291.04 258.684 li
294.295 258.684 li
297.55 258.684 li
300.805 258.684 li
304.06 258.684 li
307.315 258.684 li
310.57 258.684 li
313.825 258.684 li
317.08 258.684 li
320.335 258.684 li
323.59 258.684 li
326.845 258.684 li
330.1 258.684 li
333.355 258.684 li
336.61 258.684 li
339.865 258.684 li
343.12 258.684 li
346.375 258.684 li
346.375 260.684 li
343.12 260.684 li
339.865 260.684 li
336.61 260.684 li
333.355 260.684 li
330.1 260.684 li
326.845 260.684 li
323.59 260.684 li
320.335 260.684 li
317.08 260.684 li
313.825 260.684 li
310.57 260.684 li
307.315 260.684 li
304.06 260.684 li
300.805 260.684 li
297.55 260.684 li
294.295 260.684 li
291.04 260.684 li
287.785 260.684 li
284.53 260.684 li
281.275 260.684 li
278.02 260.684 li
274.765 260.684 li
271.51 260.684 li
268.255 260.684 li
265 260.684 li
261.745 260.684 li
258.49 260.684 li
255.235 260.684 li
251.98 260.684 li
248.725 260.684 li
245.47 260.684 li
242.215 260.684 li
238.96 260.684 li
235.705 260.684 li
235.677 260.684 li
232.422 260.592 li
232.311 260.583 li
229.097 260.13 li
225.884 259.949 li
222.629 259.765 li
222.601 259.763 li
219.346 259.488 li
219.159 259.454 li
215.955 258.551 li
212.767 258.012 li
209.526 257.555 li
209.298 257.495 li
206.102 256.234 li
202.909 255.424 li
202.811 255.394 li
199.58 254.21 li
196.349 253.208 li
193.094 252.199 li
192.938 252.136 li
189.703 250.495 li
186.469 249.036 li
183.247 247.584 li
180.026 246.403 li
179.918 246.356 li
176.663 244.705 li
176.643 244.695 li
173.461 242.991 li
170.285 241.917 li
170.114 241.84 li
166.859 240.005 li
166.841 239.995 li
163.623 238.09 li
160.408 236.55 li
160.249 236.455 li
157.001 234.074 li
153.769 231.797 li
150.539 229.703 li
147.293 227.691 li
147.214 227.637 li
143.959 225.16 li
143.884 225.096 li
140.665 222.102 li
137.449 219.655 li
137.409 219.623 li
134.154 216.871 li
134.108 216.829 li
130.863 213.72 li
127.62 210.795 li
127.55 210.725 li
124.295 207.147 li
124.264 207.111 li
121.046 203.211 li
117.833 200.132 li
117.761 200.056 li
114.506 196.203 li
114.46 196.144 li
111.249 191.71 li
108.048 188.461 li
107.982 188.387 li
104.733 184.359 li
101.486 180.515 li
101.446 180.464 li
98.2139 176.091 li
94.9839 172.359 li
91.7461 168.617 li
88.5078 165.241 li
88.459 165.185 li
85.2231 161.264 li
81.9888 157.8 li
81.9639 157.772 li
78.7349 154.041 li
75.5078 150.857 li
75.4063 150.74 li
72.1611 146.349 li
68.915 142.233 li
68.7959 142.042 li
65.541 135.161 li
65.5088 135.086 li
62.2539 126.462 li
62.229 126.386 li
58.9741 115.102 li
58.9561 115.028 li
55.7012 99.3398 li
55.6899 99.2798 li
52.4351 76.7119 li
52.4312 76.6831 li
49.1802 48.272 li
45.9951 29.7778 li
43.313 27.6621 li
40.4048 27.6621 li
37.1499 27.6621 li
33.895 27.6621 li
30.6401 27.6621 li
27.3848 27.6621 li
24.1299 27.6621 li
24.1299 25.6621 li
.0618296 0 .965484 0 cmyk
f
102.25 56.6631 mo
98.9951 51.1763 li
95.7402 50.2119 li
92.4849 52.562 li
89.23 53.7002 li
85.9751 52.2642 li
82.7202 49.3799 li
79.4648 49.6172 li
76.21 50.3662 li
72.9551 55.5479 li
69.7002 48.3169 li
66.7319 47.9399 li
66.4448 47.4063 li
65.4102 45.9609 li
64.1001 43.686 li
63.1899 41.147 li
62.291 40.645 li
59.9351 36.8159 li
59.917 36.771 li
59.9351 36.7798 li
63.1899 35.0381 li
66.4448 37.4673 li
69.7002 36.3003 li
72.9551 35.8999 li
76.21 38.8433 li
79.4648 38.311 li
82.7202 38.3682 li
85.9751 37.4448 li
89.23 37.2651 li
92.4849 39.189 li
95.7402 38.2583 li
98.9951 39.127 li
102.25 39.9829 li
105.505 37.0503 li
108.76 41.75 li
112.015 38.2822 li
115.27 38.353 li
118.525 38.6479 li
121.78 38.9331 li
125.035 39.1802 li
128.29 38.127 li
131.545 35.1572 li
134.8 38.1982 li
138.055 38.731 li
141.31 41.0103 li
144.565 37.208 li
147.82 40.9082 li
151.075 38.0532 li
154.33 38.7012 li
157.585 39.0649 li
160.84 37.3643 li
164.095 37.1221 li
167.35 37.2153 li
170.605 38.8882 li
173.86 37.9028 li
177.115 38.3081 li
180.37 40.437 li
183.625 37.6699 li
186.88 34.3853 li
190.135 35.2759 li
193.39 38.6699 li
196.645 38.8032 li
199.9 38.5181 li
203.155 40.1099 li
206.41 37.7739 li
209.665 37.1421 li
212.92 36.4531 li
216.175 37.3579 li
219.43 36.9419 li
222.685 37.8433 li
225.94 39.6162 li
229.195 35.4463 li
232.45 37.4111 li
235.705 33.1128 li
238.96 35.252 li
242.215 39.1431 li
245.47 37.5073 li
248.725 36.3198 li
251.98 37.314 li
255.235 34.8618 li
258.49 36.1162 li
261.745 37.4961 li
265 35.936 li
268.255 35.8589 li
271.51 37.145 li
274.765 34.4531 li
278.02 36.0869 li
281.275 37.937 li
284.53 37.0029 li
287.785 37.499 li
291.04 38.9312 li
294.295 39.0781 li
297.55 39.4473 li
300.805 39.1938 li
304.06 39.5552 li
307.315 37.4111 li
310.57 39.3452 li
313.825 37.7871 li
317.08 37.3433 li
320.335 36.0112 li
323.59 36.1353 li
326.845 37.2612 li
330.1 38.3599 li
333.355 39.9761 li
336.61 37.3311 li
339.865 40.4438 li
343.12 36.7461 li
346.375 38.5391 li
346.375 52.1079 li
343.12 54.5571 li
339.865 50.0732 li
336.61 53.8159 li
333.355 54.147 li
330.1 52.2822 li
326.845 52.8032 li
323.59 51.7271 li
320.335 54.0059 li
317.08 52.1831 li
313.825 51.0313 li
310.57 52.9531 li
307.315 47.0522 li
304.06 50.397 li
300.805 54.1812 li
297.55 50.1401 li
294.295 51.2241 li
291.04 51.3672 li
287.785 47.8721 li
284.53 47.269 li
281.275 47.8081 li
278.02 48.1621 li
274.765 48.6631 li
271.51 50.5688 li
268.255 53.9722 li
265 50.1162 li
261.745 54.1973 li
258.49 50.4829 li
255.235 46.8208 li
251.98 52.9321 li
248.725 49.7441 li
245.47 51.8442 li
242.215 50.98 li
238.96 53.835 li
235.705 52.6519 li
232.45 51.2153 li
229.195 51.311 li
225.94 52.1479 li
222.685 48.9868 li
219.43 52.75 li
216.175 48.7349 li
212.92 53.2212 li
209.665 53.2778 li
206.41 53.0288 li
203.155 51.4868 li
199.9 52.4902 li
196.645 52.395 li
193.39 50.7158 li
190.135 49.311 li
186.88 47.646 li
183.625 47.3433 li
180.37 53.8809 li
177.115 51.249 li
173.86 52.7241 li
170.605 55.7368 li
167.35 49.7788 li
164.095 50.9531 li
160.84 51.6221 li
157.585 51.5981 li
154.33 52.854 li
151.075 49.5073 li
147.82 50.1631 li
144.565 52.854 li
141.31 52.0581 li
138.055 52.8252 li
134.8 55.1411 li
131.545 47.8003 li
128.29 50.8823 li
125.035 52.9321 li
121.78 51.5459 li
118.525 53.9883 li
115.27 50.3003 li
112.015 50.9121 li
108.76 50.792 li
105.505 50.8423 li
102.25 56.6631 li
.421149 .392065 0 0 cmyk
f
66.7319 47.9399 mo
66.5591 47.918 li
66.4448 47.7109 li
66.1162 47.186 li
65.4102 45.9609 li
66.4448 47.4063 li
66.7319 47.9399 li
.50811 .634119 0 0 cmyk
f
65.4102 45.9609 mo
64.9102 45.2622 li
64.3369 44.3491 li
64.1001 43.686 li
65.4102 45.9609 li
.568566 .569085 0 0 cmyk
f
66.1162 47.186 mo
64.9102 45.2622 li
65.4102 45.9609 li
66.1162 47.186 li
.616266 .706722 0 0 cmyk
f
62.291 40.645 mo
61.7422 40.3389 li
59.9351 37.168 li
59.686 36.6519 li
59.917 36.771 li
59.9351 36.8159 li
62.291 40.645 li
.568566 .569085 0 0 cmyk
f
61.7422 40.3389 mo
61.7061 40.3188 li
59.9351 37.6929 li
59.5571 37.2803 li
59.1709 36.3892 li
59.686 36.6519 li
59.9351 37.168 li
61.7422 40.3389 li
.578637 .65539 0 0 cmyk
f
59.5571 37.2803 mo
58.5391 36.1709 li
58.479 36.0342 li
59.1709 36.3892 li
59.5571 37.2803 li
.71722 .769009 0 0 cmyk
f
66.5591 47.918 mo
66.5249 47.9141 li
66.4448 47.7568 li
66.1162 47.186 li
66.4448 47.7109 li
66.5591 47.918 li
.779568 .855985 0 0 cmyk
f
64.9102 45.2622 mo
64.4189 44.5771 li
64.3369 44.3491 li
64.9102 45.2622 li
.795468 .797665 0 0 cmyk
f
66.5249 47.9141 mo
66.4448 47.9038 li
66.3408 47.8989 li
64.6362 45.1841 li
64.4189 44.5771 li
64.9102 45.2622 li
66.1162 47.186 li
66.4448 47.7568 li
66.5249 47.9141 li
.828183 .889097 0 0 cmyk
f
66.3408 47.8989 mo
65.5952 47.8599 li
64.6362 45.1841 li
66.3408 47.8989 li
.840269 .928984 0 0 cmyk
f
61.7061 40.3188 mo
61.3779 40.1362 li
59.9351 37.9658 li
59.7759 37.7881 li
59.5571 37.2803 li
59.9351 37.6929 li
61.7061 40.3188 li
.817441 .871244 0 0 cmyk
f
61.3779 40.1362 mo
60.689 39.751 li
60.3848 39.1938 li
59.7759 37.7881 li
59.9351 37.9658 li
61.3779 40.1362 li
.840269 .928984 0 0 cmyk
f
60.689 39.751 mo
59.9351 39.3301 li
58.5391 36.1709 li
59.5571 37.2803 li
59.7759 37.7881 li
60.3848 39.1938 li
60.689 39.751 li
.890959 .928801 0 .000244144 cmyk
f
58.6392 47.813 mo
56.6802 46.938 li
53.4248 45.4209 li
51.2559 43.062 li
50.2119 33.9492 li
53.4248 35.2642 li
56.6802 43.8511 li
58.6392 47.813 li
.421149 .392065 0 0 cmyk
f
59.9351 48.3931 mo
58.6392 47.813 li
56.6802 43.8511 li
53.4248 35.2642 li
50.2119 33.9492 li
50.1699 33.584 li
49.4849 31.395 li
49.7588 31.5181 li
49.811 31.5391 li
50.1279 31.7319 li
50.1699 31.7642 li
53.4248 34.71 li
54.6992 36.312 li
55.7832 38.3892 li
59.0288 45.3413 li
59.0571 45.3979 li
60.6172 48.2549 li
59.9351 48.3931 li
.646326 .28986 .102663 0 cmyk
f
50.1279 31.7319 mo
49.811 31.5391 li
49.8501 31.5542 li
49.9341 31.583 li
50.1279 31.7319 li
.703059 .448402 .180575 .00784314 cmyk
f
54.6992 36.312 mo
53.4248 34.71 li
50.1699 31.7642 li
50.1279 31.7319 li
50.1699 31.7573 li
53.4248 34.2642 li
54.2769 35.502 li
54.6992 36.312 li
.819058 .490394 .212345 .0207828 cmyk
f
54.2769 35.502 mo
53.4248 34.2642 li
50.1699 31.7573 li
50.1279 31.7319 li
49.9341 31.583 li
51.1812 32.0039 li
53.0859 33.4541 li
53.373 33.769 li
54.2769 35.502 li
.852506 .587366 .251438 .0581369 cmyk
f
53.373 33.769 mo
53.0859 33.4541 li
51.1812 32.0039 li
51.5869 32.1411 li
53.0801 33.4458 li
53.353 33.731 li
53.373 33.769 li
.889647 .725887 .305119 .143984 cmyk
f
53.353 33.731 mo
53.0801 33.4458 li
51.5869 32.1411 li
52.7241 32.5259 li
53.353 33.731 li
1 .790066 .355962 .231113 cmyk
f
64.1001 43.686 mo
63.1899 42.1069 li
62.291 40.645 li
63.1899 41.147 li
64.1001 43.686 li
.646326 .28986 .102663 0 cmyk
f
64.3369 44.3491 mo
63.1899 42.519 li
61.8638 40.5532 li
61.7422 40.3389 li
62.291 40.645 li
63.1899 42.1069 li
64.1001 43.686 li
64.3369 44.3491 li
.715053 .408759 .0893873 0 cmyk
f
61.8638 40.5532 mo
61.7061 40.3188 li
61.7422 40.3389 li
61.8638 40.5532 li
.734981 .460182 .176822 .00848402 cmyk
f
58.5391 36.1709 mo
58.3569 35.9722 li
58.479 36.0342 li
58.5391 36.1709 li
.830045 .622919 .0634775 .00241093 cmyk
f
62.6689 47.8403 mo
62.5532 47.627 li
62.689 47.8359 li
62.6689 47.8403 li
.82916 .522972 .296941 .0709544 cmyk
f
62.689 47.8359 mo
62.5532 47.627 li
60.8281 44.4673 li
58.8398 40.209 li
59.4639 41.001 li
59.9351 41.9961 li
62.793 47.8149 li
62.689 47.8359 li
.840787 .576348 .314855 .102846 cmyk
f
59.4639 41.001 mo
58.8398 40.209 li
58.708 39.9263 li
59.3501 40.7583 li
59.4639 41.001 li
.866514 .663752 .338994 .162844 cmyk
f
62.793 47.8149 mo
59.9351 41.9961 li
59.4639 41.001 li
59.5151 41.0649 li
62.75 47.082 li
62.748 47.0791 li
63.105 47.752 li
62.793 47.8149 li
.878508 .629999 .268589 .081117 cmyk
f
59.5151 41.0649 mo
59.4639 41.001 li
59.3501 40.7583 li
59.375 40.791 li
59.4888 41.0161 li
59.4951 41.0269 li
59.5151 41.0649 li
.89395 .678248 .286809 .11017 cmyk
f
63.7158 47.7622 mo
63.1899 47.7349 li
63.105 47.752 li
62.748 47.0791 li
62.75 47.082 li
59.5151 41.0649 li
59.4951 41.0269 li
59.4888 41.0161 li
59.375 40.791 li
59.5249 40.9849 li
62.7622 46.0942 li
63.7158 47.7622 li
.870451 .616052 .325353 .12781 cmyk
f
56.9829 36.0723 mo
56.647 35.7222 li
56.144 34.7573 li
56.4038 34.9302 li
56.9829 36.0723 li
.840787 .576348 .314855 .102846 cmyk
f
57.3501 36.5278 mo
57.0762 36.1729 li
57.041 36.1318 li
56.9829 36.0723 li
56.4038 34.9302 li
56.6802 35.1128 li
56.6812 35.1128 li
57.3501 36.5278 li
.822232 .546654 .41239 .184359 cmyk
f
64.4189 44.5771 mo
63.1899 42.8608 li
63.1128 42.7451 li
61.8638 40.5532 li
63.1899 42.519 li
64.3369 44.3491 li
64.4189 44.5771 li
.860044 .575402 .201602 .0264591 cmyk
f
64.6362 45.1841 mo
63.1899 42.8799 li
63.1128 42.7451 li
63.1899 42.8608 li
64.4189 44.5771 li
64.6362 45.1841 li
.883116 .640619 .225925 .0513619 cmyk
f
63.1128 42.7451 mo
61.3779 40.1362 li
61.7061 40.3188 li
61.8638 40.5532 li
63.1128 42.7451 li
.870176 .601129 .248295 .0598764 cmyk
f
65.5952 47.8599 mo
65.0562 47.832 li
63.6318 45.1431 li
63.6289 45.1372 li
60.689 39.751 li
61.3779 40.1362 li
63.1128 42.7451 li
63.1899 42.8799 li
64.6362 45.1841 li
65.5952 47.8599 li
.878508 .629999 .268589 .081117 cmyk
f
59.1528 38.8662 mo
57.3501 36.5278 li
56.6812 35.1128 li
57.771 35.6719 li
59.1528 38.8662 li
.870451 .616052 .325353 .12781 cmyk
f
65.0562 47.832 mo
64.9038 47.8242 li
63.624 45.5869 li
63.6118 45.5679 li
60.3569 40.4312 li
60.3311 40.3931 li
59.1528 38.8662 li
57.771 35.6719 li
58.3569 35.9722 li
58.5391 36.1709 li
59.9351 39.3301 li
60.689 39.751 li
63.6289 45.1372 li
63.6318 45.1431 li
65.0562 47.832 li
.926848 .709743 .192966 .043061 cmyk
f
64.9038 47.8242 mo
63.7158 47.7622 li
62.7622 46.0942 li
59.5249 40.9849 li
59.375 40.791 li
59.3501 40.7583 li
58.708 39.9263 li
57.5859 37.5229 li
57.5669 37.4829 li
56.647 35.7222 li
56.9829 36.0723 li
57.041 36.1318 li
57.0762 36.1729 li
57.3501 36.5278 li
59.1528 38.8662 li
60.3311 40.3931 li
60.3569 40.4312 li
63.6118 45.5679 li
63.624 45.5869 li
64.9038 47.8242 li
1 .790066 .355962 .231113 cmyk
f
60.6172 48.2549 mo
59.0571 45.3979 li
59.0288 45.3413 li
55.7832 38.3892 li
54.6992 36.312 li
54.2769 35.502 li
53.373 33.769 li
53.353 33.731 li
52.7241 32.5259 li
51.5869 32.1411 li
51.1812 32.0039 li
49.9341 31.583 li
49.8501 31.5542 li
49.811 31.5391 li
49.7588 31.5181 li
49.4849 31.395 li
49.2139 30.5269 li
50.1699 30.8242 li
53.4248 32.9531 li
56.144 34.7573 li
56.647 35.7222 li
57.5669 37.4829 li
57.5859 37.5229 li
58.708 39.9263 li
58.8398 40.209 li
60.8281 44.4673 li
62.5532 47.627 li
62.6689 47.8403 li
60.6172 48.2549 li
.838315 .151553 .779507 .0201114 cmyk
f
51.2559 43.062 mo
50.1699 41.8809 li
50.0898 41.771 li
48.4941 32.5103 li
50.1699 33.9321 li
50.2119 33.9492 li
51.2559 43.062 li
.414832 .372503 .0559396 0 cmyk
f
50.2119 33.9492 mo
50.1699 33.9321 li
48.4941 32.5103 li
48.2031 30.8169 li
49.4849 31.395 li
50.1699 33.584 li
50.2119 33.9492 li
.580072 .290623 .350134 .0114443 cmyk
f
49.4849 31.395 mo
48.2031 30.8169 li
48.0928 30.1802 li
49.2139 30.5269 li
49.4849 31.395 li
.76965 .175631 .764797 .0289006 cmyk
f
47.2358 37.8618 mo
46.915 37.4219 li
43.6602 33.3311 li
41.0938 28.6362 li
43.6602 28.8911 li
44.8188 29.7021 li
46.915 35.2012 li
47.2358 37.8618 li
.421149 .392065 0 0 cmyk
f
44.8188 29.7021 mo
43.6602 28.8911 li
41.0938 28.6362 li
40.981 28.4302 li
43.4063 28.5669 li
44.605 29.1411 li
44.8188 29.7021 li
.646326 .28986 .102663 0 cmyk
f
44.605 29.1411 mo
43.4063 28.5669 li
40.981 28.4302 li
40.562 27.6621 li
43.313 27.6621 li
44.354 28.4839 li
44.605 29.1411 li
.838315 .151553 .779507 .0201114 cmyk
f
47.4341 38.1323 mo
47.2358 37.8618 li
46.915 35.2012 li
44.8188 29.7021 li
46.1411 30.627 li
47.4341 38.1323 li
.414832 .372503 .0559396 0 cmyk
f
46.1411 30.627 mo
44.8188 29.7021 li
44.605 29.1411 li
46 29.8091 li
46.1411 30.627 li
.580072 .290623 .350134 .0114443 cmyk
f
46 29.8091 mo
44.605 29.1411 li
44.354 28.4839 li
45.9951 29.7778 li
46 29.8091 li
.76965 .175631 .764797 .0289006 cmyk
f
50.0898 41.771 mo
47.4341 38.1323 li
46.1411 30.627 li
46 29.8091 li
45.9951 29.7778 li
44.354 28.4839 li
43.313 27.6621 li
40.562 27.6621 li
40.4048 27.375 li
37.1499 26.6621 li
40.4048 26.3149 li
43.6602 26.7583 li
46.915 29.814 li
48.0928 30.1802 li
48.2031 30.8169 li
48.4941 32.5103 li
50.0898 41.771 li
.418769 .304936 .70248 .0426032 cmyk
f
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
24.1299 26.6621 mo
27.3848 26.6621 li
30.6401 26.6621 li
33.895 26.6621 li
37.1499 26.6621 li
40.4048 26.8452 li
43.6602 30.0562 li
46.915 33.6343 li
50.1699 36.3862 li
53.4248 39.23 li
56.6802 41.0649 li
59.9351 42.625 li
63.1899 41.4321 li
66.4448 42.7173 li
69.7002 42.3501 li
72.9551 45.8359 li
76.21 44.6431 li
79.4648 44.001 li
82.7202 43.9092 li
85.9751 44.918 li
89.23 45.561 li
92.4849 45.9272 li
95.7402 44.2759 li
98.9951 45.1938 li
102.25 48.4043 li
105.505 44.001 li
108.76 46.2939 li
112.015 44.6431 li
115.27 44.3682 li
118.525 46.3862 li
121.78 45.2852 li
125.035 46.1108 li
128.29 44.5513 li
131.545 41.5239 li
134.8 46.7529 li
138.055 45.8359 li
141.31 46.5698 li
144.565 45.1021 li
147.82 45.561 li
151.075 43.8169 li
154.33 45.8359 li
157.585 45.377 li
160.84 44.5513 li
164.095 44.0933 li
167.35 43.542 li
170.605 47.395 li
173.86 45.377 li
177.115 44.8271 li
180.37 47.2119 li
183.625 42.5332 li
186.88 41.0649 li
190.135 42.3501 li
193.39 44.7349 li
196.645 45.6519 li
199.9 45.561 li
203.155 45.8359 li
206.41 45.4692 li
209.665 45.2852 li
212.92 44.918 li
216.175 43.084 li
219.43 44.918 li
222.685 43.4502 li
225.94 45.9272 li
229.195 43.4502 li
232.45 44.3682 li
235.705 42.9922 li
238.96 44.6431 li
242.215 45.1021 li
245.47 44.7349 li
248.725 43.084 li
251.98 45.1938 li
255.235 40.8823 li
258.49 43.3589 li
261.745 45.9272 li
265 43.084 li
268.255 45.0103 li
271.51 43.9092 li
274.765 41.6162 li
278.02 42.166 li
281.275 42.8999 li
284.53 42.166 li
287.785 42.7173 li
291.04 45.1938 li
294.295 45.1938 li
297.55 44.8271 li
300.805 46.7529 li
304.06 45.0103 li
307.315 42.2583 li
310.57 46.2031 li
313.825 44.46 li
317.08 44.8271 li
320.335 45.1021 li
323.59 44.001 li
326.845 45.1021 li
330.1 45.377 li
333.355 47.1201 li
336.61 45.6519 li
339.865 45.2852 li
343.12 45.7441 li
346.375 45.377 li
.883848 .768521 0 0 cmyk
@
.5 lw
2 lc
346.375 4.64404 mo
346.375 7.89893 li
281.275 4.64404 mo
281.275 7.89893 li
216.175 4.64404 mo
216.175 7.89893 li
151.075 4.64404 mo
151.075 7.89893 li
85.9751 4.64404 mo
85.9751 7.89893 li
20.875 4.64404 mo
20.875 7.89893 li
346.375 261.519 mo
346.375 258.264 li
281.275 261.519 mo
281.275 258.264 li
216.175 261.519 mo
216.175 258.264 li
151.075 261.519 mo
151.075 258.264 li
85.9751 261.519 mo
85.9751 258.264 li
20.875 261.519 mo
20.875 258.264 li
20.875 4.64404 mo
346.375 4.64404 li
20.875 261.519 mo
346.375 261.519 li
.639918 .563928 .533043 .294835 cmyk
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
def
/FontBBox {-665 -325 2000 1040} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE
023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C
071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D
17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63
B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F6
03BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A
7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219
571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A
1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A
55977C35> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BTKFIG+ArialMT /ArialMT findfont ct_VMDictPut
/BTKFIG+ArialMT*1 
[48{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six 
/.notdef /eight 199{/.notdef}rp]
BTKFIG+ArialMT nf
BTKFIG+ArialMT*1 [10.0001 0 0 -10.0001 0 0 ]msf
18.0625 275.644 mo
(02)
[62.292 0 ]xsh
85.9141 275.644 mo
(04)
[59.542 0 ]xsh
151.016 275.644 mo
(06)
[59.542 0 ]xsh
216.109 275.644 mo
(08)
[59.542 0 ]xsh
281.211 275.644 mo
(0)sh
337.938 275.644 mo
(100)sh
346.375 4.64404 mo
343.12 4.64404 li
346.375 41.3403 mo
343.12 41.3403 li
346.375 78.0371 mo
343.12 78.0371 li
346.375 114.733 mo
343.12 114.733 li
346.375 151.43 mo
343.12 151.43 li
346.375 188.126 mo
343.12 188.126 li
346.375 224.823 mo
343.12 224.823 li
346.375 261.519 mo
343.12 261.519 li
20.875 4.64404 mo
24.1299 4.64404 li
20.875 41.3403 mo
24.1299 41.3403 li
20.875 78.0371 mo
24.1299 78.0371 li
20.875 114.733 mo
24.1299 114.733 li
20.875 151.43 mo
24.1299 151.43 li
20.875 188.126 mo
24.1299 188.126 li
20.875 224.823 mo
24.1299 224.823 li
20.875 261.519 mo
24.1299 261.519 li
346.375 261.519 mo
346.375 4.64404 li
20.875 261.519 mo
20.875 4.64404 li
@
BTKFIG+ArialMT*1 [10.0001 0 0 -10.0001 0 0 ]msf
11.25 265.457 mo
(0)sh
5.625 228.753 mo
(20)
[5.56152 0 ]xsh
5.625 192.066 mo
(40)
[5.56152 0 ]xsh
5.625 155.371 mo
(60)
[5.56152 0 ]xsh
5.625 118.667 mo
(80)
[5.56152 0 ]xsh
0 81.9722 mo
(100)sh
0 45.2847 mo
(120)sh
0 8.58154 mo
(140)sh
338.125 243.144 mo
338.125 64.269 li
226 64.269 li
226 243.144 li
338.125 243.144 li
cp
0 0 0 0 cmyk
f
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BookAntiqua def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 69 /E put
dup 76 /L put
dup 85 /U put
def
/FontBBox {-136 -311 1154 1036} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/E <1C60D8A8C9B7D8BE16EC39D8CBD3F58B471D0E5EA5E63273876911DD3BA4
5DE81FE0E1D297C1458CD52786D7C4EB0FE88802D11295C35B1CDC9597B776CD
41991E2467FA6D9E817D44F298E1004299185A3B60A8C4E2109FF99A796375CB
44CB4B8F3B088AC0ED0EBAFF32631632647962685449B46A9A81D410BF6C68FC
103BD741C2BDE69CB5E208D11B6D1E75BB1D167F1DAB5A3F711CF77D041B4368
93840F21A11AE200C32A4A5B94FDF508DD38081E10033E0E921DFEA77AC2CBCC
9FA13C28A2E8C2D882657E3DC7D656093CDC9DB63F1A19B7B021B513DE4AC7E8
D75DE42C295B2AF8591F5CA881795FF95595928610765583F6A7E920627B3B52
03B3C4DE0C315F25C7EDD4F56404D7FB9973640F48B7234956AA02ED74> |-
/L <1C60D8A8C9B7D8BE164AFA37803C79C1969111CB1B8059B5F802734C8432
3E94942E7FE8EBF1D03586CD5C93C191EBAFD51C23C601A8B3FD7AC192724128
1B82B9399E295353629FAA76D3F491A7245977FF655EC58A942861A33DF557D4
39843583370E4B6156F24EAA34688971CF1384B2A4A3C5F16192C4BE13C7061C
2FF8FC4C5E813713871026A2100AC2C9> |-
/U <1C60D8A8C9B6FF86C364E11E3A12944E7B092AC088392AB5B3E4946BC5C7
7BE11CAA518172F5ABDF2F748A0A915B903F17B23F0433F36F5097EE4EE2F344
CF2FE53A2AE8D71200FB1370BC42BAEF12FC05078F61F9939943D53C5827A79A
984649F9AEAF9D7554B1B3C956ED67A092C480CAE6A57161D3EBE05FE018628C
B8E65E8B278A103BC1196D94A697C55247AE231DA0D81BCEC6BB3570CE6BB8AA
F946F7048A3805ED693A5CAC572FF8AB877712B68419858EC1F5BAEEF28DFF52
0108E0BDCF64B66A74CBBDD30ACEF41FD032B2056CB3F0E5B940C903BBE1287E
343256> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BTKFIH+BookAntiqua /BookAntiqua findfont ct_VMDictPut
/BTKFIH+BookAntiqua*1 
[69{/.notdef}rp /E 6{/.notdef}rp /L 8{/.notdef}rp /U 170{/.notdef}rp]
BTKFIH+BookAntiqua nf
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 78.894 mo
(ELU)sh
1 lw
0 lc
229 74.394 mo
259 74.394 li
.690089 .383154 .161959 .00335698 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
BTKFIH+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6B5ED96B8E459A2753CCFE8892C0DE3A95553AB265CF0A1AC
46A10E03424CEF1553C8F5AF78742DBD4E1D08F6ACFDF9B618A9BCD15E2CB43E
3FF8B4EED32A6490E2D12DB2F404EF9F29FA5B38A3BBCF98A1A73B9722891AE0
A0B400CFAB6488ACDC91E52164924C27AEA0A2069DD02F14F5D5810B099ED56B
6CF97E41B11D7817F66A4E5140CEEE293E3DB6902620AF874E1B786509E203E6
A5004B14C7C36E181A4E50B8D744187C4873EB858D82832D42F1104D8ED9B512
D1ED318BCA1BE9B34836976AE308CC9B28AA31017B387C82D5B0597C999864E4
864FA44582FCDD965DC24B8F190DADDB705510B86195DF46E9575E44AD29A1E1
E5D6934BD72AB7EAC867D0A6811F0D4233705D18AAFBC9EAFAD9521FF20F2ED2
178A1C6ECC5443D5DE0ED8EBA173E1C2> |-
/S <1C60D8A8C9B78E05EAF340E05925B0F5DDA3D2BF7E3ADE00218341960418
DE3787C3039EF2918052D5E9865628C603AC1CA5CA13BAA2D32A7EAB4ADE8431
2F2EE5EB5C1536130E8D1475A5B07897AD349E87BA9BD6C0EF99B7C95399C050
70E48EC35738C65187A14719D62269F2FEC062D1600F9E11B35DACA92B0C6282
5968E726C9CDA533AFE6824A37F97E4A0D3747004A0E5DDE4E1885C515AD3DA5
5E36887846664D015DC35E506564F96EE08B74122C1C30EEBAF77C475C1E5319
C5BBA8A16CA47C392C6B988DD47690FE4E7519DE9FDE5F3CBA9D997269751C24
520AC36311D980A7841915B9D48844DFCD3F67B831024A2C537FE51271A7B5C4> |-
/a <1C60D8A8C9B7A73DA26D338A6EEFAF8BB2FAC63C743BFE9A5A80EA72EC22
660F3E4A4E885B4905407C31DEBC559084C6BF950BA9E868F8A4BB47279BACFC
6372A38C14C6D5F73AF5937386D62DD6E9221F0E422578172B23F5401A2EDD27
4458922B3E129B4E6760F094D6F7E148B510515C089E56F76AC0240BEAC5286B
C25179938A46897755CC1345E96A1D77F361C6E9BBAA16C1223DF11B055C9902
F7812886C2537E2837DB54626F97E68F5BED5FD22CAAC417C92B7ADB5C1A34FA
58EC3DDC0F438BD5644A08CF610B8D809EFF3FAFFDEAE45E56C23A4A6DBFCA6A
FE012169C76E636CCD336FF493> |-
/d <1C60D8A8C9B7D8BE16D35E9B07F4AA3ABC773F184EE6E3111EBEE58F30E7
4A5C093788762907EB397F545117B70EC1296402158CFCA893B8E152B3FED36E
BC67D9C422DFAFFE9752EA098BF93AACA36D5C53A4280D01E7779BF82492241F
45A36D4AC8AF6C6A73199DBE26F54AF4D2F32664041412328449449B9B052454
65D73F29B7B78A009D3DC437AB899F90B7D6DED4621A749FF3E64ED1D2D44A37
38AAA4969F7B94DE8AF8C9F8147A2815FC0785F4CBE2EE70997E006E82C0254B
9A7E6F86D0E9EAFCDC1ABC198649CF35A5DC7EBBED1C5E3BBF99F817AC072E4F
8075791A1E4D4F15CF3F8E678254E97E72C1E1> |-
/h <1C60D8A8C9B7F51B18159B5FF63AD2E0D7D679B77B296A725B57466BC230
50324AECE33E7D9BEB52BA8A103C5CBCA3B7E27B8C75FAB40CF9B8EB7941E549
5BD10F3B2FA87166D6A87636CF5BF95357F444CA45C403C108F0F847D2056EFD
48E51D5D3A9FFB4F092FBAFBC337C7391D6C2545AD8E3C2A2AB05E68F63C6C29
6A9D33A2B997CBE23B2A044B6CDADF96438194BD01696EADF3B5CB84C50E7372
5B32792A405AF69F89303DA306BDF349E70808F084C466BB339A966649FC9862
0E613E82BCBB91CCA1B932F3CD7F310FB6DBB28A75A8ADE4E525E64841A61BB3
C5F57E81A0F2F921641E340A4B6D9B09FFA37795DDEED6056E3A13539929E6C8
290A> |-
/i <1C60D8A8C9B849F23D73D7255A38593E9B1806D32FCF9326305AA22829CA
FCB5F9266D8DE5F7EB0E14C4DD0D3CF85A96105EE760560766A33D7C629DBEBC
66F738B47A4E100D579E6400920AF310AD0CE99182AC975696094C57E14EA2FC
97E32934310813EAC3D3CB531FB424FBDD8C1EAE9E6C55255DA16BE0E39556E9
C8BB9DC14ACDE9A6F41C01481B6BB4C3E8B9B956CE58001D9D2F571B526B031D
13D32DCB63A44C8C7075E40F45A8C2DF2E0EF0F0F1A46C024B35E6375819F35F
0FB783BC9C56C9> |-
/k <1C60D8A8C9B7EF322B4008F4F8D6DC9FA2CED93A3DD253EA43AE99404035
2CA8268E6D675681356509D70AE5BD11A8EF1687C7F472DD4F35857F5F1573C0
D557B53CC08059784B8FC61DD6017EDAB06480149C5EC3FFF010FBC9E5AC3EF5
4606478176DA92B154DA0E46E7A1513B83AA9B16A6F2E0CB2353B7BC1FA7CE57
2054B4E2BCD62A810C35B313B25747138DADC65ECBD82BC25CFD867E4B820798
B60348AB329178147F3B5DBA6C4512466A47DECDABF6E287B4C8855F908A059A
C9322A3B130BB24CC3A8FB237DDC4FF9E8CB50> |-
/n <1C60D8A8C9B7F51B1816CA1D547B9D412112B1108000BCD479B15D29278E
FF207C440633A34B346F87B40F04E5E8F9C3FD06BA69AD06F44D8C96AE9209E7
498AB8729996BB695FCE0B76D992BC29F7448E4EDD94CFE81D9BB5C9989A683A
B090A7835C786BCAAE46573AD51B72F79C70758202DE28EBE70CE7666E0009E5
8B750E17F7688635342A3A4A4867D024FAC7839AA7003B6BB16E2A4C4D307F4F
8B37258A1025AA52F5F9CA647EC474B0B3E170234ABEBE6186CD896F64E4903D
F224FF80948F28E0808441F171FD8CA35D9629D9DC842C46B11E25C3EDAB94A4
B6D8C6A956862134214DB61684C934E1AA4D366FB59218F15C370355> |-
/r <1C60D8A8C9B730312D829ACB32CAC9B0868517203C18ED7F200FC8B47626
14F491608722BDEC68642FEEF3A308D209E98DC1910738458AE0B66D86FC6E3E
E048C4D2E5A7A6580A60283A65FA611CAF5AD8A9A819077BD620B6F2B9159736
2775A0E5A1F539B6F86C81E3735CE68ED61BDF940319D0ECD0FF998CC5FBC404
4636F5AE8659C5D7930F28ADA0487897DC17F3038C0C3AC48F30ECE6D927C22F
49EFD0A0756B4A01D3FB62E238AFFDC56D27A7E970F850F1760B32056DADA890
D9522A82A5C86A55CCC2BA28CC6D3BBE65034AE6D54B98FDFF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BTKFIH+BookAntiqua /Encoding get
dup 72 /H put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 114 /r put
pop
%ADOEndSubsetFont
/BTKFIH+BookAntiqua*1 
[69{/.notdef}rp /E 2{/.notdef}rp /H 3{/.notdef}rp /L 6{/.notdef}rp /S 
/.notdef /U 11{/.notdef}rp /a 2{/.notdef}rp /d 3{/.notdef}rp /h 
/i /.notdef /k 2{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]
BTKFIH+BookAntiqua nf
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 96.519 mo
(HardShri)sh
319.081 96.519 mo
(nk)
[8.14844 0 ]xsh
229 92.019 mo
259 92.019 li
.0242008 .874479 .715511 .00109865 cmyk
@
.67953 .634058 .618097 .562646 cmyk
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 114.136 mo
(SELU)sh
229 109.644 mo
259 109.644 li
.585565 .00601205 .761959 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
BTKFIH+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B81F2C3A31E918DDCA74965E4B3B9EABE1B4EF24A865919DDE
CEBF579448D2DE133398E5B5CAC94ADCECA754D48E5C42651201C339FF9D59A1
FB140E4259CB8F6D5EE4E055CC19A249FBC321C79EE934797FE6BC749FC0A7AE
173E400229D401AD0712A196F9FDCF1F185A7CDC7002FB1D257488E866EC462B
52C20BBFC81CCF8F525728BBD34D979E4D9E9F909E5A5796A57F9C0478AC0ECD
9BAB725FA986629A258D5ACB966DD97A0DE6C796887E> |-
/o <1C60D8A8C9B799EBC1FAB6A5BCCBA2E0F3E1D45B556ECD5A7EFF104D7703
44B1C6F7D9B6946DBAF6E65C04338513B8F66AB24ED97FF96A493E44241B17DB
2475C280908440A723BC3E93813D71653F3F8A5A881BF70FDE8A36C48CE9BF5C
083DE2E0C712117179A9F0FFCE4CE5E808F28DB42624C86F00B594BC68B03542
2881291EAE286936AFC4C4DBFC44A0E37875B5503D04A100C0> |-
/s <1C60D8A8C9B713D47C06687D049B28CB01F95B2F8941E42CA3C62DA18339
DE7244F3C9B0B36F3DE5E48B2F952AFE4D124594DE1F6FC58265A935FB219B65
D9F1AAB1B2B7A1E5242694662AF0D2392CBFF4885969C206B798B2832E980B89
1039F05E9163B489437B65CBFDDAA72D1E1638F0F95505D25D82CA79C814DA33
1B8467E0307B2ED7FC7A442258282C1B1678F485B35A69B3ABE8FCA29E3C2049
65F4F99F1F7FC011736AF61C4DCA92B51EFDA0336EA7B2C6AD1B8331CA986952
05C79B75EE198B656E77196D0AB1FC1471157E8BC3AC5E87DA41690308E2AAB8
B745D6F0E6069358F2C756> |-
/t <1C60D8A8C9B82424A9C27E6E9DF811EA1D553D5F4ACDACB82D3B2B7CC8F0
6EDC072CE45357C9C18F37F88428E4FE1AEE57AE61253C2D4CF5DB8D6D9C43C8
368D3E08560346F9C492D1ECBDDE132A2C001B561424A0718442FC769B95787E
D1D857BE704297D20080CCABED98B7B63124151429278CE4D7B1F664E4EACA72
8C10B5C11A88AF87F05984B7ED2C9F6B2F62BD63BFF73BD6DBB861B5A544F0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BTKFIH+BookAntiqua /Encoding get
dup 102 /f put
dup 111 /o put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
/BTKFIH+BookAntiqua*1 
[69{/.notdef}rp /E 2{/.notdef}rp /H 3{/.notdef}rp /L 6{/.notdef}rp /S 
/.notdef /U 11{/.notdef}rp /a 2{/.notdef}rp /d /.notdef /f 
/.notdef /h /i /.notdef /k 2{/.notdef}rp /n /o 
2{/.notdef}rp /r /s /t 139{/.notdef}rp]
BTKFIH+BookAntiqua nf
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 131.769 mo
(Softshrin)sh
317.304 131.769 mo
(k)sh
229 127.269 mo
259 127.269 li
0 .475349 .876402 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
BTKFIH+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D61BC487525B76EB826DA209E599588F9271826AD29E7B1B
470F79ECCDA29092A88DC7D61A115FE211D8DAAFB2D11B3F2F839A2A0A701A0B
0BEF17A84BCC5249F6B2A2512E0DB0FE1E5B0A45260BCC3198778469683DA863
347883A81EA5761F2665FBC69EAED798D26226465F8EB3875AA46DCB2121107B
CB1A8023A1BF32082F8C018EA1D31FC89288ABAE9FA856854DC900851793E635
2092AD15A83111725E73> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BTKFIH+BookAntiqua /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/BTKFIH+BookAntiqua*1 
[69{/.notdef}rp /E 2{/.notdef}rp /H 3{/.notdef}rp /L 6{/.notdef}rp /S 
/T /U 11{/.notdef}rp /a 2{/.notdef}rp /d /.notdef /f 
/.notdef /h /i /.notdef /k 2{/.notdef}rp /n /o 
2{/.notdef}rp /r /s /t 139{/.notdef}rp]
BTKFIH+BookAntiqua nf
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 149.394 mo
(Tanhshri)sh
316.812 149.394 mo
(nk)
[8.14844 0 ]xsh
229 144.894 mo
259 144.894 li
.330388 .645045 0 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
BTKFIH+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B81BEA30DA74C3FEAFF068C542097E3D8028F2C6CA5C3162EB
DE0F1A72F93773A85011F97F9149E1CEFE3BAE675982C7F48DE26532013D9DD4
29B696A7499C85B7FBBF541CABB3F84779F8042F1558660E236D91A1EB7A34D9
4656F68A9C1380E05D855C481893E8F852438E4E017A874FDFDE915A509AFE68
0B> |-
/e <1C60D8A8C9B75CBB5CD8534012233D131627B1B267A3930139B0D9AA8A92
F0FCE4E7AFD311431CF43A9A551C385DD6E1190F0601E94350FECB845C0D578F
C2722E61FA69CBEAE0F028400C203AA04FEF8893BE5650D0DFFBCA997D1335B8
B2495AB693DB3A958CD3CB0FA9747B60D9A8955AC7A0BFEC37C8FF1727E2163A
214136BBCCC6F627B5031E9AA610E69502F8F74EDF1A6888C4E32F14754B5346
4DAE1272036BF9BB2B561EAF7A7AA400BAEECF1D802F90F1E3E018> |-
/y <1C60D8A8C9B7EF321E616E96933530A3C7C80F8F5F05B1D54A7BDD85DB23
97A86DA6E660C260348AE806AB6258A8B48350D63FC27986036F280A9B44EB09
22744F1B7626A6DCA59CFE678766220ED74C2D7F53728CB9654D3ED5D5C8F523
77189EB9E791BD7D8D7B940F0C9E245FA578B5945717E63E283D1F44F6A79401
CDF2B86E7BCA435F5802E051F0A7F39CF6100E72D8EC4EAA21F1CC8D47B43277
E3198D215E9C61D434A749BE934D4B3249605621ACA55895B44D2C38681DA59C
526DEBE51DE100627D70BBD823277C03FFF6545BF8DA88E64CE775ABBFAC23E4
C3C59AD0365D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BTKFIH+BookAntiqua /Encoding get
dup 73 /I put
dup 101 /e put
dup 121 /y put
pop
%ADOEndSubsetFont
/BTKFIH+BookAntiqua*1 
[69{/.notdef}rp /E 2{/.notdef}rp /H /I 2{/.notdef}rp /L 6{/.notdef}rp 
/S /T /U 11{/.notdef}rp /a 2{/.notdef}rp /d /e 
/f /.notdef /h /i /.notdef /k 2{/.notdef}rp /n 
/o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
BTKFIH+BookAntiqua nf
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 167.019 mo
(Identity)sh
229 162.519 mo
259 162.519 li
@
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
BTKFIH+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7EF3224D3B78041631F9D19C150B013C9486F45F71BF2A56B
7B9B54BF9D8DF6FAD32B6F73949EF9E0343F1EB00C1F52C0F347249F8DBF5BE8
A24CC49CE0A34763FEC3E783C5063F30CCC90E9D691D1AA8FAE559AE7831FDEC
9A1D6784C0D61DE2BC59171D502CFCCDB53F76BADB6AC3E82E122F70E4D81197
7E5375FA19E71F97E18A2B3D9F01AE808DFCD8C71F92AEA028068C7B0A8FE0AC
8C904DEC53E603B953A8444FEBD1FE2DDF3660D4A8CE2B955266CB5B01A48C7D
0FAD3DE5BF7BD3E475161F97FDC7139BAA73FDF292CAFE4BB58683EF1B418B93
19647A5C88A541FB330AF64ADDF9247E2EB8046CC592D7DBD967FC06410F97B5
E21F65CB018898F686539EE5DA7ABCA72E5822790712311A705361D572598B41
37825DA8A35CCE0E68A5D184B098B33D4E9CA6A540445C40D95D1E42908CE934
81D2761B956631353E27EACD3836CED69B760723AFBF216FE579EB54D16DB5A6
ABB466E8D3DAE9B8BC2036D78B7AE55ADB72962807EAC8C54BFE94C5258DB1CF
5CD7939AF05D6D661AEFA0585A94686363> |-
/m <1C60D8A8C9B59575D65E0375466A10051365C1F9B700B7BF2F2D8376875B
980D65A2E988B5187560D09F280AEABD8CED022380F008D8CF0D19EE36F9267A
BC2486E2D1A3BC37306B1D9B7792006928BA616A517BD2334307BB3D5D25187B
656FDA56961CCAE813702C0933AED88D43C442F0C2BB032CD6CFDC6488339076
3D8413A0A1A128E75C713CC4F34C499586BCAE503B979957C5F48BC7B4DDD264
8AC7F8D1B71533F86FE3FDF310E5013C10D361498D031C0D1E31BE7BDC5A3956
294CEB62B5CB65BA13445F8E425241D12122C169E872ADA11A110E2B460F199E
FA57E60102985E27A6467A2C95B518DAC7AF293893A4996A5E1D9B8F01E8966D
0699F117E2679F6C05A69A9443BAC1505BBC1FE1C38A3AD2CC962D1562CA9DD5
678E5D5E5A6A877E3B7123A932064178A8D5DD2B91FCB6F3BF6F7A36BF1FB902
FB8CE88882AB226FFF3BF7F3B2CCA75BA40D2415AC694B6B878F2F0544269F89
3C801C7DCFD86D1DB8BE3AF07EC5ACC87F89BC4229501E142149D653D4619289
B0D89547545787> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BTKFIH+BookAntiqua /Encoding get
dup 103 /g put
dup 109 /m put
pop
%ADOEndSubsetFont
/BTKFIH+BookAntiqua*1 
[69{/.notdef}rp /E 2{/.notdef}rp /H /I 2{/.notdef}rp /L 6{/.notdef}rp 
/S /T /U 11{/.notdef}rp /a 2{/.notdef}rp /d /e 
/f /g /h /i /.notdef /k /.notdef /m 
/n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 
134{/.notdef}rp]
BTKFIH+BookAntiqua nf
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 184.644 mo
(Sigmoid)sh
2 lw
229 180.144 mo
259 180.144 li
.626581 0 1 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
BTKFIH+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B651304E8627335C5F8EE86F2009EB4400BBB0BEE562EA9F30
9AC940B09F36B912F22E28A7A9BBCBEFA960C9F3C6912A6730750AF2980946EE
1A99EA162D070193EE3FB2D413459857E1D7CE8AC50F82867B9870EDA3BEFF8D
FF1FE516C056DF341EC0E02A6E3B316502C2F9787F5D5A4592CEFE10DE66E85B
8BAEBABEBBE215D09BD46F36B469BD9C441F469AF47315FA2D8E7F1899E5E97B
AF289FE8F3E8D2CBB744ED75D0DFC486A2EB89ED5276F612D8046F3709E0E938
5CC0130782AA3B315D39CA46CB9276D3CA004198DEECCF3006077CEC78CEB939
34A9861573E033AADB3DD8D518779069C553CA7E30E8AAE9EB409875202C3FA7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BTKFIH+BookAntiqua /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
/BTKFIH+BookAntiqua*1 
[69{/.notdef}rp /E 2{/.notdef}rp /H /I 2{/.notdef}rp /L 5{/.notdef}rp 
/R /S /T /U 11{/.notdef}rp /a 2{/.notdef}rp /d 
/e /f /g /h /i /.notdef /k /.notdef 
/m /n /o 2{/.notdef}rp /r /s /t 4{/.notdef}rp 
/y 134{/.notdef}rp]
BTKFIH+BookAntiqua nf
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 202.261 mo
(ReLU)sh
229 197.769 mo
259 197.769 li
0 .993286 1 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 219.894 mo
(LeakyReL)sh
323.688 219.894 mo
(U)sh
229 215.394 mo
259 215.394 li
.0618296 0 .965484 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
BTKFIH+BookAntiqua*1 [13.9999 0 0 -13.9999 0 0 ]msf
261.25 237.519 mo
(Tanh)sh
229 233.019 mo
259 233.019 li
.883848 .768521 0 0 cmyk
@
.5 lw
0 lj
226 243.144 mo
226 64.269 li
338.125 64.269 li
338.125 243.144 li
226 243.144 li
cp
.639918 .563928 .533043 .294835 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/BTKFIH+BookAntiqua*1 uf
/BTKFIH+BookAntiqua uf
/BookAntiqua uf
/BTKFIG+ArialMT*1 uf
/BTKFIG+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 22.0.2
%%For: (Harry Zhao) ()
%%Title: (fig_GCN_compare_all.eps)
%%CreationDate: 5/15/2019 3:19 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!iCB6Wo+d-1G@kN"kGoSs<HP([3O-6sjuOPU6pJP]iaGG"hQJ,<5ca#9g]HhZ@@Eur-*UsY-uBr&#HhSO@pkmf%IL$>5_6]+V\
%d`LQY,+U\e1<G1+]\^!29lFo#'MG?eY[EEa;].X6_TP?9M'Xo+1.<r4SHRIV0p9\@$2bVu<Le5uj5+<D(T3h\I*PMX;fSBljF=Qa
%LR5+rn>(4%e/OCEIiK4nXj0aI8!m$eTI_H#>,08Fp`t5hQqiFlA23j^[^8IBbLp\gk]PKYi@;sH0GsJ9WAncI%Oi_oU:V,q/1_%$
%maZ@5mYTUa3gDu)R3q4jh&LMPoGdd!pJ]>Z(u/lu((3AQ!#%9NjY*5Y[&AT2YnWiB9dNp2S]J$,E/./!W(_e<;+WYHaU[d$i#/#W
%PNbc(c%%knP"HuuJ=&oc@4CIqn8d"T)U'",CGD2OhL]e2`9D*n&r3[ni#bV>LL>5"LUXteCt)Y\ck%sC16t%51+`?&J'17]8Pl\B
%<n&;ZrBBHDOZbhm[CSLuU*V0>)M>d)BrFFO,k7f)k[lj?M0G-a*"gt."r$TKg?jkb%CHLNeG>>)!,\[,;Mj.opsiRKVOW[4&H1s(
%>(H_ZXP3O$K3X*LUf,G=+OpV1ROg_=RtK&Ln)-4)fDJf_WK^@7e#^f?PM>=b67U,)fY_e\%H&uu"26N9F%EX9/*Y8$Pp2LM;<k%f
%O;fctiWP?H#.f!aV+J.AO0RnkF\n5,$A9SO+U)#R%_/hl%KIZX1*KT@Z8h'J/=W@Ee+a"W3sLKJs!T?aP<d'WhT;G*'MBb$<.]:6
%8"pJ1o`[TJ)*#4L?YT_$N*S?;Ic'jM=AE%P&_:"tR5dl-,gejn>Dj9,:B=l*]_U`!iRae_#>\bm)$YPq/H!_&i$ZjoG8UU61CSZR
%0^pO/i2;0WWoIhF$]D8@]OG#GN+HEPQ5'P5d7ab1a^ecsLa]9pahVAR$nMU4_,"0lk@$*:LK/U@52gch7M+KV6"!hp>nCBE6,8b)
%VfA&CO"a9*'NUKk1CU2l^L/dP(]8s*+C6h3p_cI,I_miO.JSa=QcXe/6bM>)]Ri\j:Y6@.(2b$7"[<Uen-?T8nUaRl9lU\O0o-bG
%KOk8ehNLG9FWOI"dh7iOIc@@EH].sm540GGO#ep)Q!=Il_.!sGp^*G,",SbQc_Q,E5@?4%UHHtl1q5<Z&UqSIL`kg^paL>,hL_B(
%(rR#8ik`S"Jr,D4!+F$_J3#?)P!!irMjX4B(abhJ)iQpL!-K?,%7A-PbJT'maFCE&6r<#CL`i^X0uo=uNpm\t_n6J!`,rh\i?p/Y
%&HpWq/sdjjP7PRHS1_.SbVV*4U!@/6_+Z![M*/56qRD$Bp)#P3*pUC#0J\*eqllFr+#f6"^sDPCe9NUDR'Z>8@fkU9"S@IP=d=G@
%#?7%d=-YS0=K3?K:7#NWj[<'RjX+.$e^9[sXc<VPP>"_N>pY?_?+J-6ADAlA8l;l87tq`X`.'V'+0"/m%pF/OVgdYj:d(5b\(#?o
%QV-4Poc*q-,qG-R/'ubn+33>1l8S\m'_&O,NW29:@M.Kq^[Y[1KWipEr'r5dP+IG=#X@kSibS>sImY4?"J83l!geZAiBO$'iWLE)
%jO1"Or!/k8ch7=3'f3Dfo`+rGl:!HOdfTNhpSa<]]dT!Qh*T(`r%1Iidi%D>`8<!JJ&;<He46J^6NZ]kbV51dL?)6_d7YIuF$c"S
%qb[@kc*8/%A]ZcNDpsPRJRl9$RS9#4q1?=oJS.Wco72*(i16[2%-W-p"n(k^-#uTY3g&JOi5.a(1rM*N&>DFn"AhG!cDZ^iXhnWd
%\H+<WF*&&+o>sB-']q/"=;CeN.p/?9iat`<FSN:D"TR'ff3G4m00jY^);YVK;pkaN"nVh%iMtTZ1-BF6.2f_F-2\$g^1N<)XUE6-
%,F)`%8KgHe8FVVg!ecuYm3aVV@h3N3J>tjt;4f#qYZilVE"TWAA0;Tjq&8N<r(@8XV;Ns@9ke$Ge0%@cOMNkVa:Prl/`XkBi*h@6
%K7=;8!"TFHj%.K&.MD4i;'*OY[pWY?[ou2b._(4-8L5Vr5]sX<\?197iU:;TY(R2C.th"3Q]hV0,=0AZ:oaTNA4#EDAan&h+c1Y6
%oSS#F-)A@n'1s7jOKdd7+,$TkQ=8e@YC7_=j5RRIEcmT*.B,>(XHmr7\In<mU[8:)6DtP#L]@[0,%UJ3A;Ici;?1mAPU`Z-+HoXC
%?uelX9?;P"TMXh5!Kr3F@uVW^EgDmA9-$!nXHMj#R@!#dPFGU",kiUQJ4Lj+6^<npUd6I"73m"%7\E:+E#Ded<R-rG&_!bCVZ%22
%[>933Q#fqD:j#>pdZR_j_H9sEWXMW7TsV9")0J2tP2q3#'MJ%Jmf]bIOX*_aEDNM?!'eh:WVTC`"c9?;ZEfWaU=Eg11q`t@1r)\_
%;QTpReg`/Nh>'H.ecgqL"]RS(_"heE;YeB:?sQrhIMWMF6YD@?li:#3-!jE'PqGZUP3&soJN>YUA#_onL*<f.7\G#TY,n@C6'EaS
%la0*3/`dh(:;KC;G+IkuFPR`4!V)E>aM"B\*.^:&as7$ocQoJ(X$mV6*ZgWc^+1an7M90uU_3jl1-j#4GuiSO^ea$(+fhY)-Uk=o
%<Il>P4DkX,,#&/3:k0/b[@]2ja<H6X-#%/q+D$`nKEU3Yj[uQ<6i`F4eKNZmNA0=i-B#Z@!1jCIWWORLs3h;I4.VH]T42fP13V<R
%Pd&%`2/Vi_cl^aLYk,/r#mbhi8fF0inHm,^N9!?g]G<Z`@>3'&0[tHTLiI,\(gd%JVn*2mGngtrfWk]b6-CHE;alSkYRRXC)u3\g
%,V#TH&A'd_).mP?UG+868`5N'PmSg["990o#p'L"P!T=i8mr[L>@^4\&'WRm4otZf8spFtmQBQGn<m`?].t\VY/!o1AcGdeF:sd/
%>c7'GWBpZb:l=a5_hi?YE"njpikj'H5KKnd5\^!hq5,i.C&"?8.`*o1._H$W8037;Q][2@E(30^alqA;.2.n<5r>:m$c>'%XFO@O
%b?/811:NsK^aC\m3lTK=bJ/$eV4Jf<#+Ud@\P=QpI6h*c;]TTeL/PPl1e,TCV-"-+%PWX@n3$\!0dVN6>h//Qj@)EikmYm(0X)fS
%.,'D.W#at;0E<OjY:CUs"YpWr8b\<%dfM/Q$DiD!-RasF\ko(_pnf_i6d##+U;5fhqQ0a_U6^pmIV!X2@YnRt83C3L'EDH.N0PTg
%-2k;8GZYbSdm-Sf`6YIcK@OEd_eEC3/.6D@Q=4aeOIHuR@Yis7o$*G12NkU=P'=!pjB8:QN!5K.5V:FTC^\+G#?-57-CLj/C_/RB
%l",mj9HqZ3Jf:dE&Yl/YbWs-4Xc>Lb1seH&BOMZO'P1RJ16,tLN0P#b,8/6Y&mG*dc,"Cd<"Y[aL.u,aR@,HA.k9J(V%glpd2iOZ
%&t&A(/u1\0.e@"ECMOVI.-j=_>t@2RZ:a^+-H-'+L5c</AL(7ZGofrj%#]6P/NMkn(/Tk%#`^BgWZI<k(,MB&2EG8t>*T_NnOoY)
%6[dmP!X&I1\-?Xd9Ir@0A=GCQ(R,M>Z&2MG"ZBK*^nK>Y$lGd>1!N7.MlMVsPU'jG^tqWiEX%uQ#njo$Dhop@!eu^Yj#ca6i]=/4
%iGE_!F>Cl\=-/%IcU#(h\3MjDd:Kh/5g;R5$#N7+UIldH67/OI<`2s4Xl9k.$lXOBhe@r<]N/0E\j5^/!N1KFULCR61+?$n4QLV2
%"GKN?8Pd9H#58ea32lN^X(M"`K,UHkaYY[0S6!-BTb/.K@qe2ifP"_M>#U9tJs,4nR>e*(TG7n!0_#<;Dt!pD_)("V8^[SFW+(mO
%P0!_RY3<J3d]Q.'2"[*p6MA/*c`<W>riZo2j@SkMBTc&a*l(Y9;t@!k<\IlijJ3(_<(0%p!JWEL$bikA?Ub_qVc0l+JShB&V"MHU
%7e`b_*+MR@,*P<_Nk1WeTKNPJ"/uLQTg"c2#*'<;Ce<KWYDu$QF$BT"_Np1EWjWL"nRNoek^6L6aT.0J9>Ik8'Op.dPdgcE;1^\\
%/MCOG(l"==%'h7]s&M9fq)@TOnM)(Cm4:_MOhj8F,A$]c;!4Ot(?"\U/n&7O_7gD\Qt/)!6LR941MKAl&oG+.Xb!o?J/dDt9OS5k
%'$:o/Q4pRm!u+9e!WFff#'1em;_[*'$`/eC4H^(!Yn1I*K^-@oh>jR9<KUl/,DC.e9VrGW"f[S4A4dC=kT.^C*]9`UE_N.Mj-eAR
%*6?CJ/gMG6,d"";XU\?2,R)G9L4^3EBY'k@Ua_/=8P.Z%fRV!j)><?FfiV\^PEiT;<Q\c#M25u@8H_$_(pClRfq`H$TFW7D5^5&9
%r&O]a%C\!iMLnHCf`Qh4,EHYG.9XSULkc:2r^t<mA2I;:K>=fu!dP^2E59O$TXgj>(hN1nZT+5/n=/NB5,Hm7`:Je(B[BAW:!kjB
%c#dJt"nW"<*!pr-i]o$FCFQ2/Z../8Fp4Q@dskjZUXBInA^l:H,9WDsN/@TR:k?^gMo$Z&)iXmH2K0LppC*<`!APgSQ++nEBM^/B
%2l2+hB$g+1+Me&A_B]L<XSDBR.[f5VdA@&32Al1qm!_8aMd6qFq'+:n'O^q^\^2T5mfY9lUk9EeL)]%N;C0jnP7c.m\g16ZUFtlj
%ECDZ!!#DLCR6W6/aN]m"/:H/6d(1Hj=G>7@6.W2H`^,01jTu5Y!HK2Wpdkf)Nmfn[b*p2YWpMBG?N^,q_!(l',fOO:#]Lu*;Xu$j
%i5siQWie&?9]duB02hoi0-IXm0LBqK]YYle!#C6o@?N/1d$MXhAD1KE-oJP%%:l,Oqg_P>)$CXYe38qOo%:/(o`$*7,NhI+)HA*J
%;1]KYh(f;()D-UnK:%hM/6VM#YCgZ%lBE^E)s#JRfL,aGJF#3"]k]N)P!(3QB9nW.Wf?&<$?jKN6&D1(k!,VS'kHj-6:!L_V(s]0
%:ab0NDGgY;\fc?IQus_IUi7kfOCjXGj?e"hjBr7b3T+V7)OQ^;K6b0VW:%A^d9M7*mlkb$1Y<k;SSg`:s&?n0:3Wu?Jt6OWmNgR"
%5F%o'9WPE:4LUEfacS@PEdSD#,93?s%_tWnH&KnD@$m%:-0[<[p:@ajIYR`W77QAk^!Im?:)Zl!_LWr,p'=It=W*&EP[kQYW^eEe
%ES92_file1W_LP#$(@Q!5>n'W+\IhW8efW_6t-<gIi5B#H;?t.^*hmBWar5tK>n8XNqrar3X%YcRB9m.OHEGnJPqK4<j!Pi@9Ua&
%&<60a#"feOSP):@PEl_U9MWLg\knb^Xeb$>F34VZ:hG\jo*?4k&L8JM*'R]"L]QsA1O,]h$#/NG.goJfW^tM`"<@u7jQIc!_P`Lc
%8'k6MOS+7=<`7Pmd!D4pS=!1Y:S"(bpp-fs=Q1Tl&W(Tb>66_l3+>-[@i?k,RUVC/0;/t+^pO3es(L>tdglRS15/g<1'4%1aGPr"
%n<j^GI;GPW$`6fnW+iL_e[WMtEscJU!t1G629H3QPX'hRB<6(@!t1H4U&BaWK]Z8)n4?oe&dg!+>pVf<ks3+r"qSp*17NLkGXR=X
%=,#4)7tEV#0Q<Y7!@dLpj9j7bUeYGu.)a+r@0d_LPUh?caX$B81J%E5)D\48$25-s+NOhu8eQjm&9!3#LOeca-4!dKTZ%*NEZL?P
%),QiU'f)UZ#4%Bc:l)ciX<[Pn?t@'f'Na3PV"Gk^V%TaQloO'I9t8<u2_l'?7:ZFbUM3m5+#qrVA#98cW4r,#a%N&Q'Gu'h4E1%>
%88gn;q*3q[l'pfJ.8KE9U`RW9:,;WY,G:_/8)?^,V?*P!r0I@UUshN5qNe!Oa9+t3MJo9_BU'HnjrUX10i=6]5ad;TH!0ZH'rV>)
%i3aKo`D;&".7r-u'P*L=ibIfEget;V]iHJRC'!"Wd)/nRQC^Zk8#CZ#[B@"W)"cDR6!_Ws9+&=@+si`;/PWfq?afTjT8m=e!Sis"
%pMAI#l"Ko>4]O/^ZUSl<S/qP$Ept$3M>o-)Mr&h8q&8o91Mlt^D#N4CHbe[<V)UW6(fF;,h4")tT;/AFR,GU42SRc^N<Z`b!.^,S
%>@1`#;>L@?j.1bR=cP^:]g(P`T"*u[Qh/e()fKh%icGh5=q4$#m8<=n&[.H0WC.B.%<$djcu3pneR'^I;,R,j5ADjfh*nt8l*faQ
%G]/PT(5#Jn(LN!#D@`U`JB$^UTXaR"([k*8UY^A^32D_*peuC`'*6,E_t\W1l2Yk/M0NY^MS2UE(V!l5D/hW':"h2hi&?Nfa5um^
%c?/bQC/aJJp;Va,?im@+kW#78T[OfRVMf^!f<!l!`'oo.!\/BRj&QD.$]l)3;LCB+c9]_:4MLT#3aVr_%AmT^d2.-mjf6j6/pd'X
%nrQI"EHJD=!TT5Elh%c@d0O\\Hob,?J.@QCo?MB0HB_1BLHitJ#jT3trRU0G_iSc]&#fsXk7Bk.VDo!Hdu5W/l,tO.EtEm^=,QTI
%(ZH`?4^LI?5q=6Uoo`4VJkK)tLl/''74D/=o]'!Y+D@X,/(ANlR\iC\pSk%>)_X^>_//`o?CQuu:Ya%th;QM#R`]hHXXF&9[QbK-
%\+ITni7Ra:*cGK&/K(1HVKN?"DCLRP&33q-GXj)N%p/5YepD.Ccr<f?2o)6o\C<bG@\AtM!HLjf^aUm"Q2<Dg<1$9HP^;0%mfRe:
%'4Zm"/hs/uY!5RUc7f*?JV`hh^4#M*/Ta1e8ht\K]U^^r^$O\m@&*mpe:\N1C!rEd'Y!F;;p#qU1WNh]o"DR2$tnbY4s-F5JDQIT
%+5VmuhX.LLDZbNYX>G?[)??kLNbcfum=:H$"JFA_(b_!'?Hpj'FL+/7JqmoW\subIT@8GM!aKs'mN(0Y3X_T@s6=_;C[H%Z&NgJp
%'K=Aui1nC1\5pbj>(]ss9nU<]-2%i=;c"99b25tZ(OMcQEND'Kn!5<8pI<W"VI<`T8W37=CXNh+d0$5]l2VZcH4/(kD%[WN/KPq?
%#uo:\O9N%Dar&jA.A1tI"B6,97RIjQ*`.ZB9Z8.pYRs^W0Lp(3`d3..f!X-Ip(j45YtaKNeudM-MuI-n"H;/AT`Vr-.1E29mlA4S
%DZKqMPejFckStAVjh-(f4.VCrekM_dOL3?\,?WD$d)N8/HTE(h`sN[NSN7n>TJPjjIK:\XN;I"gRlIBA0R[!,O9ug:i5>f%ZVg2k
%B;$c^bTMIls-oY]cOWpn%#4bD!_9j#%tl,;12piUn6.4ggG4aQ>!Ns)#OOC#$H`3+QukX/)p?'lVon.D4G0WoLQ-auejGTFQY`Tp
%-;fAq`aVB3CMd2Y5D'ipMdI]rneo309`LKQX2?J6_IO!%(Va^EH\W4&\1niHJB5mZaho%lJEb]X3g3tc)4F,E@7i&n,fjMbU/G]k
%9i<OT6`%muMFt3c3h9ei8h9[I'?LYO;^jIfJK$G2ACE5uOsDht&nZ:8A1F-X-mhA1',crk\b"I*]q?XorqHk-SV(;,i8,Q2'R=qK
%q!plqFq;C+)dN$?$P:/JlKI08_`0?"n:qnHLGVU&\'\jfgZU$agZU$bgZZ!DD=gd,D=l<WD=fXaC%NkF^PtG=!.?2XU#;YB,"5?[
%Khu87FG`eU$%P.V505KhJmm(6:l<2IA.iT'Oil$%`FRC*\ALj.;&L,nBmp<9#.0D(p%P6M`9[::U[Q.eq\Q$r`9[::U[Q.eq\Q$r
%`9[::U[Q.eq\Q$r`9[::U[Q.eqtHg\47W1H`T[?2]fu;-mIem,D6K$"YBkUMi-oH%>.guV?h8S<9'Qrj[AOhJ8sjT;iCR24M&&'C
%PHJMCA,SG[]f#(,i&1rK^#%U)G/flq,&0=@"\6E(G1q6Ir%G!s<dM4-U.uF[WZ1#!_VcVBXs$XfIYa>6@8m1r^(2,<hR.qXF]s5m
%Y-d`$)4,8,*e]l4%O=hCr$C0D]W>F6]02(m7u)X[a.iqh&8a!7ih3tio]AH\hk2YNMQQp+B(c?r;m+RkN4NJ:,*el5itXg/jY?[8
%r.7Rrk]+BsR5]V6M=Vr7k`#c$]VI4XHY]uf$H!*iMh2V8-)>QZDs$o>s7N1&&(%Ah.4:>],]3/h=,815aJCI0q*uP8bb%neFbl'T
%SRJ_f#YDSj5+,l(6;[B/E&Q:"<dW>;,T0?Hp](-K6`&.4c54t"hl%=i&QiqJqQdjt`tF]oLsuB)(<t-/d!(+#'IXm_SGGGn2kWP<
%[/U!87!\e-a$8IortE=]4rSPB4_gK^V.8`u78XJaL'NRRDgJOJ%JK`A9O_rtrc6D9KHcbD;-A\3T?^R9++fd::mcCHrGmSHYC?gu
%9JR2iBj*^[AfYoA%(_A2,6Xj+rs0m$4t97(G'LEm$fGMpH_1[nVMHH2="F5Zg^KuC)q1Y9l(N`irY^.h0Rs+YIZ/W3<Ym`'Hg".8
%kK^TL;A@(^cY6"H>GTKs>_Sm^jbJVDq%TEZFP)=.#Um5P7lmf9Jb]iDBhRe6G2ScWp<=$o@)b03/e5Yc[V8^,9dZ:(AV5aP.,7bb
%['m3;9LrklZ%^i!b\&MtqY)9G\qfmn?Tk<([T,(1kldQc/kbLk]=+r@@1C12LU5R5-\<t2QQm1nFP<=D4Ja!I]%EMH`8>os\%P!B
%BErmb4W"VDZLskm-I!qJbMbFp2>OpCDlA=5V'>Cc/PbZ?30]V:jr#(;Z[uIoc:OREoL?O>@^X*g#q;7@$)46DC%a6Gb-9O6e>ECj
%\5VuQJ.BuTWDC(2`PHp[CAk_[_&OIH.PcNA)#:_3$p$X9A<G8)ULZ/]kAFg2U$+jA"8o#T\t.\c\@<dVl$NJ.7uqA\0>Qp9Y=>X-
%%CsN8`cCfE;Ah6I4T*-q6ik"6>;.3XqE)hd4)DAqX\!0EKGj(!A.G%,h@jNUCcc!&UGEh4!9:mekb!Va$[/OD+9F3_^$]8g5#dRe
%HX!='i_1ZjMmA`]"f6L_ZAV*;E$S##5ToZ*p?)=k)hdM70-hh^E3`P3lDi@"M]#>TCFX%s]$e?.C\"ldaaWpI9Mo2n"bhK$6YX+>
%+ES*Oc5//\H#?NKeWarG(5'NUB[BZ4!D@\?V;srl=Wqs$K:#=T<i43EeWiQX+dE.575Qd9Ho>9HA_`^bK.<p&%_:\1W_chQ:c'1;
%A$j6:%CqA#*0"JA9?4JlVcHoNes3WFn0hW>F#FaLE/)]`!OL!'HG>\n!44dcZ.nT5Zum5#RP$LF*a%O]\E]?u^SgIdXGqe1q-(2\
%`mQZY7G<n[f,;bg4a8A^%sCBH;\Y0,1tHG7c%gpS)lSF`3jbdGO:l5d7Lk?uf[$sqJ4pJYYreSd@04q%V"0BR!D8XBNPh2^o;%Ph
%,+,:f35>0kT[R`C7Z]MoTJMT/GeJ[f#+65&Eu(5uB2Cn>s6't/^$3aq_I30%Z-VO-Z]Q^oJCD#CjpZp9i-;D!?U.95=a.EZ`8$A_
%&1$0q!ZBHhC900knWl#]>VQBTW1lnda^f/I$,[V%`i1cn272VKVW;jH=2ZD((Mgr!++!<AIL=#gHh\Lm4OiZ"_8G/Equ38nVk8U(
%*JG%64&^J7`W3jo\SMclith!rhAVe>3;XU)@ph]Nh<F*8CcUqbX]U+?1>Q*>+[WT`+fMU\Sogu\Z7)nAd?QZV'VIg+3WV"K^dcP.
%>@s7(1n9`'9h/1L`hq_q*e.s7TQMPN@SCcIg@0o'44I*=T_,0?MuE(N@,EuLi2]Rg3f==iT=s%nkI0l2hMM13R[j*fCWksOGc#HC
%Yt=DbV/b3@9!nn#NS9Wui,ng.NMOl:,H:TWem1(j1)BseA%ni()R4mh[fH#iQ$KF8d(Ihqbh%lBW7eefXt2Eu"(:ZM&$@7n"lI]-
%]YNrDqq#7R"J[6r;\dm8fF#WG0Lrp2(tnQUF0YcMY!'6m_JoFaGWM]3TS"s(L#El.1qe"h8SLe$BhRf9bd#T$_ZKGTCt-kWR`kq`
%hJ%sq>('d%\>$)1TP=O2[E2@^e\N3?(Ph3S/"C&%Q58'X3?6?4BI81'F`TO#EZ,7)17XHkn-!Ck*8-W\E!7VAWO9'EDO=>+/Hm>h
%%B$>Z`qJLe*V5X:]3Z@RJ.eBIklc0hI)9Wkhi#<;lU'6`mR#*$Fp0`M`dtPL16$qGC+j]+#45YA0_acSs8-QEn900M_:N5"8I'kM
%-pHrm`P:bs6(4JASs,<)YEN5)YFDo_f1ZP'Cqp;.r99coFah8<]r%48]m]3(NR9\hEZoP-L5dh68q@)!>3?HJfaMg/i"Si)'C4kW
%ASY47)>$nV7-gKJ"Z0BB'oaWoad1]rA$1,C_0NfGKs0*3j"1AieqUWWb'^>8#;#]U#0l('>I5f(=.5LUb)FG.8U]ODU,a'J6BN\H
%a^Rf!ZJl3HqB,edQe$ltjL2'rl7YXn.n-e++CJ6QE`a+9X4on!etah8#]6>g\/'BT'RVbJXG)8e/%,#RE'.T>@(;X-B_p'tX9@Eu
%G0&o>XcN%j;ETo\nkrH\7Mh??L/SZ3G0q"^\:lPY$fTbBCpc5FJ2JduH)i\BALq>DJ=\)Ac=fP-oc6P1C]hp_rGLhnZ]p$2/+K[j
%d4oQqZn,ibW6F42WlF96#87f+LDJ!bnmGe+`3AQ[5C9/O:]0Q.iY=*TjG4]*i%((7ZIjeA$p>mBU9r.ocO3J,.@4P%n_...88*:f
%P="=$dTpFEXp@@A+:2E7lmA@,jVO>9E;B?3](WMt$bgY(p=EZ$&Oc,`8.ZrZM]`)a0$nDq=Y82';Z?_6K$K;+'ajm.M"'u$9>,b5
%^^olkpi*(QKm^(_HfXM1!m1B=gJ8CYnGCUEl(_0;LR1NpZG<8s:>oan(VY=cADq))?#o1FAd3\e>d3a./m\MV"M]O9nF@?F.JmU[
%"C-Uf.G%;I41o%<YK.H[?K)4]gGli6>tl)E2pjY\&Z*iQJa\F[nF@&q7S=i6T)ef:![!h@JaU!9FG[9EJA/;1Z!'EN5Mo68@\;=V
%^XTtD?,CT$ai0Y4Bo"4VUNQ"uBC6L,Kb+^W*I'*B4kZ1]VuOtF]N?rXLh_a;kY*Tg!b'AKo]]h=\YP.TQRqrP:YksAQZ)!uo.55P
%pgS0::X=->L_f"KE@rf'$)e?Kcp5Jl]_dqJ0Jn0s2`4Ao,+stN"_eupU78AJ\:4uboj>@aqnmtifTh.X<,7(5PoI-K.E"&slc*Y-
%H+f)4jhfL<%<p8aobC)=G67Fc&Gu<L%i9<)PEKk\(b->.foO!(gPt9DSd#?-8#aba+MYaY2'hD^L-OI<qR%#tKh@>9008k*i8cF.
%/mVMWr6K()'eWL?/!f]V4+I2D+.cgNiS6an8Q;.KB=UJW5N)iS?+B`u)SbED`SUML<I4WY$Mj&=pFq'd),@!I0@ZPd5F4m*q,siL
%-6l1OilV-*`q)8sLh<esMNr(u&"5#-nft"c8p]6k<.+\eE+5_3Knl'T-n)7aEr`g5jVgdd+"ifAcSA"Id;Y]O\%-T;jskgL?^YB^
%nhOht=D:2'6Ho?Di=8a__B&*($!6lfRimS!$,F1t:CsGe$eSCE1gn/HRu7PY4oQ"dCaOh&*KMg$,"Z_2%:6T!^bedb`BH[[iVYh5
%Q%k?oON@eNiUXZn$$W1i7<n$8S+*;*'`1X?n/^MA5>.<!_!1':#aQB-,'7f=,Jr'8!YMtm^F,bZV/IR/NWt@8fAM<)a7X5"R\tH7
%j'Hs9ApME08`0%u_+*5K7#G`:6ooh>&/cX27V(tDGN,RMJ\smGp`<=$/pCVH:@CumM#;o5'8:8$8FS;#-;j>j*^Zh*jG>\]m$4O!
%Ao?TP]&\Z^bM+;F:;]AlmUIccFdj<]NQPga\0E*aM#6;CMg1a]9#PfBU^t;S52N,lpZp3WnSt%W&FK@a#17jhH&0daY"J>aXT^HO
%O_;Tlqt*6LCU#Ybds:^3((pDe79!G`Q[;cCFSQ8]T.A9<]Q8f&;plDOHTtcrAa@FV:mYYl`g-JIT"EEPrda;_4*bu1r2jI1?@;Th
%nbnr396e3B\12E^OfS>)<ccg&QO29gk^)7">MS,ISk.5T.lVLZRLQ"UC6&DZc_Cj7)VflJ`pVNLCK=54+IIl_NchrPU;uXoSG(dT
%62SJ=D6RYjMKqh+P<L>[:6/V#p[Q;OV`TD"rTl.CS_)Y0%8q.H+,202qWi:@IJ\F*F[*EhIeR&Yk&Rrr/^`DOC5h!+oYi`hj.>&q
%IJ;O;I<f)*dnc#h_LHjJn)_9=4M(=],`0.<-hH'in`2<7KSM3YIa8nL76R!rLSX)[1-b:k`3Nt#C](p7Bk?*RT$PT<^1[3q?[?=B
%Em./r/Pc?`YOD"]l4#EFY?pLo2=[s[0'ka8o&[Lfo!@:,pTOJNbDVRW[ulR0]hbfMU\B0nr:+sF#H[[3q,-n35!*6rd;:1WraGQT
%(\<W!^-p+djNH,R(LMX,"TTBHRD$B)>s8`G^0=t*`:nXbDYmVu+Q<4_-!u%`i^:r!N!:C%^A1.G+77#hrJCE\R/cCHkga%MQmV`r
%>,1De^ZJ;i%th[As1[i,qENZ2Y^]o[2#W>@rY0*7J*qsq`',u<!B.i-""3!j7A(nG4U*NiNXX]<)SX#QCTA-4T$OEf;1W6[Mo(/u
%kV)Qh_)NO>#?0/f/pR4VNs3]k`He[/)g6jpkPR^:@nKu/#J"%E-MTAh-UZbM:H0'[]spGr>Oa(_HBoD&c59>1FR>R+6;Q(eH`0)B
%]nV8o\!PHNg3a23K3rP*3^%>7O3V"tE:JSY$suG\U[Z1_UDRmZk2,V%ANCT5\8G1E9I.u,(F$4_\V_@sV_=1\>SokDS[giQoN#TK
%SI_S3)7PA3;:jlP(l`i_iFj\[jeCP\cU7>6oJqof-XW;*a6UWSF;VXS8!dT/A1Uu1\W!f-p*c6qcQJV-`I6YfG$dE+`**t$B<fk[
%A/'6Y1WT%LbtU9km^eU%IX1W.Y@SMDr;#dY4V$+!)?6\N\&gmc4!p@WpQ.L3[KQ/K;0S5u?c<8UIEa%Z#lmYE.tK/M6W$q$3-EXT
%p8LZB]VOtm.@P!Mr03Y?eaI5@c[_eT'7ZCp9hQ`-Jq&9E+%*:gh<d'toM=$)B7e+BKOGP1%u*l/gbJJ$iLG2:Gk0(&odcSP4k.j3
%;"4]2:7N<%I#7HmYUf5\ngkEe-dOn0B0>crGSjU01Ckp9ZHVpsjB]D69Qm.;AF_)\9!P'diKR&8+(qZOLc<u@RmrTYNrgR"-hHCl
%KjGF/.MM0Cp[+=)0-4'd3I7(XMUPC:hM&u3ZM'AD5!,710DIjXrL>s\8e3QFh\gVi:M8nJ76OT=h9Rk.V>bJsUZVZ@T0A9G6\D<&
%CfYKe5^f2hZVS:6/3C@)Ja_\bnm%-N7gZm\*#4D2q9a'LXa8KF3;4LH>3*RU)/psaoDJ@@\DH[RNa(c"i:5.Vo>aGpoSGfSKt>*a
%X&cuVd_,<ZSBT9B9J05W&9B5<p06tM,#lZAT._>qjCX%4mkbsELSq[5na3\AX4C'N6DSiUc<?W`]N1'U\J4)M2Zd;0h]35?*:a"d
%jI"NAJ1Gc7^:8s%LJR?mhs)$Ua2@@4k'B$?>g,aDn6RNT$T#%$#%75Y<J]To\shXuMo@^Vfe2.u4cdd(0ibiS(XHm%=RkdPcP:(7
%Q]4nuQQ).rktnU+pI]D$6"p0Ap`I65_GRt<&[$Gt4/#qabf`C4GZ%:+e*lBjn-Xar^Nho-je$Kg4<lWur)p9W%aQ3nV;0``2#=4?
%DD-#F/f=Mhgq@h)b'0^6Sd1VSeTn=\%\G[tqetZrqd/\7:j\U;S34RD?\#\%"t7g6U)HR\:XtXU%F\7V%6kZ/p?uA&07ssYJ!h5i
%prhF(!IacL3$PNBWNZ:9a-L&7*g5rlX7>^qYnjqcNbZOWP-2L.QBBlsC$;bLrKb'%3IP2aRu@$[2=^CN]M8i5f6&YYn,b;qT4'X&
%'8Y8^RoAH2F`X18TAGO1m`ldAT'rgZNo.2_n$V*?Q>jNlDpu1na1(_XTQ^4?ph\iA3qr'S_TPCAm^\Ip^(YFGLA/ga'C,S&T=_c9
%oTd-4JqXCk_Vp(CqRh0":4$7Wib,FdaI^(n5M!]&UW9RsA`kN?iCQ0IhsT2oD_H5/R:m$nT<nL]l18a;4+/0:K%1\&EuoY<@(tK)
%]'o%AC[e,e]^jpqoBU1=Q?sk5@QjeSmH?%SI_340<8XR^UXXXb`OarB`:N0h+;MJ'`pW7ebt<LY2*6ltn4,00=aoiRCA@>uZKSYX
%Q1f"Z1k5PPHHt+]X_">Xh*/ELfA$&Uqg)HT[;S+jX2R4%dqR%*Qd55tdd"-#YOCn%LD7A\qj1\DED@j-oonQ*Do<aRHno>!S^6$-
%j779dR:j5NR]1\b)SY@cE'>TEbk:%q?]U9:qkKi5%MGt]UVZV/p15qgW^=buS#plahi67Wpj;^73>lFVU[IWcaJFX_moaFJ>e3[k
%SsE>om!9Z7`qeZ7Gl1;Ek7`=fj.DS6eE`nD-VpV%<,=9P5@Yb3rH@UR7[#_(XPRW>bbeh.*.[iVJ)lbW&!`GR,a_\0bfAT.`F^Mu
%Sd2s$RK&aTj$pCfArE#?%uY*[/e5NjM1g&,^/A"HYu.)G2d3uj0(EWX4`4h,bNcMK9a\HTY8PXJEPaN%`lenO+Um:[p6PO84.Jrm
%Ur'&(m5Pso?Uhr2r<3:Qd>?oL/>G>;<dp_I8'L5bU/:d3P_Wo>S!-nCPC1M%:[.Aj%GN63SsKEhl$m%bmsB6@,GH0!9143H)\L@;
%'4h%%.>RsN#sNU)R+(Y"d%0/MEE`7\0nhHJ"r#MVo5XCiR&1oAZE$/8c^I"'"DYDOH78E'o'o-SlLrFl,KbR8k@64EH7CD(f5S21
%%V3qM-7SLWj?LgQ$.dsOmtB_!i`jF,3Yt524sm"flS\cK"c`jQ#JrkcmXHLp4mE)X'CNe`,'oi+"B2bf3LDa<^lO\I(E15-"BFaK
%a8%0[E&sM!6geDZ/1aHQbN_IbU-^]tVo<'q5#7ar8+"`#nQADSEG*BE<)^cbE;ud(ECDfa(\q!;3Pq=87dfW\*=<U[o+H>2D<2Z'
%.RV\$4BZ+&_0%c^7mf41HNM$NFQR94Fe:(nH]^olHkk,c)*;[TSPo4HU:\#g'i.15aeS$WbL*RRrkhYX/j#?<&44A*kpia>&*,Pf
%#@S[)Pk1t3)'"7'q5sGg*3#%i6mJ?n":Y2j/M->SpF2KgFFDY,*FT3X[O](So4--lH5Y"n$(o@D!4d23Oo@B;#++G6`$JTcYN"<u
%la8b&Ep>fUXh;[S(^".Sp"a[h[=l[40$7LAW5h:kS5WbA!#:+%JEt^#_F8*)Al.[iaCWj&C9eppq4C:A:_QWcUd0ZB'ZCblQdB;,
%WLMh2),sMDI4/8aA_l3hKB!A:&JtiD#?c47hjHh`8+Z^P48*>[iRdN6.m^<7r<<Tb7uL4\la63g0P.kl+5/+4NBY+/:kPf9)gb/H
%>k2;'2)-sTI="0o$rAYq$#joaF"OJd[`!B^pYGtOcs\;NQ8+(SkMBTobmN:5`:W/*C(Bph'q"ks51'e=\GW#4_8,<YRgKlkq3n#%
%P]@O9=gt;K0-6NK9g$+O_V<b'.BY:3%ZQj"(r(!VThC[rb:?5arn^_jAq;HE([&-9#=8kCW"9mWOfsJcBdun`!iW)d&Sa1'G`n^`
%70<amCnj&(a&#F46U?LnEum)YoqdmP!Gg(GqjF@:mVCAfl=EL+=@17CRlmT8eYl4Gpa&HhZG!e/e;NPV7CO(9QpPXH:QI'#!\d]Z
%BBKF+FC0:`hZ&s$LK\gR)dhuMg(`h#Q("^LiRm>phj*6`OVQ@Rnp\U>/YJ[>n)#3N3&@LPC`Z@++\QpH9lBK/!VJ<9^=@+Rk"r6r
%?f-p`it-eL^_kII>K!ZrToSGIhkLocJS\Zm*1K4t@-4Uq4t+-aF5E/&V=,gJ!B#9p4C""K%(52#PkDn7.P;fL&eJdpELK0\e_E[2
%pZ8mkTUps/W#q]PNs'Tm#oP:TO1`+t,,hk5(H>?e!\b1)9UpU']-6+rWii;?LfZMc!3#_hMI(\$Ah_``5Ug080Yn&Q5Cs6Xcu4j/
%\W4bI]C=5$aZ5"m?e('Y<&@VJI06FbdKihmS-C:<g$>"4'l%FG1#3SW^1.;53PDIoF[UDfb`hF\3eU,.;"uO#F$2.Y.f_'4U8p_c
%4h1rIR:GT(QkUsErD.Xff5oE=b8,(k<aNZOMl6OoeXG+Gl;PC]F9t9en.n,T=MR>D[3oc_n5/UgGkGd#-JPtoVhh%m-=X"KG*]M6
%^0%21giLX9BuNU'CCd7WMl2K.MorSW/eMs.^]jO7%>U-?Ml1C_.\BrA/Y69rf!D@QW;>"ODm#Z\ft>aq<NS]9d"'!2X,LCsI<Vf[
%;U4VX,$OY!E6fUjj=RAJ64Y,W:p>1j(2<@+mAp'392>7G#r4f'BWD<>DYi8^AgqQdo^R:Pbi?(Le+(a@3p`]nVZonCHE4A2Xf+\]
%\'U&MjJu(G5PMHq1acJmOZmbR;M'2ehW'm*E7K9s:Hut1^Akh)14AG9\F/2YLoXG^U5@l$o:!d.#6OC/D"T5_W77sXE4/BBkTc4*
%Np"?M^Sj?H&Ig.iC`qe%-9b,(00`3`U&79VV*</KK#]ZY;ER>#.[N0eHm;>iVLWe1:#<+:Y,8:ts3_$7FE'\\OlFUf>XE3;O_4?R
%#eU;,n5gXUN56M0U'^ama'f<VbFM=^TKA.GX?'AFn]URC:W?0OQY8Pc<:/kR!nA;5S@!paolHD6A14T^U8!S>T@BXaAB6RW)TSA;
%nRGZ!I#R5UD9pI'e_XK.M;YEl<1!(q[=h-Z"h(<&"X%1j.WCh(bYcgjlI3?Se2!.C5_WfE"^E[<:C:&j#;pqlraD.s1=Ykc:Z45a
%e3q3LV=8X,7dg_,I6P+I21.6l]<ZsUlpIA6R6s\24W0mo0KLD-Od8hkeA;8:QuR_'7GA/a$W!NKcukVqX<gj,Uf]s;:<K+7'k3p_
%El80^;"5EXQAPYI"MmUCUqsQEG#qh^]P,RGF4-kbG!\/:#Q;#@F6M/Q%Z%VISl?\EoLILL$,ELh'c$i>Mhd=$"joddXsEnT9Y#<K
%aF"lA%"0"erMQG<g*=S#&s4-8<7QC^=8H9KW=uD'!X_-QAqBBP;+CZ^Km:@6oYM+t![Bu:R7/,^O'[]CW:2CS,)djXL_O5L=7U)i
%J=9G#E@L=P7QFlP]'i-A-/kqKRQOAl^$#Q=KPhj*O&uH'MW%g03Rc=dP$SV_J55"P_&XVV'J2\<h,=)+\*m7Ci6Fg=#9kSuK>K^)
%BHedNFh++5ki5,oF^N*!.3%QHC-ZeC6hJcP/D?..F*`=_Bf:\O)g)uBQP/36.?c388"n2J:fa,;_cUeM2PZTr8!NJ?BT7!`gH4>=
%o$dX1BM!LaKQPLH;l\sLT<4<M<RMiKSeC_Vqi[UmH`f'p(A'@qTr5uMW.djIr(J+@.AY+&2'VK8Wq82&.h+2p1b<"L`BWs%5OMBc
%Tk0=NmN>LOJKHQ!;!eVc8r./3dY3Ar2\f-;KcPgdj#O]LRNZ;T:Oo&XEj'@bj:JGA=I/SBdAY@b'%q%Xn(-J5oHClkH2]6Jdp!:$
%?jIaI</g(o?'.Vt]9BpSbbmMmHES!B('*t&ZR'HFK_`grT%-Toq2NC;?Rs?q)Xah(COGKfapl]SV)?\0)Zad(;kj?$>ZD#2A*K2q
%dn0UEK$jr5!K<6epd5rQ]MN%t%E)st`oU`1iJ43A;=rUr6!CEab,d%fTg=6SIi:LRm9B;)S8[0S%paG*S=?8k.0Lp"9QnZ+U=g"!
%0Kh3#$`JM%g6sIc(;cSRWeefZ2M-XZP.X@*=&Lik?+A'^Y@UceQ*Wc2=>)8N'ZA#0YHi8M5kj#d4hVtmEC6AFK\b:_N6AM2C3Q3@
%WUI:#Sp==bf,KqE3_-Bao\7[tFMheVlT#eL/N.8Z7E'T?bRl%\K2r:9V6$fdd+Z'F$"sJk)i(Q__"aru>NbKmJ>T>ipH^XLG2&O#
%dP_;dh<;`9;cGun4bFqW=uU-rDR8E%fm1l$S@&taqRYh+n9"qXRUbej)[WT[;:87mG7i0)1\trk\Cb1MSX<T$g>^Vo1P*cWKpeQF
%:S;`Vlu_5uND4;nC5B!I$HrP\4]1:[[PNZ0XO@ET4^%;9cW7\RB4Nah7.5?I#,7O1+59K9e7KF:RgH"jU21^`X.r:3>e>>4M\b)d
%Zk;gnEO!p`'T/eW"Jc)H_IWt@`(X!LI4Dcab/W,9ft't&WW6s4>5FehK($jJWkcQZ!D*(\K]-Y=>)D&&8GM1RSbE+JYe<o$f>?"7
%hr]?%(C[]T!/t=]BspU/aD1#>>p2E]f99Y&Ys#c/_JUge8ta@f?HF5OV<Bb("\og`_G6XT*DGMEa.gik$g<:mo:Q3TTfr,*5mo3g
%r-QGIKb9#];eOQEmYW/I2u<8Q+VugTViHaB/B$0SUSV99#a)@=Zi0Zhm*1:r4/-i2<3<5IT%7mEb9.DWao!D(n0&taOrJ2j1e">$
%'"cfA(c&I(GfNK,kX#o.2]HWc-hVBN"`gq\,OGnkKprPD]mHm:XCnXC]4ES99=D<fRNU\X6>mbofYYKueg%X7\[bP=U/Q4o1Xarl
%6>mFE@JA540;G8;B7Z%=1>4uT<M3X4d51[d_I*DR;$DJ(g3B&,D:Z;/O?b7-%';6Y2K!Cd&Ctb,!I-acN:U9fX<i(0m0XG%a\Gnr
%bh,7BFi(Y:e/iV-jps?bG:5E9UU76_EXs(W#?8r$G7<N,OfONP.tu_9Un;J+[K9_E7h%Hp7C-%AXs)TIcKcIK'lu_J[D7O*&@Ei:
%1cdLp#%_9MW0\G:UF-E;D8&-+H8\6<"Kh(3r4o1k0;)N/>/*sK8^1I4C9EMTei1"cDBT\\G%[f10W/cn^B2Ktk1XZpko2[R7[:?g
%G+0$4>Z.n]\+LXRClR;(!sMWC)Ql5:J\00tHkT8eZd`kCS@6/*D7#cb.me,eGO9Qdcu)a_;mUR5p(hjlM3lHb"9"l5Od>TTFnsDr
%jj<fU&k>JZi<Rim>fa-^bcmGN;MdHfdIhb!o4/g/JU3dPB2'4%AYO1him:GbmaKC#6\UrJ;-e=X@"8$D:FrWE](B/74&e+R)d;:Y
%.EZ7>6X/oW0XQEIMdMBX<3em(X<gD7STb"DTsY?iKWlo-b@.W9&JP':i5#4K1QH'_dQj_tir)NO9"Cn.P=!=`&[]P;j>7,8&[]!1
%(eOFU#6WNJm&L%,/</\EB'mEcp[?2)4m_P6bH5H;UWm\goaNc1\#1(&U\Q[-<ZYJJ9A4rFZo=$!75#KHW^dKkEFhqj<Z;Jo#O9^^
%5&.Q=WEVG8nHU(]2bmM`9+a4:Wfh'.gOKro285sAPe'=l.HfB7,K[;-E[CV`>"^nic%-K47%5$kkB<o9[Ss%nL[MCP%F2hiBSpsf
%mu97*4[*<[b1`>-i.N#m<6W9S4\:"N\$/i4pp]FPAdUW//%ahX8ap9G_S9Eucs@24Q74p+m3b\)\+W/7#.4*a^sk?r`t(8?0F]mV
%'23[l'Sk8A.TeKKHgYRFYLK"phnd@mBHrgSjAsG>EOB$%IBn\Vf-$unP;=XmUj<Vt,J"1Hh2?Pr4=U&7Sd*EdKC=pIU?Q?4kB&ob
%>X#8mgF8[HCn&V'`b$=WHkoPT>X"]kZV*?OI4jE.R_$"53hHVV8M6WY'mHQt55SU!"'t3O%dAB7\U=6ug(*@pp:5PUL=F2Ee+r?O
%q:)6s*RjiNF8=;haW8k+luW!pqZXE#kL4@"2E0S#S%<P#?ui>kpoO)&ntpcgZt@QS[pYiHFU<:?m=<#o2r0eh;I$\\`b@]<mTUT>
%2X<qGQ)"uNl>-*s9A;tgPKIgWJ)-8eVCV!d7AKB[h:3EaQk(#loZ=pAThT;7V\lSY=BV!/k7g:r7I_e7$fSLAdOtbQI8Uk^S.ja?
%D!"!#2U1,8F/^aZf!%g?.3e0u-S1\M=Ud_[g0u6BIP5QF^k]=J<OhiRl6r.D*]`H944qib2XSf+rXq=B>a'?o,gpLiP.X8gLU9.T
%r?V\@0()osfW8,TSY`DAoZUa<R/*7B^VL<%C<L&H<bS6J_Rc_Y6UfCC4k`>t2OYTn)^W0i)VSrtCeM!:(j@$7P?\U6G,KnT5b!3G
%/o6?B?k(pDY=hc4SrR=WiW2'2[V7qZbJN,VfI3Y:p$E)jkuj6L\CN%>S>n:rRm&E!cRnum]2A0<S9<"ekIiWu-=^_tIP]2mesTse
%@jjc/[E<++0\Xlh>u$Da)baDlg6rg8=EeRm5BPR094rT.,nmU4U92PifoTmu.k03a9s<A26rP0\:8.EThAFJj,.I8O-r/RQY;8QB
%PQ?_Lln-soQUJC4J8oGnlYN]k\Y\f9)I:$9eHi_PF`'2]>_r_j9]lq&hIJngSm4I7+T[K**h0FB;d=IT/]b4]APX?nlQ*oNB?#W?
%l\V'Qg7JI!Yb!&i/![/V:J6R]AFHT81sV2m+09a[NSCFf8\`O)0n%u[U:QZr<gd7u&(<SkB]::'s5:Aog[tZFN<1)sSgF*Z^+4Pf
%"bAk*-4_TlSf>fNgEPQTDD@]`3"9uQ^GDj."rdsR)7GK?b6R?RoV;JlUMaoa^!ZLE(P.1o@eN3ieMk9[:T?;:Gq4Fu?+9IRRoAU"
%DM[.'T$5E-YIlT9A'&H7`QeLEF#A9=N6T?K6?;&T\V'+j_/EX-Rfrh5r`tVLk+:b*-O?.%_c]HI'Ps<$_l_T:@Yp7+/o\OckfrnX
%/:(e3gGu%R]"OuAfg-DN3['(,*B'q]*U3K"&l2eJD"a<"[nXo",<`Zk98;Nl*G(l1U7"$_L;7P)F0V@hSm`j,]@^elXp&hn5tg:7
%r1!A<3kO&+[:dWOAN90kDa)o8`QrX5QANei0#_au%J.SR'MS%<OMG=jbc2He2/I$Rd*D@-_c)'_L':_!0;+/LR.#]M[PYN\AtIgp
%D3(*1BQs2cEo**\;9R1r%68:[be04cY`6?WXr&td[b_G)=_=8u'R-aKGm@)B(O+3Le#H0$f(P5oGOX>k+nP(Wo1XAbKDt:!1XFJ$
%m%0VX^Ja93>mLX?egR?sVg3'0I=gXNpoE!3jB#Z]]`$DS_o@V:[D:TfcFrn*bPUNF?EK)gR1CD+=hnH5L+0Q2%_I@JG'jGn?7^g?
%=_s/OG`26c=hNO1kImWBf#@kZ.@4ppO`k;?Jg5ODK<\Q_QIapV;kWjVQ=JRs4gD7eZ]rMYl]^u_D9&e?T_T(]D8fM1Q@0kG#[:HV
%$eT]]M],bPO6b[YJfEG:PoR:K=Vr`#2@^aWgm\4r3$rRc3r$ss217_/@Mh"V]\pK2DDml*+#liTIFqJ]m-E!SP%6jWHVBTNrRju0
%/ELo8os;YlBXo`?HV'A(%67:[#A]N65sr9I[c3729?/\MZ0dS9Mlu/5Tn?$"K:pl0$J&\dP2<N"b%!=@=cpa@@*N(=hV,UAUc]U&
%[a1a3fnXaBI(NBVSu$]"2^rZPF3c^8H)l!^$RN5c;Vk%@iULhXaudtAkp>H*m:0cN[&CE9h]'<.*iA_sp0<u&C-42alI[`.Du3VQ
%Xc1NRhTjl+:!#&!gtf;Nch4J<[U+r6TU5IVgqaJ,bKUUHC(s?&[!C]_L:./\q!$JKYari!G#p+tFH+Vo1Z`B-Ja3;0lLX*n<I>SM
%)u99':b@Om-d@k0ifN.-nahO1]6E*[Sq\2n-e",1$\"B,TU_Vj*aaURmE`>#fJoQQYpKs/YK]GP)uNPSd]#,Rb`I#2^43.uUKtH@
%j`4N'jiQcn]go\F5BpW\AI0(l7W&6lFi0EahlN%?SnsVhArJTHGS7P5<-T&OQUX)s8RXoS[(CXIej.dKTqTrG'rWY)I`Xc96$-Y"
%!#N"6p2^PBQmG^0\2^W5==3pMDK"O7pgKG2f<e2_o<8Ft#PrKKYMIM?:t'(6g>K8J"nfli_H.QJEa6Boh,<K4ck!5`^JI5q,p`^I
%6RQmNEY&X3b4)3Z-HV<FQ?,kTS=M9)W\MI$rKK!^WQH-@8Q:GRgZi^k^XpcA"f+isorCd*Fls`HQuN#V8;TGV%c0YAljP`(7<Z8;
%b<!1i?aFh(\>*hHa6T-R`q!lo*fno/4*"o5YhdH+gX[]a=pBfK^+$VTIHgUAK/RASU%]&bMlZ2fCJ1hAdo=ZXg4NGM0jNBB?$*;P
%gM*:MS?_(<nE]d]4-uH$]&Nh8G#7Ljj:F]I2mH05#s#&)\!W.h@\;=)5o[8e;duA%Hq]Ntm4GTh%(QK=M_t0jfOqXn7(3hM5Daf#
%CZ5SrDs,e&Z-R-oHcO&g@oG'2VHkY+;du@c*DKS,btc>s'Dp#)H)-CaI4"ZUc)rqTF'jcPAm'O4X15bhp6fLbR:`PeQIoi9eT\7c
%*F5-^p6goE'GoD7@\;?AHG`Y!4qdb:ZMLZsfkd53B9q)G1",qkm'Cc+p6aKFes,u>nP4phX%f]\JU*0l^-*'FS[5gDdC)g:>A_MK
%Ra:,QI9KsCZhb.OAU83XfOs?18i[si9^FRYlI-](Pr?'Bln]lFZ3P,oM1'"57-,lc*Y\Fp:f:Aip6O?D]t8WpM1(EHT"?BD=YAe(
%2mI;-2^_c(X0>A=cOl9MD+G`U'Lh%*`Gb@O21C<(;9`ho"oM!0.J<)7YKZWnS]e;".=PlHOL<9:odP>:$%4uB/r)5\fq/9rY=:Mr
%eQQn/Oq71K1d'W4m?tX_qkR4!#KA^t4(1oZT,_#ZH$RrC>O/p'#CSp,K-p]&4/pg\WHtFNCp%SlXJSZ<DjMK:lRde3`[6Zu?l(^_
%hof'$p#l?8p"(c+s3hV*Br$$4_uEE)*%'kKD&g&?*r`Y9Icq4Os0E&Vld,Uc.&`ugj\+q`#jM-R5A^t[qY\+!&-(,GI]ts7Ds&,d
%!"<pp(O#87Qnl;+?]N0@p=`A1Y),6S]!_g)b6E,ZcEP($/2ZE9VpBYkTC^mp(L%qBY`d?\mkhK1!42CO5+<!KNmm#2D0ALlePHM>
%\_Zbf0tW[IqKOlo$(W.#_"b%@Hn]IkAj)U.\&:6!]%*gc^TCNGVd$:Slpe1>*UL(PP_^44E[A]O$JIAEA"kVkaPI+Br8tX8LSAGu
%IR"?ZSnW,r-c8Ri/QJ^dCgWCX08"U!7`2pF)W`s;"[(`1F([=Yhms[+ClNV&d\AO/X41+hk.;G8H0_9jACE/b!dJ]NFkX$NR1I4$
%*,-e:6C<A4lITs:(iqpt4GCXmP6Gc>?\^_;E;.Xr0Rs:5F552pdmVETcn;X-H2HgjCRDTR=TGRkXu7f#[R!8b**BYTAHXld:[6U%
%0I$IgKi]%JSRbT"b9QMu67XK!rh&k?0b3<maglm+%e;dWE:0>:[^.siD_$*<3VRGB=+0[]s3+bkc-_#&M35)XA%*nij)b51S/`Z]
%TA1jLU]36p:9cqUDcPIMbh^q<gqSIN?f)@f^2-)&':n9)(Pn8khj1>-1;$%qLMYk6X1]jaE8]f!m"_-=X`Ya4@dYJq(Udcbr7YgS
%(MmdFCgWC)3c8X*CgYhPmCVaDbJ&J1h$L(6ZD.pAgW<sT6lmG@L;DAf2O<p$%62S!Yt:b>R'igT+IC5Z,1WGsG->,khfS/oB[,N&
%*imRD'Dt?jnSPm+.NQnVc12l#/S,#=_`Zh*mV-+*!(lX]e[1abLm3m)[iD]m)NRae7_qW:FN%tT@r%,tGN:L<!sJ@bG?]=Y'/g4K
%S*&PtYr2,"6W;VK=QSB00h7)elh>rqL'FdI-`"kflj0k$NH0,ki$O4f>4/piB*[kj0[(nTIL[?pA)#ZD<K,&0d#;/p9T_-fHFtYt
%;I5kIG^Gm*.R"59\&INnR-2cIgN1(?lgT9FIKB2$2J06<nrE@UP@@DcoIU'_I5`+YR&:'.'/.q)H0OX2?-?'Ube3FBVl%Q@6k$1^
%Ra-7R9Wa?6HaLs$m)CWN6A?7n$eO+R\3<DXS#p:UqI+UC?SnMgF;^.:bD,0e<+CqniiuiRZH,@S"Y=`U!#T_O6!:)gL6%D8f#R:5
%*''C2dYt4@(XONRNigbP8RZplCC/NmmIe)':a%^sE6g-_nG:NNC?b#[Ce8&WY+s"n(t$$')-S/X&q'=E@eZtAE^p+gUS<UsWj?`^
%3\Dctc73VDAOI;C@6$(];j7!^WgV)T+)*jU61;mL='q+lpJ!U"p1&HNgU\sp`aF[Hrm?e#:V'Mg%D2tn-`7nIV.Cj?r2NIMDHZZ>
%0')J6itcS9X>dYkDRd&$Q2S_)c-kW1g:1^XLSc\H*a#8Z3TmEAK0<V&Fq#2RpP(`E:n;jHDJd7cG(!QI"1GcZjZ"o5P<E=IEau?`
%$n3pdS^i"I?>mf[88fBC;,<>-5%Y`%-,VM%<fu.]hgBWUI0s"hDi<QBV0sm.!T[S]&5RX+m2Q>JPJYCWkOicjLpV'_rS!LSXl$:^
%Z(<Wqd95>[g0"l$9",&L(pdB&RUI^=S":PiG[%>N&aM$69q,JWD'lB>O`ud.$Q+iq`k9Ot#4NpRVD%4tf*In"q=JHGq#(r=*=6<#
%2a_91#TW$\fpGE&DmI`S+/Tj$95%OTJ(cM(:j,UiJc&86:"7M#><U/20fX7)[G<U:s7LYoQ=HlYIS0pgH![5/UdX9/3>oj6kUmjK
%Rh<HeefL"@R(p"*='7oZd+[3;OuFT=RR<)n,hgu-,j/hrHR2k4Z=CHKAuRY'cd='cdHQVA3rd2s8tsd^6u2=7P`k5e*teAO>Gi`a
%&;T*g-.-Ejidp7]qCPSXS`V0"m((q]PT8a/*[kslgF=MsBg1O-o1Uf1ME&[IZrp^XP*5#c+&SS#gSZ;h"13ZH_5X_$XABBn=q9D<
%%P-$a[!fgJ:59R!-6@["@>1aj43.0@RiGIbFdb1ep2jEq!C$PGDBF76F',,]fP^/5's;/Mr%3[=*]SNdgl@.)*b]Shm(-1k]NY-]
%G7NMF[?gt+bun%1m;TPjG3AaMX-KF^%irC7C=`OuV4>Og][b0u^r$W<C:269LYD:Pb?M*m%m730YF2JrDg1-5<JDdbN1ld`G\Ha3
%oqrfKN:^_%@-rN#gSaj`FPrj0Duq>Mm4/Z_F5#Th#3U?e*dHm.f"'OdLRJ?2P9@*p%dnT"iJ*h1[ls6-rj5&!h0*!CG\AbMl5%>Z
%%m75.Hl/>9*-c.dN#":rDmiE\[m07V^IGHaV6rGTE78[U>98$&J(gS[Q"7deS7`"0#?*NCnBe<QgDsRh*I-d]d;/IY&+0,=*NZt5
%B=e6VmH8N0h;)9WGdo6Wg=$NBluR0;+*d!_Cj&&4d+4?1`,'8!Gk]c1Gj%+MDRT]YFW"mDV]D4QSQd(Y\@!+)m(bsrG*>Z_e@U@f
%2RN1+,6n_).GQE7_Vh?Zj1rR:m:h?#)RY>&&+0,<*h_Pmp2Jr`9hYQnUH6.Em'tpE^dD%l=8%$?WcJDjKEiQ9XOFU>nBeG@^>"3o
%C3$,<_lj*IgOY,!:N<j*nBef_=W#bX2<P2cRYT'sY@$>FmWROI"tp#2jhO7\BfB'NHT:LKCjXm03lTqF^dEJ3a)^plV?\/GASidg
%P)H@\GdqNAY/:>P*M$-=HW%'GBnsuXFI=+nkWDjp26+CPJVTOA<9U\V]HFb?!tS+bq4l&/0"WB8_$rL"S#GD%Hq0#pFpB)BcgK&t
%Auc"EXZGT@4ImO<\?EI+RKF)F'!EiA,kmXMAN]@!-2b"7JVWrs*Lasr[Q<p)0XuknHVTO,UB;%oPB=3]g.hkog7NP%)2-f;^dB'q
%ma/:[FPrkkb(RFdEp!N8jg7qWTUtD^c>=%R['pcpCi%?b2%a&t("It3_DsLf\nr^ul81n^),Fi]2ai=9f0\*UpIAXRD'#Nn;mJUJ
%jjPZ/^fVNt6Y]db$O%h(aE^m%IA"b;@>1+`7,TB$,bf;YAW3U#4E?SL>SQE_7teUplZgpKoe?uD8M8,>kP\##\nq2gHKe,eoYpFg
%+t<uqRPoa2DW7gsG;ec$geTs!E71]]Hi7*3D,c"RWF<:4PokH[oe1WN9]kX5m,u)Kbq;1!rTh;`XrP2]hD`Wo5dSRfKATJHn(P8m
%55Le'TCWH<gBdRCOmrt_N,..:`kA1GIh[:5G4*89n7<a:iu(q?Y'3bX`RAXo#ecKV$+`qPKo\9O4=QAi3E!A8&BM/(H:=-8=+*pc
%S4:J/5Ne[9,?J`<3[&'`k'kY]R$70m$QKo`-/ao^qc$LaJ"=3nGcbVYlD:aOq6%:(UA-9Y<T/Tml)4htio:dPKqB;P/;T:J?6^rI
%khgZ7`;G;%+s*m>_Uc4L5@U4Gchgi=UlRtKDnT"3pO>"L-]*fNOprqPWW3GEXk-H-<V:bBp';%IQV`MOinuBu1J2S9WMt`#WT(<p
%o\ghT_QhJ.O@$;X'tFG6n[ht6S>Q3ehipm#*XY.+q=l.5$tg4?GbINtjh\XRoDIe-m1jibIU%R_acfXHj14FFDs-OEKI^>Q$C<G^
%_t*nKB]pT>=(hZo@`5km!b[c*<I2t4o7L)6JcdhYFbW*u1B'7ld`o+9KT*BhU<r=Ti$O@1X:%_ca`PUohRR*/Yt*C:DSNirRuA^.
%6$*>C/O'E*feBu?Jpm4m0(Vqfq)7\1cnEC[I/G-EK.e&%kBm1YIoI^^d.7W^59o7M6[=1jJ`[j=D(EpVg';h$=*YA+55727<$%-i
%#>n9n00ct`6j)XNjf5AXg^\,BQeu9njZulC@$W+t]sqSrP#io&RMo+;CmBaA1iBl&mVMtYEZ<V=>cKr^i#>+fUPeL0!1!r,drDO#
%\4DD:@7/WlH9jaF3NJiHWSPkk$\d^sAGf")a"JB!#5\J2&QF8jZ<;l>[kS;G%!p>I4_f47O\G7-Imi.?Ztp'@-e>G6(:lQG<=JtB
%1;:dU@=+fI4Y#lS)_R2hG=NjH]1ZCKWOHaF$Wcc-5tGhioKmWZBm%^,4?S"i9L]8Rh4]f(K8*asin4W[&K`]je&CJW-2Gn/]%Eu.
%V-fuZ>5GXSGt2=>Q\)?:oS`]@_D[ReNTP:'2Ye=[.5H!d"D7G-DKC(jiEm\Ca1d93SnUo[5*!53b(E*lFT6RiZ"\!Xq04$,W+(eF
%MjSDiUY&Y(X*6b.`JY)N:r>=>Hon1;7\I]mI%"H:XIKZWG?O1P:uC87idLH)!qhoM*PE_p?cCS].E>!@m`1j)7\K-GNPBlTMBc2X
%]=E@_QeKjb"#RC*:pIt/`$`9dYsO;]9KTKBb)=Mbanm110en?ecoK?2f#o^t=m8'bh;)Y!Ik0D=B&@@P!)fPFi(/O!1:(VI&fJ;E
%HEL"`jjF%e.o<<83t,JuT\5rlhlbm-fE8OM7LS'==iBW)$'E8:(_:KBnU40PLTXa,i2Z[)h_ST#A0<ds(c3-%K-F)g3AcCg-W8Qr
%lD/rIaFV@W,0K,aJkGc6]:>RCW-Pn0-AI+Z:`mLbiE=rFH01&BB7V#'Df^ilO$V<*FTPP/9^6^PO0j'q;WkS_S4p@E:(8Zg`bZhT
%Sh-HT:J"B_7Ob),NX#hOE93:FN$2$!E0(Y>6:@PMV]tL4e7i/cVlBPLraX%B!9\IO[d/267aj=N9uN3RfCL/6i-T('qghMlH,\`(
%[eBFQp+$gqC0-H5mbtSi5,I9GL'r8dBqcjns-ljKC3VD;.m@Xml:`?BAZ`C7l]++f-[Y6E'`E%E=bAfse%dHX3B<+?5"<aeKaQW[
%<q,sQ<W"W4/M`$=O0^qJ7^K_G(HS_=#>a4Ye9>W,HoL69`#:]#G>\ZASf0*t)I9qB0Rsmc2Oac9Uaqt`OTalZV+c$E+dVX=+(+$\
%%of*-]O!UO+e06QCM/_WY1jXr&Cq4spHH8OnQ661O'e<,n%-I4Y26=**]3K0XbK=GNri2NKuig;YiH7[p9;X0VjeYE,s]Al"fVEL
%[Lk%j`W8<HYjuKNlpEI59SfId?fR$mnNpVaLWjMGSuE"7T0P##dXeS;0W*(cM$#q(^b;.]B#Rb6oKhs0,RdKn.tINSH/L[;2!sBt
%%X0uG0s,g8+Z*W)_4:B!Pl.>kjcggETfVsc$e6C0<F%RnHlm:b,K-+k#>'K1(U7$1=q,[oMO2'\.+bRdC8Mke2gS4(?eD/_]^WjL
%6e,U#?6nG7R##]:9[LcEnHiL6M'c2(#P];4/_$#AN_4rWcdsV!Pm$sQk(N`,h`hY]A_">LqUO#U.FkX(4Jd[%-&-fFL*-C!Piu#$
%4Tiq'<KZ<U>A@J;[7c"6:5dJ,Z/k)]#HcnMc[&`U0*5F%.Qjd=qmOXL]1;_FP.VJ0!40<XF8hY*67`,\-0+C:np_`R8>dUm_OLZh
%;SO`t3V`Kcn\R]CN#$@hW(Q%;EhLq0!`1O&A.NkhPiTUhE%co$26(O4\G8a.hs-OG0S<cl]@r8QKo[bY'tVWcVT!B!h2>7Jm%\cg
%s1G1Ui$mIn1@A[J%H/9Y^N+:QTFabPpAjAQ=[*&raD]F_HXN"$%LL3BV2o^Xa*KlDD!C+?bOEItGK[b9QHnat.f[E*\RK,4R"NKt
%<Bq/>"8%VViW-?4Z[h#X/*Z.q)X2DPeNGR>#L@hdpAR??l=ImWf2r[aeBcfB'n@a@>5hXg\a/OUTHO<!?K,XuGP]=sY[LdB^Y'=n
%"'pl)No<9;6?DZdjc@]B2jQG,,+NY,F%[T`i*a3k)/.eZ@NXk5@R;l0=[7<%*`GTcC"AiWh>j#=#)-J.E4m.Qe"`GZ%('P.NR/--
%O"NQ6f4):<1?<>2b`@>El_tBUL+YScQ)t>,4f9n0Z,Be]YErcAR]%Cu$u,u"L0o6AIc/.*V$%S)r'9b.q0W/%:O[U:4pfKTR@C7*
%*CER(F@^Y6T@`ZR,a<B0c!OEoh:J,,[i*!_Qn;tmqO0ds\X^Hkd]!>u&($f0S7D!jFVAr9>83W<^Er/IDD!:F-PAj*DN5ne2CelQ
%3q`8-\i;;p>NI?]WJtXV^,Uh'1#,op&:lSg2GhIW;bD6X-1O.qY)Vrs?c[VB53jF%Fhn)KPQ5*7&poBbLn*4"kcB-No7`lfnlh!K
%r:>odIX>Y4Z^t*.d[Q-M7L6o>[F!OLK4G<Z!q2SOdak'CY_H>sLcA4Id7H/XEZfNEE8&T@hLUPSiJ1,ZqrVK2/"?JV(^&))..?KW
%Y:Hs%Bj6aI,D>"oJLSmAm'\e&cqe_=\=%a3c=rFd\#gIE&Mi:O,LtKDM-3N41&4oqGkIRM_OXdMIM@SD/R78X@&Q=(dFV7uY4YkQ
%E,Kn$*^iF@Er"?1,/HAk!aTpmRZ>)q_8.Ni6mpTiYW<*6TAg:]Rb,'@9]9^pmDn\+Q/65%3Iub]W+M<QS/3Q,>!;m4'U-WLme5j+
%J<\:dHO`Lji6!.6$8H+_j$t,FGi(Rpi=#H:7][V^L.!9LpV$M'`CU5l__"a^?u(0\5/t^NgF6+cfbe\*43^V$kdB;!`bmt.rps[K
%FpupZ<[^_.SE$l49Bj6k650(['tdK"L,N2%\<Pa-ZmEP^"1<b?q6r=[gRD1[;Vd70@II(7EIkmDO]Fb8HaBukh8b2>#ec:2b2b.Y
%oB7FI_^L:Ml5S\D[rTRHCh[JEKhj4:5Ank6FVqK611V&dlkt]qDeNfSJ8KQA!)k[G#XkKA4bo@L&c%hX5cXpW?Fu5j3N3V,O3]Wp
%\UQ9KEXWOCcTM/Cp;TK8TO>nHlIY9jet@@uFDtIW])h,JhlJ\bWV'+,jsNC`%flXl$!CJFVKNmRT=$U5_N8FXf$5^XV[0?Gk2'&7
%qZ8\lp',A-1lIrAM7UW>f>UPCbROO:2P<F8\\W5HnuN>NP:rGqgs%ib]1[;@YaHeN'Xlan`#\=eSDS-,B3QRmWD;3-dl()T>6pXf
%:3/JE%YSX;:>8+VA7]6pB5mmrrQjd"J9It0?\jhdl(RTg`C4BLT'KWg$,tA4nskV3Zi8sjY]rP4AKdt"hTh/\++*J0*6$?BNIF)(
%q@AAkZD3g?dn[u2$"5b^8/j&[)j'R-qjoJ8\)1FnD9@jf1-FaT)a$36#;iEOmcpmT1b2Y1It.I[hQ96:UgRlgg>^Vni`S?EP:R,X
%"MZ7:;`2R"AOb_&CBWJ,X_<]%q;a<im):4697,<m!pB250+d1]9tQRam:kI-n]^C2']7057GR:2$$,6Fc72q$ri;Z#hcsTcnQRfY
%B>o(35##9=T/L]LTT@m]4oFn8a"jnb#4]rL@Mpp"p?1_Uq=D(n+$-g1?>o^&T=OW)qPSf=$aA"2WXnFNJaMI7WIL3U4oY69oZV/f
%kP/tmD.[tI"Lcm,fBqY,@Fr[A00^IQD(HdDrn,'AiP1d%QdNd]:F^2KlYf?gk8K]I'X]$T=T'q"0\Q,`0q*j3btO+6hdWAbT/V,s
%NaBNXGC9:rbOHP/rm3FJe\6Idlhl`\^Ssg)hRCh7I`*Bfq]0V4Z3%f4mIRAKi:20O5/2E(Dgq$,5NBDeWjg;\J)0/Dk1Uk:8&A>s
%Lr=8q</WZn4@B.,X\I*a2;,g&/Z7b[TLNWKjRf78VU$RSi#YP+CfoT65J+Y@I,2<tVHif4)%gPb0kk!ipL2mi`q8PU`V%eDPnW78
%eNO*8m/$C/`D(_S'uYQhZBkPErqaW(Hg#;mDm-&@mi$P"pQmi)$[e>Gg3Qm*\UtH_d3)A*c(H:POLD=bd'd@dO83GP;sBdD4ob%M
%dBETA_fYZ)Ub@5o&X4/N.Gm@'VB\9C$7jAC;7%cYa(N`R$&dig,Q0^3oQ9@U&"!4nld`Xa\+\n$ik]]I:VH!gfYlQ4leVIWD*(rl
%ooFa1H@&Cr7VV["FZ[X)n(J-AXS98/[$Abfdrcbsf(8n6O,nR9U%?d0L=5s+RQER=RZLl`hjgk#@I;+mbrYdOmZHa<^CKZhMr9Rg
%SSf6p^1QZg]6[DZ_lU)n@<MV67D030).st7)TM$"0Qj-r"O7CVI^:sKqK;'m>Q33"p+*nDAfZUYK'=-8DcQVH:[Jurq+KB+E/HCZ
%>5d:srA%J6Msu/Vfg34U'5qbNr5V`j[P?ppjFj@+2s3Y;`=seFNTL;+6SIAf2lBtll7t;,5SfR4QeWIB^!gnoEhH0WOI=:pB&@d^
%0DHZB%Q?[\F6\0!(K@O!!l@NN?0E1i>I@5^j<Mm='\hfaWNOhiG(D.t2SIt/Ru",a82qNUXteDa)U;(P([-4Le2XqR)c96=-75a.
%]O&86?DEEnH*;>.lW`[$QeWfK&R,RJBO1@':Y+.=rb=CFO6`:E<unif<%E_YbkLElo;>-Ck]@&(470Q_4]g)bZ8R>D=qXn:ZY5r=
%%X^]*n%Kh;>1.*<3?BG+s1\.`D'1J.+EFuhFkuosFnSOGl1mEAe)g_h(K0?:d^"dGSTY[P2tSH`6TTN8br*eE>2Du@6X'1:\bG2'
%/l-mdT4Z%&71BeuA/'8?R<Iq=^?:Th4T)GRBQ83FrVMNPrpj*5GAHmEqjicRYuA3=s*1fC+%]Q2VC1-ce$^nes71^Xqt<K@Kp>d#
%^D6/Z\uikK$=6DYrqs)/e&/s"cSAFn9[u<(It+Rg2J4Bf9tQ$^c0>%]RDF[UpX[`t5MubE3`\DBBjg.e.XJ=RkbXt]#p.3_e#a8r
%o^-`V4YNg,hS.B?ZEpMX>!a!I@s2;s,SGsQ`H!fd5=l(*me*\u`8g[He`Fh]\"Ed[rPm`%=]*W-2b.@nq]!j&9p`Hk6]Cu23H/l_
%-0OK/:!8kN=ZZ?)Rp@aBDO^*EXG+PfL+WZY??I9;b:d=>ojAje(AgD9D7ribU@WN]ZmV;"X:$QQT37(QVZ\sgJi2F(2`W+da*@3p
%hO<*^-XQg5o)P"%S[#K([d*6ol5(r]TA4S(i;nEcP#$N#"2oXmA=<FC0I8)B(,nca(8`K.rb"^mG/(1]qJ@)$^@qgR(*3P[L$j;b
%#+6<Upa]^NL<7..p=)PAI/()Q(;[;939g>3cc?)dr%rQi`r7jcE+Y,eM+6d@;0NhB(=Do<_.?F>\:kAghk]sImsP8*o'n.'+D.W#
%%:>IjI$Ts$j-sM!ojG*`"XBlPDr"l(0\sh\K*'kc?4\nObED:h]L+W_3j2T(`Y[kC*R3%@)IGB"Wl[YY+!&-pCl3j&o]"^?Rud;U
%Z"T?Uj0p`KX@V225$FWVGdrWhVdfMOd^&(2lm7p:RX"VO0FYYnnS)7a4<!*KhQ=MIfu^/U\f2%Jjl&[9oZ$p%[.54HcY]Mp?bOdS
%%u.Hn^gK<TpbV5DXnX$KUqu>(X\;doEX&Rs[:2i<$s&B(cFg3o3n%8,mFQm3b8@;jer%5>Zb\CJF2#KU@'03>2LZ[Y#4!Db\M**q
%f_>?V*jJ,P,W<F3,;9h8^215IXKc/W)C2-U=h44l(H?8u':=BZAEWX#PHZi7AIle,'+LSXF_gS6nX@^TWG,/Bq%ig0BfcHf3@.tn
%Ff79(p6*2'hkXUPB;uci8o?3Eghf_qn'U`fDMU5Y5:6<YGadpP!Qs'MUVGW7q5p)!oD2\=1d(AMdnB]4I>7C`q4/kkCKT?d2b];$
%NEb^1A<`sWBa;>cPMDb>RDMsZd:k0B=dSqQq.b"`,@YZlM=S1'Dp4%sho>+a*VnHblcHadURD[e`D+e/%4(D+gL;)AnCC!#pk+Me
%S*<om'*IBoDr/a7F[uus:]:TsU/]11=!_L[S&0cadd<1SYSdumFsQ,'SjJMa2HRV(FJ8I'kgR.Se".RTd?^>U-,&'6;u7u^nDELo
%kE7^Jg>JdbOf\IAf3.=<V_->qb%+3(`mSD\hEPCYHH?RcIAfbhFC`Z-@#W@]7)be,\9+e)^FSQpq`!AL52Uk]ETO_*X2*?bKnTG@
%i-$3i+,B`gA+TGXdBSC4S(?EcG),dZrc8pV&]9ob>l'KjjO.\Z@6Q/GMMDGS(*d[U#I;H/BbWInE=HZcc0CCnM^V8Ra^eU`S?OQd
%rThe`7<A1$lnO,-4J3"9Cgo/`CGS1uC#?Qg+hrZ!F_Mr@PTnCnZS(WTNRTe%Vn-$)O7c$RrdC+dK19VfpTYbIdJ?u<Z"CUNM]Xn-
%fVn@U@"FC3DY<<&T,!a]OLc4*PS<L]G/W@f\7CN8KmYX:[DbF'L<^aK5+6;gjgi@t^e^G(fclXTE.q9W9kL>$?Cm*o)C,+Pj4fcd
%fM#)LcX6&Ym-^cMic'7!<c13!fE>Gl\Q?\Y9ha+(roi!qn*^["W23tj@L@.nT3I_]SWh2Yd1L<@e*H<]9P$6?YW,D/`hoIZgV)Gk
%bJ1XlVESQnbA,ks[>]FV9XCqIVo@nT[4Zcn7q.D*3+h;<?J'WZ7R!+dG\:&^O$>"VfNMIn"fHX]c[aW!I'LTZ#QdG,:Sb1^IK+Tj
%n]'@qraO+Opt*PrUV2.A4rV,>QN)Kc)PASUdrY+1VO3^b-K(nB3Sr?b1@'."W9OdjHni]ueCI`LK`O5H26n4.n<Ha,qquI0)(P9r
%^$NSi)[k2j3@6)fqg*7rE^MrAPh!HOj;!'P7t.J*[2@N>/ae%UBap_4BXWIfMQ#hUouX(K08&M=OrYt)RCbV*NS<U61EL?nfm^0n
%eXOVORQ/l[RJhH_g9<39hU[@-Hfc;jIVki477>@q8D_&T8GdUZA]t&;4[\2@pirO7VZ6i.N+@;'bJArm-Q@*s_<tb?*+P<F^LUC<
%kJX\4-/9Ep`:d(D$@Y-@TQB1)b;`>$`DMOhmbUuSWa*Sgm=8A_2Xo1-agsWA'>=-I@t*-#,K#XU^?<H[_jgMjg4P[s3#6D^#=0;K
%REpo5#%LXRhUnYdT.AB5n*Q@5SfFC&H]"At`+*#I25KF8G:KA;Y4gKTf,tH2P&!:u%YRWSfaP0'9FTUA390%X8XN8a\">,9f1ZpS
%d@jLpGq(eXSL3HD]2J+$adqEW=_qt,5?L'V6;tJjr7:W2$hJ;f(8q1]['hr6ZqmCRG`lnC1]>d*ZmKZn2+*[5J#YD/4ZPNtpO/qh
%rqp!\c2O0#Y'LF\[aGn[\%[<X#/k"B[T8F>>#R8)[(lC;=XqIQfH.e]fX"Xl#MXq;S'_>J&h@_mji9BNXO5g7e6.)/qJK)diAPOI
%1@]%#J?*5*=;U;qN^dWNQP`C5kKC@jY']p@jQ4ZXgP'9rW=?TjKsSB!S-Q3;&?aR_352d3$U?uj8.jA<M0>UiVJNA$6"?Vfq%9BS
%F?H%Obg,@a%<8nf>n4tAok)$t]dBXHDjP:=fR[dSe`tNp>ts/T?^61go.X=>46lc_2`B.b+#5`5#$aX.;I_M2'um,qBUmi0bf#Ib
%h"o=S_m>+8am^`Dh'Y7M6NgcS@Qr2M*$RHt0Qf"?.-;(<9RF(i?PkXY#ELj-"+-W-(K=t.gblJ!YsCt--!'*MK-Y:i5]/:L*.aa$
%46Uu\>CAs&:V>O,A_9sfj0@'cYti=$XEa*um*S?u%X`!ml-e60I[We/M5d2<"Oa-Q7oa!:9-?+Is-LkG%7\BeXkdt5/Wr"Q?d?`<
%IQqIuI5<EkAESo#/l#b-B8!"4ZTSaDDo5G@UR\[47Ck^T9aB!VTAl@7Mp/[\2Kp7+"7tp"(8;mGdO_B&Vb_NijWUg<G):<.j]7]$
%+d64YD-GpEjPe\'fjs9j_%LJ4qeZu_pL^mI.4DiWmkQ5e2'[6Mi7o[AiTSqdb)<FuSronJn3SRrY5+[<ZQ*VTI(JHe)@)-u4rk;"
%B4ZA\[e@!h2;n%1M4X<OH!J!Ipb$2gM4STfT%P1tCAf;lk#[e5Y&^)rX8\_U/^7XDhWfS9/Nlk`rn[_@r80Z\\q+`7<W?dYV`gXN
%$`ed8/Y@DJ3kd3oZQJM12F%.S)^3Q/(jEIW%R-]_<\U91H/m&SjR1t*ICLbQX030o2EJ1^@FSXW$ZM2+dJGi.-4V,tRa@X2ot"dD
%CXTK2$WH]<c?-b&Qs[\-r+SU'aCiE%ai3jA.d7L'GsTnM3t_'Vj!HEmWq'k&<uj5F6'G10X,<D-lD$9s'6bct4lZ-DERWG%EK_1q
%NOX$:lZYp5gZn0a`D)3&\2E+BM!:"cUmW<kjQ*b\bHlUM=K`fMX>fC!X/ab^/_8Ne]*m3U;>IhX+>9gDh1,7&NL+$h9ZU0D9HX`5
%IRu,@Iu[BAD`GI6U7XSTjp;We3,hB(/^5#j.oVi`%$fM1CI]n!fK?.&LHd\[SY$F*3/gaVG6T/W+)S"=J%r^crZ/E?Oa9cr"ZD4f
%g0_V0<3<jf2cg\F%B[%Il0bU.QA1,d=&<>'BPCiAr%G.UK1OsQd1W%#0Q_UI>CgC:a^nC,6h<&j[.e<51IGqX89CCa2+*9F.-B32
%1%:n`jCOpN$G4+VR>TH13qAaT>c-=?^B&K#.GWUJQ"poN=4i=jGI1>JQ,/dlG.jk4:D9e>ke/5l[/SB-.CSeE,]fj6@%Q9fj\'E+
%Sj"PTSH:u<,r62'E]=&8d]`=JpZ;$Y+k)FU\L\$VF9EfJe#ib*kT^XEg`\3?KqO4CX1]JLc97_M4)Bo$KqO3,EJFa52*#[HBSeel
%c^J*lVnqksX*/(@o9T:k'+nK_/*$F[FX2AMY0<eN60bpc5.hiGks[UXY]ueIE40^jRE8]/]K[M@oPdDl>a^hBji=B++2.QmF(NGP
%0(+mcm;B.dgmjtN%5o&"JN9llhOZ`/<p'%=bfG9>;-(\.8XM6b<_B5\WEqJ5F*^HU=g[d4AWh+CD[`B+oW4"`";eo2N12Ndg"OD3
%VFdlE\EhJJe%JYaq=SEh:1Fb@IhuRuarbS/L+W$4+pQ_.LO#:"_jo42207E6lg!nd*2/Q^C1dD$.5E,,B>#QEh8DZu,sdFlq(@"%
%C@'K'?"@ho=I_f?20tSiRL6kE`Jo4_T!\;2rq5LD_QugOMhC-bGIc^AIf4a+W3!H5=(?78`gGY"E@M^5U-.pAMdm6KMroRPU\u$T
%h^&e\3K(e57eb<[X=dn#6B&35:QR^:Vr7!/CF:XAJ$[,Q1=9*3PXC@-QQiTXi_1RY-p<L+SkW]PDQgc]5X3.i`8W%uLC+GrIic!W
%hX<K@#O\8VlbCR$[-,[_(.VW`if*fePujPdgW`cMhe7!hP.k2_WSbPOn=k'.4C-V!fZrl/PP;VD`M(O?3Rm&mZ"\u\?F%Eg05n>@
%q^\[c>NK_IHSso%qO7"W\ET&;$8L-SglC<Nf.(eP-ZR&m`Z51D\bL04iiL,2FU`(q=Y5,J2+KmSG">7/3Kf/EYG)eFkNC^73..+[
%!a;,&(8q!I9HZNdkH"QIlqN!Q*gXLmITNZg@jgFm6oB7@9,428*c7j@nukQ]B8JW%:a'*tRjG59k0WM-_`H:ZM-6OU##j"JYWam:
%CsijmH+ACi6j(?;"a74d;NDn]Vke:!;=5DQ*!^?4&-VYYOi$>d.3,aEO4/:&N+']0eB;rp%SPbSR[!*WZ<X$6SXWUKS)&kCiioTn
%a6_$0%6co/gQ8Vi5,Q]@8K^co!PEi#AfaHi*AN2<ceUp&I;:HBDGT('1H24RI>_$<@s^+!KjcIta(*_l]Wj70R\>+5q=ne,CF!&@
%a)`rG)+JO_,O;lh%egK?2n$buMZ!227Nj.Ge>B4Lce_:N9l-&)Ic%?u>EWbX?e<fuX&nmIgQT;K1qP0EDC0QXSB[Pd4ZU&9ZSSro
%mT$%-;$8Oa7`Tt[5@&PTkLTY#No[1ICQ$Z2pLEoq#/d$MOtLU47X1s2=XFG]8Ud)AG2!h3fJi%HX^De8b0[6\q,>H2)U9h9cVM56
%/ZZNJ+X[f/DNSM!VVljh[AYWTQ&^j66#t+2DpBtsa/\0U1i@Ff?!1jQWd9A+n$t%;c@GE;]j#$Jp=@N#O6C@?R&!C0UM,831J*en
%CU\&q^"QXb4h/HkS'ga8$:&MoYdSTlJ0!Lf2'Sg+l,Cd15NUtW7LgqJdQch&2)]_5VbaL'Dh0tC"RIR[Rgsrg=ETM-.#cmXqJj5`
%&lj%]YKQ^X4&/kB247cZ#l0qA>^`dUBYK8U3Ji-nYt2(eBMiSp)r7;sHZY#D+q7Sd!pj%TWtCp4Re9D#?g;Ah--t3\BBdI_4Lm3C
%Hu<h:qrssC?$1O9SpFJTUWV]!aZXWIN&L_7lLN::0Cf#e/CVFRa[8k-qWL1'7`-SQ\-j65/mmF_3bo]`A#<QAKC8B5pNnX<A-sjc
%\I7!=n[gTT=JjUjX)`'(L<gfPpJlQ6Sp>pb?+n:S^No5[IEf;cV?4RF&-4.m`+.MsVg1%b?9%lK3^<tM#Nr?D$)4HogHZ`+!#r*P
%5,?s!0PofQ*Ich+09=UZ/*-[^)BjDGN9K!knWOC)mX&-pZ$c_^$=SRRZU/X:C08RNj!UDabI\_TNMRFAlY>be&$'#BR=9L'\l!2e
%Jh(C6nr8g')X7e)(oAs?-T(bJ\7CZ8*@G6@[=)/PIJMmGV_M-H%NpH0:Y6>-lh&`b&eho8(2>8Ma)`1Q8cgh0\6p.T(%MU78?UVQ
%fT1C&QUt33i$:6c?#::`]XF0BG8&Lrffr;6k4m6Z5=&M[F\b4$nJ:P`S7FR/DPGpCFaA<^lcm1/?T*kT,rWa!)VKai"3Ye4G3M^n
%0%/gZ)LM9i6*BR&,EGEn2ipCt,?7mi]adoor9p4.M)Xma(-+VnDdM4/A4d"SS1N1\PZhR$h%oAuYA8-5XP<)hj`:;]^4qO!-E^C4
%oCZcUg%k8b/(R4Ae'hX\2gsC$GC%g9mQKlCY];s]@UaHMqtD0&,BkhujWOh-5/][tZuQ$c&tn8&\2)BlAt1jb2+0KIFg\W;?IWP$
%CX]>iWu&_e!L]pn]r6db&q<)e+tlgRFY7M0qs/j8Ac0.@SOU4%<3g6]MFUb$BG%ROVAaS;K@ReA_1B1Z_3uU&RO+<k8B(-p5[qHu
%-.=X>M\FSKK0,F9HLYJOrE:_k?l_F!iD+3A&@%#A\rTKY7`hr:S@13XCOKjbn%4FQb$]W:?^6iNe.s!#OD(:e5)D4ISSbJYLuP6>
%QJ#7O7hjoV+80nJB9q'mr,L4)Wq1m@Qfp@c<o=t+W^6ZV.i221mp1V,Q04n2DENU4qV7-1&WZ&#7I?$p.W@]7&O#+@mcc%.(s]"]
%b(WB$/#A_T9"1j\)R5$6S^1!#b=9=Sl"[(2BCGl55Xu[*Q%@*?Mne'l2fiF<2CNe/9SQK\hDZ=NQcH]A]$Bms"826*,(9.4[s/*L
%-/4%_Ruc1T%+O<u9;8om@L:XOT?Q?GdkX`_Tl(oGD:]Z(`GPH:/;_7LO)Km3m(p=Q]6ebrInKu\jjfp>c*b=Cmefe/gL%R#iNCFg
%>=G`r0AJFe:BkS,]*`b!eW-9a_M,W$kh(OEp*oALFk)L<I2r]>MrOHS"gQZr^lGB6(G=M57$"&#?B;SYc,6_X^SPo$VP0G"O/l&D
%c2YEX#AViFlIsWj4s\p1=cbf3>urt7D<#?O,i-Sp?k'0sOjS[KH;TZMG]_iIleXa%]5XSl]#6KUK%o*&>/qlBo6QNVm9@#9]InMj
%%Cn[ALkHg?J6#aSVN+a@CbAi1]<s&EIKq!HP>&OP_Hgr<N"q/<,^U*W-10)N2&c:4PB8g3Zo,9l5nqX!8_nq#T?=.VB:sQLQc_S`
%J=tjJ.75k6S`5PPF[>q'['j"&QtfF\!U'&FX'YM#.at/b8IHoOG7_M`[rd@[X"AE%a&EM24>0EarN5/\Mo11ZIiDn(2JkNkg_fVH
%)`p]]4KG+9d,9mGTVD[u4?'_UerCB&B++@<K12kaN_Qs4%ZjnbLQ5r8eD/X5_je]IJ4LFj"6/=lAS.s.CQ#B7WTET(O1GO6Xk.i0
%fqp7L1po)i_7lreoo%94Okdn=eG/_9miubY*2ij8#tiuY[5)oMCM9WZag,%8,t!Vh'74&BT/>%GdFWKG9;`FtT4sPTo>XA3h*8Gd
%"?5;U\=N#42Qh'M6uq%;3ND9nLg483NNh%oQgKL/[sa#&)5,-pf\C3,qJ83`d_9EpF.ANE)e-jOB"mD(UGPkC,oLTe(+1I7A-K\b
%OahjZ"@`]_3\j;FIG/%q?G%Sf6dmem0\sU;pfIne-FpSXI^qa._)R8Tg.M[!F$cCSHm3LpirUHtfNjZ(-OL_>3AnBj^F$q7Z$qDJ
%Vi0#Rh"p\mTsmKU\9"eYY0P^*[E%@=92/p?'miWGAMQiu/+K!5Vu<Y#>Rp:fc3LlG>lnuu3t$#\S)rhFEeq2iZam`,FLltO"RHqJ
%O^:b^Yuf6nd#RS<^_@gh2(I5>qfu*kLA;_P,5nQ#J[f#ELrnDPY8<@mc.sthbW>:n@-*VfS6CF#@A%e)(<PN=f`hXQX5slX)f5fE
%r;#`dd+r[XaW,rVs"$stXDsGka>@=!7L^]>>C8.e=,fe`p\&ZNA&a9.-#Kh[!RhMW$VUr*=3sUH1;[8!`bsA<@I]bXMuUmjCXt!7
%B6F-L9/G_&a@'&T]Q&((DXNdp`p[4b]f-fu[_2"0p6*b*RLc:^%p!V_Bg1b6+$:</:"'`'f!dkj5Q@n^V8W4<k/R,0o`sR-iE>-c
%]l&9WD$b-pkT;])YX2QdI@UOsceZUPh+]k7!]G$p-JUI\#4^ipc0"!rVN&ZdY6'(C_+\?OD\uDH5;NCW+a'0Si^+.g*fUS34oT):
%>rjE'7Ge&\!uq+N"sZ=3g++MVfq\CJSYDlArqki(YFG_`YtjJk#El@PFg`?@fQ5:Z%:U,7r@7_%_1e%S))PQBXR@e)c]9E3TpXX8
%HaH](B*Y`br&fE(WmrFVq<R7.V#jFEocS0_*n(^n)MMe;&#8B)L\K6^Do[oMos\9508s=DT7$UCqO;l)iW?*i^ru\QC7+L>T2,f=
%6AbO2QbOSB(On<QfBCi#Zu5'WXeUs%#J0.eHXf4`X/D_nCu%V*4G&>=a8Pa2bP)P)m4t2C(g:LPq1ErN*k(_TjKm^ohth_.[e?)9
%XD<V9`iY`L5W.[k,H<6@-R[*>_eF#OhWgm!)f*LG&!nA%qIb3Sc-4U7Sg+:E18p_-T3no?L,WR&o$\B4Eut(Qa%&=_-ePu*1/C]t
%?WZ[Ol^.Q.5tq.[%UZD[oC-%Y?'&hX#Lf2ED"@J1!IK%)nG#O80^e<c3^6cDr6gQjKt0&F&:_@L>;Nh8mA-br^R?.Crh.T)YL;(s
%UPXi\b471/nq0Vt2*O(ZS#-I>)@#-.8KtrR%G#^b^*Fu:d;REU:S0hk(nouTj6N<rI+.2rUZMkAQ_msm=(S'a2eI%,,aF)?g`7[)
%S(ij;ZKadq<i`oYCV"+-?!@5W.!Wgk,.gmO7<*26nCR3bn+XPGGlQao2)=d!Z%M.T+Wc+sqQfYimFt-Ls6n:A08I;;hL>HLD>)[k
%q<ul$m35h_Hhc^dmBp7(p<Gh,`l?8%_`UfV0s82?2a;0Xol0p'g:QG!6BE]o>Or7miAABfVn(3s]DL]'n)"ZJfrK>qdHP#EIuj<k
%m&c8m,^6'+0AA+R%F$[Dd/E<AIr=E!`g?V&8rgRDbm7E<(ZsU+pV,M?=h7o<==CW?T(Y+Wm-?%bhuDA*\3@JY^H@!J<S?fRI8'(O
%F.)CMJ%/+^OU`c>h7AB1dM)LQR^t.7X1E$[+*"lZO3`i7Oa?ujb-r`kK:c(Xe"qLL=BUtp9D#PP4%o#`5J"J>Q+aaj?)I4O)s*'7
%8#ss[rn:QNG2m,BXXr(:p::*Xo/dW*D*+X[EIMPpEXg=W:Rp=1W9X6Bo-_iP9JB`=]`,kFSI'on4/Y:T\cH^5T:`1[_r5:mmTH'&
%ad@\]9tM#[j)bN9`/J0=]T7'DK>@PkX7.i=G;.87]E028F9dF]OK7k*>(^N'UrBu+.-slpadg%IaDS0[,(oi;Dsaa'?gFc=2]qJ4
%5/6i'JrT!:jRN!AA6lODQ1^sQkgob$kCq1@-[YlT@3'dVVJp97\2-g7*/>=pP/4'^rP=9TpW)LY5PYU"iK$$m2#QMmk2#5SCcXTM
%CJ?2AL^POafJ">m00Ol/g#DqG&mb69T7%L-,G91f##,)HZ[KaRBss1\$9YE<Aj7*Gq/MnoB3&r"X_rGnM66J>A^2+#)s<tOYp5"5
%O0%^"eYIA?mYPO+^@9TUeJ"*S[6,RRbcjfQlUL#Y:mof1ak#aX:Wph.PO]^@qJJL(/l"pckc\N9Iqd'dQYTn'3pfZU\'t+Ykq&@E
%gR'E?D'j``!Q4`6ie'e:CfhD5r%isodgpppp^%8ARr^5:fj4ZM%6BWbCJ:qg=>](]XNPXYI&:(sL4=CFqSM6(EcgpEg@t(-?`*0@
%-6W-92`>Q^(LW3ZolT+t@rLi8Ec[3N'39j>!G5%IRagoZ$k.YO<XuL)r>oW.#Q-BVAY4HahT\^4fpg\]7gdmPI<%mR$0UCH#NW/W
%rVHM!:Hh;9kIUKIf&=;(n4KkDK4iL#<I!2ZC6nhJdaP2IYo34u'8m+A]c$M99:l,f^RJT*psr=6de&TQ0a'G1psqTUn5g'[T"]@F
%poa:A^q3l(g<(Z@?99OIRa:l_5<bs@Rbj]UAMq4%V7E/WG3OPlS?<W9mDn*(LK*U/O1c%<%dl4?Yii1,FRs8ISN?PKhUIH;/$)0A
%h*63_01+Fa;6N@drQKDO]#!]?DJ*t^gD=W;YW^5T<8VF+!=E[MbLu33LhL21<TWs=<JquLM%7[)(#0%rMXQOR)6B<MpqH=cTO!>0
%2`DfW1IN+JnuuHARrb@.4Dh)UmF5oFSpl[*0/,9S?T0Wb%9k'3D%$3/drkqZ#@-O@B&)d!Tkj9^4:"0j#W#4DY;*QRK-ZKA]U3Gj
%F6P#\ceo_Tan+tBpB":M"Un#^I+Pk0A(0`Q\OP10d[Q)!^atqL)>8LRfB@F',<XVZ]"mXNHaVJY>iW,ieOtX'^fZ.?f+8s'F6HB&
%con\K7eToqc[K-V]Y3TXf3kVD]CB%[\mNQrS4H`,f9.;GG1q!H/ms3W9cHJ8jW*PLLh[6oL-"f%_*tcMd^2;\f`rC4J3%K"5[NS"
%N2@'6g"UC;cehlr2V7`<O=KE?j;A0#5&X2#%,&8Z:!C,&oL7Vmluu86qO5miM!X-l`/If>J`PgGFG7dQ>P_bqHO]??iJ3C_MmN<H
%h^K89+StNWlKe1++"L$1.Tc<c03/D"FL>JNXEI?di5,&`HlS!u(Nh-PkAq<t]kg$o=47QOO8DpWTc$c!m!CMk]0C0,)#)(QDI[3E
%Wq:.s:RR1'lg*;4q2n@.'"pBh5-&&F(iV=\7+,+.EW"^\:"2:>Io-,\dX/IjggP,F]#buL[W@5;(\q8sf/^'"qmtK.8;3UR>knR3
%IFh5QDEaY*&u0[<`9??1h'E$gRMshuY@@pXQV;QpCs?d(\)%j"/Re/mrqX@Dpm_$,=PO.p.cGUsT<5u)hAt)A,S"JLYp1:u3+Iet
%i,EZTU#:Rg\q^e;o5teph1%.IO&8h&HSRUV@Dj6jCZ?U5U=l\1X6sT3DL/jT2VSBBQ+7A22",`8s)m$A+7.:.GaRLho&%3"Hs#8j
%\rXQ!8@3+_TDs5B<,IP+02rrI5LN;`>-9I>NQOAcn>^77<ac?,%dKAVV[9":n/.dT3]6Spqr#3HDlWW&2A]K1Fcoa9d-?cI&,GV]
%2p(CaV"pLaZ]jrKPQ0B=p'5B*DH,kp:ES'^C%h@</s$ids7"LSc`O94aD\;ccV4l8fi,h2cUIFaBoChnYOOCh\X`sEYF[j\?(3Gn
%2`B7U4=R:(e^'F9H2D23j!k>t?]jP-YTgWI>7&IDEAY?-2H-(rbUBDa<`@R+j4A`4Hik&d-Qj=q:_eC;rf-qLIm!VVY=^?=UX,u5
%ass<$me98[k-bL:p3u^0[dQS%G+.eWPB*%[W+jiQs5l*o?5Y!Ar5#nA.UfQC:H$f!H"BA[k,7O7^0MV1hIFql(9C9c*ANSU4TcIC
%P9t_AR5;;cgcXPk_8oTd6Up=gcX't.H(FrFD+'I``Hbs.XCTG+Z"37@>B@5lIsdc/$.VjOku%&"\c2EGY'8<TDpj^GIf&^QGH>VY
%03@#Es6t=.oma_&)_J4\rt>/=J*,iM+cC+k:$E`KI_&0In,uBk'9h$ka\bX4/]3j$3EZ:[F7$m(cOXAH^]+5if4OhkHZsWTDm*H9
%]k2`V-2l,kCD1f&a\*8EO!_Eqq@`Q"P-9R(pAPU&p$KhMrPDq0iK'eG.K$[L)F"hach@>Ws4X0]IAEM6T5,X]G3@SqoAnWQ#^uK0
%Sk>@J4A?HNb-]6Jns[d6?^G>lQ+E&\b%kP7Fe8<gWC"W;Ti@>+Q)FC.pm0AmMd:_*Icr4C21:P6;A;Gh?)"EkoL4oh7?WQqWBusD
%K-\Xg1/V2:lT>ur*rT@*1=]q[at1XB9g:'pRMD77FdeO`_EY%!Y"D9XQ+W\\kP[/;8Wq7b$;E0:fDW&fA^:>*)N1D5g/$om&s]7:
%:Q82=A0i9`']rhh(B(m>'3W]6VG`NfrK\41fnu`&T..@[P$+(sP!sDfP6@qMABJ-^:SSPbQ!'^AjuRdNQ[(2V?(+4"Q_gZRkke##
%!t1roIO.Wc8XCEC7li<.**I@7W\4^*[(N34bZTTO8Zs\/PsFj*oE.BD..aMTb54UW'+!lt:qT&]TL[36,nhS>U!o@^BS-r)\1394
%PWBK0A>/j6VTLYo)<jT+Y=-Gqm]'9h6MD/iX\9HIkt8eLR$<#uFd\Rb>,\`7ThNn*Mi8oc+_Zk2[8TYZ<C5iYP-eR3AXV")dZcu>
%kZ6mP=[?5ic#Y1o?5RQ,'8]?G>ndJ,BL,gn93NNgX0O;RRatVR;Puk.65O2tUS!?q1nNR;&^'s52OY=0PP!\_kY:\`\S*i5qAiEO
%+\BjJ:S,t7e9LX4]gCq<&>db(Q0@KnD8-,o#\[BJNMX<ijEW2tg^%J>S`4)Aq'FUrbkj`',sA8!;I'U.^8,,[KbF"^l,MsZBOfJr
%a>BfCb!LC,-Ujf^Xg>Brf1:8c!ifV3/t#qdZ[N*qU_cKm:lpd59j5uVd5qtQ/P1*^ReDBTnUtIG6F>\C$B%M*N=Zt],#--JMd2CQ
%nU$SK#5U,ObUmC/T,s5?NM`77bG9faVp1q#WjY&G;uI+X(KO&Q/I?)9]bF%^WiB^TP!0q@ernmhVHXZnBiRLb!Za&NLmFcrI4RcY
%5Gnn2KGK4^PMT?BB[I2&FDiH>6I\@$*Mn0Q\mNfkFT((58!A@2#AQmVZ^g_2.=*Ue8NW-.^**<7C2EKVM.5e<-++rKY:XuD3LMc)
%NKE-,qBp,F`K->C`1S]OP?1eQUPJt:-cn];1?n)FJ5Cg+<#.oon^m#S62"ZaP3bbg:VOD3hWGc`3D7MgH<\25Ob&\'hSs^=?&bJ@
%<](o'QVq![8R#96Pib>VV5ACaNhsNdc1!L1#%^ApZ4L;qN%8%]lJ"WE5aF%#[AC@ZBE/@(3!8CKOBg'tA7nR7mTPlb-DuMW1V+cc
%(pB+hBMrS/ToI0NRR,AC\o006'3%:eT,rt-4ABNQEu%ZQG#"OR+OcTi;l","Me$W?<)q@ud%)R9*=J!`TOgdc9=blgdaW_*dPuP%
%M1u(4-VenWi9VY1';Zm7='b'lj/+l'TOc>bdE>HJ:.;.%2*R<=g>c_BkodteWU-d^ZTtuL*kW<;V[T&KGB7W_aV7+_bR-ZGZ9Hd&
%Np3@$acJlDY!cRu)0tG4dEJrcgH6QQ/M\)P%?tB\a"Jp1ej`Ztq=%-8\9,,;!$b5KQ`G?BdVoB2hnt=<875)sgJdKJJ*TCVjQY)H
%7^BQ;BdI)R9^&mh&32^\<mnuT_0MU"*g2Cc48=F^)&]D0m8r-#P@kAue)V:l9sVfINe9Z].fb@#OD0.>O?Fb(<VSa8oLbspdpl1O
%a`F\7S[2D1H8A^?%o$5rj.tagK:FT@K9C&`@YZ@P-krn0V!D3nB3E5eTJ4,R9-m,]aO<%RJ_A,,/&<LX$VZJcXHiS)H`HKsV2H'b
%2PlA[Q_I9F[p=45H`HqL!7kqOj;MRiXjB^X[S<4;/tp83$,("-6KCOu?#JO0$^$KA)i=23;s*jO8O'&LZ$-=R+PL&.IO`mo$eKTu
%':tMN/lh:F'$;YH+c@j-*BVdpUYs)<dqNlZP7Ta<Sq@oo;XPUXi>n%Ue'?8f;JC<dVP=`@:.FCKXKYTuY-^gO)68ND!(@6:>@kej
%&jqtJ1f:Z9UCi(g7hHI>,A_LfbfMlnoNT?.1IApI,ND+kP8R`WgiuFqNBA@PAB)rW3-=B4$Hl_ihQmom;CMBIS=fEhEXF`r/gZ"3
%@^2/8TD_V8'RmOaA4VErpF7,3[*f]C+?76]1oH^1d2pP?purQYaI7IRe"M;m;'3h.UYQF3T'i)VGBG38@rb,/_k3NYFpu?FFK"D,
%%<+MjeR\=OMc-bj`PEj9;m#+k9+lUo/I\5>K]onLX`DDXfEfmXVf8f$<sU_d6KAfB_TAkh'BlqO[m;sXp,+Ub'ZcDpOqk?7AqLFS
%ALp%d67"btfm$YT$'?aS9K%@dOF)Qj?(,8*Xbuo&+Wis^DjojWWf8_.QauKE67@J%V.b)&^1=I8,Xgdar/[(j\+ja4V\=1:9F/6(
%b#4!J\0+3c=/q?B9_Ars+h*sUOIe.AoI3a#ME!@h'bbR+Ma?WtOnqu*Q^Q;IK+kC[j1/4VFJb(f]c[mYdmMT-9[1[\P,TV``[%-@
%Ln#T4G`'5%bU!SCBjA74Q(Uqrc-&/N-Uj\p?A^YVM-Pb#";]/2\MN]P\o7-ol0ohE+us6]3O4-ZHYdE?JOXgM*.O?]'^(JgU=\iR
%`Y?.kSLc5J5r;2#UcedILlAu1UF_!:"M-9i&rLCbFs4ihf.hFHI,TdPor_d<\YYP_U<4HTroD`C="OJjIkmnnNB,c3H&Y/5^9u5\
%A>K+i;g;Oh*Vu3?@2ppk)<%qZ#6Xo[H/8hI6rCS,OXngN+mX*WH@]_c;gn+klYPm=[XYEs[%\q5%'kV10M,?=4&A\l"%$i3+>H4D
%G<<OnRGV'$'Q"HdcUO*_N2)G/CNbb1?0O1&GpAFq;cU7D2nHhS;S(^=KQ:m_g.mb>l,-*!;_7])Z5TN,[+A_"1lSE!'0,l<b^E8M
%7c#r=4],$FYnOfXFY2i.Nqk-Bb/cH]n.S*c.QK:'AtUDb8U$cQ4juEd@F%RD7+jRqdKS@V6#&5lr]u!AXuI"cG-PE;ml3F)'<Dm.
%J/So6@Vc>kdZU2X?3?4M//1-'682Y=1,'8k7"tr$$-Z:gR@L?QRN]d=Q4afj%#<>i/N"g%HJoF&+.<?[(U6+BnHQA)Y$3=cD1pKJ
%d2_/Dbq:n@jO;Qu2<Q)6Gb651gAAh^8HiR2;+gU;RN+uS-;LFggh$&-ahi#F"d]f8PgVR(U@d/18rDHrejr\@:G/-+//(#K5'5^r
%2B*o0k=4`KS0:9IQe%H#N1>U'PLJmqS322L)D,IO@/`1)W,<SAKp;gL+k$!.:YB#-L/#7k66S.9KGU1Qc.50Gmj,H*:EZ4*ZV/o\
%)&At66uS8!<1+]!N(dbj?>a=D"oX7#AYJofU0f+jOA:1V?,lE/GC_?sRL]`F8[DZgQsL>:^"^H:0ReSD/qad!YiVZJW/scc&=sFI
%]62R1Z:q&emQJr@!M;@#8-%g(7$cIc]Ht6?qJ,jfg=q"lkBZ9g,DcV;Qqlgr4`G`+aSI81D>Q@DJ.S<T4qLhPhF>?GN%.RGG:@[o
%BKE*rI$OOfYD#kiA$AeA,eE]K$JR'Yqa$,HF&X?C,oRrk4<4_CXrfq&$&V#M8gpJnc5EUDlNiU]kpG5!Om:YQ$N`\9c8:]fBhmR'
%*ZQ_P@NQ+3A#JLKQ^>:'$9<&cISZB;%=<@L6@GuAg6nU&7AA*D6L)h=.nb1H.BU*6K/ZK<M[=\Z+nF@SN/jWB#DOBjUfp7t'Y`OG
%P<r*a!LF-*(Ua@g:`ZPZ`ktHC?nl/XK>Y"=N\DoTKP>2/;NpXHQUZ`<kOE=27"Ne][??5!hdPXtdDdT?bbPL=8f:ANA+`s&kbEa[
%"r7oc$4<-eg`m1uA8]K4E4Q3>_L&mu\7m+D![rktLIb,CWfE]M@Gd8XSS10o.Q#F,H^,9PF=Au7r/H[Ih@dLIM?fCY''**1'@5F[
%QsMF_-`u>*Efa!g9>1C=HR^15?40LkP"QB!dJFE-E\<02M:3dp"3mO'U,;Os]G<hNYFq3^Vq)-!SeS143APZPi!LUIcP#DgWgXP?
%WXH0\Uq^0n8NB@1L9%DM:pU:mjoQWfcrFh9KI?nCo%b1@+S7@u:,?r;'HiN-jV,3S0T]p6QRWVC$'UdQrEQi:%&&H`D]D*B3+u'U
%RVb:oKL/(QFZF;K>R37<9BMGs6_m`X=,JLC=N&pm2aTM[^nc!ugf-Tg>o$#cB(*gB,<ff#02sE74$2\o!Z=/5#XPpo`ejhNZqfIt
%.N-25;G>eV<OrkfKJ=mdc4s6e9jr\jk/\g7P]g;;(ok^r`n-o&k>_77])+\e`3ehe<uG.s*),U]Nm!C,8&#\)EFFGo!qNda.9'\D
%WhcYW.K)R:hMGUA6sYJS:I0Jd_T:(>cY,u'c\@B*4[ilA;:+r`*@+dY1)-9):iEXl`ZqF9]ZL6jKS8!"<;HO3F(;]mS#97<W@\Im
%I^_0VjD)(;K<S2;<1(17i7EBGkuF,7D,[+g'Jts;dTAJT/`s_]aRMkM_h.gq74fu7!!shC7X>%FZ.bKt+-'\//Z%?H*tB_c=B*]`
%p8h(?6iOF^XBC?AWRApIP)DpBHJtY^+QT>U=\-.04TcTn--6oh%InSn9a,9!=e2\s%"TB]H5Onp[;3EP;;9/OG>\a`m\+Z`Z*V>7
%j;g4fBF"q8)[cd;=XE*.)3m\.N0^H#UUW.K(tYf<lDK5l]X0Mpk'A)=D2Q^2S98&d6<W:j)Bb9-l-rtA1d[Xs"BAc^Jl63R)PiE.
%)X0:OW`%82>.D"AQ_W?b6nP,FK'd<X&J:^q2@nJGWQ7`5YSt7GVD![J:Y(br"i_KJ$@BXECQS'=:eRU$hdAJjI`i(g3+#dP<nVPM
%&.4fc7F<&TAL4,lCSGii.pR0%$.7bT9XRt3BMN$uiM&Z7nnuurQk5ubdZi7[;G9X!>1_p^b6Y<"UP^&%='KYh67%S5Bc3dV6AXZB
%NMC0SOQmX9XkiJ/kX<rPAX8Jk)O?-o';ARHYIlm2j$I:X>Y>YBb/i_,M'HZ7H#nNJc=1XU*9';,>/Gc>,2c"O$R%02<>1)oj`I))
%>_a.C<8t]2!s_;3OcO%50=)+pKJu6pLO;R.[P.#\G`<]OR-dO"N6^,+`I<M-FC%!VWe_(Ojq?oO`!'DnN='6e%r9N-E?RC*Zj!7]
%$>CK$ed3+W_'s#h?r8'eF7sks'2%MVbA<,*</@V#cMf<[)BqS#=`37A@R>m]P[4'E$Dj=Q&/Cq$*_1Cca!3nV9i4GP'T,(A^+MfO
%FqR]oOON6UN>i]0\qj1-j"[68$"?6;@Rc$ff+J`(?>rRd:mHi5W,sbf5^d-/r]Z.ZKGuBf'Pu$]:pA%d6@lP#aTQ3'-3OF:fDs5@
%67J(\-A[]j_-SJXaN:uk'u`seZK4NJU6(a#+A]pR[[.o;o.crs`/"\QB2;2L35o>n_0Hk)78DF$O91<L%G-@BAJXtl/d/Y7r$4Zo
%%&qB,HN[?c<tB:9@RBQp'%b@HKTac,*Fgkc2^*c#kG(5ZO?g$+[h18F-D\0\d:2'h#uSL(PLH=h*f19@#?AifjJ"hb!Zr-5XO?M;
%'c"#QP&VXcSrpe>-D4`iJBmaal8nOQ?9#0L`pYfH&A$hPY+E,L*[>44PUa#Y5!O3V"ncEMZj0gp#QqfQajV+N,R`tU1P>`<DmG?l
%aFr>?"o[DYa%itFgI04rUWsE58L3WfqB*>p69*(F(2Dg:Pmg.qD2b=5h88I25'W[0Bf*i-,HoU)gi=O:.&'^1;3souPW@Ct#c/EX
%2k8F>l8TJt=DLb725PLokbcc4)+A/(*,l+hR-690YbqbP&Tp%C+[iX?$;;54$)p+d^k'!ToC>)$ePV&LkqBEe'o1`t's<Q^-l)Gb
%QN:Jl,#ef/KO,V<="#EVDC16pm#;Ajg-R],'R>M1ZpVQZe@9H@5:hKZUcAZ'6u#E@ES73Y$M7A$k90%VUjdISYKic9nDp(J"tN+P
%4.T?F"a\>*63<tfRN]k;elK?l`.;dNXX#V/l,L&rFlJ2EKm"7f4,i.BJ`J%m:M#a;8.$HXRKo7-JGF5s5q,M\K_%kAe_O8LOk"I`
%LWET^]X2[kODtp-/48<5VoOlcP=R2]B,km'ZLe16M&(697W=qN9jA@I^e_]o+S?=;V$qq!)JMASb"k?SXO,uDN"'9j>ZEfT.NMa/
%@=jAMBo]\YJdm?oisW,R"kkspa\Si7"A)#u)[?]'=enVorA6cWP.0rqd)"-c!"=2HbRLusrn0W&&ip`?&g)c^np@HKX:BS$aDr\>
%EQNH>"5M*eCcQc;6KM6BJs;L9Vn8$N,@`=t&VLMM('uaB@-#IDAJG<OY]7=h$e2&;@K<R!oK9p=\qha?!HhIF=cZ:>^cB+Hg54NB
%n&e6Q1PSU\LB&56["ep"):Xkm9Ij$B6)n;("iZ^lc8G`_+S8>R@"p9::"%V;;R]-26C.:"6D[n.9?A!g*hWb<8iK>V[9_<<OcX[B
%AI?51\scTHS^+cle`%fN4nIDg1m"P7=dQCcg9Uhlb1h4gb@J]FRNfG-TqrDtrD(`-E`#7VK[NS4&tVQ@9q2p&UoQR#.'fkA2HQb)
%6E'60\bKJ_K`X$+]Y20KefesbaAu?eJ.YEMkdtV^=k"cim@BGk4SM%0^:'I51apS7O?dO%7OYU9>qG&?>uYHFDChGe"TBlJXg8Uo
%)8%M(f?=5lN)8Ls*/$`BF<O3A%-S\a1[`fp&@4p`Z9!;h&FS)WP+>dkTgK)B9j01RTL\GN6\1g1?0&RRkH!N.POd)d9fTF46KECu
%)`N=AE^Fr"O-o5*-A(j_%2KYN!PgZ7*Cp<C5anI0KhAh(&82=&:\8rhIT%Kpe<::%!(tQ)AO*'M2a#H$9bF=`8LE<s42n?>6R^P\
%<Kh"lRKPm%\o"JLgd;;XE#)@F!hecg#Q_"'!&,,fpFM\(_=0Fr:d?`m8,O,L:^":T#Sdh+'MhAQKcPXL30Fn_UA8*71;X0Uhj1`j
%*ZWkE`A204hKh-r#/caL#ut?m0\M)T6c_V*O\fIL#p^-754(8RZpMVjSG@4F1PsH":SjuK&rC4^<X-dDeNXC7PQM@S2F9E!`nFd3
%U!s<]V(MmNZY=Ckq()Yc0OWSN#Z\#p".[LrT2IIUc#"R[65K'@KqLr%UYc(TQo\'_'V7VkQj]R2SV0>nS_$MOg`\EtUtp+o1HLUK
%?A:QR)*a+Qd,,5$Uh!`ObEL^T?",1WoKDhCFQfL5>1at71@gX?R2W?A9N1AP2"?3HDFU+pZ%Fer``*YTdkO15=.%\kfu(`9TY`4A
%8u$IH_X!_?:M/ERX5OIjYWQ=Q]P`!!JD&b!ROf>*bO3W0:hG?G+@OVTdoC_ff@@?!p6@0o]1_D^'<`8l64TFm68Ea*/V_*p0I[IO
%3q6%`BLPRqp.GZ;2DG'=b<6kM^t+14]*2B<OJOd^q"1qVqu"P^?tH(A6OlbX@cn"$[^,'^()!h^^fX6"iBReoCBYFeZ/pRedPUkP
%]T&rr[[+]j[SCI7.$H8Q0J;F;Z/\0IMsMB0KH+aoj;K2F]+9Xb]N[eF"p=q"!4PKc\a;FD8E=Z,(lk4$fbagb_UDAp9OD+n"C9PO
%OE$%pP9OG/b\arpjAagq6Afr*m2aY9LJ2PfS:tb^ris;9U:mL?7?EJZjsHh8"d9!'>2"1R%8nLfA^^ZVg)5+%ng;Uloc',RK`VY0
%V),qRShU3KMAN9M?CHN:!jFsrVlWu+((Q'8.16n`>VH9LXh(_JTVTL(ZpF^nmfYt#\VPsPbT8Z#DRWHDGU<Kq<!XRKi<LM#[.S)m
%3T:^3\WU*"+4.eE7smTM9%0jn_Gs^PP(!$Z5f7B&8,/\-\kh`Z"r%I*gc7uBA?[t6!G"l`:k?iEaP/m%p^C1/MIKZLV/ob[5"?_`
%=)sa#i-`.c9StC1MkcRPQmY/r:uD=EPX[SQQBE?IOeI1-GH@)R?Vdub:rNhl11SlIU6D6QUCslf0*hm!J$!Z'EF]cnO2+<qYn/L`
%9">bo#a,"LV]="FFjrhAZSh;W13n`:__U^=Zbc_WQ3&`^@iVU?7M_0&$&U(+$ZrJU'D>u!RE`Za!sA&C%f(7!A6%L?Jm,+W>16RZ
%cD:ueUYm.&8#(cq!uioK"(2kj!t%n'W#QB<@E;6q#J3d<6\D=gr5JlI!9QaINKEP8)kk3$(GVqtBY3%.gcTYW=-/.bcnNpF0;-bO
%,F_iWmXX;;KX6"Ce;CbmZlnDu""h783e*/!W)_NY6hF&uiLZ1:^C2kWD/@:6C(c71.LP+sZH7,69`iH,!g,R;V/Wng`][p7>69K!
%eT-5E8G/[^+M#tj)N#BmjO3o[$oLM1G+r85Jf!-ko'3&^+U]()69b;bQr]*JgHKCQZ8UAu#@*&'6Dg9U.2Zg$4`aa@CTSOW*!!QA
%<.J/C=%=`I2od;IB^MA34M2?C<1U`dM)K_TQjrrLV$`Zcpe'U"b#DsfkSZOk\n[^K]DC@8C9#TT>g4Bf1b&Oo<<<o*OZ#6J2KIRQ
%6!#[T`lR,3S%SrU9MurRMP7q5hX$s@'+5e)6*?I7mLKT>+r/+W0LDVfiX.#s]PpUu#5HWl.Z0rW&:/HmGYT31=j]jE;e]PfJp>$I
%6UG=3l.`N!,]j]sE,k:Pl!et$8aVcu//\:>PnVan?7kY'T%9f'@%#I6fiSLtFN\=540Xc)5_nSe3l_Au@\L^T<0g/qM-$iFTddAm
%k5;[$/eXDVOMGb>lp10ZiO?EN=U9]d;4riaa=+MZJ92L]fL]X8.qTDT>F[aLP+9+!Z"N8=/R?FR2IDn4[fkU3@i_7AK#20$ZAiOV
%?@K'Pq\fMhLLbrjkAKC:iNB_-FU?"n*RKfi8X7ujBF$&bkDZM`DR_97F-6qp.bZNSP![k6g`ismN/PreG0e"ukea_/>d[$';A4*R
%nI)tbSe@uN;eSWZWlh=aO.o7<E3?0@Dq*M.648[cKbdEVFVOBb@V5e)^^qXo@a.6rJckS$UV"\E<fC`f"CMeE-2_$(eBnB2B+4;K
%@Se;*f;Od0-"\<e&r^fSA@O$=Pp2-=#,?^45U]%5`e5O,R8>;`\HsC"1%\3h'Ysg(64lU_+;D^?KgHB9;^`?Q=^scE;PmJD3=7DK
%E*e$EWdfQ!It4PKJ?&X!!ih!P0I@JNeX00@Smt*<ToTJ57n-0#3.,1%_(c]471R8':iNe]KRuQP+qu*m0qeSS)Ac$4,.A0Tr,B.p
%(2H\cKc3=GL-cK*BiG@lY+!UpKcjBZ8lXXeE`I8Z<u`"`+_:fp/5sGB.XWOi8,B.6$E#*YVWJA,k8]Bef`X'-?t]sV>*(Tsh8V$G
%<EeL)Q:Y@'50gbSLlNor0.W(@QJYcord544iefRj_I.[1<>6<1Zla8N6,qtD_iYN"Use>7N0)rX7"GV!Qq\)L@Z1:'#_]1!9F=Dg
%83IY]C7E&72T$Sf,O%L0=GR%=VOO'/>j+8%7n]>3&`Hp]Tk>O%A8C#hbX)f,N?P/ISJai#M%*BE4B&#MWYRof]R`C7..\0TM1,p_
%@q361&Fg!].1iAYq'lg4O4HkR/al/bhFU#qO=_+R\TfdGfsF7SKV]3)"FS_%]`S9`Kq#,P+XcpF6ATgMZ+uahBkl>;'$OX!QSo6)
%3+U)1LMA!CJ3uck3pC"oFZnfEHql:0EnOD,ZZt27\Vrmu>R"ekp!YW!(HgE2;PI^"?!o)WGZDp4!uZt8h>7C<AS1<CAlSJM_AQfT
%gQE&kg]2H3Np.-OZ]MBt`unn8p(egNK<XFdP?4u#+_3I1,_Zj$6&8X,gkN$='S(86],h5V1:;B3!0gqLA*-i<+<uHpUecZDKF4&9
%PnZaAI@b\E+Y]-8eSTpg$Q5k?9mreXmABoV\/sZ2KF0fg%O"i'60`9elm"M]Sr#/1:"ip"es(l%ASF_.S0g]PF6PR0[V_@%5^$j\
%U^\pl,'Kr>7;P68EJ7@d8rFWW,lnX7>GTHN,/l<&$?-Ka^6%V-WL[g)h#$Gh6@m@g=R!@\gnshGKNt5YjNF@F6".(49h#4fFru#V
%RC1/BDG3EY;MB7\YRo<Z_8V"\*a3#/"Tk[gn2-q3RJQ^,bQ[kukI54,=N4d0J5Di4od6YJ.f`SW>ugqe9O>6)B8f,V2KqUp8em\U
%M1pV:\n*&HiH[<%ROt+13(@<ga^komA>)GoeQf"t$%c<.R\g`;n<t%lbmLCb%uOhLX9(Bi'cpOa-PYl3Fc@8J!iXOZZ8smO<cFe@
%9LD)&GqBto;oQZ(6u4?[at.%X0e?7J\8Q0lS,F1h`./^A0NA?J!,SRrFg7$fdU]&%:f;oIX#8]O-XK%q"DCKpqJo^SBiTpu"[W^&
%+,#"l.*2#"JiAs?M@o08[*';;5dX3Ib%`0NiWrZ+@oa1((nf-XC)o'd)^3DX1.#<>!cTcjH.D7QRYd0JKP>o.\e2f]i%r^H!Dk\<
%(?Ce1$Q^]#(g*_V"3LVbJDQC*Xp*U55]NKP?#+>$Ek*]ZODaq]N0%ga7&f#6e'K7Q-U%M92KRF\/16EQB`VIi+D>_U+K5#GeI6Dn
%/_@cQ9$l/#?tmWig=?@ZM.r8:2BC/p4L<\h;XhCgTW@k,-81L5g>CYc5Tr-o"gF*:)j/"Y.#$)O@VV9-^gr8+M?sH"XVg[c^jX1T
%!X.3F7XC6PS0dZdnF@u*@dGFqAgKcV=>$D3GW8Id!'1.sZR@$^2d"'HM6&Z[bLAtO+:q"d9Ojno%/_NY?Rp3)ffSdb`giKQPjfh$
%.nCUAAp$AL*8HoJgun>i5\WZ$od;3HScT$1\;osu(56e6]>7PL7]'Fh:?8:q+Ft)Lr"S'8GGg-&WPD"?n.^2P`%Xfo'SN#jS^2Vm
%`rVi86.(>cmhZjS`Ntp[dNCV':ul8f0SN2'N^F#\9p)^_Aes2N:Xu2gh>qOM.B0A2##K^$FJ=t]N['Q:4=eN^U-!Eq'$i0kCNd\=
%8B3.r*QMlEKod!URN=g]H:r0S7egh'=DR@\F(:u'At=%pd4X/0C#=$eJXuN*q(73hA&.SW^jA`[Css+2J$?69AkJ4p9*Bbk\T$!l
%3((,/38ZKhF!sB6c4pWjefCH':\u_*i_Tu+c2=jW\>pR&HRCTD%^bet#jOM)`0QB#mjghs9P^+!ISSb)c7q5;mOmU-$;J-0_,!M@
%$O]En;.`.F_3s;tOsunOP@mWk=?5.$0s3\4/0Q+J)3T>)rj;`e@&p@V7Rj)B<l)4A*3HbWa*h6$5L'mG#_3Zf^tq=hI9Uq-r,0j@
%m.!"^7OT^9X"hq:KQ7U.#U+%nXWUSN"W3\*Kk"Dcm;//sPgcGJ%GZ+g-f:4c*QOAAd[%MVb"Fb.fLYKlBO2J>0H_]gV,Y'gr3L=S
%HGD<ai1,`o`buSX'21CP9-b\#&%87peZAV9_o.a#InTi^Wgla*L(cP;^Hr0mZZ+Wd5X1UY+PCJ1:%V%KAdVJ'Q:(+&#P5V"E5=#\
%IZ;lo^FidZ/G8Rf>p^A)N-#m:FCN%k3@`*-TF-,%"b:9@&ma+72.oaV'F]V:ZZq'(Vku-T1h`ak1;[u]SckXC?8*/qF[L_<"E$<]
%8M\PcbE86.9^ZTY:Q``j48-OJ2(57g]#<D*3F'%51I`:p>$3jQ"h`jZBf/lnB21G`8'?uc(So)0)HNVrk7+;?N74tg&fJi8G$B#A
%N(=msHb23A6;H5M6Fl_sof9=rD8=?&4eIip@$IO4jI\X:keeqQ'%j#?&r<s?*BXAA)5\l0VoW(DT<kJQ&*pDON=cg&9+LDB$Yj[D
%VZ]bZ?=npK:,6W_$a.IZ6G\"LrY18e@5PG'\r!Ia3DkX,h4&GJA=/h/a@NF@=-Z)1/$_CMVWNog$EO9n2nm8p0RO9e$Jd+$<n8j>
%L^]A4B-WS-X94.2bW!CoVHkHcqHD[Z4[:<<7(3_"d%X&8hk9t:qFim-@5oP]7k_U6[=c!k<jru's6"8G3?1Z06:K"?>mhr)1E3]$
%X$R"5e&[e.J;?<eAPs[=DS/BfeEIK3ju9[SaqV0m/%;r'/gfq,mP;kUq<k7B'$^BOeL6]]@$W"*s-tu6%&6DmAm8eCh9L#oeXh-.
%,<'F^*1k@4&LR\pNW:q/rNn%p>JT"FR7F(6C"]#c(Gp#E=TjB2_Ke6^QGtL9"R/LRTDeS]&CSE>RmJ5oT\\%F3nhPjO'B`Ndn[;)
%r&QC!E#I0#2]d):"\YKk#9rleMl_/[Bf40U^;p\:\*6YI%TN[TB:ob#i_^HH(W+$;Z-moQka@<B7>_&.M6XDLN1O#I.L8?ZC8EcR
%r/48\<G9!&(#lkAP.!TrPYch.V/%c.Z)OTa>tC;JWuG>RZ'/i(Q%U;i\&kNa%G69ZY=fGK!S^bp:\b$$_b[s^'1)s0i5/bl*dT1P
%qR)iQ6fpK=,YLb=#HUkff-uI@&<'q?Y%p!?[_o3"N@kh-8MlH$d0Aa=QGr!tq@h:<7Vik[rYc_#HdO6%LpsuamMfFUacdm1,Q\7@
%i?I:Qk5>K>eTS0?#UI$8Un*+l/n+=jfb*C=1uca8^?/i9ViRG:(3+L)>rr5+B*Qg(?(CnX@89%X$k@TVS($7LHoNnnfe>%9PCEdV
%PLEob@[JsI>m&JjW)@8=+HLqD/PI#iH$l7N2E;IABNFfI(H_K4SNQ6k^3U%AlKi)^Qh)aur$:Q`dp#T&nK\]r(4FkBPpM&OYg?M9
%qZp?+r$d6eVnM@l2eTgfgYXH1kRrbp$#1rf(K^sE9#K-`3/A,Hd)g)bY_7;V'am!W#3=5SVOADqO[b=uP=<*IQ-]H@isH1a5@(Nc
%dIqAeC]rV8*hHFB+'$JC'`e@_?rnNq=^%[/6E'8(h$0EOprp]=qo4]s;eQiUPJZHIKL4b1"Wjh50Lt0/Br5JFNSe*h6XEE$/:1VM
%5kQ8l.3/BKm!Ga6-RH6ep(`:2aN]uD@0OeSN:I)MPW@4:r72RA4(K^`[Bu]IbdF==nZ8h$2YU5A46Eqcg![mYkI$1jV@nr*D'p'e
%ENPn+BYnU-f4kumeDj^E`mr!U=A'`K*/nZeO<87]1UP!6<k_)5.*Mct/PI`IT0Frd:J#q<6\C3UJlec4GURbshN<Gu)AmGq[SR"T
%#c/#h&oI"?_Hk.J4Kp]Nl!R0<Z(P4*'#eHjX5+itS;G:k_S]JmKHkFH(1gGs!X)(nI:/2U$%7)*CMJ2qgps#$+@s^W\!mZ]',7#F
%nG#'q[9?:-Fbl6LM%;T+RU_80;O8>R+U5_Q[Sp3u:VHH<#aMAX;T1up,gNJdN+,N8@<[+VapXaQ0JSeM<hTe4-?p0(1Dgcl\[DE:
%qDZa&DAu@)`[7t%j')%^*%t)sc)a4]%/d&V+)R'JD6]gsd6<8Gi0RolL!4#lD?;VO2756gkQgX(,^:$(_rHY0_B*)fH>KgI8\MJ?
%`jM-+'[A6=;8+0KEX@:O;*AuuE+3(Q?,&gPSa^t"=NEtDZ]NL_`T(-=0'>(P>2_3:5j30m&48ZjnGPYKb+&<ZlBF(;Rt\@l^o^@?
%s(=Hj\t5Q%`ZXS,@9.(49i>al!Xm\q!efe1dG_:)XD])[<QYoj3dE#9N*3P2-O<Yug2.eGaHT\YW<t5ZD&'(obb"!sOETRMX/8c#
%Xsn"sA_&Ltc4UnEIapU!//4>Z%!PN8K82u\8.:#ab3"@G1'[E^k.#5\aMOda0I[23H%ckPZAM4/JgYAIS7`F_8d[pdm3[4V:kBlQ
%%p?:f=$m8V/FE=hi=1pM9t19^!YTG^lPr]''c%ZM)!e#fC1fj_B/'ERoP"3^4k`O8+3cH8@`Ble2:b]HOEA_Zb@:TND,;oNe`HH/
%[uT&G"X2gbC1:*W9"`u<RA)^=(sjGGNSLd9!uS>$jAaCI`;P&(OP'ck&9?tJ+@Oeu)3BA?X8k'-i%2uDN#(OEnOR35WXdC//>H($
%A2Z4gj0:`;,Z]+1"aHHV74VJ5X8YQLRL5ja)lKF(\B6oP#$NnrR@-`rSY%R_k\G5lR7Y:S9c>t`_7-K<)bm/Cjt[c/1R6Ds>3*Na
%`:I.QXp/o^16K2e9V<91=[5!:>BLH7-spljZdp'N_JRc[TrtgO$U&X"Y`DN!CkbLk%5ese:L6d33CEFf[M2M"][@8:Gc5DD[M3>p
%Go%kL=U^kF$YL\2+QPoH=if]c.!Z)[4lAC_e.i.UC8?0.QS)R$KcI?Dl#G+Tm`"=rl8C2oLp4aAXl+_M#/u85=OV^^6j[R!Mm1h6
%^i^C^R%t@99qh$Pm`I=!6!`A)S?C!J,=so3**P;N8,DtT67s?[3.%qL_.khSa7te6&Zd^\#T#fU'OauIfq/>KWL-Lmgt3\iWBWLC
%Is@dgn4<N:Onus?onQ'&&!,3dGbbBW,U*p`1GPT=/W'i<%TYtGU^eChjN\R$$,M%caAXOj*aFUtfk!A^DqE^X0c>cD^(RG9'BHRQ
%S&dM.@KrpF7/PBZTfVqXC,%bK=?2]2Hr3Q@[7Q+.N>GTTF_:UUO3eZ=f#2,^eQu"/Ki3gp_?bF<.YsXW>&BUq/=Q-CQ:$P.$r]D3
%5Wm@/L#K"HEh!:6duFUl@/;7PJ(7M.KY1X@E5X/'au`T0*\j,9'+a]O7uB[2!")VD"1=7?l.$Q<:SN"@W<IY3E3Btm_56bq:`Nqe
%L(kdZ]s3I!6jt(j>"TU<*#UJgEBMYm!FR(d8=K,O64-^Ifmo/$F+d;!Z56NaWaaJ:_aoInUSPBdfo$GKDW[!k'&3:3^guTi)9j!r
%[(9kG2Hbhe!3[W>6,-qbqB?:jPtMY4rOCEH?cX?CP8];q,EmG5`^R]GAW*RT\.O=pXEu0p-qiBf?'K^mA<+_Y&2d#paNZ:2/7UUZ
%?`-:bX$\.cfqF,Uq[4gKVb/N$GRP/S1k5gi3m?28LDiQ[NKGc;es81nZj=8@,6LCCVP.ru$Po.7DaC'*!*=M\+GQ:pek0E%$C%&s
%)P+bCXK>bO=m#9To3bC-p`?;eq!`J5$0r^E%&$L8^(LmdUl:"$[3:]"\Hcg]Run!S#[4]bCBj\"Q*-KB_(MWOLlNsK^o[p)O=[]#
%+)"%MOBe.o$@GF77*bW;BW@=#jj`(WC&n@.G^23=2*'/u[N\Kub:JsKA!96'B4sgRie/J>[a8TOBges03Y)_.#T&W--S+D`:s+D!
%/H./A\G.iq+Cp+k=NFu*@B-/IW0cS"R]qTu)-!skQu&I2RDR4SCQf]USepcU.J@pRVUl)^fSXAq2_tA[?#:Je>E-Sr:[cA9+a](j
%$b;6r4>kWgk2UF*[9(jCJ]<EinQ@K?4!OtsG!QTng-^8Yd*Skbon&?l_ToUQQ!e9t;n8cl*T2l"A675_..sn=+BiNV\.K-2dI(]+
%TqO*h(.NI>[hBbr8p7K]<*R1@(OmK>c=LK%,E@&BW9#p;@SE@mD=c#W.GH>A,7mTJn8+WL`]-cpKrV;%Y3gtGpt?0e\T'(kDAtpf
%A5rnHhCo]f?ehN-7*+e(BWej,6]W,2kKa%g8T]anC!fXXMndOVU'26]NKmrrRFXeY*\%MhV8fFm@r7>76,718JHXY`Fq5T3/g[e-
%m8Yjd:OCS'(cmP+B$J'3."]C.6XcjP>!!`F>:>ck],FcZH8W)&.C(cd:=EUR'pCCac/K*HC;DM[SV;#c^D*+D0Z)E/MF#(pN_(?m
%GVB1q2`X6[&7B,(-.)f!<8!$Rin6_t:9UQ5.&u";<[\C9:s7(-TNW\IQllf4ZsbelAsHe8W&_cK7KJb6:Xq<96S5#o#f2LCd"=G8
%Zis2["phVNLV54.(n1-`HaZb?m_DX?,Nb;Y_L\Bl;B?EJ2q0(P=m[?Ts2<D`1a-K'\j;X=K8-:X8d68MEWe'`q-%eJpp?cLnrZQO
%KOetO-I'n+38VO2e-4f&U\Ue'O3<#2Gomh87FQM:%'T2+G`#pO(/u5YNZ6]Y\fkaiM-&BV/T\feS!c#\_DNquV[]Q(1Z>[3+&o&k
%E$9"pg?VR%;l)R4\cgU-2S=kQ1[J!Odk]Ri0^]N?H$NS!%2B0GKok,1oa8F;:9FGf@J'(0SY3q*Y=[gC8aeUf!"tWEe%:4W*'eLC
%&\n]X"pC=tAa-El7$[ii;V75.1d.s[;+uEHZ76a1>];]A=>.!mVI,D%dr4S<K;8!6(I<O.O#;,(EFGV#>r`/R_e+K/g*?AQPY9mG
%1g4G0C0T%)^BHbY"tjS$0*"Uefsel-GXSfj5Pi(YX/@NpI*PkOeC[.Y!+9oqK9adE6qTEE0PoGiAd6%Dfjh@N[A=%JnO@toL'F9Q
%Y8i!11lm@a,7;2Z)JO5alk*Qj`F1EeS2(p?LLpoR0+E!#k!>l)W<$7#gXMRg-7#a0*e%8.QH-g5"h1TI7P<@:f#RokaKS4TTioi"
%Beq5MX')sbBt+i(`bSA[PTW(@h,#hR[08Nh>Rs%q'#E%LSKZ)eFT\h!fA,$B/)i%>f/HP$11>cHkDb('!QgW3M,_8_pmAa&J"\sN
%MP=+%M=O]k$BV>bX:]@3E:-kB&`A(_+PDQf!@Z[flUN<1'"<S:GH_+R5^l'[-SgWK.%NO7!;9gW)KL1dG*$,\9p3)Ia?@G/]!:+s
%61s=>KiE,JR5UiESC\1k^7D-j9^A6HVenbY:[VPQX?^g/-jmk*XVmbk7fE=[K"7G$HZXKni<ScZ^@7Z1]K(0;0q'9MA@#lWati$-
%%o618`8-iKnCO5QLrbS&Q/#nME/:9o97e<h[.dO=b6St-eY[-[jFH\Sa<^*_%t0Lt0''9-LL,oHRHR"f#UhjnZP!\hZfp\Bo@[9h
%d/2h=P]!uPqJduQ)'_3L)c@3nA\*>OLb\B;'f5)8JHhW4VnX'Mp;srk4t9GBb!g:nL$=QV-jreq3/G)k,t=KFAHRfLf.m?ILMf-j
%;7`\fCIBi]Yr/SDKE10le81kI`c-7fE9u'$+]RFV7OMlhODHbu'Vsq@?)ASVF0gkTLSPOAABt5EHhI%+8u`52O@;[;,0pu_R=4&A
%U-ZkiClnte06ksAV6(cr3?"aKEZ)Pg2(5^]\"%_>`t]ob=c7aWp%<H*KPi8^;<=#Z$=IF<,57nCG[n@AOf&jY#,dZ*DKOR+-f+Lm
%`Jm>1h1S?IX0L'g.)s@_,1a/kSaKtW],Vh-4bId)3_+-VkS&%o<7+3'*nH`B+"S$bVRX"nic[;52S,FT;6#G.qp<Fql/^2rcnj+!
%JM+U1S/Z=8cBHnUjd%&G6KfRaXEFpBd!,l<:B&^3(I.SgX2fQqhcZX=`9rNJi]D(#M',PS`??%WB#o5-AW\SW9h:Xne`fP'\tdbP
%kAR>=boQpM_mPX2-9-;H5F)(TT[C",V&Munh#Ue-q?l%j.JW#mJ1e,4'M^^G--/RhS%9G,C--[RDDqj(,f@IYZ$QN]^IeIUA'?,m
%B?b:,^b3GaQ#4^=_$$=>ijJNS4dK_;rRu7+bkkd]6gcF$E70AbVi]d!1uDqrc1T9BJcEs)daIN^iA4In]iR=qc0ZC)>tOjM*o9iS
%ELT@f/`U`l7.^2KGU=DmLgN&%HbGIZ3g)g5"/\m3aO%=kkM@]n5%.YJXr\_O?ur^Pe0!'ZF"Z=+[d"eJ$Ed?I>E.TtW[Zmi$?c[i
%R,+Rb5uURB5YX7WfVK_NoVW53OA?"+p+k=`%?tCjej?D@":S3Nj?,/rV?X2>)UhViGoM7KB+PX^kFKPEK#oGr+cfbOr^K&*^UT@q
%0JcD$J7#0IL9qS6(jT7imGWqad;<d*+deD/lK2`Qe88c`%VC5]ct%%3).ZXp+70]3PZBX]&fDP2C?PsLg^80ISc31+37FZ5X7gqQ
%Ip!^332aAe@%mabBJh4C$[L3sd%E&>_VWKPi_bNK):=<GrR=k<NUToWr+8Es76.T2f.)aEHO`S4%0Y%3i*KGG3G4#H``s9O?2p#C
%G/%oXj0;M;A`3)CQDU\91m>5,f9/["$6=THnnK53k-k:-+ZjbkA(NhlA3dnGp*^B=r>(r$eH![\fL'+&KM#ZjP;DJ2E(Go>#M"KX
%\X\@qK0?fcI/lGp8YkdM5HRVO]fDO]4;EO&2)C>J1,!p/JmW,0#&#>np)Dfka<fSLCg-+sSWngZF9U,HH'A>C^!A9h!_PR?2*-jF
%R+8"o,r)bLBcsZL.qC[;/E@D^,AP;j$VA@G3dFRr2O"tB#LGt?@I/XhA=U1E&FrZOgj!2Y6J-m=pG)e(k=V+%!l%M$/BW^/gFW^3
%?'9M=f=7!'RPe/e:He-k\+q*G)KKdTa/3a)'bEK.L4s/?\V6,0RNo(?KWD=(Z,'0tf?rtE7C"#+fkhe!ihOAZMVJKRo%.KCKp5Z(
%6k@$gU6?*_bFBTBM?"L`g>R\J/hPl#BIj;ILb]h^,NQ0fUPBrIkqrGW2!Li4DP$Y6)2*Z5_j]O1fJft\U?$XLgqsYaLb_d0_sQWX
%PMC=hPMDm3mUl\tDZXbj=rUC#;4=35%bF"c'[i!j7<<kE<hTkXg/)(;8X<hM/"1^9#P`r\]r76?P(\>nZ6<Wbn9.:28Eh%d.Q)j]
%m$=OP.8VZ(!ZCBdE[@@%M9*lYjYgZ'4#d&X*W1U+:N7Jf.8_r/4;,I\ar!uVQm&l6LKsn/`&?JB:\.9j$X'EQ,NSD,0c:"T::Vb]
%+%DE5T7@%*.lf5_F.6;Yj@rB=#m4hF_)Ns*,RSIU0CpnXZ]7:Llg6YVPdO6R/EG>VnLuDrbeh`pEI'CH`ZNaY9jTgL/*K=5PV<F&
%"E1X0&Fsg),'0ZiQRYOYYu[[a<i7`'1RW'pqs>hb/<a5DS46&[]eRl4B>Si6SF92bNJ6^o*0tTd-IH7Q%FB9.0pf+ggRnpnYk,LR
%glr4*C*Kb=.<Aj\?5it:LS4YOD`)aG'IfBVlm%e[!c5"MdtcoI/qd,lmY$9Vl:7H9CTf[iM5bH]=d`0<?CB>Q_,VJ!lo?HtOE/ku
%%qgX)$VpkTOs$;CG?CZp1tc7gCepC/Zu[BaOn+YbHo*\,"[e"%;p_0qm7j>$!f)=U#ZAlXjXQ;L6BKGoi2Xs)M8@%qc_?G(f_CM;
%dmTK&3mkTHAit$P\D3*6!<>Xt%Fmn-!@G@0<X1Zg+N9J$gb`0PL^ML!QdUm?D)PVd&&#b#H@\<Q!e9D;rm2&NTbmJk0CXa'i"*N:
%E-_PEglBnq4,eg-%dTl!rt*>oUWq$PM]o/%\_@]&M[9X7EM0YnV%#:Kj=$Iq[IGsl!`DAni3oqDK-7K+G1f&p\!`),!-r7)i\ed>
%NjG2:>[Oip"hDji9IU1G&RR(W&Ok0"%N2<=W,fgtF<<=KkWIsm_T-C>@3_!r7Lha&AhoS[:Du^Ufds60.nRof4^94bVlIXa,NK=m
%5aW]%$fo2;KHFo_C^*=YF6<Q4^g]1;(kf+;e[U;oL9d59&KR]S9-h]jqHY;siZu=,beVVEFSra&d4CJ`W=>/eDf[-fONUfVB/Eh*
%V0"`s^h+_DU_$Uk7Hu$70rP[YOWl4]dhGSEUk)9G/((JNTCEuG:%:8afk$Sr^o#`a:bQlGQ]Q2B">L0'a:&]>UD:9]7D#b]"@8#[
%/6j_^irHI,B>Ht><\H+h(-^V-K\U&P^&0)IXs=lrcuKe/HBQlUJdSkXQWWB4*RKNAZ&mN,CkPE)p+eS:K>t5`)?]3S2@-Z`"npou
%Q#$E>Obtf/6p$(7;9qdO$#MW@U8XBS?@*GVc)!k7_7U2*X+"bbLKjaT6!g;C4UW/0qh.Fah+pY2QYtttdG^"ZPXB,Gob/]1N@IT[
%,N^6ha0OeK79`bG`WniY,*Cj+X&/9'^_^*$2o@?X1(kp\am#YW]b6,,XDNL+;:#pW)4MUuK`G,Wnguh[S,sFmHJt&gH13<P%NHWD
%Mb%nVZ@Hh4EjsCk;Db.fb'n4AgTZe58mS<Md,n6YUA55G/EAXh@uuM=G6a8C6]Fd#X$$r0(.)Z5ct9d#$b7YkAh3ohTc%7%,.XEc
%9$e1_B5W&Uq=e%V0jg_M<(dV%;hOO/&>4EB!M:/ER3SMJCtL#S#dd;79[SdUYg#KE]H+uk`%.7KA-%^\<13=pmRW4&e.fZuU622!
%f)c&LB>*ekJKY0!JYqu<+ml[cklgXY(>1_Uj[-LV:a+m2WO%[ZaTDg<E*=4g5cL!+pk2J;lX[@\6N#AVeW>/1,egh`=VY3.$[_3L
%"DefeR:+Z1_MjR6b(GBZ"^1fd9Nbbe%;?qi8ddW*#ha90==EO.En^:#Q=/pOdp<A)H^qGT.bjW(+g@$72N:A?C$)khK)HguM7tj6
%N4bS*&4.,EWVJ&#9d+#:<SDPq.D$Xp\Wj,]k"7D\_G5_-H>OVDl?]pI_P`ie$8TDUk.+p"AJkJ>Cj'\!e,bC5`k4lY-35Uq%ad?G
%$$S:acJ\"kUBQYe6\;O&R/g6[PK]F?.nU93O<oQL9tKlKEAg,b_eJCJ5[ZI2GBW09)54G6bUmjeZN-9J`^"4qq9ah/c\I'JVHV7H
%^dbOcldW<S66C45Fom0QO+Lud!c>2^n[t.8-/&Dqbjd]DM:!C<O9%^,[NsT&*^Yo366V.6-5=7h@R:+".b9S$5dXue!SH^^2uiWo
%3R8);[rGsq=Bl.D%!fR/k-A,b\::B[k5(0BM\#])L*I"WcUIWo\@6^:(82,25]cd*qrA-<l58,!j$O_VeH>_K'>D%7bqUB6B+Nc/
%FG-NMcY4j#m.#abhL\o=.&]^MA]g2[;@^qK4usIrX)G=M"lj_F;JcnO7I)5)&:)_7@<V98F=A.:'"r9e(T6=2=b5;d1bj,h.5R%5
%/,E.qJEffKBXCV\o"c5p\qtdE;QV4J'WH#j_j/<Z#8`5MPHW4ZV8?s&_@YQTn\O7r4\7(U/+#GlnXuFU!>!@'4V-#edQ6/caJN=E
%L&BY0]@r[[\bMO$4`u.!bdkbR$(FrNT@4^*[D&c&l3P6PHQF9W0'K7<lB^LmVruG(/j$#T<p[8m]3'h@G,A/*8RI7?PtjT9cE'\8
%4.k$09f:-8"e`6g^h*fG[]1%h2M1_;1bb,u+`_50fb:\mm_f)2q.-!3Hi7+*Xe#=b];SMl)sO$Ak&oU3oO\j-4OT2<<b*>1gA:?d
%59+&K-re8nejE37bWDRRAD<]dAd6\Sh*l`Id^:1oU7L*@%2g!]dJB_7#*JArLFmU_s8F+fn?[%_fTLssd:l06[>dVh/hajDb?`]T
%m7RB(lg't?#q$s'q%l(H3Im@AVG0I9hAsERq6nL5F!#V:mGhgVn`e;Ad/h<cb)9$U)-po83Y?\2=3?(uU't&/i:*FILNC[JH/bOA
%oWsK<(/4QMb<=Ktm-,(@fth0?SK'ohEL.EDhTVDTKI8!MBi\!fC$A%XdZ$#Z$i*ID(7W5G:MX4gmjO3E>6/cjP`EeQ`.qJl>DOCL
%@Ji<>nC[r.[(9e6R6*?f#=!R!MBbcn_te)*<_cb%I>Z,eh#YF\$S1LlC;BZ22BBG$j`P3)1dQYl$djN?dP>*3<5Z`(s87^sQ5)OH
%CehUL$$U,Dm^BSd=c&'jS'i5R3TQdYS)kgK@nVmiG;sc4@qVQpd66`1^,u!RGNu-pV"bb^6C9(^N2@,(4:S=o>n3cl0%SsVX'N9?
%Kuu.,gJ6RJYtuA[N9a&J.t'.!?S[>21U=3:]s"QmJ)6;MSHnRnUar!@(LjsN'R*i]nkusC7UrO-F@#Ukj1F]<.JG,Mm&SMaL!>8f
%RbcC&UUdQ.7u>LH&plIMGEXqZ4.&o]<*$X^Ke!J*\8](I%"V,gXLYkP717k]`*SspW^N>L/hB>*_!k7\nO/s?(?gN@s65aCbbl;T
%aPhGMCh5I7$?c5/407d<(Tf[]Wa?Q@e?XQFrG4(9D_<:@;jt+/ULij;V+uu2gVA[[2"T@g6+q,rlqA)"XXL6bWuHs^E#B^pdP;g_
%GId&>W>*t;93&)A$.*`d0Wlf>b1_rg=pWK&l'<MU"eNc0kMU6$HQ#DCa@N"$](:;HgT"j('Q&W>1Q3PQ]QfS9o5.NHQEV_bE0n=1
%>]'TJ/U?!2s.LBq`5RrieB&33?.JRF19)H:TU.7(&ud4qX"Y\D-UCc>M7Ni$>fjRRW3fOjj^^SR$uq?.<bdst$HQnac=0aG]#[D.
%$th+IWtpTm?7@h@8$O/f0;35,L.moDTF#ubWq4L%C1^\kh8ua2hbq.4[,&OVTlU,CO,.6GFt_i6/g^&%o=0SV8PrNBM(;=2T4%2E
%p#B;Y+.]oQ]!0\S\_AX.Z]2uXL?CDZFkG@SG-\$BX!5,c:*bUjaO#'3>=p]FVX$@!S/t*Y.O*sGO?W%pb?-Ub/0\>&\-Q:D[\:lf
%`'QAS'ak=d\eVPo=IR684DjMrjo(icRN+A#E\p,US;Nd,N[[+B9`r0YcTG<mU%GQ!6;.jj$K#U$2JaC7nHG-u1AAfZYY[F>aN1l*
%E@1=^d/7iD!rsR0o/j#q!-b=^6$U3gn>;,o#^O>hbgiCjgB^+VA.MAZWhst6#sD+gp4raG2g9tghdFZ[&[KM>"NX6lL>XJT#PuF\
%Lb;VP==5r2_?/c*Cu0Y/l!^i'PW2!-2^E#ZX.j*W4H0FSc'a4'>QS6ib=ina:gnZ$S9uClIlN9$0K"*Y%Wi_F/X5FW$mWa>m3&@_
%A$j=NnJ:fAZ,o;CA0b=G^8FHAC>EJF^s[$SP*ER^C/CBX=ZZ"6Ah":[p`hZ?O7p,%A8EMI$dlG[>[sh][fKc)BIm<-@0aVF.6fHf
%-B:u,@u#.3q_q1g[)pC#J@EHj*3$<B\j2(>3:%MpTZh185uS^&NEO(>G^VBF#KUKdiJCZ#/Lk(e$dJC5Et%e494G`m)ehC,N+ER$
%V06S%%(:4TQf&DteK@pI2q_o(D:=n?X&40Ffb"'SQXC0V#S'0*bc.SVnKA#aHG'C#4q$HqkI.E.BS,iJ5GZ34Lbe)_MEo8N^g\JZ
%LKJ65M@RP8nO0^+EZ05=mq#EFK'C.[fMTYI##EVP"_8Gr0WHEpkGpTXQjgm(mokJ85/VG-)C,a.R-3-^ptOhd`$2[pnk:b%EU(O<
%.6mplYT,nt5q*3VW=i+s\"UtfF,6m5ZJa\[5[n0b5bNY(ch&@ilPCusTX_iEGr30g";gkD_)X\sp@0Nj0L(73).6Cig*IJX>U<>L
%4Pncr&6,kIfJ`VWT#)@:M*uXO%aSR0MS^^&Am/Z)oM]6.QpSrbHWuGj#L6n0$8P7PnN"VI.Z4t^HlJ7^=j8m[Sq;0^L!_BW%D&<U
%Q<WktT$l-4<GS!fEpchEX=t#2X#b*N>e2RU?]eG@bo@O+02OT`gF3]E/eGXbX-.X1Gfh.ENI_]7SM7C(4jk(ijCO6W1I=+69!g2@
%Un1%,_(EO"i5IB^MjR>fTGeIN>$W@>@FK$d-tpAT#mH=$ThqO23$o=r(WV2\2W]`kf^Kjo$<j?;69u9.9IOT;NX1>uiA%%!`B5L.
%pSp_o_P['p:s_BJ'+,ZJ,=4[dInV2^#)EQh,QeXPOKK]Q'G)A)KE;L7LepX^&/,Ca*F_>95t"*hUmd)G"f)m(KJ:-r7B&b51]j?f
%,tB?t+nl7r+uCHo:lK?='T,_RKL-7`PX$WdV\0>*Lfm'<OPqLIM,D6F64qY6:aeY;'*q$OE'fruTh[!MU#lZ7@O+13:kUGL'T*G4
%KgH@YUHg4sL(jt`BU(oX#XOY-'W$*_Kd*<iThpDk.M.IL=bT0S8uti;6EV%/`Fuhl64Sia>UX!g+JI4(SGW>lpMO,sj>`=d$??Zf
%!^FgdFT]@?piY?kDaQd<!$KN$kuF8d+#W6<SfSE<R2V=nnIUL-Qn<hld3U(sP&,P_UZ!TE=WpU:Ct&ls-P$I_'6ElB)7"&=YaLP=
%,utG>VQ[0HHp_)BihP_9<Eo]+%R]3VKLuj&o,t!.DlW24LnK5=1P@,V+%G0E^*?;gkq4T09dmgt!3lrAQ&S*A.2me[qAdJ9%mgUX
%SN\BQY(#J,NYde*eNFq+'Mtr+LCW=c,EX^H.Sj=T/[8`d#b7+,98Wsi`=C<g/X6=2UlHdK,#-,h[L&/uY.$_Hg6G$rP9_r$7:<Or
%J`f)U)Z]B[`P$lc^a;NY:ST33'5V4S!LT$:lR?@`7]K<k7^$Gj'0<W'Fu:;dPS?F2A2M(t[/p=f.;itG&<F]-<,?]M"/']R>"0+:
%0I]FJKYgDTOc+J#&@kj.VJMF6N&dAp_$6d4k]2sn^+h6b.kiJHWUo&E@A?<hD=$,cj:PB[!8XS%>"t=q3/pisMC5?RBW+,d<Zj7_
%96d*K9h*]nNR[V/,K"<4j;*8!S?+dp[fF6_*OVAp[fS_hlcl,nKHcDUStL?Ro5GP?Xe8("\.U(+e'SRmBh2\=6#NB8iZ!Rse^,_[
%W1roVkq!Xt@'gll,VWU/Pen88a6^4"1nM60&3T[53nKu+\2EiVB5eRs!s5'H9:`UFp7%<<&h!s0C8^7Sap8pqQZllJB)[]SK<.*k
%Ca;WSYVGr<dpFNOAJD#)RFl-s=V59k9=jKOaH.[Wb`Q>$hO,TUcK"s[#<l]R8'OLp()^PfK2uH#Ej?9uA-e'=k(0BsW6=<j[ecY,
%8ka^hF&QR,JmL`P<N7g5nDJE=>q",9rC'*"?8@8Q8;[eZ&UJi1T>MWdia0TXeP"D*gPI-WiN6hWYY>_n<u>AA:XC(ioV?GE,1,I7
%<9h?r0=cu[Q]4ZFFqA0=]hP(CaX>]'jMd4jD@1!EAHdT]'r=>WP1'#>Ph<HOEY;'hDHHoDH%lUC?t=C%#;:f[PloH>m>i4!(cUbE
%R-Des\[r&!L-WGgW#F6Y"ZHXDoP$b]@<=FNfkBC1!1X*<McLDd/@2jH;(r7BL$TLd<mE`'_q>`8DN#u#*+2`imBd)bKj_7n*%\)?
%q2u\lSUqlK&MAcbUB]'[SUMT#A&(Ab20@n#D!4>g?l7]^2T*TaO+SD3UhO^6k<Wc+gc"_d@&"Y5`"A2CM!G7J1>%>G\i-m)+Lf4H
%Df4A$%RK-7#!9gW&D_HV5oQGM%Q78\AYWHq78RY'oGi`)j<iAQlCcLcT*,@/]%lVFj"cQYTonbY!D!@@!YuIgL!^CO=(SHffJ15`
%7fchVJ-Z]QC2?k&j:$u&A2#.OGSu&Q6UJQ'lI<5aM$q(O!;i'KI7"Gu")InVNq&aG@gE>rq,4l47"Jg#ZXKFLKRK(i@:k+baQ)Z\
%l'a't!2bbd4[jd]E_!^CqP!pg,T8I>7aWfPm38S?hp#<dC!WMFnJ])$buB`i%hi4m0@1-gJ0=q&7sk*$Z<r#X0oSEEch)?n^Y.I8
%f:#F;OW17"S/(:c-Dj-CfI\^l^2BQ3q4=2TlOngJ?GuR1QX?fhLT8Z)#iQEIAL5tVmFg)u?Kl6lM"ZnZ\/U3]l@,*B#s>;2o4A\-
%O,M7-XNSbe:V*j8^Uu&\0"ppe'Eo`)3),oje(5>UVaup\O!*kEa\NceXbGaQ$I&g+QS'fHpuihFCLh6@_U\uI8(p+sjZ-2&D8>H'
%#RKT2$Z]?3Yp'-rn5rN>@\ftJ(XT>[r:SZ.eIm^E1!HR.pjk&S5pO;`e<D0.;/:-D@[[FrQe,q3h4M`MHITKr3o;R/n7S*LoR/>F
%lI"((.<GAC^0PL4:A=PIBO-eU:@W4g[rV:-LBD[U;Z#OW4[Rg3_/5f`\'*h1e9=Y*jRh(*<?SE>[efsrKJ-@]>DD4X.q,t2SVbW2
%!$,%&6I/l80H%&4R[nXTI`Quuf@L7=a!sBdm8C&iS4dlV(r$f2p>UalO/+_r_Gs!iU6_;QZY'=s7+5Y6$YS.<$sPJbci1O2IBC_f
%(=u"N\>SpoUZlqooS5Ub;La2BI@]sTs*E\o/E6XI'fj'AmoarJA<-3s`n*X4R!&n15cNZ*@W%#+nqjY9%XuZ;o\ESU\(_54q.Zn$
%>Q"'imd$GAlZ(<.*RSXfLs^7RdAUc<:oO&]X;`/EoQ4NK$IZ^kbF/KuU1+YnGD8DIN$=.L`GdDqDrG!*n;!JV0X=cT\Yj(TZeFMM
%"j6`8bC]>0obM^B9)RdrT>0po5LJ*Pn2&nHgJ-6o7YMmW\,)`[]GDZr+D#cDl'Q3Y"tB[5)7ekEXH01YW_^G\80@Z'oaKJj#N8pF
%p^>odoT]!2BZiiAHn>#&,/("qEa^1!M_/:8A`&7_YCDZ/\N&=b,FhQU$$s-&Z\P%9LE'[C19l*75*L@W1![H2EcPaiOEG>O4^tDK
%i*sN2MNfLNQIfJ"@F@@b=jh'4?_/o6*q#/5jn4t,@Hp?^<KY,K1:_T@_0l7D?sS'Rr/9$$4o7;W4i[,"D1X7Ipgfa%ie`3Fop;!j
%jJR)E24HM2LD0j:r^9#f9GT8''c2-gidn.Wg!SQ^P=kGu[Ah@1+jO3ZO(Im5Pds;sjM3];V3r#)jk;1RfU0F,?3\R*jE0TK8*4p7
%)f;-4_)5VjYYdg-SXCT7^G5_.8"GGo8*qm,2A[[l#,>^S]D))9i4BU7gb\leZ&lD0(`^kt;S#t"7!21ijC>4[`-2qZ<6)",=)[Lt
%V@]258jftjhN&S6!p0nX5nk^VfFEFfB=<"5,sD4<UGgG-8Y%WqQ4Cj+&PM+`!89a>.9HZ&1>$3;%MahjKm&K-6"0ageWiC&:c7S>
%LpEtq@b\93&SA&JB;Can(m*R!V_<\qjhdUjg68-*npF6P^f,RKeM%un&6E/V=eYB8H<aGp=8Bs:a79q_I$HQjNQr7H],5g!gqK@:
%mP,T,T14-i:ff^D98m/=[O5V[&1tIA)h$e./fI;W...H-ICt=f#"9=Ej*/n]-bOYC*VrkO?"(2iIWocKHIrd7ENh*jFqLgdW7kMH
%XX@$GN]GA']]P)>>qp33V#--``C/<ac0CBfOTuI*7A4K.Y#"?(,F[[j?h,U.\J1f$g/BU=/"[lK93KH7dH+7&Ep8>S'ZaN_Arhg_
%*aLXi6CUd:c(u?Ad\$+Zfsrs0I-Q"l\i.AX#-Eg=%)9"WNr0sCSCne`8g"H`f?0*:+m44;"hI)**U8;1R7!TSU.]g[-0"-OK6.Dm
%H6asZ.)9A`Jg6PU)%#d4q0aIgY2KH.Peq</CK?Uk/oaa\9W:\Se0U[N&Rfh(\b^tf*>5\2Z!+'lX\1q2-,o0^ol\@Yqh0]0P/VO4
%mg,WN^W)K`!8#&+VI7aZ$qnK$$nr8c2.G!cD04k>fj@_&CFmN-9+X0FnpF\PB3?KhXA%iM_oTu5EUd/q;'Q+lP??"B4Rs8FhO9G8
%(iKQd$p&41k(<\#+=8V+r^REPi\NW8#c/$l;@7J&#CJY^'98JL<BS-=)Zb1=_M$5==bfjgRTP[7-kQU<*'JE"m?2FX:$<9t_aA6L
%Gja3!/*(RMVHh<q_Zk<?7(L=)s#plBTN4RdnEs5M%+grM%_<q6T1X`C!^'&d^!^!/F3pm99EY^Q\K.)\-;Tp4Y:;OZqUsN_bkXg<
%9=GVKF:.3qE,_T#dd\[+Tpka0L0'Y`\X]WL!A<0U7k*kV$nTT4P8"h"F!Xu;.-KkU7:4<k<BYM)C7g"3f8RPD3,R\Io7?ulVN/Z8
%36OR<Ync^U<F".snR?+-><Weo1FSmW`pqhPf<5;F2-q;3eD0B[5,+@SB!",9fo,Sj5u@[ZroSB+LaIFs]5JF4Q#gjQ?4u>ile`*t
%(LuSEi4J->\N8A">oJZ4n3;lq`>q4]@J$po?Um!Rl0uICDT(Lp>`R(h+C1#Yjg%%phfF^k#$&ZYVm):9LG%`>$]buC_n,a@8:?]*
%%c%:=0FB&9AT+;!DF#N_"fI"\U1F&_UQcnmD<EaiCTa;T7M*oP/9ir!Zi#">YM25h@_%=M:F"+AYh9@Gml/M$Z#^(<;n_.Ths/="
%;bT-jF8pZ7,+$nGLk2.m.9Bd:%.IMQU-uE)L`DNe9C^Zm;S&ge36+9]SgX98Nn.]fGJjLF;$C*$7Gs+$rb@P-L='$*)(07+9i8t9
%q:;P#a[VSGo^UZO2dueV4l(\&*3^iK;/d"lK>'#aV]%](j[Etd%g%e]7kg^jNE`QfJ5XMg+W>Oqo1$rE\<ibr/?-:PT&+a*G]"VT
%4m'?g?2a/Bih*#S_LM]9paC4gGMMGA?sU%Aa/O<rPK1rDr2&$:4qbB,Sss1<h:c1@ob882ULSTGkPTnEI#V\nbpJ0O<=hVh&V^+n
%kAq/-NTAksW*YQP2&8:=D6)F!;-^ap*ek^Pf8ktM-ut\C^HV)[dA6ej<*.ggo_frJYFk9sn&t%;>o/*n"Q:hBGfh55!fO6]j!so8
%b"%IYPcLVA/<5"uCp&A\YOq!-,.bpZT#.A*7-^P,nIX&lQu%/73$)rX(J0[Cm`-9eGQOV[=NABYjJ+eW&LTReQs=/s:0K%^_3BkX
%b!UL:U<eG+Uh-5U?Pkp,J(a1qji[0QRm@0\].UVMLZdLC+`Pkg3U"W4]+H5'0Y&Vqma5;S>HY<U)rABMQp30Z3/p(d@4Uq[)5!L4
%dEC9fnhmXVXY<gTc./D,2>TEe6Vm0uf>McS6_EV<*'@1Q67X-8QA]:s7G$WFrpimAGoE6GSgO3Th(JFYhH_^\*uMcs.rYM'4AZ8!
%B]9nUi<!u.THG:PM$op7"1kub1G80V#KGd*"Sn]Z%Z$8Ml/[Fiq7p&Q'GjZI.bV7lZXuoFk$d"bnohP\^cYk2/lj_L^R9j*c,I3T
%iGN_A_"mcd>g.:BN]RbUSr7g=a5H.?!d([SHM@eP9SYgW6l5`pMoX5_#jJ%KoH;1lMP&e['4m>s.%8/K!hlg.CJb?;Hr<oR9e2OL
%'$=\Mf:1ck)&c]l-D$n/'icuKNM-)g$Mn]hb#%a"-peWps+DkU;2+b#I_A_iEs[m&Us#K(hX_5N-/*Pd>gLQD-M6?,2!PC8RkqXu
%"/Ao8BEa>1'EeSmMPjNDRFIBJEhE^^T7hOkitqSl@V;09oG_4lOfJR?J%\^U"H$euYFAtmX]js$%EN@#YVVp^7R^BRO$`V9K9Si]
%UU'V_OU#bkb>3*Y-RkgDMaB(\cfjV\I@Y0V^U56WGX,W6c1h'X5+Og^nT:@DLW=X_4dO"D2iiS\@!*_u'GjZ5Go+fUHNYUB;Nre2
%9923495"uk>"KJuG#ik=msbZkp+WBu,D3W"6d,t4Y^L+)G;,0?3['R83/h:qYF1J\Zm:@NR%YMmI_):=Y+k@W8PegC8AH[+gYo6Z
%.QQXH17kh*_:ci'rAt(<]:/e3's+np6Z=TTN!a>/8d*-)fDS"/8L^)_Q[UCQR(&%2_3TW[nUda5B[kJ-2_A!)Q,I@T^s,:U(G@!9
%j]@<MUM>Bb5l$NKT1LE4_oL<_4.2@=6ED5"=3i46DF`<uFr_1@@<3GnT*'$=qmn&)?"1^3oAMcFXu#BA8bVC#]9Je)%`i<Z>[8SL
%5/1KcQM+PDPiiTp95YRQa__kpNKRPL;f,\gr((77']1T")SpK<]$lckgBj@ZNF[2>,9rO9G%Qt+SIq'6\dlo14Pr"Fg1qe)RX,nf
%dI:V?VVqb)3u.W!1Tu#1CD013s2%7]e?o%=MnT8[1HI+rn@`gRIku[VZu`WacS,u_2&jA=*`.U?dH)^j%<-Cj"E[F(al,]IU7e]&
%%df>*s-"E%6UK\NS)h(s*;\?[9>Yi+3:Eui)ph!]FC!8\6sGLG/]su)767V6r<>mS=reIS9XcaiT0WMcHEP+V-%K?e?_o%f(M/ol
%s"M]a]\,riE+e(g<aKYHbeL6Kj[BMj_*7^k>o/@K%rN+u=+IhqQGiq-qXhS0?>cFfInta@$R!HZ4Pfd"MN*QC8_OE#8%>I'U8ZN0
%Y;6[3Ki%[=1o+L(`jVp6mV]F*iU*0j0H)n6l(``SYQQU4.cGkT>X"7-$SCDTk58$)bD#Qao9@!pUW<Cu#P6n94@#&/:dWA`rVo*Q
%Z2a'IrD.(m&(DJ<@OU_Hp1qH*K5mu%<c<m4/8sSDpMsHJ/iF@a4%Yp_XXcD*^0%1_XS^#e>g$FAkW>QNDf9hXOtSHZ7k<H2Ylc74
%-6k$W\k^Q_)DNfMlDA/=E+^j7N"?4@-MNDlrY@"%l#O1Z8Mc09rt,*3_FX=afE`3P7D7udA%='uY1f>F9'<;'43EJa6D^aDkpi:9
%b-7ItNiP,"lS?$I<NaW6VhFIf`r!pTcI1$[%E[/PE0SoXoN&2,ZMJjrK=m,HX*s>Xm"9pQ!?=o-CJuo->8Z=.]s9:.D7bPFq;;`8
%i.M>enK,O*JU]Z6eBe)28)N*QO7D.EI"34B-=KU<,jZ<gVIH<b'S*JFa0m[q!%:X#4$2?npJuuF0`jjD.\0D9e]a?#a`RYY)ie&a
%(g3G*,@j3/E]k?B&L./Y:KEU1VX#n$6^K6aO6p21MAHebWArgfdXZ\I?-$E:N=8`2=$[Oc-q>'Lg?*]R.!KPf7'8A<L5iM&@B^>5
%U3Rl-];TrVa?7dQKPN\QHUl[aac\'A@Q4]K;>k>_UlnOcV#s4/[Gj5424lKbaoEq!?Nl_kN<rr*-/S:@iD@H0s8OJSBAG)SW$W^P
%iu#bA-nL8c-jP9N+_LH2=&%=DGgMp<P8'\Z:i@FF2j9!Y8-)R:7<48*Ln)j>:Ce76YJTBa%Q]$dDF?OOO)(MpkJd8.kVgqeM!E21
%$+C?H%t*HHX"l(gA)n\0]r!Mrnn^)(#4jr2@C4>f(Hsq(pK[iMf,XMDPK*!/nSLBPp@7_u?d*!'S6X&C0gF1p0n=kFHJ\p2%Rs)C
%VolrLNN0%M6RJR]_bNr/^(rUd08!*aSaIU_'V]>>8Xp[,5t3@lZ`h,UMJ^j7Y=`idA>AW8;_qtW!?KE$Zt7Na2EqNknQ'UPnY;a/
%.'q.Z'&(dso,IS<'Nm9qF^W4S44er[[35&NLbQsD2nlQRaK:.Sf9ms@mg+??H)+?%Gt5dSLAQ3>o*1B)G*H^]GEG=S>,02.-H>M-
%FOUS@FRW)`"Mis6cF1#o=i&KrTq<[r?"R.,"<o%8-5"`a>iV`L`Y_6&ai[$GS\]TD9_I!mH"RhiZS(T>9]"j(RgnO4Rs0Ec1-Hd6
%fb$YH`81bkc%,L]ls95,U.q6i<R[>G!#)oY7nuK#=VJ&a".KjB@8qE1llYgC+D,;8PYI6od&j-gd_tJ]3Ukiepr)OT_aN*11OJj>
%!\#@IRC&HDn'p0\ppbOPGULo"Rb5-$i(1ruH65Q0^kq!j8PY546Q8$M'$6m[F6<Ch*ZJF71:#E].F'6fM:FXQRQYF[ksSXE6(3=K
%JPZ)!n"R@kRD3#`HncGFUaMh6QQA70Q1D9(A@\YDB<P(e=_FcH::T%>)10r3o+NWsD,YBZ<pH@CCpY4bGjW^Ih<5@&g+K4I;*r/0
%*EpHi@>$<jX(4*gLa1Ao>-8AjEYmV^?146RA+Am]]F3l@6t8,j"g.UV6%cuh>GkbW:-S'C1.p0arKI>@'LQO!SXIh=<K[ma(8k5H
%27od(&cib'c[D@m4K&&IEG_-OIWb!3?O._O3pqh!`dpsJg;k5"d]OY5m#%H@I'sdX;N>a3ZoWqVF5\0%qJHsaa`uirLSU8:\Gbp:
%q(HdPq&7)oAnk/kI70E(OV!&^[2,kHSZg('$!pU6l&1H8Vm1$h2W*fsZ\gBBD)NW>0ukI=6h;5O[YfGdf-0tYQ8'*A(PQ:$7:W94
%WTLu9f-0P3[C&"[/2K'C1"9H@]nuDY)RP(h!AnTIfE7'>Td<Wk2H2+EAq^?d5j@CM?5s8mAYINkpCCfa![74H1UTt[QQ2_?P6i.h
%3YPeMXmkc.*Q1URbg;KR/\_e_I[*"n3/O6Tnb;;GV^E^:]h)kFB#u8[)5/joHq[F&*LXf\F]umXbq",s#@@i/SBH;+dYHGDoO5A%
%_jP".rir[G]n1W*IQ#Xn1m<_hmQ,hs4&%R-rN\6)96L/5kl\UYh=1!3&"Z2-Q.!0_,>XKa9%SHIT-K'foV>!\2sF2pF>7VE8Sk`5
%di=R9O58CckNF7c/9c1_mhl=n*[,'02qDCXEFhV9*'rB1oc#(/2C$r<"K?AO^hTL/k`PQ@?+Po&AI_'n^ep*:jHLdp9,M<%LhZ*_
%eiRl:(X5:3T"N.2@C^D9:Y+^O++9QU-`?nq.J@?'ce5iZbP0Np4I$.Q%Du*Rq=GrF9E!7!J4iL]ba7h1;J/K4rom"5?V$-fSm9Oa
%F/`).(o[]l"h;,Wm8'u-andLVrRVe2+58nnVY6RA\87#krJ"^]mn?p(7`e>uIFektoobo9;P0Q=qXp^gP)N#iXBA.3=>1?76F2on
%O*]^h0)!mgZ]q%%.?p4IRcR*7NB%.l\YDgKe(8_^F9<:c(RX/[+j[%k#KF@=;5_AGFGa7\KZ@g^]*W/#hWUD3AtB_&due@WQ>N)7
%V6:!%F\N$5]r0+1d*M9cN2"qYcH<aCPEl2N:9KSf.sg/Tl#2`/7I,A>EuTC+DW6:q<[&RIKHJfMe\]aUje,@0^iKqdZAGO,8Y]9C
%"*1.t6(7'_o_k*BcIEMI[?`pL.Ta7*f/RiYi*7"_`VZKADUP<A:>$(cDRnqV1hmK#c"dpI5B!k8.a.!EYH)7$W&/l_de_Rqig47j
%i`nO_pmVkJosFoCX[Pa8dS[4CoH`+n2a+`H3(eBolKn4)')ta'$M7ME1C?lbe_-_$2<8I,H.&uo:IP.bp2lra,*c260r_JojbWGF
%DMsH/8YODb"8jer=A"#"O=;cVF,5&UFV;n8DEp(p-8\+9%=<2X%"'O1WC%i#AI].EpUbtQI44rpPT,P+AXBgT6p!$,N5>ltRXu+s
%iEAfu&c8@qH$0cgQ&/CR&P+fl>Z[W?XD>Rljd7)PT$=<)q%Q2bgFb18$P*T'Zn=]sHndd.9kqm`&br`P@-)KSX>o+8>6k;U<In<i
%pK?H@"W=Mf2^9rgW#=t=(GWq>NP>(5V;pL`ZUaZm$UaYP\jd$d4,4\%%A+9aD`^9"jk.t>\QXtq*!9K=D?r9cof>2)bsdhaND00-
%WD6$Ir$3aT=$4se_OW4$&15LSqOME+nY=h'j'5u0o/P6)(6116o5kjMI$,AlQn'qZ:.]2HHEQZ)n9\+aFGhVGZJkggDSjn*16D.=
%CmD7-2<X70!5i&nm[0UM1rp]i0:=>0KtB$:$>`j%h8i-@]Q7(lA)'/tJPR'7WP#_XV47pY!!,Jn/Y5V,@CcIT5s_.#r*7Pto6A&u
%[=Sr9at[:'TN')M`?gJf8DP=g/aK=Dr>[]m[%93X#(I=IX^\LV(UWAR\?!^M9pOR8k4^_A4KXD-H5F<XLSp-kC<60R4.[d]X53F.
%S70],IbH?Cg5`<?VQ1BqBrS\4ZbA?dc]ZIORd.t<J(+s8p=4XlaB;Mr4LHJ:Q-*1sE`C=h2)o5+cVkYP'Gu7`8l*^\<B^:0i+%H\
%ER`#lQ$-6RhH0[MoFY=K#p4--"[V^0RD/">3''6q^E:dUG_oJik#]XjOT[BA2[Gm""G'FD4Y!FP?kf@Yb0%ftE?[dV6bblbfOa2p
%;=Z`OaU)I\[$*N<?lM6<rVYI&qYoe,QKR?jeeA_@eUu!qgT/AZSSRM841l8L(!q@p*ge_/?FaE8T0_@7TF;j.8Mt($V.bW^G^sI^
%*,VB>XHd*&h5pL2fe-'BCRRaQ?B]MRCXHWIq7n^IFtnu9=reOc0f(kLF:?1b/EkCMOQ.>OQ(&iToZcS[k1STRdXDsaY#"ona.4l7
%ii3-1e)'=`o)`!>C0"u`0Q4jEacn6=6895uXLppB1XUf+.]-T=R9S=U4S*f?<VEZS!]ZU)7>ciK*dbBiNR_k9!:GSkYkG6/kZG-7
%O*duUdKY@7O`im/1R<d6O+-SAco7+DTVJf8<"KZq'J4##2''Y"o^-(tV'f$S/1n;X0aN6C(i+di#>GAm_Ks2s:5"-*CZ*n?NgKP:
%-a8YaQ!d*1E70k'6[ou;l"=W87e@)7l2JTA^jSI-TEn2X`N\QBP`6lA?HFcg?5R:4d_pdj\8iK,HSUQPqMG\0NgIZj0EDcNUuTLb
%!nH$cB?p^?L*$Y?#US[+T@Gh$.(lO2e_\4YE5u+r$&R<UQC's;!Mo\pX1,>CBla^jYp7PifI/*>gcO!<C:3TK>X+R^_8p^,14kq.
%d`n3+Gj/u(<thASYUPZ0,(O,V=5FEtb>H`,k/FS^<`)2(#W1e$M,4WA!sY>"UPq8(V2Ym.,>a7SNSN"ib);4`Y[k9MINs)<p/"3q
%NK?#3i<J@N\0Pb<J\DC0r'E\LE`XF87^@/8.`08G?8/ur<D)OAO<imYn\Y;o`!04\H0uWl!A_K(UNe/V_oD0bJm8?+A;LP7LEsJ]
%^Dscn7QTa).s*e5&iS*WjAF;fD,<$a#b5q:5&<j@PI\nm,KThFOR.]'&XalBXiUg%Tsd]VP+i%>dPdo&#IR?8)?F(97foW"3KU_t
%AUMp**UOI.#)Op^";$a+8"64/7aRgk_4PZ`29#@lB#q)GdF`;pP:;%nL.fsDVeg"1*4AE[ChH$IHK:3aYfZD(m1sm"_77)6JMYa8
%1YKN8j0ZH*Vgd!<<)0rIaWShtS)N*%+d#cUm$6N2Qd"V0QSISm(s+6W`%f(MZQ1$^BCV]e4;Jr4Ud6JO*Cc3m39KIY1G+Gmj.YL%
%?`Qb]^i(ER@l]gNr0CB,]B4K+VP8NFWX*\o@`BGm;[R=p/1?AS5jkAt'"iES!>1\_jsCr*W@A;A@O&j-KKRhg,hQk#LoF3%UTL2=
%J)(NE;+^A$)N<1(@jAn[7F>78lH0:0]WM8Drobbu^,&OUN`UYPG6U;i"gL$49a,gtAKr%:LWtbgmR]T?"-\)`20h*C5H^8c%MJ,(
%:"!)8^l26uhnh3JnoM%klU$@p1@##=*%09+VR@-+KT3Rj>KhE*O]S3k9(t62[nCrc0S#j'TQkG.8/sTIZ@u@,*"rPe!-+s];IgBB
%D).&<*mR7NX;9[H!EJ@HA1e[5l==uE<6bL;[UrZK@3j>BLJd<bBJl_"Y@92_>QZRdiirmqh(q+;KmT_Ie%L(EVtf01Dr?,gQ2lu9
%#"#nZ"d5Ua\D&>CZo@mP,<F<@Fjm[,P:Vq.?t4m[\&-`RrQ*%_;]th(N[u-sim8!Bh-i4I,+>HAG#?9]PoqDtjTW^p1;%$?3siM&
%L`"q.CRMdEgW`dq2-OjdHD["+>LM'To<\do]gbfLdaeBiF](@c=\j+jf-U._S%i`@],KOtcFKt\mqV!3:]W1rJIea<_*#6S'.t,V
%"4#lBL%l3+0!'p4o\r3`pi&267#q]pj?jeFn4G=oP7p=F6"@HE>s<q/#A`HgXh!A.*ZU^YOlsXUGu0)F]V,kHkeTO`Y\^cu!<0(&
%\uO,k/X\BYVTbal&?MZb=47:h4]Bj//DUC9>$j2FQfYs,p<2o)DgRF??:TquM)g.ZR=r:;JW)*)q?']OSkEh%USJ+BQ8id&;(XR1
%-^W=ZNZ:H<j%tU8ER`gM-3@bc6ImFMcFTLGK'0-;3i\'e6Gqrr#P^@VW_jmA1&shA,RYiNFiZqD6e1iFT/;VbqqAQ?hW5j,@sDn1
%Y#dSWiX"V$5I-5HG[4"6nu&["og55:iQ"FZT;KhdaSBS;TF4WL?^.'9B0,@U&$=1jNSQb;76_#17#Cp$<nuZ^..7U8B.-kI#cO]D
%AHr44c5mX4qF<R6^7TTPk%@Nl7bs$H4*s>T*g<X+jlq*%qIcBMs7+'V*Abc4]r9Q9B$.^>=h:I9j#.Q6p/Ru$S;sV?F-?ni0T$dl
%c9ssLM66.>m;jYte^O)3a'=$N8&t&HF1o;JN`?^K&$FMrJ>Cu*g-ig_@Zkp3U)0Z$r]ZJ6F.8#P,XthHC<'Sd,p2^MR9U1O=6IcW
%6Z[D14FK@oLX6k/323<H:FGOPFOD@h_tPkYq2R4S)NjH5@^qU+]!;>T(nEL)N.((O?fTGZ!k_"bTP+BqVi6X*@It>;-j<bI+b1%r
%jW-D%IXt!YoShE&q?R6J.U3sK%iW_ZJ!hsj"XaFiifE]JATagN8JT><SE+i!((+=,IM^'P,@&FreU%<:?Q.H#1;g^h[Pkuq("g")
%7e5K=NHSUFL64p6#?GTApR>e?`'$0aD$N<:8n65g3VO)e"N,Y`6OgQ2UX6J".&mEpCEG7#+k8,O1hnQh8r.@V3c$#"07`^b*=KYR
%aZ[F1BdUY%,]]%jVgolH%&1NA0_I4:KT3"2ZOqYC=<r3[WUn;&j[Od)%36Km71@C>=mu&]VUIiG>Q0#;+BmQ_US)b8V[8AXH)Vi#
%amadLBRu.>U-.%`NKUGX,;qtmE30_hc=Rb'fLTmb2@@#<bBu#MWb?0VqL&e3=PXBm1W%\nE&C0kXVP!ek.1<JC*NK-;;_&Q4:O#H
%CX(J,F1(mMNC-JLdacS6[7*7W<EGsHe+.W=O'Q%):H.%W(3_Xg?(H:CbMNCCE5<*5J-HfH_?I77^bm+9%i9Q1"[he[>$TDk+3;G*
%f5Uh@4:i\Q(s*"uEWMt@:od+-Q4*QN"Hg7QBHCQN0<fYs#TdZO"!Zr%'O</c,Bn8V_7l)@X#TOH4?+f-^.O1h"RL[QHZ7*@8lrLn
%;59F.UBN86<N[LB+dpV5UMu*Rm?c3Q(#!)\N;.]Vigqim<9#KA4X.f,JQa&u@t&S'&SA-cI2:JfLk8M2UZ0!E68r6o7$^<@,,)Dk
%mE27;#*oEZA8TiCE4[8;9;<L6np^>/h\mY-VDg9[m[$C*FGedh*hrp]=X'6UCc.`uN]rB:PH9^V$_dSMC,8MXKYk+[>;(sc8+^Pk
%9LaSG5_M@))PrLR(l&lR)f=)i&Ypr]U1A,J6V^?4Y#e(IYmfmQ\6^(>X'3SkY)QO"'Z<E(gq8hFJeF^H-n?N'XnsHWbq#RfK5O96
%;I14%aGRr\96k*$>Za6`ej`$8iI[:FNDO#d!`H<^!l=s7H)SKm1$XkFf#MtiWqK=n)UYD0Ma"k]&akQO+5b1rI+,gQ94_g*:9=dm
%M:78IjIi>$(LOX*RNHog1bHPdBNiW6dJR0K7ah`O),4=H@5Mo6Q-lse=%;m'/8XGN[5+22k/q?uj9qa)>HDWf\$IiY*8&,AG(hHA
%af2G%-MP/.RN2:CBYH6&7apJ*17GANfk>@KY)K#^8&$Z4DJ?dZC]nEM$Z38GQ:ACO.:WY-"B!i#gr7J7->lp'9bGIhBSp@:7WVP9
%17I4'Pu5nrmoq"rY;GIsf1(Q(AN^AiQ=tu32OU\OO]JSM(g<".[2:O:K3!]c4FiP\lG;\ac6)9h7D0;`!6hdH@qSQH)&?+fWoY/Y
%VKc.OH&WP'ERATe5aAS2g_^l_hTQ/YX%%Ol6VBe%C5<Q5,C2P-HDCZfUK:_]dlX#D]`THPb9i05@<"0l@'nen^h:AjS-l'q:5\mh
%BT[<I80UnHEV.Bsa(:P:7X1K2<,ETj(cA-9`*=sGR@Ns6aQuc-rJQ[-mbP\jUJoanc0ju7:S'DHGLJQ@!BakeHnFcOBr[mI,8s96
%'uEKUc&7$+cm_\)DR#?!pgJhB\fa+(<J\7mf=U?jD:=OGPj*L5(s*[V)\mE(,%L*+^Zm4l0^plcZ9?s8j>R4\',sAt;j=:W6jQ*u
%UUJ*PH^8Z3QIl?=qJt2WfVg2h&u:t"P24qW/24HPm"N/58kVDt?h4>S;-$7MN3_[]HZY6q$HXp&AY3_D9E3\A,jisSG,\\-Fg>;1
%gCEIcQNjrq:#)F7%[f2rj:'j!F?'KTB*"m->K(D*rZj5L5<d.&6+JPB^5Z1J:7F.?-lgV4X:Q,*q1X"6dJ7A82;9Z%-m@;0'LbC8
%I2DtpF-cd>7KFG5rgo?FKqjqp32_ccLn2Qt/uQUEEP()=Cddf29TWaWIh+;^?'`Dg"[1)sjl,p>?13Y_9\C;cL=:f[`hL`2#\Bu'
%Rg]<>)c7k4OeueSCcEhk#YB*t+^I@5E%/V@d\3lW5ZrdnpiC\R<5[jX/)(&"fLX75nD/#I($X2RcoUtAQn0@n-uctbLYF3tP(fkG
%,BNHaV?Xb:FE,\&hi-&.N+aa7h?0,6@C0_P"L?U/%Wn<E.RtJ.SYUPNcQ\[V9-_:*_F=_aK@-GFC]EV"V5E^-2T!DV8Kl/E'%Hb8
%-Cr"+*,jOcFCr&O60ned%hL)'"/0Xh:qFYCY%,LAU63_jLq2W"-fA23Bg1U$B\iC!EDmH=+r_Ij8b^L):l>?#FAA%9<ZOZ(M[cFn
%=S!`l\o81]+Tr#oDR!VlJfSN;YYj0I!Ch,8#N5poOB/5d8LL"I#9eq@dr6?GJZ+%Qmq!=RXa1E=-/at^fE_UW.EBp)eIXQ"'%3dY
%H]a;LOOF*?F-@ZV7&L!unUHA;"m%tZEOS.;Yp=-Rd;um%qG?R0_j&PDj9o,E@"_)B-=U@\oVF9T:d4:Jb*+rfO"!<m[pA7D!iXo%
%<[KK@9eN(pU?R>n\"KX9[s-"4h(]&*!<<]WKblcPKQ79D#FnF`>8G:k$O5iBJh%[jC/L+*L=+M\>Oo/]R2JeD$iqlQ*IT0%JFk"o
%U7)_q-pb&&>V9e]$s4)^2X,3!%jfn.JRWB%Wn&+6X+Emk)!^`%jB<DFOKb"t">3mr9e\Gkd0p=;cu@jdPu?4#-bHk&2l9&[Zo&2Z
%Toh)1r`f=_nGaKg-Br6k$1rlj=#q\!:>sB1]Shc,dW(f_`R%K)<N<7J'5)!>mtmP!<t[I:Y)s<jmQor]MdPZk3/h(pY1#4&a,+A,
%BXi=AD_O+u:FV.5nuB/=m1_W4Li21H&de,$?sbhn)Ook*&RhOt9;neF"0nk#@A]Gb(f_g#1/2D%ld\,H2!9_.&kJ>:>.nQEc,Ag2
%&MuW]ChHP+=OMmjmruNd'/o>L?TE6j=KBJNnb"jcXnJlgGTT"KM_92@L0<&%ki14NCO62BG1IId,qZ8pR-`0R3qO<.aqA#jVN6j)
%-*qfn0kS(p]UOSr%RbAEC!)C`BJh[Oh5Yc39LIOgU!@L&]ZFMJk?D>*VEo4mB8*&d3Nb6#S:_0;JgViJ4q4\#pll02G_C0N$6H,#
%%e?-"oKXHo>bL*o4,4@A:UBs"G+p(H_$I`WRK!O`(d/%HnN4'*(H^).In\m;&8a;;MrT@<i[A=fSO)R(@FB7[$q?dC]'IVX-s.?h
%1>2c93&05C6=/H-Z2HIL%2'lnC=X(.V#uZAA3<cY`^UW`6@sNO5T2=i*b,:7XHTh!4D-Bn3KWq-R;bb%#rhEke:\P]F/o)fiFEqu
%YJcSMD!p\Z&7S1.W?s4<:ra:NGo!\@"%pXIU."']dE'aHP>RL%f3C/<"9=Zr.J*`&Q;EU:Vn_d?129Xe3U-(eaKhr2SU$ZBHlKpM
%>PonNrHg=*Y`UL^E&oO"Na,^J.Z"rM&-6#JCPfokNNO_mWG"JWHe=GW;eS.]=ZRIlR<-EnbC5?J<ukS1&Wf_65^A,J2&Y4Mrd<i,
%fM*TA)dX,<O[J7/Zq7`C;&_t/.F$t1.c=TO_BrMr)[V.-Rn<:*IN+SZdPfkM,VHJISSK@fj_nWtoLWJLp6-o%dT*\V4nf:.?,.h_
%#q1f&"S$NUq7'mX*hE[c0qNLH;<<28@:p3p9[]W%$(O)DDVI#J!McSsbV71/7\Pms"2uV_15Z`@"R>.OSBFN_AnI[?C+($,%6,3P
%'2&[K/mN/T<^DX;KreM\m=NVCEZ`OKO3*3,i>+pK1k9;07<l)/*S^WU2^?PP2*"'IJE!19:olm8hO:eOM%3Kfkp@6Q//SOrP!]Yg
%l)CF;.pK<c;WHC18cWL3HPP&p4^BclLTINHEYrNc,)jBu\4#^*KboU]prmf$%&WALg.1ro_LN]aq<.stBG,19Z=Jd,n;(Ls+)M=1
%&[dWN!btp0*FlhC*[nocEMnJ+KPE%:>08XoB$kBH(Lt>cP_>/-8I"1WB`dp,`mX3p4)C!"WTc:e6R46LNL;T\*@%;0aphe/C36ij
%a]LfhM1b)UMaaj^[rT62#U:&:9u4m]m69'I?)E&N;iD+J1AX1k*6B[.p(Kd;^DV=1634f\]Y95b>8Yb16Ujb8F!UeXNHpk#<V2:C
%T/":Z,U0FR4;MZV0WG>Ib?mcrl^Dd&USGs5f.I)\pc$sbHi?lL9?h#D72n^]!#oO!mt8<(IK=:;$:OI+f!?NVJ@Cl0)i:O@']m?U
%m('!jk#_ur(`-NVja;-p4lG*i+?mXO*ql?t4jgCIL^r$3+nsqj?rW-jk)$^H-mKH5YUFfek0((6?cSE!e%'gN%kqU7UoPc1]*Ig9
%:ALe8/U4f>$s0H\d5fl_X@NB9R+D1XS^IS7ZPY9[^Ymo30bdF/F)*N0Up:a)/i'dOq>^pXeVJ`A^W'9BEL!,Sg`-<]WH#5kclj67
%@ReZ-@qLQ=jW4]rR>4K(&K\jrAq7F>,X%^92GmpCd(QpM",oNRVXt?2bl$[%e1jWImGl^#\oLmU`omDo@fW_6<^7:]nU/jBgOfsX
%XF-bfedj)0.'aC/qP^+Tb)L?KRUl@"7TN%f+s\RE>[]tVkBS3ToP]=f!AUg0nLu=)K$_(V*ie02FrMjI#dYt:M>@_3!P4"J(ij]G
%.ZPn[TY_N8+OD`e*i%l(WVC+"'M1oF(gW!B/MgKSh%@-Im3!+%cuuB*+\KXaC:6#I=%(dfV85]G#+E"8@CB)"S]Bh++!EXq*<l)>
%oeB.V1H;`+<)`F,)u9a7b%@DC`0tLA[87@1drLd(50?U=b%1aJ%dU'gDN3sVg!'4]TTbOj5jYR3XgSLc8#RCJI8'nl#^N_./2?@s
%![?;(Dh'@DL^?X@T\H%KUr^[&=S0Z[.Nto6I@aA8MW_n,Qs6(Z+I8E>=&q$0NM3om1U!77mjs%O5&]\bL'H'6/!?0J-PKE/B\5\'
%9HEDtA-Yemm@@"k^Gs61,eq6%7LVAijkoZ(ngIYujIkR5aP<\dDe>K7/Q@YE,"ug:)`SH`TNF>&LM!%2!48\>6tWUrig3e;b,K>B
%-q;_Z4-uTp8O[NijSQpB`U(gqAuVoH.#THHC$U\sf%3b68(Cp@5u*,[EhNYcpDCJ(]t,ilEtR8<G,FE<(o8-IN&OYA>\c=&lZh6#
%VOrDDP+d#h4!RaL-GPj0(5/DZ!B(_L)W2J^$":;hpO*UF?UKoK-ZTCq;bnet_lZ%\cf*+".4+WdSQLOGIlZ<]R%0A)Hmb8;T"u?_
%LGK?$9,)^5&\;CNQXAAnDH\t-FG4c/h6f5VAcAUrB`bWd>sQV8CZ7"oTC0KV>fB2qDq2@m\`nnS+"ak4<?GSff1#E.cU2AN1TJV/
%^>64(oZh7&:9!>Be4>Y]![=+U*TQlZ9Td`V-I>.R(MP&>POTK0c^SY8^dnno_[)&Q:1+V,*i$8Z0t.I`>cGpRUJ5>LJ1I$c>7@CY
%#0_P%6"JmR9G/2<)'k&e+kJK%HogI)_+#09j3"_U_[&&kOUKM@GK$^,*/)hR?)P)mrM0cSe=CH,,l8"j:5N4L*+-D;`$Sd\#I%(T
%_OR"Ll1Ynk6#o;]8IG9&kbt4&(%<=,Fr=0>HGbMQRG^H*c-',J#T/4EW[A+'N@(6qMd0bd/[#lR72&3e]]C7iT^<l&KKpAk8a<tM
%KuW:DDP"0][,E$5aj!]NZWtlk\N)uS`(j2^FWraL5/p3P>&n\C^f[hgSFiR,@+hhu2m@)QfpBaQSF-_8I$>R;fT,b7_7<0&!lZ,d
%mE(:IEJI8YKtAOtA-1*mq.p*7,5<\njD7d`mObg>CY7b@HRhq<GJdEHLR:fR&-i!$T?E-RQLF(9>q=-a!MD&!>ZSlX6Y1848A<J0
%-4`3kK^D.G"jHLPkp$G.n'`_1\^-K"A@g'rb?%["neVoXoYJ<g%F!J(K)fGK,Z]MZM(&P:SWrm6F#/'<%g?i'k_rsLD=lK.U9<ZZ
%at.ik#CbU#1Tm+'bQiL7dK7ZHAL@;+OeOdcOb&+/r8<XR&M/eXE6@*58\1WTY8m!0U</=$PU,uZLfZMKIk<n,O@25rdWO@/ihTY2
%Hil\"iR)=%_='ZBq"/7+>&8D``Mul@:U3Q<R!4IP$o+DJ^\-b?\9\sP9DJGNY3^q\&qC=8"I&,"\@"^:IKBNV`C])JRFo'^931WJ
%&?J%Ml7fc/AVMn?^_/H,X?GLjf2WS9Q_S&NZcfBS:Pg_tM#uAO'!hn3CN<)+J>RaQj*8"f.;n0e3jWD,R1t+dFoK#Z0;k.Xq+IXK
%FntM=i*Y1>@%:8?bI:h+0:LpM;C;MKpH<1eK]TDdr=miI!>I#M^l?"^[Y\[6[?>,Mb-N\?:-lu4<6;N9E$.*4hC5JlSZZ,.kcn%d
%SY:+()FD`Z@/1"nM=>^_<o);4\_PrK^MiAm(<c@!jegQFfo<M8T,.>`*%A*[FpX_[c3,BP^+i8])[dBS.Y`K10[?qcb!eD$\<Is@
%^.r&14Dh)Gp=Mn_d?tq\<bUd__114bHhrRPpL4:s8_c[Y0T)>hMRcd;!<6ap"N\j:qkNOb=bWHMMZWHTF>NZ$70)_LodnH#B9@h'
%Q+p'O_5M&De)@d.m\Q9IL3n#65P/dM"uHINS!guX;A#YJ4<.GjVoOoNKaF&(JEnhE+0`7_VJKeii+s[$[X<aI^SQL@Eh>/^M>c,\
%cU!Vj/_::_=&"kDE8;=>!#QJt$o"-D,)daDl(]2BVL*%3a=AY]`4-drm[guISL,YE3ce*S:*e724-%8.k$!Nqo/?:.GNTFs]'ETo
%ms9hnmGN#9W+!lWKTVhli\@tnO3P]*OL"=3k3SlUo6hnE(W&[Wp$Pi@$4[aPU"SA^YB"Jf,7:!L`8T_K=qrTT(]#+XI7Ik"ei1r*
%NpA+p_[B9oKrBc.LWCUoiAh[0QS#msfkn#.N;C[GaRnjqHo]g$[Hc'3kLp6kmNeQF`Z0O\7a"j_]0mmPZ$7T(OD1<+na"%PN])VO
%.@ek@I*do21MbVMQorQLW6qrL`_P`^<*'JHUZXUA&3Wc!OEK6cFG,_j!uplDNJU"<!@#&I9iPi7]$?<)rPQC?bMZW%f>-]r'=3^]
%>DRs3$0T<0Jf[k[]X9O"m6$:D0`&R>.,N%2l-b=b&VJN(>!a.Aj7KVAOXd35T$emM[Wj+nM*8h)3$^<WNQ=`L<Hj$4GJpW1\oQ8N
%"Z`CFNk5GT.OI:oDOu@6n'!i-<PMh;SN@LA83S2`e<Bdc38UrN7:"W]T>)bBH;aB^SI,O0:I:a?@$n)@N1;YRDqPS^pCL'W5T$+P
%g2l!`AY^fQ7Q:sV/>`ojVlT1!K3I?1kNCo%.gEQW`uI]`Y-$d=PV-rgLUuKM9=TD'WJniNNgRU$*9m-*$b*B4)Z#M!B7.[sFA.CJ
%17_HGM5<2ig*GQj6XH8C6,mAMP+/?YS##IuIVH3POEem@,IXRKZ8+fU&U3ZADg%ph6T\%t;`3$t^\Ks#PfHl!\sDVQkJX3a!m7tM
%<%RItn,hGq-I(@a_"[[IpQ9M]54!'6H'$>Tp7L1X^L_;ui-b[Z#qe#_H$!nFbcB01XRuFc!Diae4H/0P=(fVL02SFR@STuci-O_h
%4iJG&(NQMG3(7n\io0n;3!O!"GgE!;c_haBH*+:ud&"m>'#:5D''<Q/<X/iA-0G:g9K0!]@j*Yd<MdsB8XCdn%;5=E'fj0V!jMB@
%lBU\4>RDQ^3pBB=54'"lepNSr('36B<BVcgk-tHE.T9<6oAg+`._'!8W#`]CVnd9cc^DE(4eQAajVC5XUP)"<N<-h55GfurZ*HVI
%_P3H,IcUMpK"8q4dB$%.;Pcc.0!Y`_XIquBTIC-N+fl6'XG58Dd#>V-f`>SU3U1&9D:A))0KQ8]g!i1#+:s^h54&ILoU&aa%*YJO
%71WA!NQ_NTTT'Mn*`RAB)]Q&><?F\e3FM<?(6cm@M5IP;>!U`e`]1M6cVp^.[LrdcX<\G%^I\>1@(LR,QjKq#]Ldc?6<!_9\IY;q
%aOe1['T6+(,_=h+m_Q'6,6IrK^!/i,),<\&A=9&BrL*Fup3(`0d!#8tB><^%^Rk0"UT17\CM,@:fi*-!aT(>8!C%IU'A'Vtl7q(^
%f=jWIJHB<mg_hg"_&t)eSY/BL3&,]IGO)i&LT+%j`PU*Ep,ZjJVg'RjbYMi*:\g1c1S+S1(dU;T+_4X"Zq%r$puPY1YQ$Q>++<<B
%&p$uF&#U9=?Gd&(ifr5N18?/5VMgN\k,T\0J1PT,9G^0&]a5,CQQe8hQitF\6Nsbgh@`q`>&gr?L6gnD9..M!8k$F#c6`.s*8bQ"
%HM/"Aq9JTPL;>3+M4E@A"oSI#iruQoKO4t.E,k`*A1nnhY/#J#HhNo[qANX'bBK"cp1rq_e#&!c-<f_-$\nk&b@!fUUgrhDgD7j'
%C,XTM\l!HbY$BM^`I8Q%IP9l*\ps8E?T3H(o8@j=?`@sb35*G""9m\G=V+'0$mus=D)6$DE%C5<8Z[GOfS'p7IjL]B[9p,?mJete
%ms,#JgkWpm$m@(Nn$s"D9@1$V*4]_VVW@\V<5+*(H'9W-rB(6dcEjhR1gE^Jpk^@](mNs60rT2>cS*>*STbBGJFpmldndqN108^(
%9]1[-Tj;?P@@pk.Z[Z)/R6^XRmmkX$=+Yl'PNZZPSK:dT\Y9&$-&=]Sg?BS^Dq)0R>_a[n;"WmO)g@2OAcDN20E(-h5-FVGl78ta
%P8f]MX/t+tkXNjZ)Q.5GU_%G_d3El1!LDoO)#ba2%FEI5&Q<(Dd73FpbVQV'MP(siGO;BKGk-$2K4jK?DtmU'HV/[ekI:?>cuZ^%
%0?j+S-Wa<LhWo8In80,EDGiChE?Pi?oQ5;irlHHC)sQ$rcV8Otci:U2bAO\:Yo0j+qTb`:=L(</#rYf75JOj.Yq*>0HD7V#e3g&A
%(f_:c2,$T9FEhfEdgW"NZKkcAa(6*c<7H1I$Q_0jqt"=Tl^8@:7`l>4la]$E@LMgNZr(U%E'!p"3nbjh.oolXRZN6(\,rS7?gCjP
%d!oG1"Vpl4?[[>Q)C+]HoW=Bod@Io%EE+ZA>Z5qncc^FD5K`>&#,;Js!@(oZ8/:sMQKc93,NtY'L&HY/(iS`>kjTMLFr%)Z*-.pX
%BsD*BmP0_p/`ljL\7Yf*odj<'1NCXC#&*FdPIc\m2%EEi`)CmU4fFgi,sCZPclZ0,OBCTE^CalLcBLV!q?K[YH9%#;r*/ZALlis@
%(CjE-MJ"U*WH4ZgT6Z#Kq"I1"&&7Js2`8,f6e@[niI-XBLm,k6-,35?)8-sn-uU?Pj8[5^4_kk\,M=bjQ:`i#Gc"VciJeFWn&I%_
%)tEE@\Ymh`"Dn,flGmWO&i]@+#c]q;n$11g+A?&apk0dI5hgmRLYPXQ*lqTb-8^[%dR`h]cG/in_e-Lu_-k[^`UC\KnBtC['F$X^
%b`c+\/Yn7_C7RVG8F[aEpSP"U];H]CX,#)$L%`("qc#-G20OG7nn]2VGSGm'Td2Or6=_Q%f7(F1DeudZE^4&SVau)`o6(n5<'cOg
%"N)t<i>O\"NNTlQ2&ts&/tNS$@u,b_`5Q-DiBhOhWqc?l>YHdlc57ApN/u$!`JER6ecA4GOL#';-g1gNc\IFNcGt%iiQQAJn+h5+
%4H+e3C-`q3To8<b_jfk!@.\G!3_1DWjH;]m8f-B]M`LBcJ($dEl!jg<nVXmp8j-FW0%Nu<rMkXme\qdZ@$YqTeG@7(*LsYmmTg'S
%YE)/u77cU9[bHcI4Ck&-n13_j+\QfJ<g1oK<aTt;A5n_T+!;fN+5=%u_[+Zl8qCD<i2W;&#co2`H1?/8"+Sh)5`en`<G0[`/)LQ#
%K]aKp^d86qZ<EQ?9ERl^J_"s+o6%9ue#U0mo'!#JU;%TBaUiQ&h7nSd)s!^Z1_2T#1=G?FNO1;D85A,7DjEX"D\mhKK.[o/om$WJ
%l0E_%S;0gi(3R3hPq:(/ZP;Y93m#E.BT5(MThI."pf3-f)PK6C1m%r_L1K!Y'ji0E!L_BtPhHroO@(1Q,?G^Ak"I^c2W1I4Eb(*m
%d!(U4Yu,"5f<)p,SEZNo=(oEp/sc0W</H*7"G+ciAU8'Dj=*aDK/1PR/`c;#7W8e<o<^DjOM)7(Bk=Xr?J>W$jO+=t].BaMQ:?jB
%d6_)U2PS*+*9#<O335j>h5uVc?[P1#Dda>V"55'SrQ6O.P"V-JA6Sf:;>n99XH3Tj)=>eked;MC;,#OuXc,Mo,NLE-7Q^@&c:5\!
%L7I$/VfkKL9;?7Wr6f7kEk\#XG@d!`F7`d<]1\Up@3IqE]/5*jVPMpO)&7ss8ug^D&IQ5XU.8,P`X&;)P&#8Q<$PZ[g\42O$"r\f
%qkK"!9RY<jN#G+Kb?][$)\mU-H2"h-QlTj1O8IE1>^YAEBR]H9dBj$,UM2G!7e:Cu),2c/AMe7hL!dQt<^tR3>oD=:YcsN+eB2Gc
%ROb/tO=uP>Dm?U9gs4&UEaT9MfbLZK-E"F1Rb[MWBQE_QU\W&7),6IDb%SB+Au!>!\2'MUes4X)8M?%bl[ED%"V*&X.0Ncj+dgrk
%muJfS8jg"ZD>i>N>lfpEG+qeJYimq'\b%&fR->%0;!1^=GA1#*#X&lrej`>;g-iM=7eH`9R*"B![\alT7F=AGe`B^Xr4<>pV\'X'
%:(E`18-df^d`1!POGt\9Xg`o_3o2)[Z*Dlj.deJj7j4@2Cp#4k;(PQFn(A!Hg2a:Tr5*+m3%*2l@=LSmHce=ba@IYp-;0"/gLQMs
%jWXYK9*UOk7IO%V\r%)9KE8_!7`In`9l<4Y5teiL_D7j#PT#,17r5$=/Hs8<l-io.WAf*ea'96h*\A\A4I\_%bp=7j&ta6DfQl!9
%I'S'Zid<A85EAp>96SZ0@-CHSHra3g8M`Cr*aNfK0&]B_KV_<MdjM3\''OEcIC^[kIH%"S),lS=W_6OG-dq9WHZdHM3qR&j6FK'L
%>`Z=r9;L17p?RhMFpS`WUl8TRa=_aLQVb"Yo%><1m?=5e$!Os:Z!AR.0"Gk\n@)%Wga>SZRL8ZqK=]&pI06LP;-2)fXCq=Z29+r$
%#^21CIl!Pk4PB'>O`h4=HcEL6;9A52*GAbW%D"el+A3&rcD"i).K`YO(85t<pX+cc;:k"9SQVr`)DHZD\jVq;;@Qbo8l5IG]&`*4
%W_),L@8o-ffV`E@,7-p@J36Gdf[EA@Fg=k#)R_5LGN6]hXjqC*f<BCRi/X5E.r,7:IKhu)9k*YD#^Dh['-0Pg'=%H`G2pS@`,%9J
%\gDs[b%QBq\Vt-NR%A*p6B=63X5um'(nsO0"aNFTTp2s^4:lEna*=qE.7Tk]3"*gZPJ(\L#n&\'`S`)C#)\k"L/N5*3:KGi9;<6b
%940SOcLX)F;?R'NnFYIJ!_I4VEAXmh)9;?[A\mJ"43LN7J%l+na#"`-(]-pI8e6T+I*"6+9t.nIa']HTa?a"W7bR9Wi9YZPG'f6#
%(5uF^`J6"YNp\R<M":>r?Xb8a@hne=k[`3E63^#&AB.!f7QuPV:irBq"Bs>1*]8IqTN;Lg!+J9UC:s."Tshp@.m24-jl3Jo#/PbI
%#2X1\4L!AEI$Y$a+>.DR!g+/QX>%=M$LHu:XnQqHl\2pY`q-fG5'NJ[B^tDXBmB[M1bR(]cU0Z%g;G#LUc4O+BVmb.^8\<2J0^"d
%Nd%)u,1t(mY92Qd\$(_M+f3u8):MMS4rL^M),p5JUbfJD#'fCW-/a[E4YWiqh,Y6.JF!QJ2G5sEA<H6%3T(emXj9T9+Ib.E44^+'
%X>Poe:c*g)V=R%2*W,c9Ro(G`QG1B;5CVF1s*T@ZJu&Z1$puiUkqalY!kq-nJ^6G1;!NQ`0S9oI)53Qgs%4/?@;(-h*%1NbZC*.N
%rDKn^jVj+,8`6FBDia)rS-SmJ5f5Y/@mWIeU^>9YA0LFTRF)mM77$9o@sI1VVsad@=d7g05C1iK6l8p'/^=A"4EmoO4m`!"*B+[e
%2'i/<hIDbbiF;n=>/"!U&.0bTTYj;6m?(6t)D?eE;FRS/J7t^<#A%!$#VtKO5jN+g'BG)IXsLtVOk@P1`cS'&(3KOnXu3YD!b]Xk
%;YuCrj")m32b27gW]"4Wn?]t.#)6tn.M,FMmRK/*GiT4h8c,6&nI(Rb'cF\+dDa4j0-gY7C"_MbDNAn!;o/`HGgq3=2.6Su245cl
%N1>eIBql]*'(Q2T7H^[[<^LnBT(e$H#K5Rr)nfam)C"03*[@@i/Wab@+-M^JK(:693p<rXTiVAd#Ua;^/'?Z^jg+b^UHCO(Bfb[*
%C@`E;qu.kS]P#Z8\6W=nF\#cXc1+\:^?!bLa*FM35>B2=j#fVf<X&uQ*f"q0`?KjrN[YlpSTkWrlUZ:2-[m0l@9##WUTdS3G,MZo
%'dh"&gng:+6"Y8E1[\o<V_eE>CgZ2XYo-#,?["\7<*c;)'DFhr3o%o(Xh$0!`Oo=Co?>.qdhAjEH9c$EU>A#gJO9eU]D&mFDC4nU
%9e2Vco11;nT[k=mi6[eh$Z\FeIJQ?f:gEX(cf+M3j@=aD?G?s6&Pb(ZiM%1]k"q,Tqr_qI9#[:/YU%J@*TL#fVM5]%SQFY9guf]#
%cEg/pZ&Oa>E.jJ'r(/$c3$G,r#C:]noc*ndOW&sp-qh7Cl%qK>U*4K3nK\E1L!`jc71rVC?/(!/Q`h5AW#_BAEbqFOV.$XNeim;/
%rRtU'S"P`+m.OC69(:l@/rFI3om`)uJEpmuX\MX7U.=ETPV<fK'R$3J6sU*eFSP$PmTs;[De(iV"iMssTLbrH&3<V\TXbt]^MjQC
%\<_^p<hj@D5U=A>`KfQYe3k5ZfqOupJjf]L]uJ-nnutA4ZnhoA6CB8/Sh,=r-h=u,QQNQe`&3RV%d/U-Dj"ogliq!?:o/:kQ1m!A
%3/jTR%j<,>Vq(!qIP>ZuiYFt%/p@i#Y.\W'4AR+mC`?iDqmO1NXb3]q_PgN4(-I'7VtGkVZJhgG4B5QiobpUQm`ao9eU`Ru(?`5s
%mcpR:3j/al+KI*@(r2p\:G^FVk[k36Oa9Qm>#91,%P+E%M]s5$`n`MIT?aB(%C6''\-4*E@u#hbmP3.eNMAab<U.mq"!'=.!XB[Y
%:jDcoS[Q*M*I$6/MT_aVn'>9k&L5<s8bEQB?S5.7F]dONf3-J;D6dRMKpI[(#@I919lrdZR(Gio8'=9C:3QkQ(sI=A:s5TH6*Wem
%XN?Y"b38;F.=d[=Nhn1+7eaX`na[Gk>cEo?1Nqm4Sn-Z@om>.77fl.aIhPO(DT5_pH8:HI"s=kQ.8a0Dj33p_1CnC.UIjZ"1(=\F
%F1XJge+C.WQQu5a-oR6iHYer>E7;b@_GL>>A\.!g#p$ZEaE'?$nl:`gkcsXQhe6t<_oNDrAiGgE/LL2D_29GX'EH^gD.60)OjTR&
%9u!gNY<,(*K!LITCh0\25lT%h>(3QI;*45mcAES0S^I1=Vs_ach!+lk9MXj^BL'32Z7kAoEj&1?#j9!k]X'?"-^ZU#&rnWk;u\Qg
%n&(33q:EOcG,Q=TrPR/+$TBs\L.Wo^_4n`Si:S99+E,5YBAfD&"jL]C]c2J@#;&"?_3j_u:9A20UDVcURjJK\_>u%q[mM<J35G0/
%#X==60pB5T;,N-r(hrP5!9GZ;7?NSa+Dc-$V/E)VA*+2i0o!J!WPGCp2!O4d$NuV?PQR6/J,msFn+4$9-g`s/9[N!rQc.#LA+ZW"
%EGf@uSlXcq<u]Wu_#B1&2HCM`"hFVBk+1$2l:0/cBXT_\R<XpJ$5<bFN2i3j[q0M-D:+q&D_8f:^]>7F-hVdA'THm6L3'NTls@B"
%=<UlH\APpg)Pohr1Gca?jPXC:?['6ieEfGmZ,]_QV>hos>&ZEfM80E`SYS4@)j:]8/#UWZ-O="Bc3L-o!]Ho=G7h(<6#0CdAlXD,
%?d9bR?C!/.5&>nC02QePO)uupBN`GsK+nbnlrY[_DufOIC`b2d!;&A4q@+<RA5is44*",^o'!3^=(\>7Yo4Gb5j08tA%%<.@2%.i
%0Al@]J*>@j9d(:p7N#d+8p71AF'oIcHl!fnfj*.lc7SuO0Z3Oup`IYVnKkSo1CC20VF)7b`2g7a*/O7jr"18?.!(U=^ooK@dj7je
%AGPD/Uc.la%Pj5-SYPm@/tR##20jhZOmW@h-E5sc6Z5d?JY6ej_4r^<%@&,$#ocu?8a[G6dG+S5!QHVlSm"F*R:4"3fn8m*;br+?
%>[[*t$Y)]$,).O.Zd.f\1c!2bLH0V%fP$=i:[7<p=ajmT8Auk;%(H`!']`s'i#VI1Or<;"$"QRG.>f!NF6)U+3^h&:=$.L75E&_I
%4K;mBD=j\,`("K,CQ<FBep^HLTY.=2g7YeV[*CYfC69>%CCIna?-Qc"*[Qq6/'n4aD)C.9V6mB5b%hDpWCY;2,+Pk/B:C,p"G<4N
%4ue7UZq@hj_Z"_L3l]!i0'2Z+=L%\bpNtaG^DgO:dCQ-@BeZ;onkOKb6j[>n#edC@!OrtK_:\e41N;hlX)VL>$Ij/P)Ia=prUuF?
%QmBeA6;i4B9Z1'_WokIJ7n(2%!K&8DgV"u)nY?A4mJ8j"Fnu$krg<'ZPWQ&70_E#Fb\Icljg-M.376VZVP)'iBLXDJ"PQAFiJl5M
%EZ=Z%qlR%3?LTR].53t7=Y@Gn$/)J9;>8/b+a5:d=u?+JQlhQ&;X^1`*ED2n2Q/"$]CF&ICIJmG0:%,d773%-\<_Wg@DIsW\6\Dq
%^Op/u.sE1ajg[1/\,Q;@SBLKP"`@1uT0>L6T5q"Wf2^qN/NQDbV"C>d\=:2Oo,;5C*/h5QScjiS.lRcLg*2qbG"f^kZ:T(&EKeTr
%TY\?t,S.&s*SB/*=Tp0$dN^2idoJ>=)5]L-iH&@ScqKU9Sd:O\Pl,6QaSE;fp:#1&/CjW0Q0M?#?`pl7bBSDSJ'&Yk[jQ8MGZL6`
%kb;O8/Y1s1ISf$`R#_IYcIq93;,2FJBDG,uB%<]%I&'4)qn(2=i'kE8?#WgF>PmL#I4_lMN$u;=[DP:^.0<loTkGa-&D*Q(N&("b
%1Q?O9QAlhI<3[gb`X"^gfJaFr4'igJ"g6G'"Yh2@m4J0[SESZD38#3;8hjn:mWaF27QrOQo-])MW%(6`eJ#ot`Ta"EgXdO(Ugt[9
%rLWpWUn*Iajh(R-;.?J2EF/gYd3L_-V$OL?]DNqum;]o->jd@p3]9p]T_T3sLBtkCh#[Y]6,a:-Dh=*g0n>ucn^U,dVa4%"1-?jV
%GUGZN])&'kHi3DjN[HJn7OPR8RI9e;KLWSDfmO<E"3#hDbdV-#O,UYk!p0BZrV[04RaCB&lL?_;&?6^SAtGI@<N66Jd/UT3qnOh9
%l^FDA"tF"PkUa!W=%$[G6Z5/<=g>H`ntue.qr=ZJ(?nrF*0ls.\:YL*o6&]Yd!dkSfuT$b_[((KZ,[(";J%)himn^g>t3_"g\R$3
%p8bZ4N_iR3JYUkX4j="(e'758P!\F0k5X:(j.Q,ZMU<&Q_9Np=c]XAup&q&E&_[k5k?Kjjlt_]U^g13I.khA8UCrWoRIc,h!9#sU
%5;WFrl,H#9<*C,c/oJ"_2&ckABf8<6:eV<dJ5WE<.<KmJiRFk)[Vj_%1N)Q2WeA\aB.X2=/7>DJ9IFb`1gjS/rk:A^''Lr_dgd9c
%kT:<@@iIo0i/55ON+#;l]1@Kf3mQO8o*^Y7Q=k0J-C9p;GQRe&1tAcr*?CT0^)JDh`Hl/i)"c;3@(oY]\&!+R(5%0@ScVlb>N:)T
%r+FXMI$$YN^YG+0Mu5J:>GKP"4-TnUd%b57n'%^,M>]On@Kc!AIDhrM$WVnRJlRnKK4[HA3qnX(E#C4@%Jm,o#^Z=%h4g$[Qg`r\
%^:Knb1YUpc<dCgUgr;%TA"s;VYNMt,EJ]*imYk_1M9&m3@5r0-f=g1VTcW[6:X@S^=ut4qf0rrRL?n\U?"AsGnW0BETGWWmQkoiL
%L_Q?&`L"t9GdXR!c(QX&cPHcd?045/S>ht+=alOaq0mdiZgdJu4=042:pE'Z8]VA.>5]2NQs?/U\:bf]c,;IR1K94h4'\kQ&kQ6D
%Fs2Yq?!+/2CIZ&(q8*)uC2Kh8)!)SL">1t#bA27p@&<))PZCLjFtGHGL-(TG)d!!UZRjB*G.fBfijsDu@FW,?a0_;UA#EjLm;Rh=
%'D0VC<%%@J`Ig[<B!WCs?E=d^Ms4ia>2JporGH^m.Q4WR2g=Yohd%,B%"l4GCO,T7I>tMQGTPmN$E;BEJo49fkOT<216g]k88Fp`
%HSC!K%J199C0dh'FV`?\l)@2j7::&:bmK69ml+#F)t=b*rED'#;NM2_b!Ou^R/cu#k$mc1criJjo].<62<lu=IR?=Kb8-/2B<eaV
%WPH/_KSc>YbZqXVm3RS/NO$84BVWqoVQ_9"I#jl$in/72Sbq[):bTMUXE#S0$b^(*,$;X[BF7DHIJ83F3d1HAq>]Z)T;G>-j:U*O
%UMM!l.&327@C<m]7(ApbdFIm?`lu?PON#h@:T@;ko5".qD)&o?ku.ZWHc3n"6h]mo<".[b4UD-%%mK`%9]l3upc>99+XsnX`4jG@
%'ZBp<*Log)6`r@1#.$!?!0sTC3"#?i1#[FuD!2I)5RG<1A-]l!T&Z5)O,:%"GsQ#_2&7tW1C[X;BaU=EVo;O84A!.'_0h!P`Y$k`
%T_S:C8%d?!BqK'Ofr.O^'rIE9*q3slH0DHTRi[Rdo)-(AMYu32^5*46Dtk.q#HT\)_"pMo9ke1M]3s"0"IDZm-#qln:`Y7En"IBg
%7V.UM!oe$ik.i7O!;VZ7pkX+q\4;5c(@,V\7nPB!#Z/N(<_6qoWB[/p;Lg<!na4+_N(<$>T@BS^OBXotc&6VJga9_t==?L;puVa1
%>Y<G+J^mX:/VD#(M,s'G06b=C;=]Fp.,0Dc_W&TVE1GfU0DG&69:tBiq=&(NaZ:7807jXoF7Qk$T<kmlm@e6+!O&PC3upc<NQKm^
%jca,;jJ4/^c6(T),NKp8Uhq.^ed+b12o'*B6H+L-,_%Je;YMGOnur,icm@TM$ej!pG5&3%CFBiIB:e-rNd#i0:)aV3>+41alrZ>e
%Q31YS`^J&O%]6^f8l9egRM>?e]Kl5'8keGBT9?b/!mu#70]+\.M'72PbYX;<:Hcu4\V3=c0O+H9->b'_H200\KP/1(82[!hW0Js/
%R!`KJ$,-?"N+_Q>fPd[(H4$`[rua_a<>Pb#l&lJ&'>sc_q9d*No^^jUY$9=uh\L8`YqFD#_/9oV$LS!h6oIoJZn_qobiCCXSmr$,
%-CPdEkaQ!*RE/uboR0f3Jsj%OKL)L.3-,Z4!3#5;NnrpPdnf0*YXq`iSW13'lt)+/mag4>PC#fjS:2-tpBMR(J>lW@+<7IQ4Ht+\
%+#%H=*6:Q(e<Mfn;VBLb?u:L[AcV1;X%MFRDZWVP[tFq`iRUIOfB\<-dG-ibfOn3J;fj7Yc7E7H;^)`[n^ff<*R<&o,sXp]Lt5ni
%f^DJD05T98b/e'G`m)Fu\C#ii5)4&b6ruOb1N)a2Pm`8?KRC*p(.'C,P@6"k*QR?Co(Tlt(u>1G71k.2Ca!`snZX4>4]p!%^8D:c
%\F%co&%k5+=INiD6OomFKanP2@8L1."gM0f(dghFUg%`2YJ]NH>c)_:o6B[cnH$IQdXQY*OKd%uX$hi<O;EYkp2to$=g[G0Ce+3g
%GrY+6AE=HBi2!a!CHOT7_j@q=IN:Q$p"@Bh.gi0\U[,Q4^MYjC(bB8R*&h\u7+%H_XJ.bSm[?8j&FHeEc#&CK?VJ%f3Hg!DGAP+P
%14=1Xr.:tW-6IT[rjo1R5KD?OS2E(S17c/iC3,^c(*;82;rHf-2I/qPcGnJr0)&;p2$mAm1elbb"1E.tC;<0XaX:\G`DAiK//S!F
%0:#hqg+>=F2]F&QnX!l5S[G>m3-eeq>=I>=f\Mer4J`^h9bSuuCa0\[fKr2R_*Wu3%L_7jfqOCsn8%*O]>1g.bB21W+Qd6u;$"2u
%G,&6Y7d,q>lopdQ\Q`Zu!(ueW-J_N;ngB#+OtC37mFOWJ,W-BHFOotYS[^tNS5,itXB;Y]M]'KnhgZP67f:]">lB4Qc]<POj`U@$
%X2B,f\ZRa/`TXj@@=nUY%I"]3a#M(%Vlu0T\^*p\r4VFYE8<g_gWX^lH5trhB4AN67XI.5rQk3CnmHA5r]hQSj4Q(JH'[pTPM=F2
%AsK&3M!Sr'o,@r,#@a2`!,dtP*@F/\q&H[oQjC>T[M\k,U&gcRm%=FrLU8F0n!:l]Ca=iPLQNR^8'\E@A./!bAsa5\Ah-2)$99&:
%%q)I%;IUu*ro>[nKt5?^4A(Il+W[lTW;)hrImc%!cRS+'7NNiu6SKto-H^UuCr8%$jJLul@C%I%4AaL=4[$t;&jBufC)27G'lg"5
%J(P^$oni<Q6,3-'"ch6*(!5ZFV2^u<C^7qrMalY_>kJR;G@E7/_QT?b%-8!KG/d!P&WM0\QQR*i30Ropm^f.t,P%d[j\`q-7T+m]
%jRk($9?^NYh!i"tLCZNAmo`1Yd_qo5Bk<uOq5V+%5XUM<OF/BS>Olo!7eXQS@ct!,C(Yc9fMK'4kkRc#UUkf9o:3DS,(WQ4QL,1Q
%0rIc<5iLRG\lFD/QR?]5/(B>n8Ci+'HubNin;g26NrLsDS0]_N@N\lG1!j9;HfQB9A3*W-TSb#@]2=l6Is9uHHk9ZQ,OKL]%PQj_
%=$F[fEhP*u*0#4/50l2SapVafZibUl%.8qtFF"(Z/s.]h3MFB(.B7Sb?sc,``2JO(46Z2kWP$Y)K`t$*6qt%-D=d<2Cn\'a/-F^H
%eE/E^7rZ!SQ]q!N4."uL\R;<kYJ?K'+Ii,cP<qiEb@HCr]EBAI-Y^85f=goK:e!X8?XE.eNiOGd.P<^o+BL&SbK6?uVl.pP(&#2$
%lRE0)f9MtDe)-M%IsGhkSt`itI.(hR\696Bk(L(ciFnU/PY.b%:a6-FVa=>WXpsOtjN&iV)2]ZfnRP=rgrgAJ4-K]3HZ_C78!i\e
%"IqK+,9DN!bZu9BAK/Wd&\%ZR^Dh=@"-A,H%0[\NI!uML*Qkao--%GtibEiRSGt#j%\m`=lLF2#PS%(6+=1e`%j$[a!JGE5nag7a
%Hr$5eipP+4#n4"CZ]r_U13tB(=HFS5(`^$+c=h%)-?f"WP7RpF4`^)fi%hq>h*i;GXZ8f^,&fK:n?ml(iLLj)j*VZ'`E@Xq2c+,d
%NdTPscV*d#+3\>J00W%l!gWNYVB$R91aVJ0_ZIOt>.Xl%Ih8Mf[e.<-@7.auB4d4^G"/[BF_EimD\GSa3'kgQV]gcKi2uN2-md'-
%mq-V$RCD?'C"5o'!7<52ies]2>6aNIi5A[L3tjNIV/l4*nFW)0l9QhD0MOL/co[$SZ#k?V^-0En@m):#U9?t"#02>U7[o[O(qi@!
%%@loT>;8(.OiP&m+OcYFF;>4jUA&4S5ZtVp5?MmDqg>J`^d-+m9uSli/FDChlK:$@JDn4m1GHC^;\"O/9$U;X^@Hd+=PaeT0#TA)
%#AZTR"^66O:JNZD+(;"(:3#fH;%7!pVkM7#J*#1&4Ef'h$le00S4,.jg,(5OE?VM%c:J5rcZi:[giUH/8p!TVi@j[W4%C?6`CKi[
%UJF.iBd"+9mM]ZeV_6ok)uj$.&>!h<qd8r8YDZn=^$k3BdW5.p$/!'mS`B\7[%HE(SKh(2,b1A.U1H+!JgR9G%JL1Bj3F1gBePUJ
%`-7*.H'TQs!(J#oEomq6=[<,e1$Lo_dAs/og=Mgnb:%7.^73CK,]Zr_-?</b>6I.kjB=!/5h2cOP?u^]_<0;N$p<@#js+D)c>`[[
%Or[Obbo=0=b*%ZlR<DAo5)pDJf_@Bee`Yi_mQJiGoZ\#\hGH]:Y)0rni7R7.l929c-Lmk'cL7n_JK8YJ&U_Ms.?bn`_.U_+:H*og
%,V#@KB#VUE)8pKSFA-%3bM%&_K]eB$Q@S57%:]q0]ItJHV]Vg?#gc,9TU<HuLS;8r'jV5TTKL&38d1A$)1SG!'?Ss_pjtC.D<hO^
%.Q8D*YBcNM;RFEq`(u#GY@3*eo?DCZb(j*??,gmo%>!J.e]B:CGFO>-0n4jeiPE<adF3W.0)RKLL7t#=I@V"3s8'nt)=3a_r$/B:
%kJ:0mX7B"c5L.B"rr*?8OtKFo>_r,Xl2/@@Voip*nb/#[<9E$$i,]WCqRVD"CtEaWo\`=_,sh%hQjPeXd@PgA+1!orUeO6]Gg];Q
%L5ra9RYUMJ2Fu<FnN>u1fd=l8;4YZfaRt.=<]GniWRV',QZCJ<GS55X4*U'5cb"L0VXoL..]2RCJh**m$4!CFb*2J'kW0o;a+>kP
%M+YRS7`Vs>Nf89eCpMJq_Lj;N>ooP1K$3<4.>lOFG[0^Wop/n<`Nc)^5AlK5Tp2%^6B#-<LPO"AZ-3\UiXISD*2#\32)IgL"nM/$
%<XqIO5B<u-5<s0]QW!*9A"l`3q-!FnKncTFf4G0qJ-,1Hq*rV_KgrYJn6p2]b\/?C8g[Tcco3.i*L1rW7h)#OTQkdLT*+)Tj,Jf&
%:P=&f5'0$[gY[`R/&uTd"W+5hVV:>,HB7e/\uu+`-h+XRNr2cInDE?IQCZB(%WU$!T'Ha0O*sLK&"2<j'g49qMiELaUKD.g4FJ1F
%c<88VqJmEk2Y<71IX5JNAI:c<_od/5*/rWP\S`!LjBs$uc:/NN&cOcE&[>^<;a=VCbCJ5Y95+!Q;=ctV@\@pKDgc)ZWB1XR?MioI
%ZJ8;i51*[JQV8Ob'7?APqb4k!@&/,-YQ4X]eQj\aG.?uX2NU()(pkOmpisFiGA+\EPSoWOL,Y?VV!9]SiE1mb:X#[pJ/n\s(Z<jI
%CI[!!2X==jp?5"*'^4"sonN5nkgh\@B*:W+Z/19FTTa4.`C@-fbXQV*"r8)D\']rUCf*J&Gu"1A72'17%"j;?fa0tA29$`l-LlAS
%*2#8[-8-ooXN:ju6rD*7!i`WK_X!j9PoA\2i0j"1;)1aq04N>9VrJZ53X;6eV@,;@TTUC/%mn7'!EbFhKd1@r+(OXn)%K,)PJg>F
%$:<!6oZ,=afBFhM\a.oK``>[I08=LiMhiidC_'"_pdd6qF\rE%qKjS0SaQjP"pmR_:T7,WC^(FeFYOXI&^KmcDar".$B(]Z6h#9m
%HLae+JafHS$?%US)=M7g2B29UX7h:[%Q't$(&8am%it;`k@*IYIEKV%SV/6[gGerT/4S>.XqF2(@pHodM7#)rN",1%ZjU#8be59+
%=pp$qg[;\^J`2V/Fll]8qism]*OKZ)@Z+*g_"0-f,uGitJ5*hnaFE1BlCA5Y_dt+:o1Z&KiM8k&7LB5T@:AES_4O2[O.$Fm7WoUp
%b[!MO$<)$g(Y6]C=D5P2IG>18@9Ugj-fQO5G<0UQdR\nr,c5CqF";_<1a"<5JqZLF%'mYq?3#p>E6@:TMrW_GV#-i3p=C,JYTEe<
%O.MXD,YDGL-N>gYVk=FSbmY3'4%Y#a'1V!+i"'XCQ;<STN3)^V3+A/7DW2I?:''14H8EMq&Y4HHRj(&4D]@`W8^*1G,Gb)GkI+)4
%!6gL^^Ps6gpi.hF\e56jUDa=+&4PRjl:8?ki'Fr6ECSM@O6,HO7`qIj>0TN4?sVGB`X(f4(6snJ(hL(6n]FJUOGs<T'5AMWl7e+S
%p.-lhrZ\N-,7S-+P%e9eA#3EMR.5T4N4-:a"[OZMoJU*lTV=bB@2]W7$nJ)96Q;u0'J7[0oU[Rc;NAPA#OaW8:ECI,eW*UZc:7K%
%-K+u.eqY:ajeGJOKo?q&h)Qo+l;EfnflnjFM4QiDhh\^-U'>Is%@WmP#6Tu6YPH'A]._Ug1W5o:=l6Q3DD7AhagfMe@c/Y.<o$pB
%)Sj9iCsILcXtLGH3gROHZ`Qgn<,Ef_Cg=BPEeumG<B<q.LMUMA]6H\qaEaEn&o/t#PR!4<b$lP(idm@i,)(-t`7EuH'uW0--\4)R
%*X4ff.KfbbMZSl5CGhm-3::NgZFm)d2SsG6`HKY!Ns)q[:SO\<:HF?ofuRjtYqq=4r&)b0'SA$*l;7j91?(XZ6*i4j7=q/^L5,uT
%*O`b>/tQoRYT=Mo1hLab?`sU?)9P8"E<TT:1=]hYg0=L4S6FPtJ;[2'h+T9%*0Oad_?ER_7N8[$/:2"S9I\%E&<q=:MG#BVlq6!d
%?m.c#4QO=5CX\t<`?c#<[0pBi0VZ/^2/nG&nlX,Q>4G\^!@)PB!(M6b"Pt!CbGUO`R(!U$m:OpY,?1pkiL+p]=>Tn#W5EVh+F?a+
%i*qrqlI(JTYomeVDiN1NQrr*"T!G(0N'.Fc!Qh;P&7Bt)4`b/-mu9(S;]0QE2b'bC#cKG9'Mb!S:i$f)hj"dU#q1]C"gb$;3LP70
%XkF^=\rGnrMV@(,#eFDhQaOet&R@5,VP!eZCSQc-YH0=YN-7ng9',#c;5?hnU*$l8nB.[2V]`t<=%8iAghnFNPmr"3A0a<Yh>GM)
%UhZoj9-YRJMpuBH(m-V-#<V$7ei$2I,pX\$7QUr76BH1u<$KqpPTuQT$53p+QcdaTlPZ%c&UMuAdq=%dU;-AqchM<EQOfh6ZgtO]
%!`KrUi+Xhfa*V;!`B#HRlnb@f&)PdNEt%H\f.DsD#@A?C9<^1?(3<n@^Qt/4oR^.6doKTgc'rT^1i;-8OZ`pWS,#=ON2EA\17A^K
%_J&KU/"=ZJXGeJ2[P4.UiQ>hSW[jjd4g0ek8&$aHYDeaoFSW"sVJC!+>$Qk6,J%%trOU4j1@''l,E^<UD)S7MTk@sg2]EKr1.9rR
%j+^b0nQd'07aF6-mLCJ:!8i>IVdG]Kd:8Y\Lh[\[dDBRWY#\"skRsW$mu1dd^G[#.W\'3U3B"`mAW4g#@NZ"P=o3cHd3becej`L)
%Lj*utNHRHuL[^_+GC$eK?G=P(orq<\18LOr'H!Qs)X?6Br0tkH2cEO4_u?NrJ$A+#O\MAMM.FSVL=%a6FW$0NkFH=N&^i:7Z9u>=
%.9XAD$=oY]^D3qY'l4TRNfE68;bP57:Joj-86$;'YRsA(`@)YQQ*>!%?PjM\NFnqI/QAgbN;KNd5`9d41pKLU/e`Q>3*$9QAaucV
%?Ug2:BXFj8@/qdGP-k_?A)3-[4H,@[grn0W"k";1ogmR\_(I,EVCfdG[j^A*D<FOU\V@'$7_/CXApS@O9,N1bpS>1WJ#@ukBJ^dd
%-^IV(82rsuJD<]Wq`\t.-O.9ea=V0T:b0tW7PLPnor`PFd;eA.M&R7j=qibHE[C$a/2:;H^./ZE\=QN(fmj/GXh2ZN'C]\Wjp?od
%W;,0)^I(UD-uD0_k:3E]:XuY)$2]Vn-s]:[aLE;FTd!9hHg!Ld7mfY#etWXrn]`(s^O91HFf8qQ$TLQkVMS6kZb'DaCSrjXXq<M3
%ULrdV4fq!LVf;0PLhgo\%A^jDKL^YD$`762i&9[C<5AXuK%$ATA$Pf:fHf*?$I?#?+Y+Y<8PD6V4`JO;"RtD"c!ERpb"Ik$+i=M+
%os3ih,(^rLB,F,tNA29Db'YquZ&saYK<c6@dT=&-6eadQiC_`NP$Q_eV_GjLP"i+?p]:t!"fCu\Lm!gNZ;?DE8M[&Wo[,Y*EjcZO
%.(R`..X>]Cdqti3HHCYb'LfruB!9&MYRsjRC5](NOhte0a;YL"QtRrBO<W:+0r\*@;7rk6?2N0A@&$b]\g:NG&rsjrYhdgU$RFUU
%V/P.2Dtu)%C<.AaV5hsW/<sjCY(@1K65AbCBr(N=@cDVtS:Q8/=>E<7OO4<PQbc-kBpZ\M^DXpt"Hf0!%LSFu]9NrO[c\)JIad:B
%0WL:U!RbBq_F-\C'(^pVDn\0/mXW^H:u"0m;O?31(]hN%=C*+`UfmKV>")8h,T/?;UiIe?LUfX2\77uuM%31p;9<Lul2i_q&*V.N
%/`[>LW+Ws!#c5@:35/cFbF]'aEfrhLoU7[A+oOqs/8mkh(%9R7;?VkKb(9Zlgl1e9p5\Fk=/KuL$1->Yj4aA67Y7eYWL\A:H8*uU
%`/$F4Wg7(K,Q^$QFQIR[`tBN4j*"k*]Eq9+n[Wa>e`8J!P1u`N:goXYTpGM35DI]Af(/8Y<=bj;B%CU<fC):?\b#9Y^ip>T4]=om
%7aI#mh\'+@:Pnbf9s3TPl1,C74d$,B7ZX'-cb)a)dj+g3'.nJHRlj(\O$r>N1lg$B-d:9oR(GREM_&QCm[eJBQp4''4[(B+r,Qkt
%H:V[3]TS=l]n]GtI)87O,REh9Tm&9[!d7bKG>\TMe?`ruj6aS0?#^1[\AY@/109]\(X--U!*#WfW_p(rc.rK5,jm;=dcBo*0&8<?
%nnVhB+j5V]#\Te?M(?$3=I`8Ik(`r"![7aJ<t"DlD(0h^?*[No?'"q@p?O+7<)gX;8h#]ZrIXX;)]Y>87rk>!Q`b%A*+AVVYkf%Y
%`K'-'H][&TW4X3-c=5T/qhH4#bI)sHS)(#0OFrXb,34dK,#$StIe4[U_O_nR@2]:TC1VM^r,lA0$)Ad?03h2HbE^s/[M\u;-*WVV
%(k8"\(qPXij*;s.^=hbA4MFtR=N,C(P\Q(kD;;1N_=$/q55P28L@XVd">s(:Mc:O:;>k8MXE$Qh:*V(ZbeIJj1BBo[</gpZ82mB6
%YOLoFcem^aOBJU3D]]%R(ZOO6N$9+;mTG5FaH=IXJ.Z%OXC8JM9\8mfSI=ufIRG5!fDWT9K9+7BF11NL!1?I^7S!dJ@Z*aA#t_Vd
%P6)dt%!T>7q)@1^!0U1`FM[G`rtQhDkV\<.PW_AJ[@0\3;>^LRY/ZH`Je?@J!I"Efo0F.qs85Dtfhgp1eSCD%qUY*XlSXXd/inS<
%U/6$5)+B(=.#):!#:b]HE-(hH(:sA;9_*4th:b]9Ut;.mpb$Le-nk_@,Z+>.@678)KT!;fZEPtW3W*q=<?&oQp)5gh$!hsG*ajk;
%<#2e]Sc2*PhY8rF1(8mNJ,)Zleg(h*l&ksq9b%_M!-U0*+bU'_QA+LONS5;^";gY@WnUB$^fMl-^S\u[NfG\es3#Nnl=Pi(6^og%
%N\tl1^?[WXmR.p%3S@8TM.dlB:8R((5lj;!]o*uaBBG/l.T*dZoa"TVD;FmVCHEM%$0Y@;'qGQ!$Um>g1\;5q!VNao=cT%=@1o(J
%_7m14Si?L6P6ch3\pjHHeI#5+T?2\c++Ki'.>c6e'H:L:IF$s+1qKC&/%7^*okd:7ZMPK@*eV4W'!0,Qm^L@Fa%anAnL(;:BAp*.
%g%'+$ULRJW]FS2u!$XX6#c+-p>rEfBiqV7jNPGA3T,rXAQTKTgr,1$2P&/?_4%dDM4`RuOc\6rg\d3#0d-HVQ+Q5iQs*O[jVbm6O
%NQGJBr?D23;o?3aX>apk!)QN1A)U/`5!;R9o'aid9qFVM]LcMW,+/!2=YE!RK!fjs%?G9hc(eb\0QU-Mm-\bTiiHpIHML,aRiqm[
%N;TgNRaDp;G:6C9_6dSu&`ROnh3-e%nqdA9@DnEH-#tQRN>mi+e"R6`=&%&!Yr2?TpspNLmI$<&$3"X"%:m/hWaq(-$(>cjU52b5
%ijb#FnJW@;nf6mT:\5W\fk<&J$0i?SSAAPd8rT0#8Aq9E_%(^R/F#pB0%C_HI`ni!f[!8\*kD:,%%.+W.@W_>Fqd\.ql)*pFlpo+
%Y639];YE79ol9[JGbe.Egt-JR>l8A&*L`c^LJ^";eS*_#/jZ24_Q;]MY*@+t]QpeJ8AB'EHFDuC%>Wi8Baa1kO_i1n#%ZO4,e-]_
%kTSV6..AR$!aSDobHb;D^m>q;DfdGZf&FYRadkLfF<mBD(6aWe>GKB[1]n[ff8Adl!k)63HdWQs3s0M!AFE)%>fh^RD+Qe0^^Zu:
%:qRsY0,SneotCP01W2_D5QKRD:mPA1bk+c,@g@O*(BS\4!g4\JNZBHTV4JSE9cSbM#m[9\GHqgX&%'FG7WrASUOZ3*d!uLQhuPUC
%+;$eVKaXd:!dr?HNb`e,)N:ZT-qQ%OSYB^Z)2)Hpe-`/VR&Yi3!V=__qUYu611OYaTM]mbiXpDN]$qUU"s]&3K2DsWM$]r(WpU#g
%Cdpl"*PnoBSf+T(#4OomZAC[01t$mq]^Vj[^5BbR"$Hd`PZGfSEuE).$T>:A=Td&>]7aL<3=no@30ast!*$a,SRZdjiS;qOa8<hT
%5.uINVJ`'E@$<23COt`]#Vo3E>X+BdV8K0BmH&j@PB$OdO=;j/E"WK?f[)K7oC+R(X\Wc:"$tNl&K+'b,uDTS!Wo/G'G-jH_o##c
%nZYklo+AJ>ad[gLY[%g@l/GDE5.e><_ZV2l!370g7d^geKA$QDF<Ml7(eYBCdtR\k+\4am<!T/j)&S8JOL"p1`a_b1I*OK(h4l.E
%H44h*1.Q[51^(100[@sSQ[#Hd%7Ui9E%1mgU'q2Q0_R5*FJdQJ<]gAWc",3l=tpX"<d)j&phts(T,c_R+*c(D+7/R\J2m\/E/EWU
%jp;!eE1YC9g/dBdGLh^UH\mMe!:`&cFRXB*B]=Otm`O9;=j?P+/aq[hInna'fq0XMFS-Dt?-369KTkr.%[$r^,N:b<cL^CD%$0n*
%-d^a.1>j'7fK$,Hjf(:\pMr3kaU&ahDV]C]nMJ\Z'ekeTQ]89gFeR(0^niZ>EdZm`ShU`,4G[dYjQTbV=7U_T^V%&P;eY(r05(HL
%s#YJW!uk7@+QOImE(h[i7NHkD'97l<gl:t%QnN:>A8oKr!'89i'$`Wr6.8GL`$,p.!Q-RPr_eVGLUCM7%bCV)Y/=g$,`::qV0@^<
%IbN4'pYkT]1[fmC*_u9r`R!F=hL&q\?S_eZ['m#MgSER,P"`^#a#6sbX6pX-(%Ui$]?,\t3dmTr\3SE>>72,QI%WuT;/(U3fci0Q
%_!-H^%hMc';aN\WRFFsSL)O+?>t,XKh_clKG8nJ)0-73`B:-;$mGRRH#\G/[mcAj#^/q:C*dgej.6!3sUsFfnCO2d$n0kGa:ORZq
%Sk\a1"h]nspi;uX`sK`39tND&>MtWZ`BHfL<Nm._XE7-\)n;6peUJX4V7;I'*JkdtaDg<0%gc`!>$Vj&nUcI8HspFFW10^s7L$NG
%Jq6?aOL+pk0Enia24C$&.\SM48)IR834,%Y\08/s2'A,bDNCejP$FX,IF75sq3*H,kC`^'H3Dk!nncf!EIB^-n?si9&)+G$[Y/^C
%3OYpISLu;0-K8d$j#dm_W(Q&4dj<%\J@$mfUB5"1VRn#\LP72VRL9H*@>W'B.M?1?^oSZ%7pl.mL]"<Y4a3ZlI;KeIV*]+#n4;4u
%:)4LR2msZ#jCiua(GoG#JpetSj!0-SBgV!6hBRZ)\-k\XYgP*\'L:n;;dg8MoQtO)0GrO!a[+((k@742X$7e[glAI#YgiA(eTXtU
%*pMrqH?tY0p=o9VWqMou7JBN1Zj5fjaQ*V&O8a^s#J^V1YFA2g7VG1jmU[^=3k,n3*TD;rRD#4"p<BEc=-:^hf>@lT5S"P6P8,&$
%>T51'%t1c;otX0$.Fi3aPE!pH)`&4a;:deOa%^O@:0Iiog$*/SE+SMnV1VFDA.P?PXSLM>oPW&e/[T&2GpFaHUp(cRL_Kn<J[UP3
%2]p.i!:2C[1@T^*5-KuFUikQW5L?r=Si-8U4V%dSMp17E&`m^Ek8=/)pW(UnE)ur67bZ1dWr\Mo3F,r>I),Ffe"d?mn+)Sm>hh2C
%n!_`"p%KPZ!f,:GpF7J)[DA.+T1_`%Q))mVbHanPg:U_'r.U.9aNRBQ/e/c=]=%_)oIHk%8_>%M/RmN)hn<m!J&5BIA[NAXAT]^d
%'O>sVm=;dAS=+RQ]l>3`kHW.LJC,XI,Um>XBdkOE=)S>f\]X8p(Y<>I*AR$shY>pbk)<Pg@A$o19ihbiM5FQD@NQlKV'+mIU2m5:
%q=Lps8m<o1Z3T(L&t/:nU:u`?'c_S[%p'n6\BC:2NBUKa/+4PkW@UE*ma*0d/4?2!_9YUP>oW9ZU$&*h%npCq5[ihnKZ[,Tj5uHQ
%Yr$Nj*+VY#%J^<8D((=$!KG5O5@op8?A*M;nAq(<Y"gGebc`Dk8j%*!m?kOrE8f7Z:TX6.<f16:m4d/Rk&Jp(8fpibisV.m@Fou_
%JJfT1!$?EFm]eZ9];[u#K;>BOS+`D4'FNk.7e!>h^&b;E]d.2A4`WjP"l4hn@>HPpUCXli+Y"1on3cCgi=$VWN8CrL'sil>9J)"l
%&TkCDX;)ET,[jdZ$Bc0uO!pW+2!A1@k.6sM:pl5DE<.(IXmN'UdWPZJJ.BAdUeTQ2'eMd4a^?1+l*@;OmdO=^*u'T38IjNdb[/_%
%303$8,Sp\TVV2=()o_J>Qc4VJAg:/WcE+4POf2du[rC5/R@=sN%-01d,#r8#FJT2QH`T/CR/k9RQHr\5.qtk:2N!)+LF'_a/!>M$
%i&jnPi@G"q$tB_a+i(j;?sqKBASAsN2Z)2@X2,(:;A\'rN*=hl(6:uQN:G7qBfnLJH,q%PG`h\`IOonJTIk2_iD$!c\u5*0*"rFo
%;?]!-fR&nE*?=I$RK<@8b'LS)!i#`]7%l9Kn,kY';1T7FOt$dp*#RAGOjdICgs5Mc@Kjt#iLO:A1ANd'I[Rp!=6oeSh7U`gg`l"P
%XPdbM!7o,H2P.CD&hD6Dkh$6F9f86DE@lsk1OUe)JR/_t*7.X4HgJD>R0h+LSSUh:GsuT3@k*26PeI1O6;."*H_&2@md&ghG(U-E
%=<c'LE':t^[BH0ol!14FhV;[!T,8nJ\@(B[%'O!hoZ;prc)TdDK+[P&HOI[2EfFtm^r]fQ&iZEoT1dQbRLp%L2AL@u/[bif5H4i]
%\PAoHq`$L.A,AXuJLRV8`'WUdm'1+(>j*#<d!7Vb.8#_k`;+#s8o'J,jkS;VeT`DJ4#0?aYjjci.M+//fEh&8]S.Mp9C#!D3AARp
%W,kV0b/M\l/3+ESG+fl[9)2r^FtTa`hgT\8Cr[E5/E69)Ru0^TPo0a#9R'A^Qcgh^$g$oZ3UhH[qf8UXruS#HV_R+F&H-n8j=Zh%
%Mo"0N2uEblc96^Es&#Ki\#@YZ,=m;,?b-mnSV*<pL(PHCX($>P32LGK4W:_]2D6?Z0&jD;rZ38K)AU,-%^,dl!VGN3!H"!Z3<5&0
%T]Gh-c%H+fNAjYlc"+j1Gj?Qo4j-G77u'@&Rd#M<&3K&C.iSXd>fu6*91M;*+.E-h'W@6k-:ECq("[4L,BAouhFst[+<R&I?&>Dp
%;*\2X\5P*2lgr%a&;@c&4K.\u>/GJlP4]aUA"?;LDb-Q0bS."^.#^-D'K6[nQU+*1H%n8_X3;n;?k4pb0$_aF8\Od[OYG/nme$J5
%>_!*gGq6Dc0IM#?!P7>CdlZH?jPe&/0okQ02NKAR1=,jEiD/d-RMQ8gDXXZLWkb@dc\]rJ,5t^27QpKc5Su6,s1%0=rTO8"s1GBB
%mAaiH9&m'tW2m2gl?rW@..KI9HOj3t&#@.?+`k+]?&ZWE8J5ZB,UplT^(RCqN*!=6aVthUfHgm>8NX`1*O/HVg:(ldlWc`I+ZL#_
%Ld+Xd1[N6JR?FBS_)Y(j=;XM`R4bpoG_KU=3,s'%FbjXK12_l<J0OneNFgJ4o^)&]P%#M&\;_mg#cI*ILUhr/h.uZS!U+^"V]@JX
%s(h&gH7V(:/)LZWJ*7[MP-JodG?1i<.'*_g+i"IW`qiCPUp3Ue0.E"4gA:O_-aGok1@j:ZDON_o@)8FkWEYW*)&](0+FH<KA3Ej&
%O<'Fu1bK<P+Vb147@m"RWkt"mY[gOg@BUi)2?^'_asHcHcb.0$'#HuPg+WlYi%a&+Bg4<VEB'YJV!A:(*."#9#efFbCJ1"VP7PY9
%3`cnYEl^bt4WJHedX%4<S7V)oAV%0$DJ[4[:7EP?FCJ%M$[7;R^ZNP[F5)A`&!#O`"HF$C&!>/ZA@[8QND>F"ho/>ecq;W?i7E(f
%asFt24Y\^Gq/rL-:5n^g3]%C?*C%I@:?Vol&QhS`]IY%Hm1/&tp&067Lg_YZE'leDYFI8,#\4"9,B<n=45@n-*V4knI)OmPe5AdN
%K$eolcFYToeTIsh"=O(YcCN*`FOf7?`%X(:Pi77uJ*Y1J2=N'E\hX@gK-Ys_Lq\R\C:^QOr[]8JKBs_o"\Q[rQ7>%8jcdad+0@kj
%2t^c`&!N_^oK'eCGI[Ms7;E5%#X=W6RmZHSl]=ssU:kJ.7=0qESTQp@A4uL9onO\.:B,36)[B`R+%Fpa.l,VjftW,K$.iIQDDbZ!
%ZAF.n&*QTJEtW1UOa(J%qU"u_1*:r$lCd6,EQ#I1d27IIM;p@>UU,E]$XJ28Z0E4.?hDC7$4'K_m)<o)&YRPF[oMU1&2P'V08W[F
%"Yj\$2q\9Xb,[-kerQ"%Qf?66d-2-Vo<"PmV8<>@$:8h[&M/^$0/A08L/`m,Zo*6m0^<=:oR$^EnNmpH3A*gGM/!!+MI9Q[ag%hk
%BMaoJ#?T)jDI<q//lT;jM`66*IThL1JRI8l%%/9A6$Tj^@5!%sM3If]U@k)6oZ(!ShMb"n#5S<<G>*>%;OMY*NJD*`Gkd5!Yj!pX
%\nTmLd>g;!ZKV-XY(;I?)MoHKKmZR7<SK>_>0UFp*V9eF-V>hEc`@u2jfK14`_HPtO`@2+D9Zp_Tb%^FUK`pJO%`XoG%D=jd-B<D
%GI)<.eblNS7dH9*Ekf,n0A#EtgZ](q41/rFP,?E^ljb^!dEpp_]qb6c]4\!#SdW84h+^?*VAn_K%V?c3[RP3Xi#2bOOE'lp^[Ug7
%p/Q?c>8r`9#ZiF[ocUkWm$aM%o%&+d4XbtbN8(._btss)N_F&FO9(:q8#E2N.N#-glfTu-V=8S-&5%eT1D"]/m*]1e.3mAG+mRk)
%VFn'4^mefN"7,8MG*+aD8-<MX.)pON;(k7W<>l:slq&EpkPUmrWg*?.di-YM8`F_&.bL@V0>^%'FdKkTALN/<jMh[[45'Nm5^m'S
%g0o_#!Q!&k<Otn+h+:qlD/1*s2tm+7asD@bs#Jcd`h,^UB[4;h,a$b.&!F\%Ld(iL,(rdQ'&"#L.#J.g3Fl1"*@Kbn"2%WPoa*=C
%--N9pSF>jrVLM&SJ2AFl]oD,]ThlH\8<MrXL+m%"&CWG>Ps_n(5+qf*qTWHjM?_Q#"f,=7pIVD5HSH^.4`=g3F`P,2Pod9"8=QkA
%R;L+N@(AnL&\t$/BBj59DKhC3;6eBSKd*CfbWi?Xq?!m'&rT>-UCtf#aeY:.(&u]k]5F`[]"leMRI/?50TJ=7mG"J24@]K9"X1k^
%ZIB=T,8\./UY8;+%OWqnW@b[g$cThk,Kb6HQOOJ&-E"I*E=IL.nJqE+1d+0N\(.m([_'t0kLqP,UDn_A8P_RcFk&%h-iIttB=f(i
%Y6`.`Mq"M4F$4dKb*[XJkagUiM$&qs3W=hUR`,Sr3rOB<&*K?=R:e*ED4T^W:S;2aV[8&amT)eC!95erPbGJ@g0ofIp"RHZLO$X+
%*l%0WRm_\8D%.pRNu^VNKTM^2GdbrS>Ni'ufc_WQf5UA;HECm?[TF!&O;-*;F.+,^J9jQAq>sf`FuRm(JE_d/8B]6a"M?tU'/ApN
%Vn]56(^?>2m/gn)#+1*3B=@p1aUfSUFO@7d"/+:HbH.L',>sNeFp-bpFWA4Nds&si/CMG_@)*<;MQZmg*559.O^0TUlkZIn;!C/f
%(c,m>r7*+k)jli%k9Ud22pkX61sdD6L7F7VHKhp]9pN#:D$eO(OKJG,jqCi66[Ps">Ks3,r#A.CEGR\HHL^A(]\N%H<Hi87e"C+3
%2#=+5TU3Z8mZ5VqR^ZU,"cWamD][aAF.)*G?rjaZH1l(4<hoTS-TFbcpV>%$UKCR5E9k.k=bTm@S4Zt^Y][u$m_`46_NW+_daH9'
%>bZ2?WG(K0@EEOPC1SsW6mF-CDL0:;o>'ViPNYR!P'IV:#u08*%\:Pi?h^NT,VV<Vp,ibDlm3'W:DO>3'$bS^$T0cEUN_ni"SW4Z
%GULrBf0At8O[!bT:PaN1WI%GW[V:QNf",i\=Xsd_-l:;,a;rp9k=nJE1NF)@>pkn\S'HjV-a2.d1jhN).,W<Vhss>^@uB*PjF##3
%&$d`(EJlm/E5OKm:I=#\Db/Sn7'I&m!@\)T-7DR5fQs[D\KrBu+=(0R0lQ9o?j"8moJW8r&GXtAb%INr6@^&1;%)\e]fLkr+4JqP
%<U8rQ@QJ6.A\?TX?"5,R>>jgIrs",nXG:.,3FI]<U_<SG>#jA_&c.<fljA*96FWg4Zn-;=cjI!O4WmVUkAXN/!/doSZ1Z(;EmQ'\
%S-QsVfp^!pB`ej9:![VoCXRXK.JdT,Sr4VB%F+sUpt8nuCP*(*Zj/oBbVm6;"H<q(/VY.:lX+ut.sgk[F!,t&+=G;(./#rF&KQ$I
%6o.tB(p3#g8L4gr,IS?"hMV&I**S\e$a]oA[F6?LktgAogP6*U>LL>.KZ]F6F/@9n"UV1_I?NSi]R6V!iKq0A6%f^MKcXIB+<6a`
%[ol?W2L_#?,Q2R%huLkE$6IRehSbl0f_,[m'/YtpeA'>mU.HO#1W*T8gricGO)4lL?3bq1pok7Ql7NJnBT).g_&.5`;$ha]]$GoR
%hpJ\2b5q!T8%JtF/`Xbam?h^O9!iDC-m<ij]6*9AhqF9d'';4#H,:!jKp3^':`B^/K3:qnGjGIBN-Ebk!2/DqI7ZrHLL8CC#nTRt
%TZ^+;VJ6+CC-qk\5q#B5^i)qj3s\7Vh.YLM(`RFP_NJ%>!c?a`62+aXZ"n#K?oK*P:c*8g%G]4V=&Cd[%SiCp@WGS'kQ#N-?:JM;
%d>#"a_XSmY<0^,Xq]lEPTLFeWB[@%S[(7eX=S9Hk<+ea<:!Unue9%OP6FQ<+FY]0OL9Akt]3/3)s6bZ-TFCcZ\p]r2KX9#ZP)%G*
%qAZ+(0#Nj&0WB[\a3_U]*,.30(9;(M>2'9f0$U!?rU5HciV[ER)mqC8>IurF]q"qe@Qi3%f=aY>nlT:s`"TJ51\_&3f(>6c>05k'
%e]/[hkBg-9?WDrnEM`0/f*PPL0u00&ik>l;%A.&m#us"*4`<sWXl>8L.E0fn@VV.<Y*6U^E"3Ro(orYO\6=8pmF(`("/;*1.W84U
%bNdq=[Zsr5<,@?9FGpZAk'ES?)<t/<q>`i]%-cfC?/LmZm;5-Ms(Hj-TfS.B0a:,k,N]oWA1Qi:T>0i&pT)74C,J4IoaV/p7@6+]
%kp4Y:Wr001(S3l4k,LS3h;\hNFiJXfWeqb,;)+KichhcV#tNs&],2C=rA!BR4^RH)G@E@&DsW/)r=YFY**\oYgCE$"kaIH\jd9<=
%jic5"F(OV3c9Op,:M^;Siu<=VO:]WaG>9!mU6b%J"?6ZLFofa<C_%t+JGEbn!oh)]qZ_C*es+`C,lSnh"PusAiaHd3Koocie=?0n
%b>;KFL'r=2hfA<Mr@6f,*)XGJd'/2>ARt*H!2,d%B5F!GntiEN9=BieKBK[O]X\)27><+cdcf3Eg-SNG,6&8M#,a,/dR9,dpbKX4
%C;g&_JoA3R551D@6NCQiPPm6:>XjLR!Fh]imR-PX.uEL?1c_:KF_NS^^7c7<h-)pinRIF?gj3S%U*uVTVq=H"GsN9jT(uqk!*VLO
%95KffWcl(S$/`i5V7_Dh,qcu$heQ<K:9jR(:1E&bdYQ\*GZ(:O2=6Z;nYWuK(ltGg>MRUWEq+->`YV3.\.>CC[%b2@bDLU/h%O=n
%au8'Bed3`QUa'_38S<R[qNEoW&+]@d7jS\9bW0up[q/oc7;P6D/6(T01q[i*]k#n;dk5"2kk2t:ar`-=6!A\_#$VEi^E/$<E/s-i
%DBlAj7*B9'TJr@oPH;:GV?=`0E.7(CfsTVFjCaut<ZHHID)uDe'df\cZKnBZ3`EZAXRQ[!?bFk<@\2?PcBHPYJ\S<LBHJ._OFmWE
%bHM^`(ni0u:a6NLpSf?>=<,?m@ZF?K/26A^+s<I+&-a=Da6A,U=K6%h%=?c-1GJm8C`,;G%I7oe_)L\3C'$56j\<Kb,ogNT3<J&+
%^r5m?2GD(D[`VD?DW&qDeOGi-)9<O^alITD:PYg^pN65-'&VD%!pk?Q[VA,HC$roSF_A+L,[@db9K'pG//WfqZH!809fJU\gZ^Ma
%j#c;AM9?YKS'i**4$3]&p2hU`N=D,sOIdF6*%CXKLOnObP"/gD*5G"+]*IE3=YEa<YObeu8`+A3"*=-Ta0I?I!!j6`qr[/k9Hf$P
%-_Vtu58,PQ;CEmP)9^g1<W/=alQ6,2J$RZ^5&3X<RX9.b=N]Qr=FHa`AXF;u00';E%'P)Z0p_n)m#mAe?ZfKr/V).]M6FP?7/pns
%o7rGAA>lA?XDUrqUrD)7?Cg96*SVXc4GddW9\O-j-k1oECOE*dZNbXk`Dfr;qBqYT#@K,='UsuGJ:^/5FNZLK!XYU^J-\/7f\Fg\
%e'.NN7D:YFQhu@fiuL$Kk2#&B.iQ<^oEG,J;5s_.D-I0gMFW^5/!_,dcQL`T]JZCF!bu:)i=/Yjfk_"%>rrN[>1M8M*o;(GAnq(K
%$YaXhfe,k6Fo,mG9J2m,S(VY)Wrn[>TaG@N^ci4^`C1I'ergIlVZTJFqlQ27HdaPECPLEIl&UOL-HFsDrjY,an#RuAkX>7L$;GP.
%G_F\(Sq:I,KH%XgAC_n/:q+r;&0R*rL.hllTpBcuF"\K^X;dV$JC,(C-;EVX`SaEL!D=)f.C1Gu"?<Z[Db*I8!%noFqXW7H[fUu@
%7meuZ&g_-e'j.O7<[_%OB,;,sEK7`HTHb2%UcC,bB5&6W:$Cm*qUG>?;t!>d6E^MW[UZNGUiq4OqT#fcRFJL^22BP'G<lKg3(F,_
%<\C,f<nNU0]9%=O)U8IVn)ZXu8f#E`:X>ui*Sk/uRN;@Z_AjH*<?hDX1<#u]k04p/]!p,7&UF=t]2E8gT\,fTBHf&.$2&@TRYWl5
%UUUT#h@3sg%-Z:D&4<p^1>)4"i;JS,8)3Wp0A^6Bm[r9f??Vmsg;!ab.:"j"X)J/W0';)%fAmD]rJkI6+$qC5SJ_0/Rm!!P1Fd+o
%_\a6D5.L]l)7BFW)3Z^MoS)[;,eHn<\/e[bW!7;mWFp?@eaM#SS_X8]UmuDjW1lfS96V4h$mLD=,_:\_M[DIsJfcp++Ja>[8VdAX
%<Z'JHg%0=6KgI2IL4YsidRngu`l/,+S<n&rDsmh\4lnSOjkB/XbeR=mBe7^G?ace)?kqD+B=X"2Q!l.F6F7hV36`Mg^0*_PPD'-@
%9BSZfn2*Wib6t#Np?:HHM?E3lW>Hr^`CF>j:^hT/-9d[dS7oa"YR6p1MDGQ0i:Q,A,ajML$"KWA,neJ$("nmj1mI60`mGc0!cS:4
%Um@YhaCu3s>0Lj299A?b-r_<!5=cp%kQQ[Gr^;;AF6qoi$S(^MgS!@9VlBaTh,>%'*iS:mQ9\IkeLr$(Sd;rWVsW:rTX4N6%'*cC
%\M]dO3[P,Q09r8aURiHi@gJNUUB,!\,k*FY>rHXM_\",J__o\jmk/%I>^DqT!$S<+Kuj:eMlhc@AYGW<ip"NNM%5pr.#ElKKT?FD
%YRH'K#t</=g'ij:PD+$<M(k>EJD>*PI%s1eS.6,ePi51f&7CT2T4.UWEq&"Xn*%<4Rob&-KLP):a$CBC%":W55hc2iVC8^ZhsLm=
%96]b)^tC39)PCGh*CY"W\65U4:UbX\f=mfpO+N+3&KN3'b"80H;H8D-7ns6!9#k#Y'>E-/edf+(%1_#5hf69d*!5`G[E._Fou2KR
%4(drsqK=k6G\d%Ykhi!#\L>R(\6BG8eggD%HW=HH+pS`t9ApGFN(G9OdQuPk09[&^EX+1VV/7p70OjjS`S%j\B+JhA^kp,anH./.
%75DM@W$aiKI?dQ6ol/>UF[GeUN=t$dOTC'h7TpN&[j<k:#=0I0[Z6!"Kq-e*+?mku(24UtNT_CKbck?Z5L1_Er9;9R80YRpmn#if
%n`GH61@.2^j9e2^CEBnp4po`S%UGKlO+Pms7#M58E<eN5TeVBtCG1mmgpOB>'G,'PDo19q"lN5#0kNq2>`rNH=_;3$+Ia"+o5;Z)
%0Q#`<U*q4l:c`qE3LPmA0J-ei@m.C94fm?EduYJZ7m+rLRo_o\;pM?bVjRbs>"_K0R%/cOg64Rppl#E8RTj.G+bXGn(ReW[&3s=8
%&<8'1A4oWc&1>=*>7`43L$0k-*Pc.\SV%KaF#el:`h!+K<AM[`Q80br4PqXo]hH?b;V"cf2PK,GGMAl+[Ig`\iG94Ib&2<89[8dB
%bq_:q(>$mn7,$EnP@JCtOA2mda_/A3'k!'3H/f`u%RoD-=MpHj!6>e]cs\8n"%?N).agY8<@SJ8LUMHU&t,1t>[+ROMRs<`-\Ut"
%%pfPJTfa[!fkkF<;hF-md:5cc=]/$#51h7/'gcD<+8-U8`AY(3Zko!m\l%[R;!,MaE[\aW__kbkk+D4KD^QQ?c\E3*'a;KZopV<V
%reH<4$:Z1>8K2sN))%V6p)Q^Bf+HG]/uie#p':Kt*?pFW+2\k%VaAk"a@*(k<R?R4Lqph9U[&b"?#`GU\n?rs0E`ZRl-PGJL3!nu
%h(1VqND+$[7t1Km#&L2q1\O1A0D!@Ajm]6F)aO"@PQX#TB7R<'2Z`eVF8sKuLH)#i\0&BuH6RP=J\Eg8R($9rJG.NR)6_JrSuQI9
%KFI5Ad<Z:r4Am*o3:Q0ap[":3hK:[E4<4TTYlt;=XT?p:cV&'%;3SHCcAb+IYa1ZOUAYOdoACA:oAem/@I$0?8F@Y6U:,1hYMJ=>
%m[En\WJF3ZH*\FI7g;(s89t'p'mZ]"3aa'Ef011Q!6*:.@i,$5l4_e]@cX5SZIu+1-B5GR%FZ1NT%6QJ0O8cb!TLmPp]<h.%-5YE
%.Wpk.ZjeJ(KK3NBKR!Oor!LSU>GrijXDiE*>-e6K`3bs[:lK13NG\*?4>QP/VOU2&?o1pV=Y7!Z[?,BVC.MF;(UpD6a4YPPJmWDp
%Uc>13Z4J\^'?F8qMS7BDFj_gR:mV\?.U\]+m1F,C[T\/KIQPY($0AQV;%OXe=j/X+ce`$urY?bP\)tg[<$\qq/0HfV-1i<FC.e55
%bTQ8,r7^6F*1Kfej%80\VdF!#O+qA@dGB^_`Qe7+,_udG"='\?lQJ)ZW&P__]?X*;2okKK`j1RI>LJ$(aaETV"kitbhfgRP='?DF
%J]I*oN1kmAiCg7N`N?.+E7P5AOTi<Rm/pQM]kbS+@AV&!Q)Oc)oXY5MV)"iJ\XWMW.!qg7=LMqKkrb>.Q;J)bWNQ-/ZE$[RV`?.K
%ai8fI"4Fmu(MVS'ZfrMsWjk\L'\#R+";V<[%6\m(L&-b32/KZ(^]F'6rJa\jV!pb_282g"Sj7:uC.]b)nkhnO*n`p<]OS\a4^P%Q
%NSo,JFI-r#.oK&_'=/X+1ODV=s82*E5+,-U>h,<hIk3Zu9:?^2d`WpG_8ETAJJ[fs+ir5PHl]3/RGS6L4`Y`J_UP<.]Ru&$mMBns
%5\uK%A;E?/aTWF'V/?d&!d5Z6iba/t$o)Z2'&J&@6\]jK@m<!a/18>_`_>\E+VdQsF4f,;ENaD&%+i_rI3fiTZ/>pU"h5Up7X8SV
%:=?TE./ZW7*(4o`o;>VBC3*W*<+=IT_*S76$&T[DOe&=d#iuMBjV[\`N#UE3oMiE6>etO&EPY?uGY)ThT=KAh"[*S%G6mi3MoTs^
%e@A[PT_PiiP,&_1H)B5EKOSWd\[BDJ>=c=7Y#$s?4'7TU!Y%t*"5c(1Pf#a?\3`F*@Q>gDLWJ(28TZtVA/T9jI$eXEeMI\P(^#MS
%!7GH8l`KLn:Djg)p,,FJM='!7)f9&W2Y#]D8Qi5&=)i%$Ct@J6#ao+>l1h$RZio6=glDEm:0eg%bq$?ki4-1@:dA:u$ckn1[j\1U
%DU)@qX[@/anq5>[;)2<Xpbc5r"pR%Ki%55bZU!oI&?RpYp@af._WD[0Y37+hY#"\s*$+r1XXG#bT02ch@2ZX?iV91s2fV93i=[DN
%De3]gfS(<9mi>l'AHnO.Xcm6B]l/=fL"ldM\(q_ikiBM\AB+TUgrZ6&X=4,C%7dW0I_:.WSK+>5k[>?NEaUNiW+Mf[D]QG:9V!/h
%Se+P9M60FieF-l2S9`J,A*_o)o`/.+M+i=h[LOZ`YEZ$Pb0[o2`@e1U\VD]rHi(TAm[gJNI]Sg\''!lZ0+uDUK9Ln4%f[Y.+Slog
%j2MeF+^+gngMa+dcATXh/**`sd64Xb0$-ZhMKXMfMU]WNYUdHMB40")TsPGYJPbFiS)CjSV;)dmn;$]EBnkS2>?DeY[e`"F9>$k`
%9J;.phI@EM=<QEeg^of1VAauJSM:)TE#"ObSTHEJ>#<CWPRY",FSi2=?#HHqA+E[,Br#15\1MZb;lLHgEmL\"c:,CP_?EJV_QJ3`
%e>YU&^R<d)NiUsF$)[+&?Jk'E4*"'fW9d@uVX#b`NUMJ%n`8pCH/.\E$UVjoIU6$jmttH%N1@ZOH?3uY#HSsD-%qR.4l>M8TD(`5
%epTuZHJoa(-<,a)56t9U<GKA6[MG'la#";l`LH_MKW<76n]qZk%G+6l/3R`,jJfKOju+tkA9rcTN[g1KBK1a2?#(WJ"+97_)\Bms
%"7gE%n*)dnQ$QCd#Sg;?$<oIHKT]ku2f=@a>7CqfQ>cjmV8J;'YVFeY+0#C@&_5Z%ATCn+LDtUsX30KbNMlCX9%S)NNIM]R0`;*.
%4(0BtEnsg`!n<,\lASB%p5IID0UA0`k,q$V^$e+<HK0!$*F+6]248E9`ADGaQDZ5SN[55g&.g^n?h1T3H'@="f%U*sj+M/ASKWdJ
%9i>>U^_'-?e:l;s)XQ#IcQ+*fN*HPW#K?P5d<b@oB)s':X%.b>='RVSkCA>pIlKG-B-/MX"C5%BLN.lis)<iB*EYOf*H'ak$sGn%
%1F,It,HhTpHgLa5dI*DRW,X=?=8@.Cp8oGZMHj>jNr]GE*6+-"#e.cXA25Ys2"(4HpO-8i<PDHYVf*FeUbGWi;.LoLm<Qs73/4pQ
%i`XI?M[NEK8/-9RJb%uZ,?demOSY@H8E;s%o`sNkRe4M%d+9eXmtN@6\)j-Bh,lUo:ibQHJqCqf&HK2O61__Sg=,#Ba3iOO5ZFq"
%`Bssj*V1cDWM`'rcgDHWF!3*:f]AOJ.RU\E&B.]gdGmEXE)1/W,mGM`^i?470ei&O,Qbj<SWs2(\![/KKKr)c<9CGlD+\lKS_"5J
%k`l"]8qUY!<&.<,R7No#FAXCE.3!u+JIK`=Wb&!h1:8a&>(\D$`hn2^CPp&lCpBdQ9N?FDrSLR*2"cYARS@VI9r>0HbC#WWkK#QI
%Af>VEJN[/!^6\,j/IcPhBNnBpQ5mLg=`6q0)sR[*6A2J:@4I:>at0F#>haq8#sH:]6XuRu[S1\1k.to1ZmL*''2?P*hhZil`(5Ae
%+h4d2jd8#OD!X;3*Zu,kOG01F`,]B5#r!NH>0?_s2??HFhU8`<BmqbD;:ldB9W]>4-4rn_M5bJ@"2_ru^nh=mMKG64C(%uCQ,4p+
%q?4Td6men(G/"CgG?3%YOGN_ZopOT\`BtgYbt$Q7#%Mt`qc)d&hV=O$[SPMsd'tbAWh-7=-hR=9BXkb<6C"GT:0OB[d)#oK*TPLG
%.+&(ZqUO^popMo2kuUZ7<b/AaN\>/t"?`*j/CViN:5(0E0V+eK+kdLu]Q-Mr2&.<2/%LZ\@OabM%D_T@557gmF.6tN\iUYDc'6Mi
%fsq[:MQY"KSI(u12YS4L';7["Cis@oHS,G__L1q)c@s=T/KKB39Es,NUuG\;a\8X@Rc4J(RL?7Q.bD'09nX.IFE[f%c"4tuaW7hE
%>R5o!qY4a$*!TH"W=Y5c*T#RV#d$nun^1$tR>C;$dA64XS!kE@9tCt0Ja`*tBI:s/oeYuVTo;RfNloWo'M0]iQUAC(-9jF$dP!ct
%;G/\W;N!OIdb?Mj;B%_3;Q;JadRlG3;X-=W)UH5f7N\RsO?/gd+a(jR6HWKUA<bc8#q5s7&^mOq-DZUc9LtT7R?02r'-Vd8b_4L-
%1D<[<Qkl,qLbg2s[EaHT,s;jgfDSB63=[hgjap0ZZnjKO;JslU83'cc+ml;SKG)_-O,kUqJP^tcO1XNU/nU1tI7,BC*mMff\dNeV
%XL*/tVGCT]UdKKfMdioH/Fgh`=`qC&aY!]O2'GhSrCu?9b=j+(OLbp##=9TCk[nc!@18maa2TYUR4mOm#66kT/q:)6_B<I#g-[*J
%ETg)kW2n<j5mZc+V-4_GYNMHh:OGZ`3LXG,INW]N;S+,0E2\sSC9-5Z.($Z.Po`Cs.?VJ/%YW7_eB^6uZpHKDB(VUq3uIJ;IAR0f
%%rh9PTQBF"#CU^Z!f.#r_NsE>S(0Y/L@f!!>$IINEh-E]3PDQ-!WWfkEjD@CZ,`!EZ(eJ&k8.]%[=5E4q'D(!mD^5@645>9bZqJf
%646qp(1(pi"8[b`S4EZSWY<CZ!'(:`O,D""loVOdC)CNIFHm>cgh9Chf*E9=cDK016&/+B@10<JO9DZNd:)I/Oj(!ao+*5KpZ?`8
%B]oG=Cd9LQ%_/T\UgYqXhZ5%.9TZe7^]G^D6H>c@`2LaKM)NS#IJ2[C=m9_rFMj[j>Slmh47o?,r&(/[s'm']TYm386sP[!5mUWN
%L"TLn-8b&rSdrbLPfDH4>(OIIr7h@(_6/InWNe;Bj%7;o(MM,)6AW(X?V?,PKS]u:)4%UO.h\k1f`G[9,1TGH9/^;!/7[Joh106k
%p4<o^CSu8bmQK2@>A:2G+VRjO*T1hcIOo.GE\NATJ\2;_/\eV(!KEUOn-qX>1Tb.o#D=STs)d-DXoUgc0g`YX"?WF/.OQ<gn[*Un
%P?&#8/<OLL>3iOkJ4bt=(*jT[c:G7f:q8(6&Z&8RaA'X.?8YbJ8f0U8)<,DL$jH&8SH7XqF&R.!)GrJ\!=(,C4iioo09:fdXb"-t
%+omSDHbr4[EfDmr6=SL]P?L^ZaTk;!mF$qY3E(HsWO5'pFBQ"'M%.d;!,Riq61rURpG6nNi:RFl@Qa+grEKIDD?o*RM4"t4&jii.
%EIcD<"\_[_-4I/t_9@[jg//*n6/b,T_oG4<(=`n=P_;[$HbK2^YUHXnlsYG#dac9<Lmp9J?5&&#A/=2H$/*GU*t+d,ZBo!,[W/jl
%h16T3QCL0r>Y$Rb<34DK9s<H2oM@Ho,Q;aHhO)VM.!_^`5Bi/ZEYul++`Y@j850M='Ms/3,sLm*HNaeN^(UO3jP'e<pPB=0P$=OT
%-/d!ZPq)3@YP"Zabk`PU,m+RJppqb$$?-9)V/rscKF-S]nnc)b*dq`C!$SMhg@Zf*TWDI2T+Y9t1qa00HJ_=Bh6@&%D3aH)Up\OJ
%Vf\c-KW<1TV\NRj(Z03sp(^:;_Q`ra\u,kes(Fmi0G@Qea-M>hfk'-aOEHg&>DZT(XAN[6p>HSJlS'kHJ4Fq8s6Eeh+=@@A-*loN
%Bn#F]?pgk&>Xb55+$1Ne1gi`$\\$7T-Bo%?-57aW,'Opt7klSD?:g\T-_s#n5][5L,2le#@>=dLoEs!IB'A0@$)q7(R?6\`RL&0W
%Um[>0FIEN8SgfkbDEZ^B3'D*!6A>rOMJ.8_s0&*!N\2"m`,!&Fr4i5]d=ChRcrR\kbRTdl_Pndl/ga`l;kqTZU2fYDH)P`R4=rg\
%`P`?q<a2KD!:Z8@?1af(n[i'@G[cO*m"S*s&Xb0N\0hc-oiT2^$@<OTm8fl@N%dft\rqiB-aI>.5YS,8<@>e4a@ZO$p2$J],LJGS
%Yn3"a\gs$BUrF1KQ&As]n-#G)Frf.-E4qD)TIjr`AjIabab5\fa<]buiBV+%E0/`1olXA7"jHaZ(p'2<HC9G/+k$nM\)'Q.:_c-$
%&>EIsiG7UP)NC/6n`BQHA_K@d>fg!,([@"?P!0`q?F9)6-l#i=PXl2.^A$bV-tQT0TK0BJ.()H^-*"@V]qI=kb\TBippRHt5oht-
%*K1YmlL9sS+YI+/URROZ)8L$K,R)>`i(<5h,q&1qn9=*Ok\kge!J0u6]9_*-Olufq9:*5'JlWj$r4]H&]jD$B\"IBlKeC.p@o//;
%8OUo]5Y1O3E<n9Q00mU<@)=.f!\Y(t?_8B;.*-Xr>/QJh"mWU^"&!+ZA%!GjQld"HKX[*+#!uat,.F7ZDK,M.`c8Ld/2Y`/@-\Ts
%AWu0\-B'>J!FoN5?c"=e?`dtG<6RtI.0EMV@SO^c.pU&U'++-03k!\&])G)A#qrL`d*NFmQ3S&_4>P`u5,Y6X(U8f>P9T3o*B>Q'
%pBRudqei?V:F;d9Wj[Z5VK$`lULWe(,XqEk44ZIq!j'##OX\2/*Ha7;>TDF*IHL$p4.3mmTsY<MMsT-/Q2ACXJcaGb/oCn2f7S#`
%;p[\q2K,-1UE+Tc=YIHf!_#Qd+k]Ge=D"f<,>bQ&9hjCXS-1O(_O9?L*GJ[j3@k&5GN-i3N7nk%_qdBe(T_V`e\*8.?jq:C6SE.k
%P[5mt_D/9h<7q>q9eB[VPjj=$Mh?Hnpa+b4>e&`t;"df>*3lun_(6Sl+8t:SPMuaokjp^KI\u5I1'm2;Ok?>,TYf9caqdfRRc.Jt
%91C^;jM>#cQ4Z@QY%,"uY=_d\\m%uGSo>&7aH8TNYjc_o+MB7ZnV`GN+_+Xalf@7N&CfKFJW=$"+hOF?I8,'`kfQjn6[TnCPp-mA
%b)cIC"3I>gAE)e-@!>RAPZ<+pgJZ#@[_^!=fUapaC"r#*>6%[>QZ%N;`S"4e@gHYqj]gA@Ruj^;2h*97[UW=]k#44'JlGm#G+qre
%*D\.bE_)1THF@5/M\&dOr;"qKpJa!\Yf\,cg#Y+k)Zk1X@$nW$)B,(5=TuXNC5lo0Y%4P/9c!(V!_mir"]VN,J(Z$mD,egd?\MM>
%+farBN]a=(Q)Y>umlZ+9CRKlH"$j:/p7"nY>&@QF4aM[.DfU7q+@s0Gi(0MnN3W2r#,l*$]l09%d2R]43u6dXlE)A+J<EK39B#&+
%!m8a;MZfDJ2bXj,,6W),7HG*F`Qm"2-X]4t@M,[YqC'aDgi,FB6b+<DO^Rq[GV;b;0%Y-N'3K0.;15$C)]YYT#%e]h]$PL,,b#9k
%6lSEk^TpO@CNI'pJ/$AjE:(QU<s:p[?7Wq-'K*OsY6a8SP6ighfq9Q/2?%JS?XI"FU5W(l>($E<LM3IZG'eY&iYYs-b1NtLiFa:m
%CdRE57u;NtA@80ts2qOn88+=ll8Tu3.Hb86&jCL("t_7r8j%Uj:sk1'\$>*Yd]OJ_+;P:[YFI_fGV##P8pQ=c/e6j%FuuDM"."I\
%?uc+"!*m.QUe[`8Jmpu,eZ`7hV%^ri&E`EVP.<b+63cQ80::@b_[]Z$XrTob$kQ#d]<?ht:b`s;:q[O^//VG/^.sALoQ<18b)?h3
%0Q[k:.Skh5Ua[OWQ4EUZ0o*"9'f7O3O]CZ8F4"l^%V29!&WpH'Q(!KHd&&"873,W##6nD4_t8g@hLVmt"oL?J;=9t"*8o0Q5./[%
%d#3O7XLH>5RmBB.j4\WeSekNlVis#8Y:r\TTQi<39KH+)HYG1[3p/<t[5!"2<s[l,JnJlC6fCW&!Pc-%4:DOu\nK)`Po3dQ,u^(=
%6_Q:GAU9WDRoj<opVWj:"&V+3aQ(^d7'Fa%@eaVaEL#(mM`Z3jlMN&p+rgW%;\YL2`KNdJT0'HUQQ=Gh+i-Z!R=QX"UaYk$j:S-3
%*oI40H;s=[JPr)T?dWN2!3n0"-+>4c0N=Sn?q6[tOsrO0hmB6nh,l:$P+W4M99eDDZ1)3Pi>@G<D4N,U.KuA2FK-A4O.7X[@t&D4
%I@C$gO*DsB_2bW!^a*`sI.]q;2GIPF%Nb^<Q!U5(rd[i7h;D@<ek+QP:m<`:0s;#)&nF%.78Ar)&d*\$OGH^m:aioUqpIHT:o2"F
%mO@(Z7bF'IUc&D\Hl%dPWqZ$r42Dp;RF20Z]hBr%kTQ[ETj9aoRY1gH$%hS)bk_6o_VnUKZkP=N,.#+GLrIKeY)N@8dP1f=g*WH\
%Y-PnW>%Wjf<suMiEaJSH&LcBfi]^Z033[s!.)c\9Pg_?Pc+us7Q:HIe9-#JnB1i&Prn$Mgp!+LULj,Sfc$a/)NhWEU+-2FR1,Ao8
%>LmX=oYLj0nC)H-\N%(LXHQDNNi$)TOrtSQ67^56qp"BQ@6iDVba0:"<ejENX\-fVY8Va/*&Vah.$c%R\882Z'lMn7Wogh^V-qk,
%DqOFqNi-NQ2PDB-CM)1-5fDK@`>NT&dsZ-'%,)&o?F^nL#A<adM@5f[$j-s(OcXek"b"LGT8HWk\#!K-fG<uAL=iX@qETfc(ZJ-&
%4;10o]&@/Z%;WJ8pq*59'^^5Y^b6)E0!5]_b8@Z1mG'p1O_]meE;(+1ThaD2m%jB=c..m*^Et5*'CaZm8XI,o(8&8K,;J=\2VmS8
%do3C=f12`U=)&%bEgpN"Y3<&:;cEa$9,_g:fBDT)%8#l47?,?:4^R:*encc[g7lZbNI,*deb7rC9Qmc]$mX*RT@HlY'J&HmnSn(H
%k>Qq'Q3ef"oejA;`<"3HgDgh6N<:`\Hd?8k3e<CVk@s%H!L_G`@:*C?(+8+4'^TQ@D[kM1diJa<$d(UWaT-u^qrOmbB3sce*OG*\
%>J_,r3_5*]PnpJR+mu13d462]$(ps`a+P>nFfM?g$rEf:p2[9Qdk=D@j:1kT1e-ZJW02m(2f50Q&`2:[M_EBSTG*f,JBMosCeHC2
%'iR"OA)KTrkBLP'SB)OW&oU,V3^Ou8/A$HCKY?]u,3qO6Z?5TtkaiV]..to[HX[g4cnE*oSmXSjj^0Q3E5^G6!*Dhu!%+Wllp@BR
%Z6JC8YiGfU_/s-4T8UFq)%*4Y)@Un8^nlp?ZSWYH.6$;1)F)u^J>TH!:fi]e+U(7>*gsaW1'7`"8@_)Y5Qa>Dp+ino;L88e^ffqD
%n;cDIFbU5i5p;)bf*4%MW'P0`<])f=9ZLDM!AeVbFb<_i3ub?O54llarih9ODJ\bK1s>#m[6m@9,pmn>L^XiN!LOITKn:iZ_/,3?
%E^l=-`%H))nOh]!^]7`&(*SX8n?nP^28lhf+XD<RcZHHA9VC]0=#0H.&tnK5WH;\q9eZmeP(HB"g@reX]U9LeFM+eXYY[mnT)p[h
%))8DCJ95L'Z-@+f]lpE_%,aV5YGR@UFR=c#2kj]7V5E""*5fp#+o"YY8>iB5W_[,aUr1bdIcXHdDcSGKSX6gX]HV,Eds'4E*]UGG
%&fl2_Tm5#Y$(HrfgF?*/qYc9j3Ps)eO0M0=2DF0YRu]nu2q#/qG3OG8qI?=Jk%aO"l3Bc^URc$Og6\FQDmQ<qqf7O1Rq4ShW9*)X
%?4'$%T,qI8<q8;_,]HP<3!B#fE$!cT6G#](2S8?$]Xi^_0heik66abpdhe,Ol4Y7+X<)+l[,o7]/Ls2E-VT@p9[*$,B<6:%o%nmO
%RXaVeVu9'tF6=cck!^sUViteC)<2T%-'3Td]!7<4nB[(2b';ah9b[*`/iX&#J1F\?6Yk!#85^(FRcNq"U2YAY2)2ZbEi<q>Set\[
%UFJo,-?1Aqs(l)^9]mT`I&ib4qi!$/R]-DL!CA$M\S7nsa&fo%+Pf6*L4dj%-RW&6;ba^rW6:@TQH%2U/BLte^MnRRBO<N)R]aB3
%gM`cYVkO7uZ!"Z%ekdZJHYLO@ahiBtPu\3MM!u4#hD'hFV+SX!L8c<f`\jCUStV*V8=$]D5q=$R>flcgS]A/J(aPO)`YH&nPpOJC
%$]ChHBkK59cCeeh45HjBoL:Sua?Mgo?ZRg?ZjDKCCps_43m]^mcumNC`Y-Y8l&[#;.i7VZ6)+aJG::2gDh^Pre1Z+?>a3dlNOpY"
%b<3]Y$B"7`DGhN:rf!*Z6eZ$CQ*3<$6d*hSjkQpJbY^",YbR(36h+XJO,'-uD#pP4,56nZ0[-(jERf(Y2[L3Z9!T>J2HXhKD9eF?
%?nSo8"N4=J=R+J#<QP42@]k<T<'#1dIaXtRi#hu(QSN)Q*HrHJ&U=7Hs+jW$+reFD+h=%%dB\iueiZM7BID6iYbK$lDoX#*LqZZY
%1m9-_Yq?R%`k3p;_EpWR%Qsr1TnZ"&b+2_loO`J7@62\cG3feYG[A[V#u$VK,HEa3JDeBSqP5OfA2'[Bo16d3Y[KoR?IAQkAIm=<
%nd)MAjKsGB(>N5q)86Bo5`<!01Rs83*3KY"4#l&8njgG@b"CY=7bb73Nu-qj?K+Sc0UtBY4;'?@<TE7sM*/?\L7)&jB!p/V8Z3Eo
%"*,sS3/<&[Fu5<bG+4W-=]T^(kV!%qk8r]\T\L%ELA+<F@t/WB@$QN?gf=<X1<agQ'=G+qBTs1;!H%U(pCL5BO$)5(Me<b5kMLDM
%cqS2H<b"+M[0Hk#JSYU%/]V8B^4Y>Y8/+^7)2D,3McnCMP-FWGNRFTKG9(ZHnrEL)jc6(`Ko$nbl<&u8IlNeB2pQL`rc$8&Y?67;
%nqQP8HJa,-^)fA5%IHd!!Z$ATFO%K$'K&<([n.1?'1/=EhTq"[@f&Ir-rYAGf)*[(L+EN!3f1M3dZOl"<!4,4JYPj]oBMsuk0gDo
%rmp.7Aot-Ja<76jZS*_)OF%%J9c`)eiEs_'V,]*!$@_`&R#[PZO"@pA5[,pQ6t$@J;!m.1]dO&fZI9nh(pXX5jk"kKpYn4&:eEZ^
%a8R5BOiOEX?N2/N&"AQt@S\d"?0>k&`LT8,Ojd2hWQ,.Y?%.-+)(eUfQ<h5Rl&LLKG*Q;PU([/<l#nG@%@C;f)W=g#1]s#tPnnDT
%H2nOK!>-0(VuC?D-`s5XV>&hI:JJH&A9UggT5F8PN`)T3f0rL^Y`'A1@:dM:d32q$(\7tE"enH1-T@`>Un-oZ?*1p,Fs2_Ene&h]
%O^j.R`)C\=$OFILM]Hm/Y%SMP1Imc4,_)a8@K<r6c(aWMb<r`2a9+QkH+B7H5Y6Tj0TJ=:08Jg81pV9AP6IhjK<a1qZD2'UNCN@m
%R]R5=)V5Y91'MtAFO#oAI+hHG(>8r_P*te4RE8]JZU#B@H1tn\gj!G.3UY(fR(N5L?lL!X_6fuWI]1G-T%sM<4J2bC&['t)bUKaP
%,?_[teriCE.+5(cBQO"f=a7*rdIl'/(agAT2X3Y(D>0/709!H(a-pj"W4HEDr_=YrX4FGU:N>c0jL0#Ko_hY#Xp6m'/'NP"ct#0g
%+r2*T;JjZD[LIZVR8Km.eD+YLPPb7HRaI+B_!<kV(#MBOh2I\kq:]ZO[1.Ea16K#DLZH-rUODCj(8lXPNmQWdoaFg.KRAJD[fPBT
%B`67ZF5L/R*%a#GGU@3ZY$Wf2ab1V-]fqLH*Z4Oi7q!JM&T.o.<f'fB)*GGS6q_$jeLn4NU\HC)h9b<qf!<Xs'f"d1`55n*Cs:2f
%aD#,2ra=C]gKke>[ANAulS^Yb\ZcnlP6Eb0_OmbpGc=\%@k;5Ml:ga,j7q&abqLI:!3+jUOjRKknQslM7"<d-iNc8aWd4ob@?0_K
%ObYB?\IO?fB%CuX%0tZt-qku.B"SOaE%<uCSWl;A]PE6"R1-2"aWkc,E)JC\iYWFJ,]%;IET2@6`s9;tHF/$jIBjB1_R@ChTt/Cs
%VIjRf1UYMr\pPPUNgTY^9_Em6-\8+@_q&@1Cf`DM^)8s^9c][hbj(DS,MGBkgNQ=.Wf7<X3FW&WP=c#mAho)fZYD8BVYZ:KfOcaK
%?<&I,/YT;/S5(-rMD_<E2+p4C,D]q3)NgV[K#\VK$Q,bn24!-6D8'c_^.n5(8_t':!ZD@:XIZ2TEDP$nM6UhFAhcAF;<Sca(BULS
%g9rQ$STgdn??AP9HQ/i9f0hh.X%q%jQchs[@taY[>\ftQ.)O?c-JI7rZ)spK%\qen#IR*Gdeii^VuQAZ"(hp*?OG8V!hcf."Nem!
%lNLamdF+Dnapm+SRTmkbk&0428<MpQ;L?hh">mL\/*h%=JImJNB]eCQ'Xj#'>fU,"'1]FA>q`tXAmQS!qZURA^jHLt!?tV+E,Con
%YgRG3*W[>k;?3(O:<fRA*(^(e/GTb-mZP"hbiKmY)F-LBW$/ThJ?B"P^#6!</q`t*+R)TAP`[5QpN%W6&-Pi1j]NfQnjbA/D'uO#
%?iWu!-!u-$bBl)K?@C5G\hp9Q-6^g$P9V&6Gq:]"+;lpW7&h`!i%&l%T*7]s\8nJUg\'%+ba36mZ[SrheOV(hB<WZrmP$GafHMg)
%ccqa/2H"A+FnpMBO.]r_]lS]ARCd)<]%KiGnYk0eHn.H:l<lE[E<%#oIdKpVf3`sAc+4ObF,<-)-Y+)NRiGBr4%G0::#G>i^3\bm
%.nnCaiA)"[(tNXfJYYgEk(kEJ9l5E3@L?dS`TTnSZnGq*TF0^`Z.,K'-dk3gbcK?caO=dIkY0lm)K.`"-B0a^Rq2\\UcR*3GK.8t
%9"gg3@D]ZUq+9Y$HG>6oqFO5%821%b9jKbRR$gll$SY)Of@EhDFW2>mP=oY2ri\[F..bo+[R)g^>gO!X=s4dkN`fDgQ7&13rJ/&1
%09AEto2Bo1cOU\dTOFOf[$m@qZ5]7lBXVK0/86I'f$3pkL@o*K2)!fso=6bQC4m;RXs#9`Se6(D@BtPVT1+Q!_'7W&jrIVm@D\33
%8-2h63_5FS5Z8?IJ;rlXYQjKWl^7g"R1\#s99)`_'DA3oRCg[<<XVW'j&E5AKWkYer@2"<-d5>d6K=JQ6m:G=fPrb"'SV1?(\l2f
%euD_);,$bg('R$D?m&oDf[C#.<kmhr-Zh50`R/X`AGALFZt1VF<5=N/-T"*LW`am0e>1[n$#&FP&K")*Wo5T]P@F7A,821o+IE7l
%$@!-:cY9['e-dP8L;NXPfs"""J-ed17&MotBZ8?,j@.M4V9;E#WW>q]-7Y`.mc+qbcNK>Po$/0-F^_`C51)@kM4L`UL78?`ks.P2
%R;*`:[O"2;K"sg[G6A9(@(Q3R-a:7*nEIaN$s[gsLT(Jk8d!>nKW2rnpV*?J]:J_"1"Bs$4^kA<2KT"Q]W+`c$)$j`d-rC/bbHpf
%+J-!89YdA'0tg2LD[ee1O7rdm>$L"n;iP;>q`YTP!S*c(8MemNLo%o]SH+(Rb<B@7R64&LO)%[n6-Pa1]*c4K#oreTQRB$&UFhnL
%ZVM9,Zd_Ya>=6Er.r3""UZ%1[/2^1bibCaVfoBa3R`UJ'OFBm]9.tV.;PX2H#tmtm;6Sp9SZpUg?lTH(oEe0MB2ZKL\[K1+-7G1K
%fom+CNV;*R":]\G-<(L3+[m<C/ZN9PR,"VR)N2_?BU0R?W;e3o)Odj5F*+)=-a>QVA07"Re$L:YR@A0FB]!VmA>5]k#Z:4/Vl<[8
%H\"DoK_6Iocm14>VO5`DB]H4OA'eQ"l1A'gJdkF?UL3r.Le5AVpu/Q/pa^"CaX!!8ATB$/k;cg);irSp>HJ'Y&BWS6SjQCo*bhH)
%KQ`5>,eC"#W_doc:&\ZCEht`S4T03r![?G'@#sa;alerViO?oF.\ZQil="d\@Do(if`1Bb5FoL.6msS2g>>XLT\7406M#sAcKFh&
%8nRoJFj87(2%c9@9GuCFc=s!J__-.XXp3@14]6pShe=L]fbSbWR/Ge<)8iWLO&1<`I=g12mLbYtRm'2V6%:<Thp%d5n*nO3f(9j[
%n?3otqo'Ado)<hTs6GH<rs=&EM_DjBq!h_+q;\q[s'tqU^UejkeMi!Upg;btr:Yna^\cdU#N=n`ppXUXo>B0e]mTe/pKrFA-iEL!
%IJ=5fA5Srtr8bts+J8@GJ,Je=H2?4?TDn6X^@Gq8l[JQJr)@pUT8N+3;sF70.fZH>l7U#@Y5LGl'p/NG`Q`YZeGU5jqNdUj9NYM;
%BVYa7.L4)OlsWNMhSTsCPY!!;*)Yi/)hm]C%*V@mm<\W5;<Z<C&/%f%Is0hr*i=VY4Y.i(dWO8>+#XJ^HPcodAV:js%i^32(Tf/q
%]L=U]p\0\KWJAa*8j2O$<p>B6Zq<Q!Y#Y=,'<T[nRqn:4oI!h=6\`-Pl%`!?8j@-p<>26'X]6%[c)F`,FuG(f8?I3GO&8*#O&=g'
%MHo$,Vq1V>.K<$'n43H.4*lSZ*F2#3j*X2foIoT->PZuk%?mbjJ=^t>I<D&;'S_#M8d/3VC"PF=gp^1KK[e>]=Pemfrr'7JpZ)2,
%h;uR3bo4[K\*bp17=h`3@OaS'ei$\/Rb,>dKXGh*Q&DTR"0SaOSdcb>8U.81cWS1'Fkf%g5/^]]L!K"*$$+4N7[D0R;5fo@f<+!^
%*V_j7]=Y2?$],1/Q[mCP)^N*J]^c=L8%L1A(mQh&qYUb>C*jbN#"UEL=!HZ]Y*rHZ%,851emZ#\mQ)]M<pR^cN^@Yea&h,-pX_.K
%lHjj%c]Gr$;sD@l$E,BY$oN):$gV<B(N:&QPD0PJs/A?%(9!)5K67QY0(gan)hm.SDQg^/n#dVD%O@+9MouabQrjB?eTPoWZB]6c
%Boc650a%%>KAB;Jr9DUUV%[fT4Xg0G#KFpd@A?-o!DI?E+Vd:%@V^iAiCYHn+eX-&BL>0n+O&GJs1>`kat);5qhn>h2]Jli+^u4I
%feJ&Fm4/;/[9hF<Cpun>.cq7$[Erl"K#^:(dgVp?@r.3UEduKX;80AIr&8OrYjb8WlbS1,K%7]-(6<V-ak6U)DhHMGPu3+Fo3L,.
%^#dFDl/CG)!=i&TRarJ3:k1<HriYsKO2!<5kBhO3rou)mp.CD:iO:s3dUTLBkDGuWe%VOs''Qh5LhE%c2K/*M>Q++tmX=HqGAm<2
%=8K:b^\4esS,-okT7<j3HZAIP-Qh0,GeA4!DarpFjQ;r%F-E*nrJ/]Irr;oj^\Hg#+9'mDJ,&!gDnl,5]>$XK56!c[b&9Imp%%a]
%07L;mrTa*CDnl2.l'L<,op\0ps7GW<s8Kp^Tb@s5Iei@A5C@h4jClBu9E+A6^MIAu57m_:f73XXrHEb26rES@5DT)a#9Ecr07Wf:
%+9(c]gMah)i@B;t-M^I408/&KVZ-FYoESb$.f]L?^\Qon^\Z^*n,Di!kmouX5@=BRj6s_ZlKadthgP:d:Z$Zps#rVpp!#F?eAo>N
%?TnAP]8tju1&:V:rI94lTD0)tUZ3GDrqSeYbEj;7qu8k4hZN~>
%AI9_PrivateDataEnd
