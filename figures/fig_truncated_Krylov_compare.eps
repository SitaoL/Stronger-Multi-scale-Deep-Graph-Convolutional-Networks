%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig_truncated_Krylov_compare.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Harry Zhao
%%CreationDate: 5/15/2019
%%BoundingBox: 0 0 355 279
%%HiResBoundingBox: 0 0 354.6221 278.8912
%%CropBox: 0 0 354.6221 278.8912
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.2 x274 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 12345 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA8FFA8A8A8FD7AFF7DA87D7D7DA8FFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FF7DA87DA87DFFA8FD17FF
%A8FD45FFA8FD17FFA8FD06FFA8FDBAFF7DA8FD3CFFA8FD3FFF7D527D7DA8
%FD45FFA8FD33FFA8A8FD057DFD46FFA8FD31FF7D7D52FD067DFD39FFA8FD
%0AFFA8FD31FFFD077DA77DA8FD45FF7E4E30544E554E542A552A5454547D
%A6A6A7A6CDA6CEA6A6A6CDA6A6A6CDA6CDA5CDCCCDA5CDA6A67CA87EA87D
%A87D7D527D7D7D7C7D7D7D537D7DA9A9FFFFA9A9FFFFFFA9FD0BFFA9FFA9
%FFFFFFA9FFA9FFFFFFA9FD11FFA9A9A9FFFFFFA8FD0CFF77943417358585
%A9A3A9A97F2B2B2A2B2A557E542A555454547E7EA87EA8A8A8A7CFA8A87D
%A67C7D547F7E7E7E7F5453292929542A54542B2A54557F557F55557FA97F
%A9A9A97FA97F7F557F7FA9A97F557F7FA955557FA97FA9A9A97FA97F7F7F
%A9A9FFA9FFFFFFA9FFA9A9A97F557FA9A95555A8FD0CFFFCC364FA3F8989
%CFCFFFAEFFA9A97F552B2B2B55FD042BF9FD042B552B552B552B2B2A2A2A
%FD042B552B31F92B03F90303032B032A032B2B2BF92BF92BF92B2B55FD04
%2BF92BF92BF92B2B2BF92B2B2BF9FD052BF92BF92BF92B2B552B2B55FD05
%7FF92BF92B2B2BF92BF9A9FD0CFFC3B5FF893F3F3F64AE8989AEFD05FFA9
%FFFFFFA9FFA97FFD04552B552B552B5555557D7D7E7F55552B55557F5454
%547D522A547E7D7E54A9A9A97FA9557F55552B5555557FFFFFA9557F5555
%7F7F55557FA97F7F5555557F557F7FA97F55F955FD052B552B557FA97F55
%557FA9A9A8FD0CFFCAB5CAFF8989643F3F64648989AEAEFD09FFFD04A97F
%FD06A9FFA9CFA5CD7EFD06A9FFFD047D28FD057DA8FD05FFA9FFA9A9A9FF
%A9FD05FFA9FF7FFFA9A9A9FFFFFFA9A97FFFA9A9A9FFFFFF7F7FA9FF5555
%557F2B7FA9FFFFA97FFFA9FFA9FFFFFFA8A8A87DA87DFFA8FFFFFFB5C3FF
%FFAEFF893F3F3FFA8989AEAEAE89AEFFFFAEFD10FFCDCCCFFD08FFFD047D
%52FD047DA8FD26FFA9FFFFFFA9FFA9A9A9FD0CFF7DA8A87D7DA8A9FFA8FF
%FFBCB5FD05FF89898964FA3F64FD0489AE89AEFFFF89FD0DFFCDCCCDFD09
%FFFD047D52FD047DFD2DFFA9FD09FFA8FD04FFA8A87DA87DFD05FFC3B5FD
%06FF89AEAE643F3F3F643F64898989FFAE89AEFD0DFFCCCDCFFD08FFA8FD
%087DFD43FFA8FFFFFFFCCAFD08FF898964643F64FD043FFD048964AEFFFF
%AEFD07FFCFCDCCCFFD08FFA87D7D7D527D7D7D52A8FD36FFA8FD0FFFB5C3
%FD08FFAEAEAEFD04893F3F3F648964898989FFAE89AEAE89FD05FFCDCCCE
%FD09FFFD047D527D7D7DA8FD37FFA8FD0EFFBCBCFD0BFFAEFD0689FA3FFA
%3F3F64FD0489648989FD04FFCFFECDCFFD08FFA8527D7D52527D7D7DFD46
%FFCAB5FD0FFF89AEAE89FA893F3F3FAE89AEFD0489AEFFFFFFCFCDCCCFFD
%09FFA8FD077DFD37FFA8FD0EFFCAB5CAFD0FFFAEFFFD05893F3F6464FD05
%896489AFCFABCCACFD09FFA87D7D7D527D7D7DA8FD40FFA8FD05FFB5CAFD
%12FFFD048964643F3F3F643FFD04898A89ACFEACADAEFD08FF7D7D7D5252
%7D7DA8FD41FFA8FD04FFBCBCFD11FFAE89FD04AE8989643F3F3FFA898989
%648988CCAA8965AE89AEFD05FFA8527D52527D7D7DFD35FFA8FD0AFFA8FD
%05FFBCBCFD16FFAE8989AE89AE89643F6464AE89ADABCCACFD0489FFFFFF
%AEFFA87D7D7D52A87D7DFD41FFA8FD04FFC3B5FD17FFAE8964FD0489643F
%FA3F8989ACAAACFD0489AEFF8989AEFF7D7D7D52527D7DFD35FFA8FD10FF
%CAB5CAFD18FFAEFD0589AE643FFA3F87CCABAD898989AEAE898989AEA87D
%A2527D7D7DA8FD35FFA8FFFFA8A87DA87DA8FD08FFFCC3FD1AFF89AE8989
%64898989646386AB628989896489898964895E7D7D5833835883FD38FFA8
%7DA87DA87DFFA8FD06FFBCBCFD1DFFFD0589AE89ABAA633F6464AEFD0689
%5E5E5E335E5E5EAE89FFAEFD31FFA8FFFFA8A87D7D7DA8FFFFA8FD05FFBC
%B5CAFD1DFFAEAEFD0489ABCC8763FA3FFD07895E335E335E335E89896489
%AEFD2FFFA8FD06FFA8FFFFFFA8FD06FFCAFCCAFD1FFFAE898989ADFECD89
%89FAFD07895E5E5E58335E5EFD0489AEFD3BFFA8FD05FFCAB5BCFD21FF89
%8988CCAA898964FA64FA3FFD0489335E33335E5E5EFD0489AE89AEFFAEAE
%FD29FFA8FD0AFFA8FD07FFB5BCFD22FF89ADABCC88AE893FFA643F643F89
%895E5E5E335E5EFD0889AE89AEFFFFAEFD32FFA8FD06FFC3FCCAFD21FFAE
%88ACFEAC88FD0589FA3FFA895E5E5833335E5EFD0A89AE898989FD25FFA8
%FD12FFCAB5BCFD23FFADCCABADFD07893FFA3F395E33585E5EFD0E89AEFD
%25FFA8FD12FFB5B5C3FD22FFCFCCCCAD8965FD0689643F3FFA39105E5883
%FD0F89FFFD05AEFD31FFC3FCC3FD22FFCFCECCCFAEFD0889AE5E5E393FFA
%5E39AEFD1389AEFFFFFFAEAEFD19FFA8FD12FFCAB5B5FD23FFCECCCDCF89
%AEFD078983335E2D39FAFA3F64FD128964FFFFAE64AEFD04FFAEFD1EFFA8
%FD09FFBCB5C3FD22FFCFCCCDCFFFFFFFFD06895E5E5E33335E5E64FA64FD
%1389FF898989FFFFFFAE89AEFD1EFFA8FD08FFCAFCC3CAFD21FFCFCDFECF
%FFFFFFAE64AEFD0489335E3333335E8389FA6464FD118964898989AEFFAE
%896489FD12FFA8FD0AFFA8FD09FFCAB5B5CAFD22FFCDCCCEFD07FF898989
%835E5E335E5E898989FD043FFAFD1889AEAEFD16FF7DA87DA8FFFFA8FD09
%FFBCB5C3FD22FFCEFECDCFFD05FFAEFFAE895E5E5E33335E5EFD04896464
%64FAFD1989FD04FFAE89AEFD09FFA8FD05FF7D7DA87EFFA8FD0AFFCAFCC3
%C3FD21FFCFCDCCCFFD08FF8989335E33585E5EFD0589AE893F3F6464AEFD
%1589FFAEAEFD0489AEFD09FFA8FD04FF7DA87DA8FD0CFFCAB5B5C3CAFD21
%FFCDCCCDFD09FFA85E335E335E33FD0789643FFA3F3FFD178964FD0689AE
%AEAE648989FD18FFC3B5BCCAFD21FFCFCCCECFFD09FF7D835E335D5E5EFD
%0689AE89AE893F3F8989AEFD2189AEA8FD15FFCAB5B5BCC3C3FD1FFFCFCC
%CCCECFFD08FFA877833358335EFD0A89643FFA3F646464FD2089AEFD09FF
%A8FD0BFFCAC3B5B5C3C3CAFFC3FD1DFFCECCCDCFFD08FFA87D7D7D528358
%FD0D89FD053F64FD1E89AEFD0AFFA8FD0BFFC3C3FCBCC3CACAC3CAFD0FFF
%CACAFFFFFFCACAFD06FFCFCCCCCDCFFD08FF7D7D52527D7D8389898964FD
%0B89643FFA64FD1C895EFD0AFFA8FD0CFFCAC3C3FCBCC3CAC3FFFFFFC3FD
%0CFFCAC3FFFFFFC3CAFD06FFCFCECCCDCEFD08FFA87DA8527D7DA8FF8989
%AEFD0B89AE8989FA643F3F3FAE898989AEFD1489AEFD0AFFA8FD0BFFCACA
%C3BCFCB5BCB5C3FFC3C3C3FFCAC3CAFFCACAC3FFFFFFC3C3C3CAC3C3C3FF
%CACAFFCAC3CACECDFECEC9FFCACAFD04FFA87D7D7D527D7DFFAEFFFFFFFD
%0D89643F64643F3F8989643F64FD128983FD19FFCAC3C3B5B5FCBCFD0CC3
%CAFFCAFD0AC3CAC3C3C3C9C8CCCCC8C9C3C3FD05FF7D7D527D7D7DA8FD04
%FFAEFD0F89AE893FFA3F3F3FFAFD1389A8FD19FFC3C3BCFCBCFCC3B5BCFD
%0AC3BCC3B5B5C3C3C3B5BCFD07C3BDC9C8FEC7C8C2C2CAFFFFFFA87D7D7D
%527D52A8FD04FFAE8964FD10896464898964FA3FFD1189AEFD19FFCAFD04
%C3B5B5B5FCB5BCB5B5BCC3BCB5BCC3C3BCB5FCB5FCB5FCB5C3C3BCC3BCB5
%BCCAC3C8C7FEC1C8C7C9FD04FFA8FD067DFD06FFAEFD1189AEFD04893F64
%FD04896464FD0A89A8FD0AFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CA
%A1CAA1BC9ACA9ABC9AC393BC9ABC93C3A1BC9AC393C39AC39ABC9ABC9ABC
%B5B5FCB5B4BAC6CCC0BBC1CFFD04FF7D7D527D7D7DA8FD07FFFD16893F3F
%FA3F3F3FFA3FFD0989AEFD04FFFD04A8FFA8FD2FFFA8CAC3BCC3C3BBC8C6
%FEC0C1C9FD04FFA87D7D527D7DA8FD08FFFD1889648989893F3F898964FD
%0589AEFD04FF537D7DA8FFFFA8FD0BFFA8FD22FFCABCC3C3C3BDC3C1C2C1
%CCC0C8CFFFFFFF7D7D7D52527D7DFD09FFAEFFFD1A89FD043FFA6464895E
%FD05FF7D7DA87DFD0EFFA852FFFFFF76FD1DFFA8FFC3C3C3CACACFC8C8C8
%FEC0CFFD04FF7D7D527D7D7DFD0EFFFD1789AE64648989FA3F3F89AEFD04
%FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA87DFFA85252FFA87DFFA8
%7DA8A852A8A8A8277D7DFF7DFD0FFFCAFD04FFCAC2C8C7FEC1FD04FF7D7D
%7D527D7DA8FD0DFFAEAEFD1C893FFAAEFD0AFFA87DA87DA87DA87DA87DA8
%A8FF76FF7DA87DA8FD0452FD067DA87DA87DA87DFD14FFCAFFCEC8C6C7C9
%FFFFFF7D7D7D527D7D7DFD0FFFAEFFAEFD1B89A8FD16FFA8527D7DA87652
%76A8A852FF527D76FF52A852FF7D7DA8FD0BFFA8FD0BFFC9C8C6C2CAFFFF
%A8527D52527D7DA8FD11FFAEAE8989648964FD1489AEFD16FFA852FF7DA8
%7DA87DA8A87DA87DA8A87D7DA87DA8FF7DFD19FFCECCC0CAFFFFFFA87D7D
%52A87DA8FD14FFAEFFAEAEFD1489A8FD2AFFA8A8FD0CFFA8FD0CFFCFC7C6
%C1FFFFFF7D7D7D52527D7DFD19FF89AEFD1189AEFD09FFA8FD1FFFA8A8FD
%0EFFA8FD0CFFCEC6C1C9FFFFFF7D7D527D7D7DA8FD1BFFFD1089AEFD0AFF
%A8FD3BFFCACCC0C2CBFFFF7D527D527D527DFD1CFFFD0489AE8964FD0789
%5EFD0AFFA8FD0CFFA87DA8A8FD0FFFA8FFFFFF7DFD0BFFA8FD0DFFC9FEC1
%FFFFFFA87D7D7D52A87DFD1FFFAEFFFFAEFD0889AEFD0AFFCBFD0BFF52A8
%A8FF7DFFA8A8FFFFFD04A8FFFF7DFFFFA8FFFF5252FD19FFCFC7C6C2FFFF
%FF7D7D52527D7D7DFD21FFAEFD078983FD0BFF893F6464643F6464643F64
%89CBFD047DA87D7D7D527D7D7D52A87DA8527D52A87DA852FD19FFCFCDC6
%C1CAFFFFA87D7D527D7D7DFD22FFAEFFFFAEFD0489A8FD0AFFFD0AAE89FF
%CBFF7D7D52A8527DA8A17DA87DA8527DFFFD057DA852FD0AFFA8FD0FFFC9
%CCC0C9CBFFA87D7D7D527D52A8FD25FFAE898964AEFD05FFA8A87DFD0EFF
%A87D7DA87DA8FD077DA8FD047DA852A852A852FD1BFFCDC6C1CFFFFF7D7D
%7D527D7D7DFD28FFAEA8FD04FF527DA8A8A8FD12FFA87DFF52FD19FFA8FD
%10FFCEC6C6C2FFFFA8527D52FD047DFD27FFA8FD05FFA87DA87DFFA8FD11
%FFA87D7DA8FD1AFFA8FD0FFFCFCDC6C7CAFFFF7D7D7D527D7D7DFD2FFFA8
%FFFFFFA8FD3FFFC8CCC0C9CBFF7D7D7D52527D52A8FD26FFA8FD0AFFA8FD
%0CFFA87D7D7DFD04FF7D7DFFA87DA8FF7DA8FD12FFA8FD11FFC8FEC1FFFF
%FF7D7D7D527D7D7DFD32FFAFFD0BFFA852A852A8FFA8FF527DFFFF52A8FF
%7DA8FD24FFCEC6C6C2FFFFA8527D52767D7D7DFD25FFA8FD0BFFCABCC3BC
%C3BCC3BCC3BCC3CAFF527DA8FF52527DA87DFFFF7DA8FFA8FD25FFCFC8C6
%C7CAFFFF7D7D7D527D7D7DA8FD25FFA8FD0AFFFD0AC3BCCAA8FD047D527D
%A87DA8FFA852A8FFA8A8FD11FFA8FD13FFC9CCC6C8CAFFFD047D527D52A8
%FD3CFFA852FF7D7D52A8FF7D527D7DA852A87DFD27FFC8FEC0CFFFFF7D7D
%7D5252A87DA8FD24FFA8FD16FFA8FD05FFA8FFFFFFA8FFFFFFA8FD13FFA8
%FD14FFCFC7C6C1FFFFA8527D7D527D7D7DFD2EFFA8FD2FFFA8FD14FFCEC6
%C6C2FFFF7D7DA852527D7D7DFD2EFFA8FD27FFA8FD1BFFCFC8C6C0C9FFA8
%7D7D7D52FD047DFD21FFA8FD0AFFA8FD0CFFA87DFD09FFA8FD06FFA87DA8
%A8FFFFFFA87DA8FFA87DFFFF7DFD17FFCFCDC6C8FFFFA87D7D7D527D7D7D
%A8FD26FFFD04A8FFFFA9FD0BFFA852A8FD05FFA8FFA852A8FFA8FFA8FF52
%7D7D7DFFFFFFA827FFFFA852FFA87DA8FD17FFC9CCC6C8FFFFFD047D277D
%7D7DA8FD26FF7DA87DFFFFCFCECFCECFCECFCECFCECFCFFF52FFFFA8527D
%A87D52FF7DA87D7D7DA87DA87DA8A8A8527DA87DFFFFA87DFFFFA8FD19FF
%C9CCC6C9FFFFFD047D527D7D7DA8FD1FFFA8FD04FFFD047DFFFFCEFD09CD
%CCCFA97DFFFF52FD047D52A87D27FFFF7D7DFF7D7D52FF527D7DA852FFFF
%A852FFFFA8FD1AFFC8FEC0C3FFFF7D7D7D52527D7D7DA8FD1DFFA8FD06FF
%A8FFA8FD0EFFA852A87D7D76FF7D7D527D527D7DFF7D7DFF7D7DFF527D7D
%FFA852A87DA87D7D7DA8FD1BFFC8FEC0C9FFFFFD047D527D7DA8FD1EFFA8
%FD16FFFD04A8FFA8A8FFA8FFA8CAFFFFFFA8A8FFA8FFFFFFA8A8A8FFA8A8
%A8FFA8A8A8FFA8FD1BFFC8FEC0C2CBFFFD047D527D7D7DA8FD26FFA8FD1A
%FFA87DFD13FFA8FD1BFFC8FEC0C2CFFFFD047D527D7D7DA8FD26FFA8FD19
%FFA8FD31FFC9CCC6C7C9FFFD047D52527D7D7DA8FD18FFA8FD0AFFA8FD2F
%FFA8FD1DFFCFCDC6C6C8CFA8A87D7D52527D7D7DFD24FFCFFD0BFF7D7D52
%7DA8FD06FF7D7DFD35FFCFCEC6FEC6C8A1A87D7D5252527D7DA8FD16FFA8
%FD0CFFA9FFFFFFA9FFFFFFA9FFFFFFA87DFFFFA8FFFFFF7DFF7D7DA8FD37
%FFCDCCC6C6C1CAA2847D7D525252A8A8FD15FFA8FD0AFF7F2B2B552B552B
%552B552B7FFFA852FFA87D27A8527D52A8527D52FD13FFA8FD23FFCACECC
%FEC6C7A0A17D7D5252527D7DFD2CFFA87DFF7D7652A87DFF7D7DA8A87DFD
%3AFFCFCEFEC6C0C79FA1777D5253527DA8FD11FFA8FD17FF7D52FF7D7D52
%7D52A8527D52A852FD13FFA8FD29FFCDCDFEFEC0C098C199764B52527D7D
%A8A8FD16FFA8FD2FFFA8FD2BFFCFCFCDCCC6CCC6C69EBB6E99757576A1A1
%CACACFCAFFCFCFCACFCAFD06FF7DA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA9FFA8FFA8CFADCDC7CCC7
%C79EC6A4C69EC6A4C7A4C7A4C69EA8FD05FFA8A8A8FD05FFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FD39FFCFFFCFFFCFFFCFFFCFFFA8CFFD07FF7DA8FD
%81FFA8FD15FFA8FFA8FD17FFA8FD15FFA8FFA8FD2DFFA8FFA8FD06FFA87D
%A8FD14FFA87D7D7DFD13FFA87D7D7DA8FD13FF7DA87DA8FD13FFA8527E7D
%A8FD12FF7DA8FD047DFD06FFA87DA8FD14FFA8A87DA8FD13FFA852A87DA8
%FD13FF7D7DA8A8FD13FFA87D7DA8A8FD13FF7DA87DA87DFD06FFA8A8A8FD
%14FFFD04A8FD14FFFD04A8FD13FFA8A87EA8FD14FFA8A87DFD13FFA8FFFD
%04A8FDFCFFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-15T00:59:12-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7rqOm+e1m46fMZ7YarFc&#xA;u09z6Uz2ym3JjXhG6iHabmnwnw5VIZVEeWbfzDYafqUt7HcJcLEhiF7cfWg9xHG3qyx0lk4RO9KJ&#xA;VafyjFWSKmocRymiLdyImA+71DirfC+/37F/yLb/AKqYq7hff79i/wCRbf8AVTFXcL7/AH7F/wAi&#xA;2/6qYq7hff79i/5Ft/1UxVbIuohRwkiJqtQY26Eip/vOwxVdwvv9+xf8i2/6qYq7hff79i/5Ft/1&#xA;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&#xA;rsVdirsVdirsVdirsVdirsVdirsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 7.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BookAntiqua</stFnt:fontName>
                  <stFnt:fontFamily>Book Antiqua</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.35</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BKANT.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -278.891 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 278.891 li
354.622 278.891 li
354.622 0 li
cp
clp
20.875 261.519 mo
346.375 261.519 li
346.375 4.64404 li
20.875 4.64404 li
20.875 261.519 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
167.35 28.0352 mo
164.095 27.2788 li
160.84 27.0332 li
159.343 27.5093 li
157.708 27.0952 li
157.682 27.0889 li
154.427 26.4473 li
154.372 26.439 li
152.476 26.2793 li
154.33 25.771 li
157.585 23.5801 li
160.84 20.5029 li
164.095 18.4731 li
167.35 17.2339 li
170.605 13.6973 li
173.86 12.9771 li
177.115 11.2329 li
180.37 13.9219 li
183.625 18.644 li
186.067 26.9111 li
183.625 27.7002 li
180.37 25.7681 li
177.115 27.0049 li
173.86 27.1279 li
170.605 27.311 li
167.35 28.0352 li
157.442 28.061 mo
154.33 27.8979 li
153.998 27.9531 li
152.48 27.2822 li
154.261 27.4331 li
157.442 28.061 li
193.39 76.2368 mo
190.135 73.624 li
189.153 74.1992 li
187.363 67.54 li
187.362 67.5391 li
184.107 55.6118 li
184.089 55.5571 li
180.834 47.4839 li
180.823 47.459 li
177.568 40.4868 li
177.517 40.4009 li
174.294 36.04 li
177.115 34.7261 li
180.37 33.7603 li
183.625 32.7661 li
186.88 34.3491 li
188.291 34.355 li
190.135 40.4868 li
193.39 53.2368 li
196.645 67.1099 li
198.359 75.2988 li
196.645 73.4419 li
193.39 76.2368 li
183.625 76.4253 mo
180.37 75.4683 li
178.963 74.335 li
177.115 68.3062 li
173.86 58.459 li
170.605 51.855 li
167.35 43.4238 li
164.095 39.5649 li
160.84 36.1753 li
160.396 35.5439 li
160.84 35.6079 li
164.095 34.8208 li
167.35 32.4351 li
169.482 32.9028 li
170.273 33.5503 li
173.483 36.626 li
176.683 40.9551 li
179.911 47.8701 li
183.15 55.9028 li
186.398 67.8022 li
186.397 67.8003 li
188.258 74.7222 li
186.88 75.5288 li
183.625 76.4253 li
313.483 257.826 mo
310.654 257.587 li
309.977 257.53 li
307.315 257.221 li
304.06 256.742 li
300.805 256.251 li
297.55 255.707 li
295.076 255.619 li
294.295 255.457 li
293.007 255.211 li
291.04 254.63 li
287.785 253.97 li
284.53 253.324 li
281.275 252.684 li
278.02 251.638 li
277.444 251.525 li
274.765 250.374 li
271.51 249.44 li
268.255 247.518 li
265 246.493 li
261.745 244.945 li
258.49 243.492 li
255.235 240.88 li
251.98 239.125 li
248.725 236.727 li
245.47 233.306 li
242.215 230.907 li
238.96 227.432 li
235.705 224.225 li
232.45 219.835 li
229.195 216.087 li
225.94 210.89 li
222.685 204.793 li
219.43 197.91 li
216.175 191.98 li
212.92 184.023 li
209.665 175.794 li
206.41 167.726 li
203.155 157.875 li
199.9 148.462 li
196.645 138.718 li
193.39 126.994 li
190.862 117.806 li
193.39 119.489 li
196.645 120.042 li
199.9 125.831 li
201.416 124.713 li
202.674 129.18 li
202.674 129.182 li
205.929 140.558 li
205.933 140.571 li
209.188 150.937 li
209.19 150.942 li
212.444 160.942 li
212.449 160.957 li
215.704 170.038 li
215.711 170.055 li
218.966 178.22 li
218.968 178.225 li
222.223 186.115 li
222.238 186.148 li
225.493 192.662 li
228.748 199.175 li
228.777 199.226 li
232.026 204.171 li
235.275 209.666 li
235.3 209.703 li
238.554 214.197 li
241.807 218.782 li
241.841 218.824 li
245.095 222.492 li
248.347 226.251 li
248.369 226.274 li
251.624 229.577 li
251.651 229.603 li
254.906 232.447 li
254.912 232.452 li
258.167 235.204 li
258.18 235.215 li
261.435 237.784 li
261.465 237.805 li
264.72 240.007 li
264.754 240.028 li
268.009 241.863 li
268.019 241.868 li
271.274 243.612 li
271.284 243.617 li
274.525 245.261 li
277.765 247.179 li
277.794 247.195 li
281.049 248.846 li
281.091 248.865 li
284.346 250.149 li
287.601 251.434 li
287.613 251.438 li
290.868 252.631 li
290.904 252.643 li
294.159 253.56 li
297.409 254.476 li
300.657 255.483 li
300.708 255.496 li
303.963 256.138 li
303.977 256.141 li
307.232 256.691 li
307.245 256.693 li
310.48 257.149 li
313.483 257.826 li
329.035 258.379 mo
326.873 258.318 li
326.845 258.317 li
325.692 258.317 li
323.646 258.087 li
323.618 258.084 li
320.397 257.902 li
317.177 257.267 li
317.136 257.261 li
313.908 256.897 li
310.68 256.169 li
310.64 256.162 li
307.392 255.704 li
304.15 255.156 li
300.928 254.52 li
297.698 253.519 li
297.686 253.515 li
294.431 252.598 li
291.194 251.685 li
287.962 250.501 li
284.714 249.219 li
281.48 247.944 li
278.26 246.31 li
275.02 244.392 li
274.991 244.376 li
271.742 242.728 li
268.497 240.99 li
265.264 239.167 li
262.04 236.987 li
258.807 234.435 li
255.561 231.691 li
252.323 228.862 li
249.092 225.584 li
245.848 221.835 li
245.844 221.83 li
242.607 218.181 li
239.368 213.616 li
239.365 213.612 li
236.124 209.136 li
232.88 203.651 li
232.868 203.631 li
229.629 198.702 li
226.387 192.215 li
223.14 185.716 li
219.893 177.845 li
216.642 169.692 li
213.393 160.626 li
210.142 150.638 li
210.142 150.638 li
206.889 140.276 li
203.636 128.907 li
203.636 128.909 li
202.276 124.078 li
203.155 123.43 li
206.41 127.295 li
209.665 127.31 li
211.17 128.003 li
212.92 134.416 li
216.175 144.61 li
219.43 155.374 li
222.685 164.252 li
225.94 171.002 li
229.195 178.957 li
232.45 185.286 li
235.705 192.001 li
238.96 198.013 li
242.215 203.861 li
245.47 209.075 li
248.725 213.059 li
251.98 217.417 li
255.235 221.611 li
258.49 224.339 li
261.745 228.332 li
265 231.307 li
268.255 234.174 li
271.51 235.488 li
274.765 238.065 li
278.02 240.595 li
281.275 243.164 li
284.53 245.147 li
287.785 246.958 li
291.04 249.011 li
294.295 250.286 li
297.55 251.479 li
300.805 252.142 li
304.06 253.379 li
307.315 253.604 li
310.57 254.443 li
313.825 255.467 li
317.08 256.103 li
320.335 257.042 li
323.59 257.357 li
326.845 258.028 li
329.035 258.379 li
.426154 .347417 .353185 .00985733 cmyk
f
24.1299 26.1621 mo
27.3848 26.1621 li
30.6401 26.1621 li
33.895 26.1621 li
37.1499 26.1621 li
40.4048 26.1621 li
43.6602 26.1621 li
46.915 26.1621 li
50.1699 26.1621 li
53.4248 26.1621 li
56.6802 26.1621 li
59.9351 26.1621 li
63.1899 26.1621 li
66.4448 26.1621 li
69.7002 26.1621 li
72.9551 26.1621 li
76.21 26.1621 li
79.4648 26.1621 li
82.7202 26.1621 li
85.9751 26.1621 li
89.23 26.1621 li
92.4849 26.1621 li
95.7402 26.1621 li
98.9951 26.1621 li
102.25 26.1621 li
105.505 26.1621 li
108.76 26.1621 li
112.015 26.1621 li
115.27 26.1621 li
118.525 26.1621 li
121.78 26.1621 li
125.035 26.1621 li
128.29 26.1621 li
131.545 26.1621 li
134.8 26.1621 li
138.055 26.1621 li
141.31 26.1621 li
144.565 26.1621 li
147.82 26.1621 li
151.075 26.1621 li
151.117 26.1641 li
154.372 26.439 li
154.427 26.4473 li
157.682 27.0889 li
157.708 27.0952 li
160.956 27.9189 li
164.205 28.6509 li
164.29 28.6782 li
167.545 30.0542 li
167.666 30.1279 li
170.921 32.7881 li
170.951 32.814 li
174.206 35.9341 li
174.262 35.9971 li
177.517 40.4009 li
177.568 40.4868 li
180.823 47.459 li
180.834 47.4839 li
184.089 55.5571 li
184.107 55.6118 li
187.362 67.5391 li
187.363 67.54 li
190.618 79.6499 li
190.619 79.6528 li
193.874 92.0381 li
193.875 92.042 li
197.13 104.886 li
197.129 104.883 li
200.383 117.355 li
203.636 128.909 li
203.636 128.907 li
206.889 140.276 li
210.142 150.638 li
209.665 150.789 li
210.14 150.633 li
213.393 160.626 li
216.642 169.692 li
219.893 177.845 li
223.14 185.716 li
226.387 192.215 li
229.629 198.702 li
232.868 203.631 li
232.88 203.651 li
236.124 209.136 li
239.365 213.612 li
239.368 213.616 li
242.607 218.181 li
245.844 221.83 li
245.848 221.835 li
249.092 225.584 li
252.323 228.862 li
255.561 231.691 li
258.807 234.435 li
262.04 236.987 li
265.264 239.167 li
268.497 240.99 li
271.742 242.728 li
274.991 244.376 li
275.02 244.392 li
278.26 246.31 li
281.48 247.944 li
284.714 249.219 li
287.962 250.501 li
291.194 251.685 li
294.431 252.598 li
297.686 253.515 li
297.698 253.519 li
300.928 254.52 li
304.15 255.156 li
307.392 255.704 li
310.64 256.162 li
310.68 256.169 li
313.908 256.897 li
317.136 257.261 li
317.177 257.267 li
320.397 257.902 li
323.618 258.084 li
323.646 258.087 li
326.893 258.453 li
330.135 258.727 li
333.369 258.909 li
336.61 258.909 li
336.624 258.909 li
339.872 259.001 li
343.12 259.001 li
346.375 259.001 li
346.375 260.001 li
343.12 260.001 li
339.865 260.001 li
339.851 260.001 li
336.603 259.909 li
333.355 259.909 li
333.327 259.908 li
330.072 259.725 li
330.058 259.724 li
326.803 259.448 li
326.789 259.447 li
323.548 259.082 li
320.307 258.899 li
320.238 258.89 li
317.003 258.252 li
313.769 257.888 li
313.715 257.878 li
310.48 257.149 li
307.245 256.693 li
307.232 256.691 li
303.977 256.141 li
303.963 256.138 li
300.708 255.496 li
300.657 255.483 li
297.409 254.476 li
294.159 253.56 li
290.904 252.643 li
290.868 252.631 li
287.613 251.438 li
287.601 251.434 li
284.346 250.149 li
281.091 248.865 li
281.049 248.846 li
277.794 247.195 li
277.765 247.179 li
274.525 245.261 li
271.284 243.617 li
271.274 243.612 li
268.019 241.868 li
268.009 241.863 li
264.754 240.028 li
264.72 240.007 li
261.465 237.805 li
261.435 237.784 li
258.18 235.215 li
258.167 235.204 li
254.912 232.452 li
254.906 232.447 li
251.651 229.603 li
251.624 229.577 li
248.369 226.274 li
248.347 226.251 li
245.095 222.492 li
241.841 218.824 li
241.807 218.782 li
238.552 214.195 li
238.555 214.199 li
235.3 209.703 li
235.275 209.666 li
232.026 204.171 li
228.777 199.226 li
228.748 199.175 li
225.493 192.662 li
222.238 186.148 li
222.223 186.115 li
218.968 178.225 li
218.966 178.22 li
215.711 170.055 li
215.704 170.038 li
212.449 160.957 li
212.444 160.942 li
209.19 150.942 li
209.188 150.937 li
205.933 140.571 li
205.929 140.558 li
202.674 129.182 li
202.674 129.18 li
199.419 117.621 li
199.416 117.612 li
196.161 105.135 li
196.16 105.132 li
192.905 92.2881 li
192.906 92.292 li
189.651 79.9072 li
189.652 79.9102 li
186.397 67.8003 li
186.398 67.8022 li
183.15 55.9028 li
179.911 47.8701 li
176.683 40.9551 li
173.483 36.626 li
170.273 33.5503 li
167.089 30.9482 li
163.941 29.6172 li
160.73 28.8931 li
160.717 28.8901 li
157.475 28.0669 li
154.261 27.4331 li
151.054 27.1621 li
147.82 27.1621 li
144.565 27.1621 li
141.31 27.1621 li
138.055 27.1621 li
134.8 27.1621 li
131.545 27.1621 li
128.29 27.1621 li
125.035 27.1621 li
121.78 27.1621 li
118.525 27.1621 li
115.27 27.1621 li
112.015 27.1621 li
108.76 27.1621 li
105.505 27.1621 li
102.25 27.1621 li
98.9951 27.1621 li
95.7402 27.1621 li
92.4849 27.1621 li
89.23 27.1621 li
85.9751 27.1621 li
82.7202 27.1621 li
79.4648 27.1621 li
76.21 27.1621 li
72.9551 27.1621 li
69.7002 27.1621 li
66.4448 27.1621 li
63.1899 27.1621 li
59.9351 27.1621 li
56.6802 27.1621 li
53.4248 27.1621 li
50.1699 27.1621 li
46.915 27.1621 li
43.6602 27.1621 li
40.4048 27.1621 li
37.1499 27.1621 li
33.895 27.1621 li
30.6401 27.1621 li
27.3848 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
.67953 .634058 .618097 .562646 cmyk
f
141.799 72.2139 mo
141.677 72.1528 li
138.422 70.8682 li
138.306 70.8223 138.179 70.7988 138.053 70.7988 cv
137.997 70.7988 137.942 70.8032 137.888 70.812 cv
135.172 71.272 li
132.285 68.0981 li
132.16 67.9609 131.994 67.8589 131.816 67.8091 cv
128.561 66.8911 li
128.43 66.8628 li
125.612 66.4658 li
122.606 62.061 li
122.425 61.7959 122.129 61.6343 121.808 61.625 cv
118.553 61.5332 li
118.543 61.5332 118.534 61.5332 118.524 61.5332 cv
118.423 61.5332 118.326 61.5479 118.229 61.5781 cv
115.546 62.4092 li
112.717 59.6191 li
112.538 59.4419 112.295 59.3379 112.043 59.3311 cv
108.802 59.2402 li
106.158 59.0913 li
103.156 52.6602 li
103.026 52.3823 102.772 52.1772 102.472 52.1079 cv
102.399 52.0923 102.325 52.084 102.251 52.084 cv
102.023 52.084 101.797 52.1621 101.617 52.3091 cv
99.1909 54.292 li
96.5562 50.5781 li
96.3682 50.314 96.063 50.1572 95.7402 50.1572 cv
95.7329 50.1572 95.7251 50.1572 95.7178 50.1572 cv
95.3872 50.1641 95.0791 50.3359 94.8999 50.6152 cv
92.5 54.334 li
90.0791 50.4448 li
89.9419 50.271 li
86.687 46.9692 li
86.4932 46.771 86.2339 46.6709 85.9751 46.6709 cv
85.7461 46.6709 85.5161 46.749 85.3291 46.9072 cv
82.8901 48.9702 li
80.269 45.4253 li
80.0801 45.1699 79.7832 45.019 79.4648 45.019 cv
76.21 45.019 li
76.1821 45.02 li
72.9551 45.1108 li
70.0781 45.0293 li
67.0908 42.5029 li
66.9092 42.3501 66.6792 42.2671 66.4448 42.2671 cv
66.3799 42.2671 66.3159 42.2729 66.251 42.2861 cv
63.6108 42.8071 li
60.7329 38.9951 li
60.6221 38.8472 60.4741 38.7349 60.3022 38.667 cv
57.0469 37.3833 li
56.9302 37.3369 56.8052 37.313 56.6792 37.313 cv
56.606 37.313 56.5322 37.3213 56.46 37.3369 cv
53.5059 38.0039 li
50.7271 36.9072 li
47.6172 33.8403 li
47.4302 33.6548 47.1782 33.5522 46.915 33.5522 cv
43.8369 33.5522 li
40.8911 32.4722 li
37.7559 30.0859 li
37.6411 30.0112 li
34.4131 28.1909 li
33.5972 27.6621 li
33.895 27.6621 li
37.1499 27.6621 li
38.2188 27.6621 li
40.4048 29.4229 li
43.6602 30.0059 li
46.915 30.8462 li
50.1699 33.0952 li
53.4248 32.353 li
56.6802 31.3882 li
59.9351 34.1133 li
63.1899 36.1538 li
66.4448 37.0532 li
69.7002 39.397 li
72.9551 40.0503 li
76.21 36.8618 li
79.4648 40.1021 li
82.7202 41.895 li
85.9751 39.6729 li
89.23 45.3721 li
92.4849 45.5889 li
95.7402 40.8633 li
98.9951 46.4272 li
102.25 44.4321 li
105.505 51.3208 li
108.76 50.8843 li
112.015 47.1699 li
115.27 53.0952 li
118.525 49.6021 li
121.78 50.394 li
125.035 55.2729 li
128.29 56.5688 li
131.545 56.7881 li
134.8 60.7031 li
138.055 59.3672 li
138.134 59.2939 li
141.31 70.521 li
141.799 72.2139 li
184.713 93.9102 mo
184.201 93.5493 li
184.032 93.4302 183.831 93.3672 183.625 93.3672 cv
183.597 93.3672 183.569 93.3682 183.541 93.3701 cv
180.926 93.5913 li
177.986 88.3721 li
177.841 88.1133 177.592 87.9351 177.3 87.8799 cv
177.238 87.8682 177.175 87.8618 177.113 87.8618 cv
176.885 87.8618 176.663 87.9399 176.482 88.0879 cv
174.079 90.0522 li
171.436 86.104 li
171.283 85.876 171.043 85.7202 170.772 85.6753 cv
167.517 85.124 li
167.462 85.1152 167.407 85.1099 167.352 85.1099 cv
167.117 85.1099 166.886 85.1929 166.704 85.3462 cv
164.137 87.5171 li
161.671 85.1543 li
158.495 78.1729 li
158.385 77.9302 158.178 77.7393 157.926 77.647 cv
157.817 77.6079 157.701 77.5879 157.585 77.5879 cv
157.437 77.5879 157.288 77.6211 157.153 77.6851 cv
154.665 78.8779 li
151.896 74.897 li
151.749 74.687 151.525 74.54 151.276 74.4893 cv
151.075 73.605 li
147.82 63.1221 li
147.272 60.9712 li
147.82 61.8062 li
151.075 59.9771 li
154.33 64.9409 li
157.585 60.29 li
160.84 67.7432 li
164.095 74.4282 li
167.35 68.0161 li
170.605 65.4893 li
173.86 71.2661 li
177.115 72.8462 li
178.963 74.335 li
180.37 78.9243 li
183.625 89.7329 li
184.713 93.9102 li
147.437 94.0698 mo
144.565 92.501 li
141.31 89.0889 li
138.055 83.835 li
134.8 83.646 li
131.545 80.3931 li
128.29 78.8179 li
125.035 79.1489 li
121.78 74.4902 li
118.525 75.0562 li
115.27 73.7202 li
112.015 73.0742 li
108.76 69.3809 li
105.505 68.605 li
102.25 61.5591 li
98.9951 64.854 li
95.7402 61.2041 li
92.4849 66.5479 li
89.23 56.501 li
85.9751 55.522 li
82.7202 58.7822 li
79.4648 51.8569 li
76.21 54.9858 li
72.9551 52.0879 li
69.7002 52.541 li
66.4448 49.394 li
63.1899 51.5288 li
59.9351 45.0151 li
56.6802 45.1333 li
53.4248 45.6421 li
50.1699 42.3823 li
46.915 38.2271 li
43.6602 39.0522 li
40.4048 37.2622 li
37.1499 34.9272 li
33.895 31.0649 li
31.957 28.9819 li
33.3511 29.8862 li
33.4038 29.918 li
36.5991 31.7192 li
39.7988 34.1548 li
39.8809 34.2173 39.9648 34.2632 40.061 34.2979 cv
43.3159 35.4912 li
43.4272 35.5313 43.541 35.5522 43.6602 35.5522 cv
46.5049 35.5522 li
49.4678 38.4751 li
49.563 38.5679 49.6792 38.644 49.8032 38.6929 cv
53.0581 39.9771 li
53.1748 40.0229 53.2998 40.0469 53.4258 40.0469 cv
53.499 40.0469 53.5732 40.0391 53.645 40.022 cv
56.6001 39.356 li
59.3062 40.4238 li
62.3921 44.5122 li
62.583 44.7651 62.8799 44.9092 63.1899 44.9092 cv
63.2539 44.9092 63.3188 44.9028 63.3838 44.8901 cv
66.167 44.3408 li
69.0542 46.7832 li
69.228 46.9292 69.4448 47.0122 69.6719 47.019 cv
72.9268 47.1108 li
72.9829 47.1108 li
76.2231 47.019 li
78.9609 47.019 li
81.916 51.0171 li
82.0791 51.2378 82.3311 51.3843 82.604 51.416 cv
82.6421 51.4199 82.6802 51.4229 82.7178 51.4229 cv
82.9531 51.4229 83.1851 51.3389 83.3662 51.186 cv
85.9131 49.0322 li
88.4399 51.5962 li
91.6362 56.731 li
91.8159 57.02 92.1362 57.2002 92.4771 57.2021 cv
92.48 57.2021 92.4819 57.2021 92.4849 57.2021 cv
92.8232 57.2021 93.1421 57.0293 93.3252 56.7451 cv
95.7788 52.9399 li
98.1802 56.3223 li
98.3408 56.5503 98.585 56.6982 98.8608 56.7349 cv
98.9063 56.7412 98.9521 56.7441 98.9971 56.7441 cv
99.2261 56.7441 99.4482 56.665 99.6279 56.5181 cv
101.888 54.6709 li
104.599 60.479 li
104.754 60.811 105.082 61.0332 105.449 61.0542 cv
108.704 61.2368 li
108.732 61.2393 li
111.593 61.3188 li
114.568 64.2539 li
114.758 64.4409 115.01 64.542 115.269 64.542 cv
115.368 64.542 115.468 64.5269 115.566 64.4971 cv
118.663 63.5371 li
121.242 63.6099 li
124.209 67.958 li
124.368 68.1919 124.616 68.3462 124.895 68.3853 cv
128.084 68.834 li
130.998 69.6563 li
134.06 73.022 li
134.252 73.2319 134.52 73.3491 134.799 73.3491 cv
134.855 73.3491 134.911 73.3442 134.967 73.335 cv
137.947 72.8311 li
140.859 73.98 li
142.625 75.0752 li
144.565 81.7949 li
147.437 94.0698 li
190.862 117.806 mo
190.135 117.323 li
186.88 116.509 li
183.625 111.389 li
180.37 112.767 li
177.115 104.166 li
173.86 110.633 li
170.605 106.615 li
167.35 103.312 li
164.095 102.715 li
160.84 102.862 li
157.585 96.0093 li
156.35 95.5269 li
154.33 87.9102 li
152.297 78.9761 li
153.509 80.7183 li
153.701 80.9941 154.013 81.147 154.332 81.146 cv
154.477 81.146 154.624 81.1152 154.762 81.0493 cv
157.097 79.9302 li
159.93 86.1572 li
159.982 86.272 160.057 86.3779 160.148 86.4653 cv
163.403 89.584 li
163.596 89.77 163.845 89.8628 164.095 89.8628 cv
164.324 89.8628 164.553 89.7842 164.741 89.626 cv
167.641 87.1743 li
170.014 87.5752 li
173.029 92.0791 li
173.186 92.314 173.434 92.4702 173.713 92.5122 cv
173.762 92.519 173.811 92.5229 173.86 92.5229 cv
174.09 92.5229 174.313 92.4438 174.493 92.2969 cv
176.827 90.3892 li
179.499 95.1333 li
179.677 95.4502 180.01 95.6421 180.37 95.6421 cv
180.398 95.6421 180.426 95.6411 180.454 95.6392 cv
183.347 95.394 li
185.494 96.9072 li
186.88 102.229 li
190.135 115.166 li
190.862 117.806 li
346.375 155.102 mo
343.551 154.784 li
340.535 152.063 li
340.348 151.895 340.11 151.805 339.866 151.805 cv
339.767 151.805 339.667 151.82 339.569 151.851 cv
336.955 152.661 li
334.126 149.234 li
333.933 149 333.647 148.87 333.353 148.87 cv
333.247 148.87 333.139 148.888 333.035 148.923 cv
329.792 150.02 li
327.03 150.876 li
324.223 148.819 li
321.005 145.917 li
320.981 145.896 li
317.726 143.143 li
317.541 142.987 317.311 142.907 317.08 142.907 cv
316.919 142.907 316.757 142.946 316.608 143.025 cv
313.522 144.678 li
310.542 145.014 li
307.4 144.837 li
304.172 144.473 li
304.088 144.467 li
301.349 144.39 li
298.381 139.957 li
298.195 139.678 297.884 139.513 297.55 139.513 cv
297.541 139.513 297.531 139.513 297.522 139.513 cv
294.846 139.588 li
291.893 134.761 li
291.707 134.457 291.38 134.283 291.04 134.283 cv
290.925 134.283 290.809 134.303 290.696 134.344 cv
287.502 135.515 li
284.31 136.234 li
281.381 136.895 li
278.683 135.678 li
275.586 131.226 li
275.396 130.954 275.089 130.797 274.766 130.797 cv
274.702 130.797 274.636 130.803 274.571 130.816 cv
271.426 131.437 li
268.283 131.348 li
268.273 131.348 268.263 131.348 268.253 131.348 cv
268.118 131.348 267.991 131.374 267.866 131.427 cv
265.485 132.433 li
262.644 126.589 li
262.528 126.349 262.317 126.164 262.064 126.079 cv
261.961 126.044 261.853 126.027 261.746 126.027 cv
261.589 126.027 261.434 126.063 261.293 126.135 cv
258.717 127.441 li
255.975 124.427 li
255.783 124.216 255.514 124.1 255.236 124.1 cv
255.162 124.1 255.088 124.108 255.015 124.125 cv
251.925 124.821 li
249.039 124.496 li
245.961 122.761 li
245.845 122.696 245.714 122.653 245.582 122.638 cv
242.742 122.318 li
239.745 118.518 li
239.677 118.431 239.597 118.358 239.504 118.298 cv
236.249 116.188 li
236.084 116.081 235.896 116.026 235.706 116.026 cv
235.598 116.026 235.49 116.044 235.385 116.08 cv
232.654 117.003 li
229.979 114.817 li
226.818 109.025 li
226.688 108.787 226.466 108.612 226.205 108.54 cv
226.118 108.516 226.029 108.504 225.94 108.504 cv
225.763 108.504 225.586 108.551 225.431 108.643 cv
222.571 110.336 li
219.75 109.382 li
219.597 109.344 li
216.469 108.815 li
213.583 107.513 li
210.486 103.062 li
210.298 102.792 209.992 102.633 209.665 102.633 cv
209.656 102.633 209.646 102.633 209.637 102.633 cv
206.817 102.712 li
203.969 99.8232 li
203.155 96.5859 li
199.9 82.665 li
198.359 75.2988 li
199.9 76.9692 li
203.155 75.6211 li
206.41 78.2231 li
209.665 78.0073 li
212.92 86.3271 li
216.175 85.2842 li
219.43 84.5532 li
222.685 89.6709 li
225.94 83.627 li
229.195 90.0933 li
232.45 91.9531 li
235.705 88.7632 li
238.96 89.4712 li
242.215 95.4902 li
245.47 94.5269 li
248.725 99.2681 li
251.98 95.79 li
255.235 97.105 li
258.49 97.2212 li
261.745 96.2368 li
265 105.673 li
268.255 105.533 li
271.51 100.756 li
274.765 97.7061 li
278.02 108.157 li
281.275 109.325 li
284.53 107.948 li
287.785 104.199 li
291.04 101.973 li
294.295 110.382 li
297.55 109.679 li
300.805 118.755 li
304.06 115.321 li
307.315 114.867 li
310.57 114.63 li
313.825 111.837 li
317.08 112.718 li
320.335 115.575 li
323.59 117.734 li
326.845 119.228 li
330.1 119.094 li
333.355 115.608 li
336.61 117.442 li
339.865 116.323 li
343.12 121.73 li
346.375 120.999 li
346.375 155.102 li
346.375 185.957 mo
343.12 184.818 li
339.865 183.78 li
336.61 184.658 li
333.355 179.368 li
330.1 178.675 li
326.845 180.294 li
323.59 177.338 li
320.335 173.911 li
317.08 171.32 li
313.825 174.988 li
310.57 173.523 li
307.315 173.021 li
304.06 172.036 li
300.805 169.187 li
297.55 167.754 li
294.295 167.37 li
291.04 164.587 li
287.785 164.949 li
284.53 163.309 li
281.275 163.518 li
278.02 161.846 li
274.765 161.804 li
271.51 160.563 li
268.255 156.589 li
265 158.939 li
261.745 154.579 li
258.49 156.72 li
255.235 150.44 li
251.98 152.818 li
248.725 149.326 li
245.47 149.902 li
242.215 148.459 li
238.96 145.948 li
235.705 142.727 li
232.45 142.079 li
229.195 138.785 li
225.94 133.324 li
222.685 131.704 li
219.43 134.054 li
216.175 132.422 li
212.92 128.809 li
211.17 128.003 li
209.665 122.491 li
206.41 109.531 li
204.931 103.648 li
205.698 104.426 li
205.887 104.618 206.142 104.724 206.409 104.724 cv
206.419 104.724 206.429 104.724 206.438 104.724 cv
209.153 104.647 li
212.099 108.882 li
212.202 109.03 212.345 109.149 212.509 109.223 cv
215.764 110.691 li
216.008 110.765 li
219.185 111.302 li
222.365 112.378 li
222.47 112.413 222.578 112.431 222.686 112.431 cv
222.863 112.431 223.038 112.384 223.194 112.291 cv
225.558 110.892 li
228.317 115.946 li
228.378 116.057 228.464 116.162 228.563 116.241 cv
231.817 118.902 li
231.998 119.05 232.223 119.128 232.45 119.128 cv
232.558 119.128 232.666 119.11 232.77 119.075 cv
235.567 118.129 li
238.277 119.886 li
241.43 123.884 li
241.595 124.094 241.837 124.229 242.103 124.259 cv
245.156 124.603 li
248.234 126.338 li
248.35 126.403 248.481 126.446 248.613 126.461 cv
251.868 126.828 li
251.905 126.832 251.942 126.834 251.98 126.834 cv
252.054 126.834 252.128 126.826 252.2 126.809 cv
254.887 126.204 li
257.75 129.351 li
257.945 129.565 258.215 129.678 258.49 129.678 cv
258.644 129.678 258.799 129.643 258.942 129.57 cv
261.29 128.379 li
264.101 134.161 li
264.273 134.515 264.629 134.724 265.001 134.724 cv
265.131 134.724 265.263 134.698 265.389 134.645 cv
268.444 133.353 li
271.482 133.439 li
271.704 133.42 li
274.317 132.905 li
277.199 137.047 li
277.302 137.195 277.445 137.314 277.609 137.387 cv
280.864 138.855 li
280.994 138.914 281.134 138.944 281.274 138.944 cv
281.348 138.944 281.422 138.936 281.495 138.919 cv
284.75 138.185 li
288.005 137.451 li
288.129 137.415 li
290.615 136.504 li
293.442 141.126 li
293.623 141.423 293.948 141.604 294.295 141.604 cv
294.304 141.604 294.314 141.604 294.323 141.604 cv
297.026 141.528 li
299.974 145.931 li
300.154 146.201 300.453 146.365 300.777 146.375 cv
303.99 146.465 li
307.203 146.827 li
307.259 146.832 li
310.514 147.015 li
310.682 147.011 li
313.938 146.644 li
314.062 146.63 314.186 146.591 314.297 146.532 cv
316.953 145.109 li
319.678 147.414 li
322.92 150.337 li
322.999 150.401 li
326.254 152.787 li
326.428 152.914 326.635 152.98 326.844 152.98 cv
326.944 152.98 327.044 152.965 327.141 152.935 cv
330.396 151.926 li
330.42 151.918 li
333.022 151.038 li
335.839 154.451 li
336.032 154.685 336.318 154.815 336.612 154.815 cv
336.71 154.815 336.809 154.8 336.906 154.77 cv
339.618 153.929 li
342.45 156.484 li
342.606 156.625 342.8 156.712 343.008 156.735 cv
346.263 157.102 li
346.375 156.109 li
346.375 185.957 li
.366217 0 .587488 0 cmyk
f
193.575 97.4829 mo
190.726 95.395 li
190.554 95.269 190.345 95.2021 190.134 95.2021 cv
190.088 95.2021 190.041 95.2051 189.995 95.2109 cv
187.132 95.6152 li
184.713 93.9102 li
183.625 89.7329 li
180.37 78.9243 li
178.963 74.335 li
180.37 75.4683 li
183.625 76.4253 li
186.88 75.5288 li
188.258 74.7222 li
189.652 79.9102 li
192.906 92.29 li
194.175 97.2969 li
193.575 97.4829 li
200.198 101.01 mo
197.471 97.0142 li
197.281 96.7358 196.968 96.5781 196.644 96.5781 cv
196.545 96.5781 196.446 96.5923 196.349 96.623 cv
195.131 97 li
193.875 92.042 li
193.874 92.0381 li
190.619 79.6528 li
190.618 79.6499 li
189.153 74.1992 li
190.135 73.624 li
193.39 76.2368 li
196.645 73.4419 li
198.359 75.2988 li
199.9 82.665 li
203.155 96.5859 li
203.969 99.8232 li
203.867 99.7202 li
203.674 99.5239 203.416 99.4219 203.154 99.4219 cv
202.98 99.4219 202.804 99.4673 202.646 99.561 cv
200.198 101.01 li
199.9 125.831 mo
196.645 120.042 li
193.39 119.489 li
190.862 117.806 li
190.135 115.166 li
186.88 102.229 li
185.494 96.9072 li
186.304 97.478 li
186.474 97.5981 186.674 97.6602 186.878 97.6602 cv
186.925 97.6602 186.972 97.6572 187.02 97.6499 cv
189.872 97.249 li
192.799 99.3931 li
192.973 99.521 193.179 99.5869 193.389 99.5869 cv
193.489 99.5869 193.589 99.5723 193.686 99.542 cv
194.667 99.2378 li
196.16 105.132 li
196.161 105.135 li
199.416 117.612 li
199.419 117.621 li
201.416 124.713 li
199.9 125.831 li
211.17 128.003 mo
209.665 127.31 li
206.41 127.295 li
203.155 123.43 li
202.276 124.078 li
200.383 117.355 li
197.129 104.883 li
197.13 104.886 li
195.623 98.9409 li
196.235 98.752 li
199.074 102.912 li
199.267 103.195 199.58 103.349 199.9 103.349 cv
200.074 103.349 200.25 103.303 200.409 103.209 cv
202.992 101.68 li
204.931 103.648 li
206.41 109.531 li
209.665 122.491 li
211.17 128.003 li
.639124 0 .856565 0 cmyk
f
194.175 97.2969 mo
192.906 92.29 li
189.652 79.9102 li
188.258 74.7222 li
189.153 74.1992 li
190.618 79.6499 li
190.619 79.6528 li
193.874 92.0381 li
193.875 92.042 li
195.131 97 li
194.175 97.2969 li
201.416 124.713 mo
199.419 117.621 li
199.416 117.612 li
196.161 105.135 li
196.16 105.132 li
194.667 99.2378 li
195.623 98.9409 li
197.13 104.886 li
197.129 104.883 li
200.383 117.355 li
202.276 124.078 li
201.416 124.713 li
.876066 .338537 1 .281865 cmyk
f
24.1299 25.6621 mo
27.3848 25.6621 li
27.4692 25.665 li
30.7241 25.9409 li
30.8882 25.9541 31.0459 26.0093 31.1841 26.0981 cv
34.4131 28.1909 li
37.6411 30.0112 li
37.7559 30.0859 li
40.8911 32.4722 li
43.8369 33.5522 li
46.915 33.5522 li
47.1782 33.5522 47.4302 33.6548 47.6172 33.8403 cv
50.7271 36.9072 li
53.5059 38.0039 li
56.46 37.3369 li
56.6548 37.2939 56.8608 37.3091 57.0469 37.3833 cv
60.3022 38.667 li
60.4741 38.7349 60.6221 38.8472 60.7329 38.9951 cv
63.6108 42.8071 li
66.251 42.2861 li
66.5488 42.2271 66.8589 42.3071 67.0908 42.5029 cv
70.0781 45.0293 li
72.9551 45.1108 li
76.1821 45.02 li
76.21 45.019 li
79.4648 45.019 li
79.7832 45.019 80.0801 45.1699 80.269 45.4253 cv
82.8901 48.9702 li
85.3291 46.9072 li
85.728 46.5698 86.3208 46.5972 86.687 46.9692 cv
89.9419 50.271 li
90.0791 50.4448 li
92.5 54.334 li
94.8999 50.6152 li
95.0791 50.3359 95.3872 50.1641 95.7178 50.1572 cv
96.0488 50.1499 96.3638 50.3081 96.5562 50.5781 cv
99.1909 54.292 li
101.617 52.3091 li
101.855 52.1152 102.173 52.04 102.472 52.1079 cv
102.772 52.1772 103.026 52.3823 103.156 52.6602 cv
106.158 59.0913 li
108.802 59.2402 li
112.043 59.3311 li
112.295 59.3379 112.538 59.4419 112.717 59.6191 cv
115.546 62.4092 li
118.229 61.5781 li
118.335 61.5449 118.442 61.5298 118.553 61.5332 cv
121.808 61.625 li
122.129 61.6343 122.425 61.7959 122.606 62.061 cv
125.612 66.4658 li
128.43 66.8628 li
128.561 66.8911 li
131.816 67.8091 li
131.994 67.8589 132.16 67.9609 132.285 68.0981 cv
135.172 71.272 li
137.888 70.812 li
138.066 70.7832 138.255 70.8022 138.422 70.8682 cv
141.677 72.1528 li
141.837 72.2329 li
145.092 74.251 li
145.277 74.3989 li
147.861 77.02 li
150.405 74.7251 li
150.618 74.5342 150.905 74.4419 151.189 74.4751 cv
151.473 74.5073 151.733 74.6621 151.896 74.897 cv
154.665 78.8779 li
157.153 77.6851 li
157.394 77.5698 157.675 77.5562 157.926 77.647 cv
158.178 77.7393 158.385 77.9302 158.495 78.1729 cv
161.671 85.1543 li
164.137 87.5171 li
166.704 85.3462 li
166.928 85.1572 167.228 85.0752 167.517 85.124 cv
170.772 85.6753 li
171.043 85.7202 171.283 85.876 171.436 86.104 cv
174.079 90.0522 li
176.482 88.0879 li
176.712 87.8999 177.009 87.8252 177.3 87.8799 cv
177.592 87.9351 177.841 88.1133 177.986 88.3721 cv
180.926 93.5913 li
183.541 93.3701 li
183.775 93.3511 184.009 93.4141 184.201 93.5493 cv
187.132 95.6152 li
189.995 95.2109 li
190.252 95.1753 190.517 95.2422 190.726 95.395 cv
193.575 97.4829 li
196.349 96.623 li
196.767 96.4932 197.224 96.6519 197.471 97.0142 cv
200.198 101.01 li
202.646 99.561 li
203.041 99.3271 203.545 99.3931 203.867 99.7202 cv
206.817 102.712 li
209.637 102.633 li
209.974 102.623 210.293 102.784 210.486 103.062 cv
213.583 107.513 li
216.469 108.815 li
219.597 109.344 li
219.75 109.382 li
222.571 110.336 li
225.431 108.643 li
225.664 108.505 225.944 108.468 226.205 108.54 cv
226.466 108.612 226.688 108.787 226.818 109.025 cv
229.979 114.817 li
232.654 117.003 li
235.385 116.08 li
235.676 115.981 235.991 116.021 236.249 116.188 cv
239.504 118.298 li
239.597 118.358 239.677 118.431 239.745 118.518 cv
242.742 122.318 li
245.582 122.638 li
245.714 122.653 245.845 122.696 245.961 122.761 cv
249.039 124.496 li
251.925 124.821 li
255.015 124.125 li
255.367 124.045 255.732 124.16 255.975 124.427 cv
258.717 127.441 li
261.293 126.135 li
261.531 126.014 261.811 125.994 262.064 126.079 cv
262.317 126.164 262.528 126.349 262.644 126.589 cv
265.485 132.433 li
267.866 131.427 li
268 131.37 268.137 131.344 268.283 131.348 cv
271.426 131.437 li
274.571 130.816 li
274.962 130.739 275.358 130.899 275.586 131.226 cv
278.683 135.678 li
281.381 136.895 li
284.31 136.234 li
287.502 135.515 li
290.696 134.344 li
291.144 134.18 291.644 134.355 291.893 134.761 cv
294.846 139.588 li
297.522 139.513 li
297.866 139.503 298.189 139.67 298.381 139.957 cv
301.349 144.39 li
304.088 144.467 li
304.172 144.473 li
307.4 144.837 li
310.542 145.014 li
313.522 144.678 li
316.608 143.025 li
316.97 142.832 317.412 142.878 317.726 143.143 cv
320.981 145.896 li
321.005 145.917 li
324.223 148.819 li
327.03 150.876 li
329.792 150.02 li
333.035 148.923 li
333.426 148.791 333.863 148.916 334.126 149.234 cv
336.955 152.661 li
339.569 151.851 li
339.907 151.746 340.272 151.826 340.535 152.063 cv
343.551 154.784 li
346.487 155.115 li
346.263 157.102 li
343.008 156.735 li
342.8 156.712 342.606 156.625 342.45 156.484 cv
339.618 153.929 li
336.906 154.77 li
336.52 154.89 336.096 154.763 335.839 154.451 cv
333.022 151.038 li
330.42 151.918 li
330.396 151.926 li
327.141 152.935 li
326.838 153.029 326.51 152.974 326.254 152.787 cv
322.999 150.401 li
322.92 150.337 li
319.678 147.414 li
316.953 145.109 li
314.297 146.532 li
314.186 146.591 314.062 146.63 313.938 146.644 cv
310.682 147.011 li
310.514 147.015 li
307.259 146.832 li
307.203 146.827 li
303.99 146.465 li
300.777 146.375 li
300.453 146.365 300.154 146.201 299.974 145.931 cv
297.026 141.528 li
294.323 141.604 li
293.966 141.614 293.628 141.431 293.442 141.126 cv
290.615 136.504 li
288.129 137.415 li
288.005 137.451 li
284.75 138.185 li
281.495 138.919 li
281.282 138.967 281.063 138.945 280.864 138.855 cv
277.609 137.387 li
277.445 137.314 277.302 137.195 277.199 137.047 cv
274.317 132.905 li
271.704 133.42 li
271.482 133.439 li
268.444 133.353 li
265.389 134.645 li
264.9 134.852 264.333 134.638 264.101 134.161 cv
261.29 128.379 li
258.942 129.57 li
258.541 129.773 258.053 129.684 257.75 129.351 cv
254.887 126.204 li
252.2 126.809 li
252.092 126.834 251.978 126.84 251.868 126.828 cv
248.613 126.461 li
248.481 126.446 248.35 126.403 248.234 126.338 cv
245.156 124.603 li
242.103 124.259 li
241.837 124.229 241.595 124.094 241.43 123.884 cv
238.277 119.886 li
235.567 118.129 li
232.77 119.075 li
232.444 119.185 232.084 119.12 231.817 118.902 cv
228.563 116.241 li
228.464 116.162 228.378 116.057 228.317 115.946 cv
225.558 110.892 li
223.194 112.291 li
222.942 112.44 222.642 112.472 222.365 112.378 cv
219.185 111.302 li
216.008 110.765 li
215.764 110.691 li
212.509 109.223 li
212.345 109.149 212.202 109.03 212.099 108.882 cv
209.153 104.647 li
206.438 104.724 li
206.16 104.732 205.893 104.625 205.698 104.426 cv
202.992 101.68 li
200.409 103.209 li
199.955 103.478 199.372 103.348 199.074 102.912 cv
196.235 98.752 li
193.686 99.542 li
193.383 99.6362 193.055 99.5811 192.799 99.3931 cv
189.872 97.249 li
187.02 97.6499 li
186.767 97.686 186.513 97.625 186.304 97.478 cv
183.347 95.394 li
180.454 95.6392 li
180.064 95.6709 179.691 95.4741 179.499 95.1333 cv
176.827 90.3892 li
174.493 92.2969 li
174.274 92.4761 173.992 92.5532 173.713 92.5122 cv
173.434 92.4702 173.186 92.314 173.029 92.0791 cv
170.014 87.5752 li
167.641 87.1743 li
164.741 89.626 li
164.349 89.957 163.773 89.939 163.403 89.584 cv
160.148 86.4653 li
160.057 86.3779 159.982 86.272 159.93 86.1572 cv
157.097 79.9302 li
154.762 81.0493 li
154.321 81.2603 153.788 81.1191 153.509 80.7183 cv
150.902 76.9712 li
148.49 79.146 li
148.093 79.5039 147.483 79.4858 147.108 79.106 cv
143.937 75.8882 li
140.859 73.98 li
137.947 72.8311 li
134.967 73.335 li
134.63 73.3921 134.29 73.2739 134.06 73.022 cv
130.998 69.6563 li
128.084 68.834 li
124.895 68.3853 li
124.616 68.3462 124.368 68.1919 124.209 67.958 cv
121.242 63.6099 li
118.663 63.5371 li
115.566 64.4971 li
115.213 64.606 114.831 64.5142 114.568 64.2539 cv
111.593 61.3188 li
108.732 61.2393 li
108.704 61.2368 li
105.449 61.0542 li
105.082 61.0332 104.754 60.811 104.599 60.479 cv
101.888 54.6709 li
99.6279 56.5181 li
99.4121 56.6938 99.1372 56.772 98.8608 56.7349 cv
98.585 56.6982 98.3408 56.5503 98.1802 56.3223 cv
95.7788 52.9399 li
93.3252 56.7451 li
93.1411 57.0313 92.8179 57.2051 92.4771 57.2021 cv
92.1362 57.2002 91.8159 57.02 91.6362 56.731 cv
88.4399 51.5962 li
85.9131 49.0322 li
83.3662 51.186 li
83.1563 51.3643 82.877 51.4482 82.604 51.416 cv
82.3311 51.3843 82.0791 51.2378 81.916 51.0171 cv
78.9609 47.019 li
76.2231 47.019 li
72.9829 47.1108 li
72.9268 47.1108 li
69.6719 47.019 li
69.4448 47.0122 69.228 46.9292 69.0542 46.7832 cv
66.167 44.3408 li
63.3838 44.8901 li
63.0078 44.9639 62.6221 44.8169 62.3921 44.5122 cv
59.3062 40.4238 li
56.6001 39.356 li
53.645 40.022 li
53.4502 40.0659 53.2441 40.0503 53.0581 39.9771 cv
49.8032 38.6929 li
49.6792 38.644 49.563 38.5679 49.4678 38.4751 cv
46.5049 35.5522 li
43.6602 35.5522 li
43.541 35.5522 43.4272 35.5313 43.3159 35.4912 cv
40.061 34.2979 li
39.9648 34.2632 39.8809 34.2173 39.7988 34.1548 cv
36.5991 31.7192 li
33.4038 29.918 li
33.3511 29.8862 li
30.3062 27.9121 li
27.3428 27.6621 li
24.1299 27.6621 li
24.1299 25.6621 li
.626581 0 1 0 cmyk
f
296.62 255.941 mo
294.421 255.755 li
291.207 255.212 li
291.18 255.208 li
287.991 254.759 li
284.801 253.859 li
284.723 253.841 li
281.483 253.201 li
278.253 252.473 li
275.688 251.822 li
274.765 251.485 li
271.51 250.376 li
268.255 249.922 li
265 248.224 li
262.42 246.884 li
265 247.833 li
268.255 248.486 li
271.51 249.562 li
274.765 250.997 li
277.444 251.525 li
278.02 251.772 li
281.275 252.712 li
284.53 253.448 li
287.785 254.303 li
291.04 254.837 li
293.007 255.211 li
294.295 255.592 li
295.076 255.619 li
296.62 255.941 li
0 .503777 .274907 0 cmyk
f
293.007 255.211 mo
291.04 254.837 li
287.785 254.303 li
284.53 253.448 li
281.275 252.712 li
278.02 251.772 li
277.444 251.525 li
278.02 251.638 li
281.275 252.684 li
284.53 253.324 li
287.785 253.97 li
291.04 254.63 li
293.007 255.211 li
309.977 257.53 mo
307.414 257.313 li
304.185 256.949 li
300.944 256.492 li
297.69 256.034 li
297.634 256.027 li
296.62 255.941 li
295.076 255.619 li
297.55 255.707 li
300.805 256.251 li
304.06 256.742 li
307.315 257.221 li
309.977 257.53 li
.194522 .759579 .590387 .0392157 cmyk
f
118.278 145.827 mo
115.581 145.675 li
112.542 143.792 li
112.467 143.75 li
109.212 142.098 li
109.069 142.025 108.915 141.99 108.761 141.99 cv
108.49 141.99 108.223 142.1 108.029 142.307 cv
105.251 145.283 li
102.692 144.201 li
99.4858 142.394 li
99.3379 142.311 99.1641 142.265 98.9951 142.265 cv
95.7402 142.265 li
95.4541 142.265 95.1821 142.387 94.9922 142.601 cv
92.4761 145.438 li
89.9702 142.684 li
89.8628 142.583 li
86.6079 139.922 li
86.4282 139.775 86.2051 139.696 85.9751 139.696 cv
85.9258 139.696 85.877 139.7 85.8281 139.707 cv
85.5488 139.748 85.3008 139.905 85.144 140.14 cv
82.542 144.027 li
80.3081 141.949 li
77.1362 134.172 li
76.9932 133.82 76.665 133.582 76.2871 133.552 cv
76.2612 133.55 76.2349 133.549 76.209 133.549 cv
75.8599 133.549 75.5352 133.731 75.353 134.034 cv
73.0171 137.919 li
70.5869 133.261 li
70.4131 132.928 70.0679 132.724 69.7002 132.724 cv
69.6538 132.724 69.6069 132.727 69.5601 132.733 cv
66.939 133.103 li
64.0298 128.595 li
63.9941 128.542 li
60.7388 124.139 li
60.6831 124.07 li
57.5361 120.521 li
54.3618 113.097 li
51.1211 103.14 li
51.084 103.044 li
47.8511 95.7539 li
44.6118 85.6221 li
44.6152 85.6289 li
41.3779 75.23 li
38.1338 57.127 li
38.123 57.0752 li
34.8682 43.2222 li
34.8521 43.1602 li
31.5972 32.4272 li
31.5039 32.2139 li
28.9351 27.7959 li
29.8091 27.8701 li
30.6401 28.4531 li
33.895 36.1489 li
37.1499 49.8608 li
40.4048 64.2192 li
43.6602 76.1851 li
46.915 88.2173 li
50.1699 92.521 li
53.4248 102.472 li
56.6802 108.13 li
59.9351 114.751 li
63.1899 120.347 li
66.4448 123.562 li
69.7002 123.046 li
72.9551 132.677 li
76.21 124.018 li
79.4648 133.888 li
82.7202 136.299 li
85.9751 130.825 li
89.23 132.646 li
92.4849 135.585 li
95.7402 134.681 li
98.9951 132.981 li
102.25 137.095 li
105.505 134.575 li
108.76 135.52 li
112.015 133.281 li
115.27 138.335 li
118.525 137.848 li
121.78 137.306 li
125.035 126.409 li
128.29 133.863 li
131.545 134.819 li
134.8 132.562 li
138.055 128.65 li
141.31 135.816 li
144.565 136.14 li
147.82 133.775 li
151.075 137.078 li
154.33 134.905 li
157.585 133.465 li
160.84 136.856 li
161.362 136.692 li
164.095 139.323 li
167.35 142.686 li
168.08 144.207 li
167.926 144.099 li
167.757 143.98 167.554 143.917 167.349 143.917 cv
167.312 143.917 167.275 143.918 167.238 143.922 cv
163.983 144.289 li
163.728 144.353 li
161.069 145.402 li
158.277 142.726 li
158.089 142.546 157.839 142.448 157.584 142.448 cv
157.511 142.448 157.438 142.457 157.365 142.473 cv
154.11 143.207 li
153.974 143.237 153.852 143.293 153.739 143.376 cv
151.064 145.336 li
148.396 143.457 li
148.225 143.336 148.023 143.274 147.82 143.274 cv
147.68 143.274 147.54 143.303 147.409 143.362 cv
144.35 144.742 li
141.866 144.742 li
138.904 139.984 li
138.734 139.712 138.447 139.539 138.127 139.515 cv
138.103 139.513 138.078 139.512 138.054 139.512 cv
137.761 139.512 137.482 139.641 137.291 139.867 cv
134.638 143.007 li
132.136 141.174 li
131.959 141.044 131.752 140.981 131.546 140.981 cv
131.281 140.981 131.018 141.085 130.823 141.288 cv
128.444 143.769 li
125.875 139.787 li
125.696 139.509 125.388 139.337 125.057 139.329 cv
125.05 139.329 125.042 139.329 125.035 139.329 cv
124.712 139.329 124.407 139.486 124.22 139.75 cv
121.088 144.164 li
118.278 145.827 li
105.505 157.788 mo
102.25 152.838 li
98.9951 153.119 li
95.7402 151.547 li
92.4849 157.746 li
89.23 153.6 li
85.9751 150.179 li
82.7202 154.461 li
79.4648 150.87 li
76.21 144.66 li
72.9551 147.035 li
69.7002 143.972 li
66.4448 144.376 li
63.1899 137.644 li
59.9351 134.363 li
56.6802 133.425 li
53.4248 124.032 li
50.1699 114.011 li
46.915 103.818 li
43.6602 95.4053 li
40.4048 86.3872 li
37.1499 64.6128 li
33.895 50.6323 li
30.6401 36.9409 li
28.4189 30.8882 li
29.7168 33.1182 li
32.9292 43.71 li
36.1699 57.5059 li
39.4209 75.645 li
39.4502 75.7651 li
42.7051 86.2241 li
42.708 86.231 li
45.9619 96.4141 li
46.001 96.5151 li
49.2349 103.808 li
52.4741 113.758 li
52.5049 113.842 li
55.7598 121.457 li
55.8042 121.559 55.8579 121.644 55.9321 121.727 cv
59.1572 125.363 li
62.3672 129.706 li
65.605 134.724 li
65.79 135.012 66.1089 135.182 66.4458 135.182 cv
66.4922 135.182 66.5381 135.179 66.585 135.173 cv
69.1401 134.812 li
72.0679 140.425 li
72.2349 140.744 72.564 140.951 72.9248 140.962 cv
72.9351 140.962 72.9448 140.962 72.9551 140.962 cv
73.3042 140.962 73.6309 140.778 73.812 140.477 cv
76.0381 136.776 li
78.5391 142.908 li
78.5942 143.044 78.6768 143.164 78.7842 143.263 cv
82.0391 146.291 li
82.2251 146.464 82.4678 146.558 82.7202 146.558 cv
82.7578 146.558 82.7969 146.556 82.8359 146.552 cv
83.127 146.518 83.3882 146.358 83.5508 146.115 cv
86.1938 142.167 li
88.54 144.084 li
91.7451 147.607 li
91.9341 147.815 92.2051 147.934 92.4849 147.934 cv
92.4868 147.934 92.4888 147.934 92.4912 147.934 cv
92.7729 147.933 93.0459 147.809 93.2329 147.598 cv
96.1899 144.265 li
98.7329 144.265 li
101.759 145.971 li
101.861 146.021 li
105.116 147.397 li
105.241 147.45 105.374 147.476 105.505 147.476 cv
105.776 147.476 106.043 147.365 106.236 147.158 cv
108.978 144.221 li
111.524 145.513 li
114.743 147.509 li
114.887 147.598 115.045 147.648 115.214 147.658 cv
118.469 147.841 li
118.488 147.842 118.507 147.843 118.526 147.843 cv
118.705 147.843 118.879 147.795 119.034 147.703 cv
122.289 145.777 li
122.41 145.705 122.515 145.609 122.596 145.495 cv
124.996 142.113 li
127.45 145.917 li
127.616 146.175 127.889 146.341 128.194 146.37 cv
128.227 146.374 128.259 146.375 128.291 146.375 cv
128.562 146.375 128.822 146.265 129.012 146.067 cv
131.66 143.305 li
134.209 145.172 li
134.386 145.302 134.593 145.365 134.799 145.365 cv
135.084 145.365 135.367 145.244 135.564 145.011 cv
137.932 142.208 li
140.461 146.27 li
140.643 146.562 140.966 146.742 141.31 146.742 cv
144.565 146.742 li
144.705 146.742 144.849 146.711 144.976 146.653 cv
147.711 145.42 li
150.499 147.385 li
150.672 147.506 150.873 147.567 151.075 147.567 cv
151.283 147.567 151.491 147.503 151.666 147.375 cv
154.753 145.112 li
157.281 144.542 li
160.148 147.291 li
160.338 147.472 160.586 147.568 160.839 147.568 cv
160.963 147.568 161.087 147.545 161.207 147.499 cv
164.339 146.262 li
167.085 145.952 li
169.854 147.904 li
170.605 149.468 li
172.729 152.635 li
170.605 154.022 li
167.35 153.093 li
164.095 154.362 li
160.84 155.884 li
157.585 153.025 li
154.33 153.106 li
151.075 155.679 li
147.82 154.321 li
144.565 154.96 li
141.31 155.258 li
138.055 151.818 li
134.8 155.6 li
131.545 148.933 li
128.29 156.34 li
125.035 153.489 li
121.78 152.285 li
118.525 155.497 li
115.27 154.692 li
112.015 155.472 li
108.76 150.23 li
105.505 157.788 li
177.115 159.538 mo
174.966 154.494 li
177.115 154.833 li
179.628 157.25 li
177.115 159.538 li
212.624 200.14 mo
209.665 194.486 li
206.41 188.352 li
203.155 182.075 li
199.9 176.491 li
196.645 167.435 li
193.39 161.613 li
190.678 156.264 li
193.39 159.733 li
196.645 166.615 li
199.9 174.157 li
203.155 180.551 li
206.41 187.022 li
209.665 193.335 li
212.624 200.14 li
240.363 234.624 mo
238.96 233.989 li
235.705 231.4 li
232.45 229.027 li
229.195 224.94 li
225.94 221.239 li
222.685 216.414 li
219.43 211.411 li
216.175 206.077 li
213.919 202.356 li
216.175 205.817 li
219.43 211.302 li
222.685 215.832 li
225.94 220.993 li
229.195 224.078 li
232.45 226.889 li
235.705 230.719 li
238.96 232.962 li
240.363 234.624 li
260.955 246.175 mo
258.49 245.06 li
255.235 243.799 li
253.332 242.484 li
255.235 243.261 li
258.49 244.741 li
260.955 246.175 li
0 .503777 .274907 0 cmyk
f
29.8091 27.8701 mo
28.9351 27.7959 li
28.8569 27.6621 li
29.5122 27.6621 li
29.8091 27.8701 li
.660639 .197177 1 .0394903 cmyk
f
185.189 144.039 mo
183.625 142.19 li
180.37 138.991 li
177.115 139.133 li
173.86 135.689 li
173.338 134.449 li
173.86 133.353 li
177.115 137.843 li
180.37 133.605 li
183.625 139.94 li
185.189 144.039 li
0 .503777 .274907 0 cmyk
f
24.269 25.6719 mo
27.5249 26.1299 li
27.8291 26.1729 28.0952 26.3521 28.249 26.6182 cv
31.5039 32.2139 li
31.5972 32.4272 li
34.8521 43.1602 li
34.8682 43.2222 li
38.123 57.0752 li
38.1338 57.127 li
41.3779 75.23 li
44.6152 85.6289 li
44.6118 85.6221 li
47.8511 95.7539 li
51.084 103.044 li
51.1211 103.14 li
54.3618 113.097 li
57.5361 120.521 li
60.6831 124.07 li
60.7388 124.139 li
63.9941 128.542 li
64.0298 128.595 li
66.939 133.103 li
69.5601 132.733 li
69.979 132.674 70.3911 132.886 70.5869 133.261 cv
73.0171 137.919 li
75.353 134.034 li
75.5488 133.709 75.9092 133.523 76.2871 133.552 cv
76.665 133.582 76.9932 133.82 77.1362 134.172 cv
80.3081 141.949 li
82.542 144.027 li
85.144 140.14 li
85.3008 139.905 85.5488 139.748 85.8281 139.707 cv
86.1069 139.666 86.3892 139.743 86.6079 139.922 cv
89.8628 142.583 li
89.9702 142.684 li
92.4761 145.438 li
94.9922 142.601 li
95.1821 142.387 95.4541 142.265 95.7402 142.265 cv
98.9951 142.265 li
99.1641 142.265 99.3379 142.311 99.4858 142.394 cv
102.692 144.201 li
105.251 145.283 li
108.029 142.307 li
108.332 141.983 108.816 141.897 109.212 142.098 cv
112.467 143.75 li
112.542 143.792 li
115.581 145.675 li
118.278 145.827 li
121.088 144.164 li
124.22 139.75 li
124.411 139.48 124.726 139.322 125.057 139.329 cv
125.388 139.337 125.696 139.509 125.875 139.787 cv
128.444 143.769 li
130.823 141.288 li
131.17 140.927 131.732 140.878 132.136 141.174 cv
134.638 143.007 li
137.291 139.867 li
137.498 139.622 137.807 139.492 138.127 139.515 cv
138.447 139.539 138.734 139.712 138.904 139.984 cv
141.866 144.742 li
144.35 144.742 li
147.409 143.362 li
147.732 143.217 148.107 143.253 148.396 143.457 cv
151.064 145.336 li
153.739 143.376 li
153.852 143.293 153.974 143.237 154.11 143.207 cv
157.365 142.473 li
157.691 142.399 158.036 142.495 158.277 142.726 cv
161.069 145.402 li
163.728 144.353 li
163.983 144.289 li
167.238 143.922 li
167.48 143.895 167.727 143.958 167.926 144.099 cv
170.382 145.829 li
173.056 142.212 li
173.261 141.935 173.591 141.783 173.935 141.809 cv
174.278 141.835 174.583 142.034 174.744 142.338 cv
177.333 147.227 li
179.63 144.702 li
179.83 144.483 180.119 144.362 180.416 144.376 cv
180.712 144.389 180.989 144.536 181.168 144.772 cv
184.423 149.084 li
184.506 149.213 li
187.761 155.268 li
187.79 155.328 li
191.021 162.431 li
194.247 167.795 li
194.304 167.905 li
197.559 175.244 li
200.807 182.568 li
204.049 189.238 li
207.284 195.529 li
210.522 200.913 li
210.557 200.977 li
213.776 207.328 li
216.985 211.759 li
216.99 211.767 li
220.238 216.343 li
223.48 220.73 li
226.677 224.785 li
229.871 227.755 li
233.12 230.685 li
233.131 230.696 li
236.329 233.67 li
239.52 235.829 li
239.652 235.935 li
242.783 238.935 li
245.881 240.333 li
245.961 240.373 li
249.197 242.197 li
252.379 243.812 li
255.579 244.984 li
255.667 245.021 li
258.922 246.582 li
258.962 246.601 li
262.109 248.287 li
265.246 249.082 li
265.271 249.089 li
268.526 250.006 li
271.756 250.917 li
274.985 251.645 li
275.011 251.651 li
278.253 252.473 li
281.483 253.201 li
284.723 253.841 li
284.801 253.859 li
287.991 254.759 li
291.18 255.208 li
291.207 255.212 li
294.421 255.755 li
297.634 256.027 li
297.69 256.034 li
300.944 256.492 li
304.185 256.949 li
307.414 257.313 li
310.654 257.587 li
313.896 257.861 li
317.108 258.042 li
320.335 258.042 li
320.419 258.045 li
323.632 258.317 li
326.845 258.317 li
326.873 258.318 li
330.114 258.409 li
333.355 258.409 li
336.61 258.409 li
339.865 258.409 li
339.893 258.409 li
343.133 258.501 li
346.375 258.501 li
346.375 260.501 li
343.12 260.501 li
343.092 260.5 li
339.851 260.409 li
336.61 260.409 li
333.355 260.409 li
330.1 260.409 li
330.072 260.409 li
326.831 260.317 li
323.59 260.317 li
323.506 260.314 li
320.292 260.042 li
317.08 260.042 li
317.024 260.041 li
313.769 259.857 li
313.741 259.855 li
310.486 259.58 li
307.231 259.304 li
307.203 259.302 li
303.948 258.935 li
303.92 258.931 li
300.665 258.473 li
297.439 258.018 li
294.211 257.745 li
294.128 257.734 li
290.887 257.186 li
287.646 256.73 li
287.514 256.702 li
284.297 255.795 li
281.082 255.161 li
281.055 255.155 li
277.8 254.421 li
277.774 254.416 li
274.531 253.592 li
271.29 252.862 li
271.239 252.849 li
267.984 251.931 li
264.742 251.018 li
261.499 250.195 li
261.273 250.107 li
258.038 248.375 li
254.846 246.846 li
251.636 245.669 li
251.528 245.623 li
248.273 243.971 li
248.234 243.95 li
245.017 242.137 li
241.804 240.688 li
241.703 240.642 241.603 240.575 241.523 240.498 cv
238.33 237.438 li
235.145 235.284 li
235.024 235.188 li
231.774 232.166 li
228.525 229.235 li
228.514 229.224 li
225.259 226.197 li
225.155 226.084 li
221.9 221.957 li
221.881 221.931 li
218.626 217.527 li
218.614 217.512 li
215.359 212.925 li
215.365 212.932 li
212.11 208.437 li
212.028 208.303 li
208.789 201.912 li
205.553 196.531 li
205.521 196.473 li
202.266 190.143 li
202.256 190.123 li
199.001 183.426 li
198.986 183.394 li
195.731 176.055 li
192.501 168.773 li
189.278 163.413 li
189.225 163.311 li
185.984 156.186 li
182.781 150.228 li
180.298 146.94 li
177.855 149.626 li
177.637 149.866 177.311 149.986 176.99 149.945 cv
176.668 149.904 176.383 149.708 176.231 149.421 cv
173.72 144.678 li
171.409 147.804 li
171.086 148.241 170.473 148.34 170.029 148.027 cv
167.085 145.952 li
164.339 146.262 li
161.207 147.499 li
160.842 147.642 160.431 147.561 160.148 147.291 cv
157.281 144.542 li
154.753 145.112 li
151.666 147.375 li
151.32 147.627 150.85 147.632 150.499 147.385 cv
147.711 145.42 li
144.976 146.653 li
144.849 146.711 144.705 146.742 144.565 146.742 cv
141.31 146.742 li
140.966 146.742 140.643 146.562 140.461 146.27 cv
137.932 142.208 li
135.564 145.011 li
135.225 145.412 134.632 145.483 134.209 145.172 cv
131.66 143.305 li
129.012 146.067 li
128.799 146.289 128.5 146.4 128.194 146.37 cv
127.889 146.341 127.616 146.175 127.45 145.917 cv
124.996 142.113 li
122.596 145.495 li
122.515 145.609 122.41 145.705 122.289 145.777 cv
119.034 147.703 li
118.862 147.805 118.668 147.852 118.469 147.841 cv
115.214 147.658 li
115.045 147.648 114.887 147.598 114.743 147.509 cv
111.524 145.513 li
108.978 144.221 li
106.236 147.158 li
105.949 147.465 105.502 147.56 105.116 147.397 cv
101.861 146.021 li
101.759 145.971 li
98.7329 144.265 li
96.1899 144.265 li
93.2329 147.598 li
93.0459 147.809 92.7729 147.933 92.4912 147.934 cv
92.209 147.936 91.9351 147.816 91.7451 147.607 cv
88.54 144.084 li
86.1938 142.167 li
83.5508 146.115 li
83.3882 146.358 83.127 146.518 82.8359 146.552 cv
82.5439 146.585 82.2539 146.49 82.0391 146.291 cv
78.7842 143.263 li
78.6768 143.164 78.5942 143.044 78.5391 142.908 cv
76.0381 136.776 li
73.812 140.477 li
73.626 140.786 73.2852 140.973 72.9248 140.962 cv
72.564 140.951 72.2349 140.744 72.0679 140.425 cv
69.1401 134.812 li
66.585 135.173 li
66.1992 135.227 65.8159 135.051 65.605 134.724 cv
62.3672 129.706 li
59.1572 125.363 li
55.9321 121.727 li
55.8579 121.644 55.8042 121.559 55.7598 121.457 cv
52.5049 113.842 li
52.4741 113.758 li
49.2349 103.808 li
46.001 96.5151 li
45.9619 96.4141 li
42.708 86.231 li
42.7051 86.2241 li
39.4502 75.7651 li
39.4209 75.645 li
36.1699 57.5059 li
32.9292 43.71 li
29.7168 33.1182 li
26.7651 28.043 li
23.9902 27.6519 li
24.269 25.6719 li
0 .993286 1 0 cmyk
f
138.134 59.2939 mo
138.055 59.0142 li
134.8 45.4072 li
131.545 36.3569 li
130.715 34.7412 li
131.545 33.9243 li
133.51 35.5532 li
133.888 36.1709 li
137.104 45.686 li
140.355 56.1333 li
140.354 56.1299 li
140.622 56.998 li
138.134 59.2939 li
168.696 137.99 mo
167.35 136.441 li
164.095 135.834 li
161.362 136.692 li
160.84 136.19 li
157.585 126.67 li
154.33 117.907 li
151.075 107.668 li
147.82 95.7051 li
147.437 94.0698 li
147.82 94.2788 li
150.146 91.4619 li
153.364 103.523 li
153.375 103.563 li
156.63 114.021 li
156.632 114.029 li
159.887 124.212 li
160 124.449 li
163.246 129.482 li
166.493 134.881 li
166.534 134.945 li
168.696 137.99 li
174.966 154.494 mo
173.86 154.319 li
172.729 152.635 li
173.86 151.896 li
174.966 154.494 li
298.868 259.404 mo
297.55 259.261 li
294.295 258.8 li
291.04 258.363 li
287.785 258.252 li
284.53 257.833 li
281.275 257.093 li
278.02 256.658 li
274.765 255.823 li
271.51 255.393 li
268.255 255.104 li
265 253.228 li
261.745 251.972 li
258.49 251.03 li
255.235 249.755 li
251.98 248.457 li
248.725 247.307 li
245.47 245.761 li
242.215 244.356 li
238.96 241.92 li
235.705 239.738 li
232.45 236.859 li
229.195 234.267 li
225.94 231.681 li
222.685 228.026 li
219.43 224.691 li
216.175 220.455 li
212.92 216.42 li
209.665 211.25 li
206.41 206.173 li
203.155 199.678 li
199.9 194.283 li
196.645 187.135 li
193.39 180.387 li
190.135 172.422 li
186.88 166.418 li
183.625 162.051 li
180.37 157.964 li
179.628 157.25 li
180.37 156.574 li
183.625 159.025 li
186.88 162.771 li
190.135 169.962 li
193.39 176.509 li
196.645 184.229 li
199.9 191.347 li
203.155 198.27 li
206.41 204.427 li
209.665 209.007 li
212.92 214.443 li
216.175 218.464 li
219.43 222.227 li
222.685 226.485 li
225.94 229.673 li
229.195 232.628 li
232.45 235.645 li
235.705 237.949 li
238.96 240.094 li
242.215 242.548 li
245.47 243.838 li
248.725 245.55 li
251.98 247.311 li
255.235 248.373 li
258.49 249.976 li
261.745 251.564 li
265 252.07 li
265.204 252.14 li
267.764 253.583 li
267.88 253.648 268.011 253.691 268.143 253.707 cv
271.344 254.066 li
274.506 254.779 li
277.724 255.777 li
277.8 255.797 li
281.042 256.529 li
284.284 257.351 li
284.418 257.375 li
287.673 257.742 li
290.928 258.109 li
294.142 258.472 li
297.356 259.106 li
298.868 259.404 li
.0287785 0 .489662 0 cmyk
f
145.551 74.6772 mo
145.277 74.3989 li
145.092 74.251 li
141.837 72.2329 li
141.799 72.2139 li
141.31 70.521 li
138.134 59.2939 li
140.622 56.998 li
143.6 66.6519 li
145.551 74.6772 li
147.82 94.2788 mo
147.437 94.0698 li
144.565 81.7949 li
142.625 75.0752 li
143.937 75.8882 li
146.47 78.458 li
146.848 80.0161 li
146.859 80.0571 li
150.111 91.3301 li
150.146 91.4619 li
147.82 94.2788 li
.272251 0 .844724 0 cmyk
f
146.47 78.458 mo
143.937 75.8882 li
142.625 75.0752 li
141.799 72.2139 li
141.837 72.2329 li
145.092 74.251 li
145.277 74.3989 li
145.551 74.6772 li
146.47 78.458 li
.528679 0 1 0 cmyk
f
170.382 145.829 mo
168.08 144.207 li
167.35 142.686 li
164.095 139.323 li
161.362 136.692 li
164.095 135.834 li
167.35 136.441 li
168.696 137.99 li
169.75 139.476 li
171.955 143.701 li
170.382 145.829 li
265.204 252.14 mo
265 252.07 li
261.745 251.564 li
258.49 249.976 li
255.235 248.373 li
251.98 247.311 li
248.725 245.55 li
245.47 243.838 li
242.215 242.548 li
238.96 240.094 li
235.705 237.949 li
232.45 235.645 li
229.195 232.628 li
225.94 229.673 li
222.685 226.485 li
219.43 222.227 li
216.175 218.464 li
212.92 214.443 li
209.665 209.007 li
206.41 204.427 li
203.155 198.27 li
199.9 191.347 li
196.645 184.229 li
193.39 176.509 li
190.135 169.962 li
186.88 162.771 li
183.625 159.025 li
180.37 156.574 li
179.628 157.25 li
177.115 154.833 li
174.966 154.494 li
173.86 151.896 li
172.729 152.635 li
170.605 149.468 li
169.854 147.904 li
170.029 148.027 li
170.204 148.15 170.405 148.21 170.604 148.21 cv
170.911 148.21 171.213 148.069 171.409 147.804 cv
172.984 145.674 li
173.07 145.829 173.198 145.961 173.351 146.052 cv
174.948 146.998 li
176.231 149.421 li
176.383 149.708 176.668 149.904 176.99 149.945 cv
177.031 149.95 177.073 149.953 177.114 149.953 cv
177.393 149.953 177.665 149.835 177.855 149.626 cv
178.516 148.898 li
179.756 149.492 li
182.858 152.989 li
186.014 156.992 li
189.217 164.395 li
189.223 164.408 li
192.478 171.656 li
192.501 171.703 li
195.735 177.992 li
198.973 186.023 li
199.039 186.158 li
202.278 191.635 li
205.518 198.028 li
205.546 198.078 li
208.801 203.675 li
208.797 203.668 li
212.052 209.356 li
212.099 209.431 li
215.353 214.108 li
218.604 218.873 li
218.645 218.928 li
221.896 223.052 li
225.148 227.268 li
225.248 227.379 li
228.493 230.489 li
231.738 233.781 li
231.817 233.854 li
235.072 236.514 li
235.114 236.546 li
238.369 238.932 li
238.433 238.975 li
241.688 240.993 li
241.724 241.014 li
244.96 242.839 li
248.198 244.846 li
248.381 244.935 li
251.57 246.104 li
254.763 247.814 li
254.868 247.862 li
258.123 249.147 li
258.146 249.155 li
261.367 250.336 li
264.548 251.77 li
265.204 252.14 li
0 .257572 .729152 0 cmyk
f
170.604 148.21 mo
170.405 148.21 170.204 148.15 170.029 148.027 cv
169.854 147.904 li
168.08 144.207 li
170.382 145.829 li
171.955 143.701 li
172.973 145.654 li
172.977 145.661 172.98 145.667 172.984 145.674 cv
171.409 147.804 li
171.213 148.069 170.911 148.21 170.604 148.21 cv
177.114 149.953 mo
177.073 149.953 177.031 149.95 176.99 149.945 cv
176.668 149.904 176.383 149.708 176.231 149.421 cv
174.948 146.998 li
176.606 147.978 li
176.683 148.02 li
178.516 148.898 li
177.855 149.626 li
177.665 149.835 177.393 149.953 177.114 149.953 cv
301.942 257.798 mo
300.917 257.77 li
300.83 257.752 li
301.942 257.798 li
0 .74377 1 0 cmyk
f
147.272 60.9712 mo
144.565 56.8452 li
142.577 56.5513 li
142.266 55.541 li
142.265 55.5381 li
139.01 45.0801 li
139.002 45.0571 li
135.931 35.9673 li
138.055 34.7368 li
140.039 36.9692 li
141.31 40.604 li
144.565 50.3408 li
147.272 60.9712 li
171.448 138.418 mo
171.421 138.375 li
168.188 133.819 li
164.952 128.438 li
164.935 128.411 li
161.752 123.476 li
158.538 113.42 li
158.54 113.427 li
155.291 102.987 li
152.391 92.1172 li
154.33 94.7393 li
156.35 95.5269 li
157.585 100.182 li
160.84 111.048 li
164.095 118.159 li
167.35 125.764 li
170.605 127.964 li
173.338 134.449 li
171.448 138.418 li
190.678 156.264 mo
190.135 155.569 li
186.88 148.469 li
185.189 144.039 li
186.88 146.036 li
190.135 155.193 li
190.678 156.264 li
213.919 202.356 mo
212.92 200.822 li
212.624 200.14 li
212.92 200.708 li
213.919 202.356 li
253.332 242.484 mo
251.98 241.932 li
248.725 240.429 li
245.47 238.471 li
242.215 236.814 li
240.363 234.624 li
242.215 235.458 li
245.47 237.78 li
248.725 240.332 li
251.98 241.55 li
253.332 242.484 li
262.42 246.884 mo
261.745 246.635 li
260.955 246.175 li
261.745 246.533 li
262.42 246.884 li
.0287785 0 .489662 0 cmyk
f
148.121 76.7852 mo
145.537 66.1499 li
145.521 66.0908 li
142.577 56.5513 li
144.565 56.8452 li
147.272 60.9712 li
147.82 63.1221 li
151.075 73.605 li
151.276 74.4893 li
151.247 74.4829 151.218 74.478 151.189 74.4751 cv
151.152 74.4702 151.114 74.4683 151.076 74.4683 cv
150.83 74.4683 150.589 74.5601 150.405 74.7251 cv
148.121 76.7852 li
156.35 95.5269 mo
154.33 94.7393 li
152.391 92.1172 li
152.041 90.8062 li
152.036 90.7871 li
148.787 79.5239 li
148.658 78.9951 li
150.902 76.9712 li
152.297 78.9761 li
154.33 87.9102 li
156.35 95.5269 li
.272251 0 .844724 0 cmyk
f
148.658 78.9951 mo
148.121 76.7852 li
150.405 74.7251 li
150.589 74.5601 150.83 74.4683 151.076 74.4683 cv
151.114 74.4683 151.152 74.4702 151.189 74.4751 cv
151.218 74.478 151.247 74.4829 151.276 74.4893 cv
152.297 78.9761 li
150.902 76.9712 li
148.658 78.9951 li
.528679 0 1 0 cmyk
f
181.075 147.968 mo
180.995 147.889 180.903 147.824 180.802 147.776 cv
179.922 147.354 li
180.298 146.94 li
181.075 147.968 li
275.688 251.822 mo
275.011 251.651 li
274.985 251.645 li
271.756 250.917 li
268.526 250.006 li
265.271 249.089 li
265.246 249.082 li
262.109 248.287 li
258.962 246.601 li
258.922 246.582 li
255.667 245.021 li
255.579 244.984 li
252.379 243.812 li
249.197 242.197 li
245.961 240.373 li
245.881 240.333 li
242.783 238.935 li
239.652 235.935 li
239.52 235.829 li
236.329 233.67 li
233.131 230.696 li
233.12 230.685 li
229.871 227.755 li
226.677 224.785 li
223.48 220.73 li
220.238 216.343 li
216.99 211.767 li
216.985 211.759 li
213.776 207.328 li
210.557 200.977 li
210.522 200.913 li
207.284 195.529 li
204.049 189.238 li
200.807 182.568 li
197.559 175.244 li
194.304 167.905 li
194.247 167.795 li
191.021 162.431 li
187.79 155.328 li
187.761 155.268 li
184.506 149.213 li
184.423 149.084 li
181.168 144.772 li
180.989 144.536 180.712 144.389 180.416 144.376 cv
180.401 144.375 180.386 144.375 180.371 144.375 cv
180.09 144.375 179.82 144.494 179.63 144.702 cv
178.039 146.452 li
177.586 146.235 li
176.452 145.563 li
174.744 142.338 li
174.583 142.034 174.278 141.835 173.935 141.809 cv
173.909 141.807 173.884 141.806 173.859 141.806 cv
173.661 141.806 173.47 141.865 173.308 141.972 cv
171.492 138.49 li
171.448 138.418 li
173.338 134.449 li
173.86 135.689 li
177.115 139.133 li
180.37 138.991 li
183.625 142.19 li
185.189 144.039 li
186.88 148.469 li
190.135 155.569 li
190.678 156.264 li
193.39 161.613 li
196.645 167.435 li
199.9 176.491 li
203.155 182.075 li
206.41 188.352 li
209.665 194.486 li
212.624 200.14 li
212.92 200.822 li
213.919 202.356 li
216.175 206.077 li
219.43 211.411 li
222.685 216.414 li
225.94 221.239 li
229.195 224.94 li
232.45 229.027 li
235.705 231.4 li
238.96 233.989 li
240.363 234.624 li
242.215 236.814 li
245.47 238.471 li
248.725 240.429 li
251.98 241.932 li
253.332 242.484 li
255.235 243.799 li
258.49 245.06 li
260.955 246.175 li
261.745 246.635 li
262.42 246.884 li
265 248.224 li
268.255 249.922 li
271.51 250.376 li
274.765 251.485 li
275.688 251.822 li
0 .257572 .729152 0 cmyk
f
176.452 145.563 mo
174.615 144.476 li
173.308 141.972 li
173.47 141.865 173.661 141.806 173.859 141.806 cv
173.884 141.806 173.909 141.807 173.935 141.809 cv
174.278 141.835 174.583 142.034 174.744 142.338 cv
176.452 145.563 li
300.771 257.741 mo
297.744 257.143 li
294.489 256.501 li
294.407 256.489 li
291.152 256.123 li
287.897 255.755 li
284.71 255.395 li
281.521 254.587 li
281.495 254.58 li
278.278 253.855 li
275.061 252.858 li
274.985 252.837 li
271.73 252.103 li
271.622 252.085 li
268.569 251.741 li
265.491 250.006 li
265.411 249.965 li
262.156 248.499 li
262.089 248.47 li
258.845 247.282 li
255.656 246.023 li
252.452 244.308 li
252.324 244.25 li
249.165 243.093 li
245.997 241.128 li
245.961 241.107 li
242.725 239.283 li
239.52 237.296 li
236.317 234.948 li
233.124 232.339 li
229.907 229.075 li
229.887 229.055 li
226.686 225.987 li
223.477 221.827 li
223.47 221.818 li
220.237 217.717 li
217.001 212.975 li
216.996 212.967 li
213.766 208.325 li
210.533 202.675 li
210.529 202.669 li
207.289 197.098 li
204.047 190.702 li
204.016 190.645 li
200.799 185.205 li
197.572 177.202 li
197.534 177.119 li
194.291 170.811 li
191.049 163.593 li
187.798 156.078 li
187.665 155.856 li
184.41 151.728 li
184.373 151.684 li
181.118 148.014 li
181.104 147.998 181.09 147.983 181.075 147.968 cv
180.298 146.94 li
179.922 147.354 li
178.039 146.452 li
179.63 144.702 li
179.82 144.494 180.09 144.375 180.371 144.375 cv
180.386 144.375 180.401 144.375 180.416 144.376 cv
180.712 144.389 180.989 144.536 181.168 144.772 cv
184.423 149.084 li
184.506 149.213 li
187.761 155.268 li
187.79 155.328 li
191.021 162.431 li
194.247 167.795 li
194.304 167.905 li
197.559 175.244 li
200.807 182.568 li
204.049 189.238 li
207.284 195.529 li
210.522 200.913 li
210.557 200.977 li
213.776 207.328 li
216.985 211.759 li
216.99 211.767 li
220.238 216.343 li
223.48 220.73 li
226.677 224.785 li
229.871 227.755 li
233.12 230.685 li
233.131 230.696 li
236.329 233.67 li
239.52 235.829 li
239.652 235.935 li
242.783 238.935 li
245.881 240.333 li
245.961 240.373 li
249.197 242.197 li
252.379 243.812 li
255.579 244.984 li
255.667 245.021 li
258.922 246.582 li
258.962 246.601 li
262.109 248.287 li
265.246 249.082 li
265.271 249.089 li
268.526 250.006 li
271.756 250.917 li
274.985 251.645 li
275.011 251.651 li
275.688 251.822 li
278.02 252.676 li
281.275 253.78 li
284.53 254.677 li
287.785 254.941 li
291.04 255.65 li
294.295 255.884 li
297.55 256.735 li
300.771 257.741 li
0 .74377 1 0 cmyk
f
134.975 26.1621 mo
134.8 26.1621 li
131.545 26.1621 li
128.29 26.1621 li
126.621 26.1621 li
126.112 26.0181 li
128.29 25.311 li
131.545 24.4121 li
134.8 25.8701 li
134.975 26.1621 li
131.545 28.189 mo
130.319 28.0771 li
129.237 27.1621 li
131.545 27.1621 li
134.8 27.1621 li
135.575 27.1621 li
135.859 27.6343 li
134.8 27.853 li
131.545 28.189 li
.0287785 0 .489662 0 cmyk
f
135.575 27.1621 mo
134.8 27.1621 li
131.545 27.1621 li
129.237 27.1621 li
128.936 26.9072 li
128.824 26.813 128.702 26.748 128.561 26.709 cv
126.621 26.1621 li
128.29 26.1621 li
131.545 26.1621 li
134.8 26.1621 li
134.975 26.1621 li
135.575 27.1621 li
.567163 .43653 1 .2692 cmyk
f
24.1299 25.6621 mo
27.3848 25.6621 li
30.6401 25.6621 li
33.895 25.6621 li
37.1499 25.6621 li
40.4048 25.6621 li
43.6602 25.6621 li
46.915 25.6621 li
50.1699 25.6621 li
53.4248 25.6621 li
56.6802 25.6621 li
59.9351 25.6621 li
63.1899 25.6621 li
66.4448 25.6621 li
69.7002 25.6621 li
72.9551 25.6621 li
76.21 25.6621 li
79.4648 25.6621 li
82.7202 25.6621 li
85.9751 25.6621 li
89.23 25.6621 li
92.4849 25.6621 li
95.7402 25.6621 li
98.9951 25.6621 li
102.25 25.6621 li
105.505 25.6621 li
108.76 25.6621 li
112.015 25.6621 li
115.27 25.6621 li
118.525 25.6621 li
121.78 25.6621 li
121.808 25.6621 li
125.063 25.7539 li
125.306 25.791 li
128.561 26.709 li
128.702 26.748 128.824 26.813 128.936 26.9072 cv
132.191 29.6602 li
132.398 29.9009 li
135.653 35.2222 li
135.747 35.4243 li
139.002 45.0571 li
139.01 45.0801 li
142.265 55.5381 li
142.266 55.541 li
145.521 66.0908 li
145.537 66.1499 li
148.787 79.5239 li
152.036 90.7871 li
152.041 90.8062 li
155.291 102.987 li
158.54 113.427 li
158.538 113.42 li
161.752 123.476 li
164.935 128.411 li
164.952 128.438 li
168.188 133.819 li
171.421 138.375 li
171.492 138.49 li
174.615 144.476 li
177.586 146.235 li
180.802 147.776 li
180.922 147.833 181.03 147.914 181.118 148.014 cv
184.373 151.684 li
184.41 151.728 li
187.665 155.856 li
187.798 156.078 li
191.049 163.593 li
194.291 170.811 li
197.534 177.119 li
197.572 177.202 li
200.799 185.205 li
204.016 190.645 li
204.047 190.702 li
207.289 197.098 li
210.529 202.669 li
210.533 202.675 li
213.766 208.325 li
216.996 212.967 li
217.001 212.975 li
220.237 217.717 li
223.47 221.818 li
223.477 221.827 li
226.686 225.987 li
229.887 229.055 li
229.907 229.075 li
233.124 232.339 li
236.317 234.948 li
239.52 237.296 li
242.725 239.283 li
245.961 241.107 li
245.997 241.128 li
249.165 243.093 li
252.324 244.25 li
252.452 244.308 li
255.656 246.023 li
258.845 247.282 li
262.089 248.47 li
262.156 248.499 li
265.411 249.965 li
265.491 250.006 li
268.569 251.741 li
271.622 252.085 li
271.73 252.103 li
274.985 252.837 li
275.061 252.858 li
278.278 253.855 li
281.495 254.58 li
281.521 254.587 li
284.71 255.395 li
287.897 255.755 li
291.152 256.123 li
294.407 256.489 li
294.489 256.501 li
297.744 257.143 li
300.917 257.77 li
304.088 257.859 li
304.116 257.86 li
307.371 258.044 li
307.427 258.048 li
310.64 258.411 li
313.853 258.501 li
317.108 258.593 li
320.349 258.684 li
323.59 258.684 li
326.845 258.684 li
330.1 258.684 li
333.355 258.684 li
336.61 258.684 li
339.865 258.684 li
343.12 258.684 li
346.375 258.684 li
346.375 260.684 li
343.12 260.684 li
339.865 260.684 li
336.61 260.684 li
333.355 260.684 li
330.1 260.684 li
326.845 260.684 li
323.59 260.684 li
320.335 260.684 li
320.307 260.684 li
317.052 260.592 li
313.797 260.5 li
310.542 260.409 li
310.458 260.403 li
307.231 260.039 li
304.018 259.858 li
300.777 259.766 li
300.611 259.749 li
297.356 259.106 li
294.142 258.472 li
290.928 258.109 li
287.673 257.742 li
284.418 257.375 li
284.284 257.351 li
281.042 256.529 li
277.8 255.797 li
277.724 255.777 li
274.506 254.779 li
271.344 254.066 li
268.143 253.707 li
268.011 253.691 267.88 253.648 267.764 253.583 cv
264.548 251.77 li
261.367 250.336 li
258.146 249.155 li
258.123 249.147 li
254.868 247.862 li
254.763 247.814 li
251.57 246.104 li
248.381 244.935 li
248.198 244.846 li
244.96 242.839 li
241.724 241.014 li
241.688 240.993 li
238.433 238.975 li
238.369 238.932 li
235.114 236.546 li
235.072 236.514 li
231.817 233.854 li
231.738 233.781 li
228.493 230.489 li
225.248 227.379 li
225.148 227.268 li
221.896 223.052 li
218.645 218.928 li
218.604 218.873 li
215.349 214.102 li
215.354 214.11 li
212.099 209.431 li
212.052 209.356 li
208.797 203.668 li
208.801 203.675 li
205.546 198.078 li
205.518 198.028 li
202.278 191.635 li
199.039 186.158 li
198.973 186.023 li
195.735 177.992 li
192.501 171.703 li
192.478 171.656 li
189.223 164.408 li
189.217 164.395 li
186.014 156.992 li
182.858 152.989 li
179.756 149.492 li
176.683 148.02 li
176.606 147.978 li
173.351 146.052 li
173.191 145.958 173.059 145.818 172.973 145.654 cv
169.75 139.476 li
166.534 134.945 li
166.493 134.881 li
163.246 129.482 li
160 124.449 li
159.887 124.212 li
156.632 114.029 li
156.63 114.021 li
153.375 103.563 li
153.364 103.523 li
150.111 91.3301 li
146.859 80.0571 li
146.848 80.0161 li
143.6 66.6519 li
140.354 56.1299 li
140.355 56.1333 li
137.104 45.686 li
133.888 36.1709 li
130.776 31.083 li
127.81 28.5752 li
124.883 27.75 li
121.765 27.6621 li
118.525 27.6621 li
115.27 27.6621 li
112.015 27.6621 li
108.76 27.6621 li
105.505 27.6621 li
102.25 27.6621 li
98.9951 27.6621 li
95.7402 27.6621 li
92.4849 27.6621 li
89.23 27.6621 li
85.9751 27.6621 li
82.7202 27.6621 li
79.4648 27.6621 li
76.21 27.6621 li
72.9551 27.6621 li
69.7002 27.6621 li
66.4448 27.6621 li
63.1899 27.6621 li
59.9351 27.6621 li
56.6802 27.6621 li
53.4248 27.6621 li
50.1699 27.6621 li
46.915 27.6621 li
43.6602 27.6621 li
40.4048 27.6621 li
37.1499 27.6621 li
33.895 27.6621 li
30.6401 27.6621 li
27.3848 27.6621 li
24.1299 27.6621 li
24.1299 25.6621 li
.0618296 0 .965484 0 cmyk
f
141.31 38.3989 mo
140.039 36.9692 li
138.055 31.2949 li
135.859 27.6343 li
138.055 27.1792 li
138.316 27.1621 li
141.31 27.1621 li
141.632 27.1621 li
144.565 28.9722 li
147.82 28.062 li
151.075 28.436 li
153.998 27.9531 li
154.33 28.1001 li
157.585 31.5449 li
160.396 35.5439 li
157.585 35.1362 li
154.33 36.5771 li
151.075 36.4121 li
147.82 37.8691 li
144.565 34.4272 li
141.31 38.3989 li
317.08 41.0229 mo
313.825 38.8042 li
310.57 39.6069 li
307.315 39.1021 li
304.06 36.8281 li
300.805 34.5923 li
297.55 39.9448 li
294.295 36.4683 li
291.04 34.2012 li
287.785 34.52 li
284.53 35.4609 li
281.275 36.1772 li
278.02 35.5581 li
274.765 36.7651 li
271.51 37.1831 li
268.255 36.1479 li
265 35.1323 li
261.745 33.8882 li
258.49 35.0698 li
255.235 36.6973 li
251.98 36.7793 li
248.725 33.6299 li
245.47 39.144 li
242.215 35.4263 li
238.96 35.7251 li
235.705 35.126 li
232.45 33.6982 li
229.195 32.8252 li
225.94 34.4922 li
222.685 36.2642 li
219.43 35.145 li
216.175 37.2192 li
212.92 37.0913 li
209.665 36.5151 li
206.41 35.876 li
203.155 35.146 li
199.9 34.8672 li
196.645 35.438 li
193.39 34.0342 li
190.135 34.3618 li
188.291 34.355 li
186.88 29.6631 li
186.067 26.9111 li
186.88 26.6489 li
190.135 27.1909 li
193.39 27.3379 li
196.645 27.2061 li
199.9 25.937 li
203.155 27.873 li
206.41 28.0562 li
209.665 27.5903 li
212.92 27.5591 li
216.175 28.7251 li
219.43 28.0601 li
222.685 28.0322 li
225.94 27.7979 li
229.195 27.6401 li
232.45 26.9399 li
235.705 28.4482 li
238.96 27.4702 li
242.215 29.0679 li
245.47 26.0122 li
248.725 27.563 li
251.98 26.9512 li
255.235 27.9609 li
258.49 27.21 li
261.745 26.9331 li
265 27.333 li
268.255 27.4092 li
271.51 27.6509 li
274.765 28.6318 li
278.02 27.6401 li
281.275 26.8242 li
284.53 27.9243 li
287.785 27.769 li
291.04 27.5391 li
294.295 27.8242 li
297.55 28.5361 li
300.805 29.543 li
304.06 29.123 li
307.315 29.2129 li
310.57 30.5522 li
313.825 28.2202 li
317.08 29.8462 li
320.335 28.7031 li
323.59 28.8179 li
326.845 28.3452 li
330.1 25.665 li
333.355 26.8301 li
336.61 28.4839 li
339.865 27.8091 li
343.12 26.9771 li
346.375 27.356 li
346.375 36.564 li
343.12 32.3853 li
339.865 35.7549 li
336.61 35.8188 li
333.355 37.4419 li
330.1 35.4961 li
326.845 34.6821 li
323.59 33.8491 li
320.335 39.4189 li
317.08 41.0229 li
.421149 .392065 0 0 cmyk
f
160.84 35.6079 mo
160.396 35.5439 li
157.585 31.5449 li
154.33 28.1001 li
153.998 27.9531 li
154.33 27.8979 li
157.442 28.061 li
157.475 28.0669 li
160.717 28.8901 li
160.73 28.8931 li
163.941 29.6172 li
167.089 30.9482 li
169.482 32.9028 li
167.35 32.4351 li
164.095 34.8208 li
160.84 35.6079 li
174.294 36.04 mo
174.262 35.9971 li
174.206 35.9341 li
170.951 32.814 li
170.921 32.7881 li
167.666 30.1279 li
167.545 30.0542 li
164.29 28.6782 li
164.205 28.6509 li
160.956 27.9189 li
159.343 27.5093 li
160.84 27.0332 li
164.095 27.2788 li
167.35 28.0352 li
170.605 27.311 li
173.86 27.1279 li
177.115 27.0049 li
180.37 25.7681 li
183.625 27.7002 li
186.067 26.9111 li
186.88 29.6631 li
188.291 34.355 li
186.88 34.3491 li
183.625 32.7661 li
180.37 33.7603 li
177.115 34.7261 li
174.294 36.04 li
.726497 .702541 0 0 cmyk
f
141.632 27.1621 mo
141.31 27.1621 li
138.316 27.1621 li
141.31 26.9629 li
141.632 27.1621 li
173.86 36.2422 mo
170.605 33.1499 li
169.482 32.9028 li
167.089 30.9482 li
163.941 29.6172 li
160.73 28.8931 li
160.717 28.8901 li
157.475 28.0669 li
157.442 28.061 li
157.585 28.0679 li
159.343 27.5093 li
160.956 27.9189 li
164.205 28.6509 li
164.29 28.6782 li
167.545 30.0542 li
167.666 30.1279 li
170.921 32.7881 li
170.951 32.814 li
174.206 35.9341 li
174.262 35.9971 li
174.294 36.04 li
173.86 36.2422 li
1 .98471 .210513 .30695 cmyk
f
60.3569 25.6621 mo
59.9351 25.6621 li
59.5542 25.6621 li
59.9351 25.5762 li
60.3569 25.6621 li
121.78 37.5571 mo
118.525 36.4639 li
115.27 37.2622 li
112.015 36.4043 li
108.76 37.271 li
105.505 36.7319 li
102.25 36.1992 li
98.9951 36.6763 li
95.7402 35.521 li
92.4849 33.291 li
89.23 34.001 li
85.9751 33.9463 li
82.7202 32.5771 li
79.4648 32.1729 li
76.21 33.6509 li
72.9551 33.4868 li
69.7002 31.7139 li
66.4448 31.0229 li
63.1899 30.9302 li
59.9351 29.3911 li
56.8491 27.6621 li
59.9351 27.6621 li
63.1899 27.6621 li
66.4448 27.6621 li
69.7002 27.6621 li
72.9551 27.6621 li
75.0122 27.6621 li
76.21 28.2803 li
77.436 27.6621 li
79.4648 27.6621 li
82.7202 27.6621 li
85.9751 27.6621 li
89.23 27.6621 li
92.4849 27.6621 li
95.377 27.6621 li
95.7402 27.6772 li
95.8032 27.6621 li
98.9951 27.6621 li
101.095 27.6621 li
102.25 28.0981 li
104.197 27.6621 li
105.505 27.6621 li
106.145 27.6621 li
108.76 28.8579 li
112.015 28.2603 li
115.27 29.792 li
118.525 28.1982 li
121.78 28.5659 li
124.428 27.7368 li
124.883 27.75 li
126.119 28.0981 li
128.29 30.019 li
130.715 34.7412 li
128.29 37.1279 li
125.035 35.104 li
121.78 37.5571 li
.421149 .392065 0 0 cmyk
f
133.51 35.5532 mo
131.545 33.9243 li
130.715 34.7412 li
128.29 30.019 li
126.119 28.0981 li
127.81 28.5752 li
130.776 31.083 li
133.51 35.5532 li
140.039 36.9692 mo
138.055 34.7368 li
135.931 35.9673 li
135.747 35.4243 li
135.653 35.2222 li
132.398 29.9009 li
132.191 29.6602 li
130.319 28.0771 li
131.545 28.189 li
134.8 27.853 li
135.859 27.6343 li
138.055 31.2949 li
140.039 36.9692 li
.414832 .372503 .0559396 0 cmyk
f
75.0122 27.6621 mo
72.9551 27.6621 li
69.7002 27.6621 li
66.4448 27.6621 li
63.1899 27.6621 li
59.9351 27.6621 li
56.8491 27.6621 li
56.6802 27.5679 li
53.4248 26.6621 li
56.6802 26.3062 li
59.5542 25.6621 li
59.9351 25.6621 li
60.3569 25.6621 li
63.1899 26.2349 li
66.4448 26.5103 li
69.7002 26.5488 li
72.9551 26.6001 li
75.0122 27.6621 li
95.377 27.6621 mo
92.4849 27.6621 li
89.23 27.6621 li
85.9751 27.6621 li
82.7202 27.6621 li
79.4648 27.6621 li
77.436 27.6621 li
79.4648 26.6382 li
82.7202 26.9683 li
85.9751 26.874 li
89.23 26.6333 li
92.4849 27.5381 li
95.377 27.6621 li
101.095 27.6621 mo
98.9951 27.6621 li
95.8032 27.6621 li
98.9951 26.8701 li
101.095 27.6621 li
106.145 27.6621 mo
105.505 27.6621 li
104.197 27.6621 li
105.505 27.3691 li
106.145 27.6621 li
134.8 36.6211 mo
133.51 35.5532 li
130.776 31.083 li
127.81 28.5752 li
126.119 28.0981 li
124.883 27.75 li
124.428 27.7368 li
125.035 27.5469 li
128.29 27.8921 li
130.319 28.0771 li
132.191 29.6602 li
132.398 29.9009 li
135.653 35.2222 li
135.747 35.4243 li
135.931 35.9673 li
134.8 36.6211 li
.418769 .304936 .70248 .0426032 cmyk
f
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
24.1299 26.6621 mo
27.3848 26.6621 li
30.6401 26.6621 li
33.895 26.6621 li
37.1499 26.6621 li
40.4048 26.6621 li
43.6602 26.6621 li
46.915 26.6621 li
50.1699 26.6621 li
53.4248 26.6621 li
56.6802 26.937 li
59.9351 27.4878 li
63.1899 28.5879 li
66.4448 28.772 li
69.7002 29.1392 li
72.9551 30.0562 li
76.21 30.9741 li
79.4648 29.4141 li
82.7202 29.7813 li
85.9751 30.4229 li
89.23 30.332 li
92.4849 30.4229 li
95.7402 31.6162 li
98.9951 31.7988 li
102.25 32.166 li
105.505 32.0752 li
108.76 33.084 li
112.015 32.3501 li
115.27 33.542 li
118.525 32.3501 li
121.78 33.084 li
125.035 31.3413 li
128.29 32.5332 li
131.545 31.0649 li
134.8 32.2583 li
138.055 30.9741 li
141.31 32.7173 li
144.565 31.708 li
147.82 32.9922 li
151.075 32.4419 li
154.33 32.2583 li
157.585 31.6162 li
160.84 31.3413 li
164.095 31.0649 li
167.35 30.2402 li
170.605 30.2402 li
173.86 31.708 li
177.115 30.8818 li
180.37 29.7813 li
183.625 30.2402 li
186.88 30.5151 li
190.135 30.79 li
193.39 30.6982 li
196.645 31.3413 li
199.9 30.4229 li
203.155 31.5239 li
206.41 31.9829 li
209.665 32.0752 li
212.92 32.3501 li
216.175 32.9922 li
219.43 31.6162 li
222.685 32.166 li
225.94 31.1572 li
229.195 30.2402 li
232.45 30.332 li
235.705 31.7988 li
238.96 31.6162 li
242.215 32.2583 li
245.47 32.625 li
248.725 30.6069 li
251.98 31.8911 li
255.235 32.3501 li
258.49 31.1572 li
261.745 30.4229 li
265 31.249 li
268.255 31.7988 li
271.51 32.4419 li
274.765 32.7173 li
278.02 31.6162 li
281.275 31.5239 li
284.53 31.708 li
287.785 31.1572 li
291.04 30.8818 li
294.295 32.166 li
297.55 34.2759 li
300.805 32.0752 li
304.06 32.9922 li
307.315 34.1851 li
310.57 35.1021 li
313.825 33.542 li
317.08 35.4692 li
320.335 34.0933 li
323.59 31.3413 li
326.845 31.5239 li
330.1 30.6069 li
333.355 32.166 li
336.61 32.166 li
339.865 31.7988 li
343.12 29.689 li
346.375 31.9829 li
.883848 .768521 0 0 cmyk
@
.5 lw
2 lc
346.375 4.64404 mo
346.375 7.89893 li
281.275 4.64404 mo
281.275 7.89893 li
216.175 4.64404 mo
216.175 7.89893 li
151.075 4.64404 mo
151.075 7.89893 li
85.9751 4.64404 mo
85.9751 7.89893 li
20.875 4.64404 mo
20.875 7.89893 li
346.375 261.519 mo
346.375 258.264 li
281.275 261.519 mo
281.275 258.264 li
216.175 261.519 mo
216.175 258.264 li
151.075 261.519 mo
151.075 258.264 li
85.9751 261.519 mo
85.9751 258.264 li
20.875 261.519 mo
20.875 258.264 li
20.875 4.64404 mo
346.375 4.64404 li
20.875 261.519 mo
346.375 261.519 li
.639918 .563928 .533043 .294835 cmyk
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
def
/FontBBox {-665 -325 2000 1040} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE
023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C
071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D
17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63
B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F6
03BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A
7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219
571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A
1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A
55977C35> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IPWBQR+ArialMT /ArialMT findfont ct_VMDictPut
/IPWBQR+ArialMT*1 
[48{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six 
/.notdef /eight 199{/.notdef}rp]
IPWBQR+ArialMT nf
IPWBQR+ArialMT*1 [10.0001 0 0 -10.0001 0 0 ]msf
18.0625 275.644 mo
(02)
[62.292 0 ]xsh
85.9141 275.644 mo
(04)
[59.542 0 ]xsh
151.016 275.644 mo
(06)
[59.542 0 ]xsh
216.109 275.644 mo
(08)
[59.542 0 ]xsh
281.211 275.644 mo
(0)sh
337.938 275.644 mo
(100)sh
346.375 4.64404 mo
343.12 4.64404 li
346.375 41.3403 mo
343.12 41.3403 li
346.375 78.0371 mo
343.12 78.0371 li
346.375 114.733 mo
343.12 114.733 li
346.375 151.43 mo
343.12 151.43 li
346.375 188.126 mo
343.12 188.126 li
346.375 224.823 mo
343.12 224.823 li
346.375 261.519 mo
343.12 261.519 li
20.875 4.64404 mo
24.1299 4.64404 li
20.875 41.3403 mo
24.1299 41.3403 li
20.875 78.0371 mo
24.1299 78.0371 li
20.875 114.733 mo
24.1299 114.733 li
20.875 151.43 mo
24.1299 151.43 li
20.875 188.126 mo
24.1299 188.126 li
20.875 224.823 mo
24.1299 224.823 li
20.875 261.519 mo
24.1299 261.519 li
346.375 261.519 mo
346.375 4.64404 li
20.875 261.519 mo
20.875 4.64404 li
@
IPWBQR+ArialMT*1 [10.0001 0 0 -10.0001 0 0 ]msf
11.25 265.457 mo
(0)sh
5.625 228.753 mo
(20)
[5.56152 0 ]xsh
5.625 192.066 mo
(40)
[5.56152 0 ]xsh
5.625 155.371 mo
(60)
[5.56152 0 ]xsh
5.625 118.667 mo
(80)
[5.56152 0 ]xsh
0 81.9722 mo
(100)sh
0 45.2847 mo
(120)sh
0 8.58154 mo
(140)sh
153.625 261.144 mo
153.625 146.019 li
20.875 146.019 li
20.875 261.144 li
153.625 261.144 li
cp
0 0 0 0 cmyk
f
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BookAntiqua def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 73 /I put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 116 /t put
dup 121 /y put
def
/FontBBox {-136 -311 1154 1036} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/I <1C60D8A8C9B81BEA30DA74C3FEAFF068C542097E3D8028F2C6CA5C3162EB
DE0F1A72F93773A85011F97F9149E1CEFE3BAE675982C7F48DE26532013D9DD4
29B696A7499C85B7FBBF541CABB3F84779F8042F1558660E236D91A1EB7A34D9
4656F68A9C1380E05D855C481893E8F852438E4E017A874FDFDE915A509AFE68
0B> |-
/d <1C60D8A8C9B7D8BE16D35E9B07F4AA3ABC773F184EE6E3111EBEE58F30E7
4A5C093788762907EB397F545117B70EC1296402158CFCA893B8E152B3FED36E
BC67D9C422DFAFFE9752EA098BF93AACA36D5C53A4280D01E7779BF82492241F
45A36D4AC8AF6C6A73199DBE26F54AF4D2F32664041412328449449B9B052454
65D73F29B7B78A009D3DC437AB899F90B7D6DED4621A749FF3E64ED1D2D44A37
38AAA4969F7B94DE8AF8C9F8147A2815FC0785F4CBE2EE70997E006E82C0254B
9A7E6F86D0E9EAFCDC1ABC198649CF35A5DC7EBBED1C5E3BBF99F817AC072E4F
8075791A1E4D4F15CF3F8E678254E97E72C1E1> |-
/e <1C60D8A8C9B75CBB5CD8534012233D131627B1B267A3930139B0D9AA8A92
F0FCE4E7AFD311431CF43A9A551C385DD6E1190F0601E94350FECB845C0D578F
C2722E61FA69CBEAE0F028400C203AA04FEF8893BE5650D0DFFBCA997D1335B8
B2495AB693DB3A958CD3CB0FA9747B60D9A8955AC7A0BFEC37C8FF1727E2163A
214136BBCCC6F627B5031E9AA610E69502F8F74EDF1A6888C4E32F14754B5346
4DAE1272036BF9BB2B561EAF7A7AA400BAEECF1D802F90F1E3E018> |-
/i <1C60D8A8C9B849F23D73D7255A38593E9B1806D32FCF9326305AA22829CA
FCB5F9266D8DE5F7EB0E14C4DD0D3CF85A96105EE760560766A33D7C629DBEBC
66F738B47A4E100D579E6400920AF310AD0CE99182AC975696094C57E14EA2FC
97E32934310813EAC3D3CB531FB424FBDD8C1EAE9E6C55255DA16BE0E39556E9
C8BB9DC14ACDE9A6F41C01481B6BB4C3E8B9B956CE58001D9D2F571B526B031D
13D32DCB63A44C8C7075E40F45A8C2DF2E0EF0F0F1A46C024B35E6375819F35F
0FB783BC9C56C9> |-
/n <1C60D8A8C9B7F51B1816CA1D547B9D412112B1108000BCD479B15D29278E
FF207C440633A34B346F87B40F04E5E8F9C3FD06BA69AD06F44D8C96AE9209E7
498AB8729996BB695FCE0B76D992BC29F7448E4EDD94CFE81D9BB5C9989A683A
B090A7835C786BCAAE46573AD51B72F79C70758202DE28EBE70CE7666E0009E5
8B750E17F7688635342A3A4A4867D024FAC7839AA7003B6BB16E2A4C4D307F4F
8B37258A1025AA52F5F9CA647EC474B0B3E170234ABEBE6186CD896F64E4903D
F224FF80948F28E0808441F171FD8CA35D9629D9DC842C46B11E25C3EDAB94A4
B6D8C6A956862134214DB61684C934E1AA4D366FB59218F15C370355> |-
/t <1C60D8A8C9B82424A9C27E6E9DF811EA1D553D5F4ACDACB82D3B2B7CC8F0
6EDC072CE45357C9C18F37F88428E4FE1AEE57AE61253C2D4CF5DB8D6D9C43C8
368D3E08560346F9C492D1ECBDDE132A2C001B561424A0718442FC769B95787E
D1D857BE704297D20080CCABED98B7B63124151429278CE4D7B1F664E4EACA72
8C10B5C11A88AF87F05984B7ED2C9F6B2F62BD63BFF73BD6DBB861B5A544F0> |-
/y <1C60D8A8C9B7EF321E616E96933530A3C7C80F8F5F05B1D54A7BDD85DB23
97A86DA6E660C260348AE806AB6258A8B48350D63FC27986036F280A9B44EB09
22744F1B7626A6DCA59CFE678766220ED74C2D7F53728CB9654D3ED5D5C8F523
77189EB9E791BD7D8D7B940F0C9E245FA578B5945717E63E283D1F44F6A79401
CDF2B86E7BCA435F5802E051F0A7F39CF6100E72D8EC4EAA21F1CC8D47B43277
E3198D215E9C61D434A749BE934D4B3249605621ACA55895B44D2C38681DA59C
526DEBE51DE100627D70BBD823277C03FFF6545BF8DA88E64CE775ABBFAC23E4
C3C59AD0365D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IPWBQS+BookAntiqua /BookAntiqua findfont ct_VMDictPut
/IPWBQS+BookAntiqua*1 
[73{/.notdef}rp /I 26{/.notdef}rp /d /e 3{/.notdef}rp /i 4{/.notdef}rp 
/n 5{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
IPWBQS+BookAntiqua nf
IPWBQS+BookAntiqua*1 [18 0 0 -18 0 0 ]msf
56.125 164.394 mo
(Identity)sh
1 lw
0 lc
23.875 158.582 mo
53.875 158.582 li
@
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBQS+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B78E05EAF340E05925B0F5DDA3D2BF7E3ADE00218341960418
DE3787C3039EF2918052D5E9865628C603AC1CA5CA13BAA2D32A7EAB4ADE8431
2F2EE5EB5C1536130E8D1475A5B07897AD349E87BA9BD6C0EF99B7C95399C050
70E48EC35738C65187A14719D62269F2FEC062D1600F9E11B35DACA92B0C6282
5968E726C9CDA533AFE6824A37F97E4A0D3747004A0E5DDE4E1885C515AD3DA5
5E36887846664D015DC35E506564F96EE08B74122C1C30EEBAF77C475C1E5319
C5BBA8A16CA47C392C6B988DD47690FE4E7519DE9FDE5F3CBA9D997269751C24
520AC36311D980A7841915B9D48844DFCD3F67B831024A2C537FE51271A7B5C4> |-
/g <1C60D8A8C9B7EF3224D3B78041631F9D19C150B013C9486F45F71BF2A56B
7B9B54BF9D8DF6FAD32B6F73949EF9E0343F1EB00C1F52C0F347249F8DBF5BE8
A24CC49CE0A34763FEC3E783C5063F30CCC90E9D691D1AA8FAE559AE7831FDEC
9A1D6784C0D61DE2BC59171D502CFCCDB53F76BADB6AC3E82E122F70E4D81197
7E5375FA19E71F97E18A2B3D9F01AE808DFCD8C71F92AEA028068C7B0A8FE0AC
8C904DEC53E603B953A8444FEBD1FE2DDF3660D4A8CE2B955266CB5B01A48C7D
0FAD3DE5BF7BD3E475161F97FDC7139BAA73FDF292CAFE4BB58683EF1B418B93
19647A5C88A541FB330AF64ADDF9247E2EB8046CC592D7DBD967FC06410F97B5
E21F65CB018898F686539EE5DA7ABCA72E5822790712311A705361D572598B41
37825DA8A35CCE0E68A5D184B098B33D4E9CA6A540445C40D95D1E42908CE934
81D2761B956631353E27EACD3836CED69B760723AFBF216FE579EB54D16DB5A6
ABB466E8D3DAE9B8BC2036D78B7AE55ADB72962807EAC8C54BFE94C5258DB1CF
5CD7939AF05D6D661AEFA0585A94686363> |-
/m <1C60D8A8C9B59575D65E0375466A10051365C1F9B700B7BF2F2D8376875B
980D65A2E988B5187560D09F280AEABD8CED022380F008D8CF0D19EE36F9267A
BC2486E2D1A3BC37306B1D9B7792006928BA616A517BD2334307BB3D5D25187B
656FDA56961CCAE813702C0933AED88D43C442F0C2BB032CD6CFDC6488339076
3D8413A0A1A128E75C713CC4F34C499586BCAE503B979957C5F48BC7B4DDD264
8AC7F8D1B71533F86FE3FDF310E5013C10D361498D031C0D1E31BE7BDC5A3956
294CEB62B5CB65BA13445F8E425241D12122C169E872ADA11A110E2B460F199E
FA57E60102985E27A6467A2C95B518DAC7AF293893A4996A5E1D9B8F01E8966D
0699F117E2679F6C05A69A9443BAC1505BBC1FE1C38A3AD2CC962D1562CA9DD5
678E5D5E5A6A877E3B7123A932064178A8D5DD2B91FCB6F3BF6F7A36BF1FB902
FB8CE88882AB226FFF3BF7F3B2CCA75BA40D2415AC694B6B878F2F0544269F89
3C801C7DCFD86D1DB8BE3AF07EC5ACC87F89BC4229501E142149D653D4619289
B0D89547545787> |-
/o <1C60D8A8C9B799EBC1FAB6A5BCCBA2E0F3E1D45B556ECD5A7EFF104D7703
44B1C6F7D9B6946DBAF6E65C04338513B8F66AB24ED97FF96A493E44241B17DB
2475C280908440A723BC3E93813D71653F3F8A5A881BF70FDE8A36C48CE9BF5C
083DE2E0C712117179A9F0FFCE4CE5E808F28DB42624C86F00B594BC68B03542
2881291EAE286936AFC4C4DBFC44A0E37875B5503D04A100C0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBQS+BookAntiqua /Encoding get
dup 83 /S put
dup 103 /g put
dup 109 /m put
dup 111 /o put
pop
%ADOEndSubsetFont
/IPWBQS+BookAntiqua*1 
[73{/.notdef}rp /I 9{/.notdef}rp /S 16{/.notdef}rp /d /e /.notdef 
/g /.notdef /i 3{/.notdef}rp /m /n /o 4{/.notdef}rp 
/t 4{/.notdef}rp /y 134{/.notdef}rp]
IPWBQS+BookAntiqua nf
IPWBQS+BookAntiqua*1 [18 0 0 -18 0 0 ]msf
56.125 186.894 mo
(Sigmoid)sh
2 lw
23.875 181.082 mo
53.875 181.082 li
.626581 0 1 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBQS+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7D8BE164AFA37803C79C1969111CB1B8059B5F802734C8432
3E94942E7FE8EBF1D03586CD5C93C191EBAFD51C23C601A8B3FD7AC192724128
1B82B9399E295353629FAA76D3F491A7245977FF655EC58A942861A33DF557D4
39843583370E4B6156F24EAA34688971CF1384B2A4A3C5F16192C4BE13C7061C
2FF8FC4C5E813713871026A2100AC2C9> |-
/R <1C60D8A8C9B651304E8627335C5F8EE86F2009EB4400BBB0BEE562EA9F30
9AC940B09F36B912F22E28A7A9BBCBEFA960C9F3C6912A6730750AF2980946EE
1A99EA162D070193EE3FB2D413459857E1D7CE8AC50F82867B9870EDA3BEFF8D
FF1FE516C056DF341EC0E02A6E3B316502C2F9787F5D5A4592CEFE10DE66E85B
8BAEBABEBBE215D09BD46F36B469BD9C441F469AF47315FA2D8E7F1899E5E97B
AF289FE8F3E8D2CBB744ED75D0DFC486A2EB89ED5276F612D8046F3709E0E938
5CC0130782AA3B315D39CA46CB9276D3CA004198DEECCF3006077CEC78CEB939
34A9861573E033AADB3DD8D518779069C553CA7E30E8AAE9EB409875202C3FA7> |-
/U <1C60D8A8C9B6FF86C364E11E3A12944E7B092AC088392AB5B3E4946BC5C7
7BE11CAA518172F5ABDF2F748A0A915B903F17B23F0433F36F5097EE4EE2F344
CF2FE53A2AE8D71200FB1370BC42BAEF12FC05078F61F9939943D53C5827A79A
984649F9AEAF9D7554B1B3C956ED67A092C480CAE6A57161D3EBE05FE018628C
B8E65E8B278A103BC1196D94A697C55247AE231DA0D81BCEC6BB3570CE6BB8AA
F946F7048A3805ED693A5CAC572FF8AB877712B68419858EC1F5BAEEF28DFF52
0108E0BDCF64B66A74CBBDD30ACEF41FD032B2056CB3F0E5B940C903BBE1287E
343256> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBQS+BookAntiqua /Encoding get
dup 76 /L put
dup 82 /R put
dup 85 /U put
pop
%ADOEndSubsetFont
/IPWBQS+BookAntiqua*1 
[73{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp /R /S /.notdef 
/U 14{/.notdef}rp /d /e /.notdef /g /.notdef /i 
3{/.notdef}rp /m /n /o 4{/.notdef}rp /t 4{/.notdef}rp /y 
134{/.notdef}rp]
IPWBQS+BookAntiqua nf
IPWBQS+BookAntiqua*1 [18 0 0 -18 0 0 ]msf
56.125 209.394 mo
(ReLU)sh
23.875 203.582 mo
53.875 203.582 li
0 .993286 1 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBQS+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7A73DA26D338A6EEFAF8BB2FAC63C743BFE9A5A80EA72EC22
660F3E4A4E885B4905407C31DEBC559084C6BF950BA9E868F8A4BB47279BACFC
6372A38C14C6D5F73AF5937386D62DD6E9221F0E422578172B23F5401A2EDD27
4458922B3E129B4E6760F094D6F7E148B510515C089E56F76AC0240BEAC5286B
C25179938A46897755CC1345E96A1D77F361C6E9BBAA16C1223DF11B055C9902
F7812886C2537E2837DB54626F97E68F5BED5FD22CAAC417C92B7ADB5C1A34FA
58EC3DDC0F438BD5644A08CF610B8D809EFF3FAFFDEAE45E56C23A4A6DBFCA6A
FE012169C76E636CCD336FF493> |-
/k <1C60D8A8C9B7EF322B4008F4F8D6DC9FA2CED93A3DD253EA43AE99404035
2CA8268E6D675681356509D70AE5BD11A8EF1687C7F472DD4F35857F5F1573C0
D557B53CC08059784B8FC61DD6017EDAB06480149C5EC3FFF010FBC9E5AC3EF5
4606478176DA92B154DA0E46E7A1513B83AA9B16A6F2E0CB2353B7BC1FA7CE57
2054B4E2BCD62A810C35B313B25747138DADC65ECBD82BC25CFD867E4B820798
B60348AB329178147F3B5DBA6C4512466A47DECDABF6E287B4C8855F908A059A
C9322A3B130BB24CC3A8FB237DDC4FF9E8CB50> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBQS+BookAntiqua /Encoding get
dup 97 /a put
dup 107 /k put
pop
%ADOEndSubsetFont
/IPWBQS+BookAntiqua*1 
[73{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp /R /S /.notdef 
/U 11{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g 
/.notdef /i /.notdef /k /.notdef /m /n /o 
4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
IPWBQS+BookAntiqua nf
IPWBQS+BookAntiqua*1 [18 0 0 -18 0 0 ]msf
56.125 231.894 mo
(LeakyReLU)sh
23.875 226.082 mo
53.875 226.082 li
.0618296 0 .965484 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBQS+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D61BC487525B76EB826DA209E599588F9271826AD29E7B1B
470F79ECCDA29092A88DC7D61A115FE211D8DAAFB2D11B3F2F839A2A0A701A0B
0BEF17A84BCC5249F6B2A2512E0DB0FE1E5B0A45260BCC3198778469683DA863
347883A81EA5761F2665FBC69EAED798D26226465F8EB3875AA46DCB2121107B
CB1A8023A1BF32082F8C018EA1D31FC89288ABAE9FA856854DC900851793E635
2092AD15A83111725E73> |-
/h <1C60D8A8C9B7F51B18159B5FF63AD2E0D7D679B77B296A725B57466BC230
50324AECE33E7D9BEB52BA8A103C5CBCA3B7E27B8C75FAB40CF9B8EB7941E549
5BD10F3B2FA87166D6A87636CF5BF95357F444CA45C403C108F0F847D2056EFD
48E51D5D3A9FFB4F092FBAFBC337C7391D6C2545AD8E3C2A2AB05E68F63C6C29
6A9D33A2B997CBE23B2A044B6CDADF96438194BD01696EADF3B5CB84C50E7372
5B32792A405AF69F89303DA306BDF349E70808F084C466BB339A966649FC9862
0E613E82BCBB91CCA1B932F3CD7F310FB6DBB28A75A8ADE4E525E64841A61BB3
C5F57E81A0F2F921641E340A4B6D9B09FFA37795DDEED6056E3A13539929E6C8
290A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBQS+BookAntiqua /Encoding get
dup 84 /T put
dup 104 /h put
pop
%ADOEndSubsetFont
/IPWBQS+BookAntiqua*1 
[73{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp /R /S /T 
/U 11{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g 
/h /i /.notdef /k /.notdef /m /n /o 
4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
IPWBQS+BookAntiqua nf
IPWBQS+BookAntiqua*1 [18 0 0 -18 0 0 ]msf
56.125 254.394 mo
(Tanh)sh
23.875 248.582 mo
53.875 248.582 li
.883848 .768521 0 0 cmyk
@
.5 lw
0 lj
20.875 261.144 mo
20.875 146.019 li
153.625 146.019 li
153.625 261.144 li
20.875 261.144 li
cp
.639918 .563928 .533043 .294835 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IPWBQS+BookAntiqua*1 uf
/IPWBQS+BookAntiqua uf
/BookAntiqua uf
/IPWBQR+ArialMT*1 uf
/IPWBQR+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 22.0.2
%%For: (Harry Zhao) ()
%%Title: (fig_truncated_Krylov_compare.eps)
%%CreationDate: 5/15/2019 12:59 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.B6V5(Z2j_bn$V^.@Nb=&6;Kp%`BZ`k$0dFGS3X#-Yg;#"_u&gs`H&jS-?/B7p[2S>Ce7P^RMh)Af$R?'[[QoFe$$XThq:AO
%9cpZt`*kbK5>6$QK0PBVWl#cq@4W*eV\64AP[RK.2NreYj(U+ac_Tb=bqX#9<0'O`-:>iDD:hg%eltkel*;b_HK&C2S;h10,(!Gi
%X"uoOm!O@GS\lgp4J)N;YV>M;7bTo?Cq9a\H"knK?f&X]Tu4``2WCXXiQnO!/_XCQkMr8ghctl=-/-4T/.+1IdTIVH>a.]Z)7EgQ
%%EJFJeYF]ffg@Y48(Y:0_YJ'MO9KmHn*#(t?(6@;/TJ<(9EHnV1IoF-V[G)Ui,UXX35dTB,l!=2OpQ(RRE@4O31F@iaZ*fm]L%6t
%aZ,b\B+i;p\<<PRGTm<YR:*NM_]8M[DT&a;@OZGc_qFZ65`h1Ao1;Fj5m4uQP$nken&RG+`Q<M_=c0-c3B@aH*-.GmHrn(HU4=Pg
%fQo&_(Q*\P`IDG0X(%t[8hr&FC"XF(%9UNdj"ubQj]a[EYpeF&LTj9f@i<M7b?80lK,SJ<_RT1`P5s<5hrPK[*U-4%!hl-D=-3@H
%@9S3`3iq3698$2s)e;k6!asOm^mZkVhX097qbM/Qe8'OcZV3tDQYAD@iq.D;O,/\31RZ.&.Lk<V/-e?o1j@"f&M!%h+d8W8lkoDd
%!9D0n;47Pe';0]-:nIC8pQu;mYCi!':`p1`LD1HA-BQN-1^&cY&k8bP'ku<%75i++VXYU7FqcVFr\7*$V83^eH6n4C;Fr3tB&]nU
%.l)<6Y:fno9#n4(ih^6PdF$.'N;)]>%*N?t36(fPU#UoB80mKa;J4[6f=?,-aQC5J$\'bI"h4s1j>cq+9Z$Nt#/1n3j=83d:QC'O
%3=ap-3.+d=:j$"pR=rPB8bag(KZ0*G==fjS"O^s1"3Y41YRDck<R52`YtP?;KAYTK/64==@`9Om=tINP`?HiX#k4u>,a51<+M\&1
%J1G'(1!1=X$kqNP<QTZL"4c?8/-b?jn$!Y)Mbo?#6)*:!/-C`\mtc/(%U9n""lJ8l8/-H,9jqYmVBJh+*RPA3^rqfl#SlqF@fVEQ
%dbm2<,7*cWkp;!Fjtu3HAef^6<AF06!/s+]%`:fXPHH)un/j1cBnYrZ.GU&QEdU[N3;<XmK/Aa_`iR"A+cYt3rdk8^3IpQRo'd9>
%LW(Bqn/Z^"()P2"MueT'A-!iL,`-U`7M555(;n?@]YW*-!YFo>2%1A39tCcM+b-^),`p(q,S3trPiLM[7edIO@9J@B@_UdCn/[gG
%"G5o,b/m2km)(N]U_@_p6:9fD+cf%r$O%CnUi/!^0n,Ma(c#\E6Cr9-Tb!n/M\5`oH/&D6O8ibOnNb'VNVabQ#WEp"5:jtBkf7g2
%FY\9nECQ=lNWUisA.5E"LoRN(6q4oEgP"0nDa9fu4&L-c,m7M*14bB'``3n2k](-(nQ5Y/ZM9a^M>s5[LO\S:rWC[a$%,>C`.+a#
%riLY/^U.fGdV/l2>5mQ-HqXFVIt[t'Xa]7o:q]iFQdeh/="`Ojl6lS+Ps8Et_`ibB\:=$endBq6)VK?iSe)#g%:AU3.&D/S8<rsl
%WW`@\*HGNeJl^+VZI@G*L?^'G:3ZeHp_o>?eOq[`cm;XRM*DA'$\]3p`)iV=VFh.1ZP:Qj;Ai(^juf170M6>q&WVEB?mXGZ]Ye=M
%*SA->=pWnYJQ>\d,&B/;NgG;Y*06F"$1NhYHm/StEVQ/XebLKc:[uP9$,"FE(]$lj_(/A6JH:NiiRLm>E1dWMJ7uuZ@1c'GnRmG@
%e7Ek]*6BT+"u%U$:[g^2>.uP$M_GRBUg/Nl!UNIU13"qlUprf2r'TZcSqG![!a>[)4FD]g.FT_E=[pJuYu(%k,%@fN4%'o"&RZdO
%07XBLRt:U<#uDX")$c-.p]]Ou5R\[LL+dp9-/^<7]38HH<iN6s>:G4UiTc)>W!SZ-J`h].-B5*`!3bs)6%Ol;:e2k)Yd+EUK0S=;
%nj5G?s%)Fr9cuD5[Qnm8E7j,6r6Fm&'E5mrj@'sleVuMpT29pe.k9(Xa+7)sW%)>>E'V+^'nG5>1RnIFPB";F.0bHWW[;2=Jl3]B
%;CO,/.#DNjAb[2/?DPp-:h4"LJc[5H/o(-B?<3MW6':I=H*&4ImmKG12*bdYdn2;<f9%qQ`BiqF,%!kTGldSR16-'D`\G_ol3nT`
%EEVS"$G_l.8HqO;<@1dTTi?l6eH],">/A(u.\g<F$&3GSGbDg+8J2<r&:(^G'$/-h)2E,KO"NjmU-Cmcp0Fr=P.h+oAL_+1_`R(2
%M1LDrKT(;8:(tL+OhtHKD/@X:nApK]KX!e7)+DjR7#H[$VB8-Zr.ZF']Rsf>"pBi@CoAUh;1a4HV%,d==9'=5Z;/TA7RBI,!eeK0
%.I&0p(Xe1f)8_(\N!Z:bQLY[ZE(Ye0U?>C3EDGUF.)k3jQk\<q`.AXV6#c>7p)UOLHE4")/@"S1JHOX,9o3\1BY!H5eA:-U=X<%m
%n:XX1,f"VlFpP+,X(PE*.K2_l,Nc:jqPG[1#:.`j&KXgX-X;8W8JiB.2'AZqAJB#C_%I=+KOXD48,Y'%*e8)@&er(#8agH*"?B8(
%2har/#%`)DU4uNF5W*Epp4f[70ZlLkP:qG-.hZjLEul38>&HBPps(,J$nEa>W>-D#%1$/B1g/t!HjLCI`i]C*!`W3rD+57;b\:U!
%EEC7CQ8FZC-*f:^gM)0r\<KZ8X@a%ACO+1HD@H&++R9XIZm:Aq7N$pb8OC0b$?+qgN8g'Gl]tR?;smQn.<oqXY7!3Z35qT]/mCua
%*1jNsoah%$)5S^2_4EII>p_.]A-,e!]S?ro!5\oRKNX"_9)^/a(T^B['4g%$$3Cg%`jQn<iN[K>3KM3<QVR+*,YNTeT8><I+O+n?
%i"MqQ,9.U,W8I9^.b$Y&:R$[.,0h!L*_t=+:Z-3t2/O61Eub0I@Y/j?0mYTs'*BeqE4./NY(Tf0b^%RQku<g5UDaOfLctr,?A'_0
%=g<R9373!32eX2q5"6Y]"[r^^!`U2#D?9k;V_K?P"I-EJMD4C/a;:.nr(#:o`+&n#NJ+D+&@-sBHF!WD7CnN(kQ_1=].sd1oeDVQ
%0GuE/AH;hi+Y?(5nfA-oehA9.=Uc`<bR#$oAlq3UeNl6Uq\\Wq\^<6"*TBP!%;Gl$+c?ff.B?k`XBWP^NZ!^cT>Os$QCF&F!d"gl
%#\"Cbd-N!GMeLBG#>6h'AIRlCcrc$r+_GHAap;]t-k\r%&;=jTAZ1o?KeJ6\);.^!YK24O<)&D7O3+>F+lX-%37Jp%+H"Z7)UjL6
%/=^8@`'%L1,R^P:H(`)eB;M]6%dJ3#@HaXBa^GMWdnMk>pOb#'8C)@=EahTD6$3Ge"KX)7jE%-;TpYs[0;pM.Jt+<jBPbN)H#/]^
%7TCX7C_\1K)5Ir%$t1!)aV()'Kj$2EBhfCG,#cPl60aYYZHre(RZ@m?N8g3RCb%#:4X&-jb!sCM((mN<"@mG>'Jl"O7laULWNo,;
%AgPsuSB=RV21e6;Weng-X>5W\QXua[@-+?W+`n3f7b8FkB$+D8SJ/ua6rm<_'X9b5MZ\)5PEN%Q&ctBd$i:ob*#^;?&.:pdJ:Pp3
%,XHppPf?Fa0L<c/<=L^:5c.^9K.RsSPc..*/;FWKG*%S0W$o-8IE<0A3_8"7%7<sIm"/oW[)sINEWR7F@/2gN/W_[gJl5L%VpSY$
%eddbN&p?.o5t_!E#VU!4U0L*bo+2=Mf8tE9Y`QK;UWZ6'W)T-f#6>;Yfd7im'aT3nFqKV1#'LTBV1Hq6^c5S)/jM%(0YgYS<N:mg
%bKFotPZ<:uE,7mt2bQ2oM4<u:OG[Qikk?:f;`m!+SEFFIH!F$q)i"a8AJE_S_>ml?KZ_8m_T977^QmVbU]hq/-.Vr=;Fb=P:t%a,
%L<0u2,'Akm#P*DaUDM:RU/fDOe#;T\i#<;-1?u8R(lDV?hOHj,*fhmU=[CN!QD&@TQ_7/ofHR&?)n`6a=SW`'!oHT]&&=/=^k2gj
%4E4U[%VQ>FVHH;e+f]7Xc.#<6<n,'4@CG0U9?7N-SVMtHqGtN?j*Tj@YMnfo0e4H&V2HdQ,Qg8h6tmj+!mOo4Z=ROqM%T(n3GO3Z
%Ps#E'<,?e&WT+lS<\]:PoZ3^j#X3h0L7dB-&=)^(n2pL-ja4Z,<Q]F($[`PhEmTLA+@72sf$N#&2?@V(<c%>K5^#2M66t(&i>$X<
%NW%.sgr\Kf!4[\oOl[brTOkM$XUIi_:'#2PZ)t$6b>TQ!SfAhPNM,WuZIh;hb$n?PmgKaO#&@B\+<h=?j335&O9m>QX0rfP<'m1,
%X%'=HB<P.4aNZ#BB0E@7mD+bc!5Umnh1X+a+`*I;*KhudO(lYqiXqO.H1;Y'4B[5GWP@N)%(qOO95FrN'Eh\a6N\bFQ3apV.B9Q8
%-=odN'fKTcWZ]h@PPUGD#?"-a*KQCT]XBND[g3qO^k'SBTqs_\qT6Gi0gM*?A=\o`@i1lT,bDau1$q5>i/K#[`4m%M$E=X\/XRf0
%#9g:AV'@AsjoCfe+mgKn$A&:*<\oY5kp0[p/A?r*N,5G,]s^;>Nj+J!'7(D2"Qc0jaFZoZ@l=M+3]Q,VN4H;O)*sQ@77@gg?6B]o
%&QdPj=U&\nK3)b`X"'J<&n5$%Qa1\L@>bG+@uCLq'f-Q=TGWg\N"UY3aYRVD1I0S?pO/K<U?Or,nRS<fWrBX`pd$7>A0Qi-5dE=Q
%^^\,C6tf4K1B^^qiN!)F)JQ\`&^QB:/2hgp#DG2V).j5FB*\m7"VQ&*T4g-6d#"f]LY;_QnRpA?$4\Amhm"Hk(RM@Pe5.5gm14Tb
%5mg`-5g[Pj!"TnjZDc7!b^r)\q?X*a%+2GD!1aXQ9fAHtb!SZ.KW-G$=V4S37>e#P%$/'*bX$Q;!>F%K'quM">\-u&-7)CKYuj:)
%k/fB>6K_1rjh<"1(.cB46n]4R`fl/f,:dM?:hU`!;,-"u0e+tq1,VCV=#lC1-F6T3KOn2I+L<Cu=B'RKC2ebQ=\'i;<2dm"YJo^Y
%<f7fPPR(fQ&aj/nQR+r5=(GSAd#+;K0U5V9-"5(#1"OE++`<V42t3W\n0fNOQAH0/0HhBnADWQ[MTfeq*!+uS:r/=#eF@6>,uK8Q
%*%>GYA/^>UW,rV1'3E-k\HdA)Rb/A1Lh\o+rdj']GYYFKXfC\ifpcN8>$4d@5EQP4,@Z9W-WWNlb&s86Q*p%J>bd6\-[-:keYJ?Z
%ok;PmN^L?V]F,->)'Y#G0SrbDB(\_>PHq&3b"D>9ACHoDL/(pUcB[Vo)%*Bq<Yig+nh`YcQ(\O<(+TQ6JcV>bbZ"#I366MD/4$9=
%SLDbJ!3>lRJfmiTf3`3qW4aEK*Uso$^oECrdD!QY.$b)e/D+qZXc/.'c7$kiM1[G@L9,g.KG?@LJWrYZB`Q#dHm!;N`_dI^=^@,m
%7+]P$c)l=41-V-tqLPqd7.I'a%O>'CJkUU#n+`?QBuuIa4!HF$CKs1"eR0Vs&K5KIa[D%XKAPc<^D3GB0BqD(5A.)WLq72C`Cu@*
%CoD7*R7d,\R1A05/s_#e;6r<^j#LO':I`)s*Q<g'fRd:$+Kh\]r8TY$1n=%u7F0G'8)]^N,iM;ql@%SAW"!H#T2[e2'S9rY=nemf
%\Z?oR8"E;PiP$Qmr&i<&j!lT_Bl!?(hUk.Q2PB_er&(;ikA3c`W//,7IDb'C:)WN[K+t2-)EL8i$:-D@jWM-+=l7E$j3EDFYWQM4
%C5+@<^eBe\V,0OLD!b2kPJRMla*ACcfa/inAe8<A65^(AR%"m0\=Yfg+;c;reQN\s#["1W$!S!W1Z^qH=U#<\^jcu=-mQd6MKjRS
%s7(;9%X9`D[s70"YhQoLe[7d;(Y*A/nh(>R$c$nS&f=`i@L@As):2rB*3ocsVW8QgXkFVtpIoM.A\ZO/JiihYR7QEQm9i<9RLCj*
%3f`$(EItM',#O4@<;5'[YH]DH4#,-gKk3(Q8Kr9q/]2:8p\6A&]!>M1-0S_Q6$3/ue&KOfHU(a^P<TejqHFn+^eH>#=@S9FQ#tpF
%Xb*OX*X?7IaamJl=AY<V:j3nEVgXq3+Fbug-8>H'VA.sAK;LIEcbAJPl48!?,q`9jK0NZPrnoQ:T@Ia,/r%iYZ$;X-`kJ7oT-?s:
%Lm;&im#^1>9o3b#+iZ^d1MJhf=8Q9N9cT4Lo>M8kO7bSA?_SfqJGZV.;!P/0T4@EKZ+287#IDsT1[W4d]oFq=`kGKk0ku%dIP,,i
%nf\ZBi3qSJclW$9%DN*?"XGQiIc+Gd'tCi6M:6od0o1Z"oW]BrqdO@jFo!<+56?fr$p\goR2G89Q=Fp>(`kGh9^J`C'I?$7i\7g.
%GC"c[a`snrOsG&$q[<<m`k'T7,Ykrll/3(!R?!F#Z/0<rQe\IfrtHiul#7!0Vq;jEs01)m:M7l'i32rASAlh=.g7ErA!9XuU'90V
%3[ls/Y83enC(X\LCUR=GV@@09CcRSF;>Jc,Xd3F4Z8uOE>RXp(pH\bRep:eT3$&1DLs;f3%=lg$ZfnO2#buJ[hY^N!,Z"_p*H];n
%(l!EXEQD\C(m!_Y1rWs\]V[W5b[4\MSqdHepi<GaUC\rNlEN+E$sG)qWgAus2-d/96.@`&C.aobEY,iL!'rCM>bQ^!1c,pc(oN*d
%DmC97L\(%CZ,U5]A`A^]FGDC(Be&!h[@Zm4gVHPbdNV9s+L0bm,1aS\4+s2cVKN2smO4':&3Dp^X@Lndip%_*>uW>,VF79;&=4<p
%;F:nLTi+>_m$M741L,;sE11JjbiBs?^&INI+hW>nZ,0LB(t)$3cUt2.(V[RNbkR*$55=.R/R?p?M=^H.@Pnb(LK?a&%WFlY;DdKL
%D[,ehZ\NBXh,-mnI#3u$0ldf&QJF_HTGE(7,4uIbV3Q<&f3I)4TI-L5T3_g(COX=2jd[M;-gq*":!gpR1i0AXk[(jV*3[0&MDSP^
%CX^V__&n-?5O42^pL8%I2!<b*s00oL#!W0EI[$H2)@(:>r;sa!1==Bd*n\i40^_Kk+he?LU7^Mq8c=hI3Kke)"8HVVqPQ<Ebr#sj
%E_]eSN]Y^MFGOf_%G$<MTJS`\:MQ)tTX]Ake0\!\F2/R@$7]P!hkkqdQ4m);W#?+>TPHe9rbEj?@#'_mEeXn'1FXgQ>MR_;CEtNZ
%"(RhkeR,f>lmrBsKeY9)$\\u`VoiGhFaVF?ji%]`i'81(#K,D,6!>iELUXVC=D?UP^&glQ&)DgpSH*O*2<iE+_o5"EUV5(Yll#N:
%@d>[T,b7LKbg_lSN@F#93YcZ9,6>Ha`-&N*rdP]P;TfI]\G<lG$Lms9B?XcID^fYdbQ!8m81+LP"q4fG"_Co8orej%#5)DK_a&ol
%rZ"]1!:SKR\.mJu3Le7OEtAgcK?d^i,DVM"WD+^9G.,D"73W[f=U*c9l1<*5`\:a[FtoQdCPmQ]Ag%hb1VgQR<G*KsL;E9.E&%Yc
%QJAAK)rM/h9-D&_1<FcqjjFI&O.G@kF<\s`WH9n`@$:!dPGU,b-Cps]ksQ0H@tXMd4HX&S-:PrmE.MR5a`N\?`=m>?9uBI6Y]M?8
%k85hj-K5o327`;1JQOV3AUjUcr]1;A^;74,*A[9Gjl+B%IFpaa2fEZ_a$(UKgT0@e57V2=r4t$uU`UrCs(L[2s(L\]s(L[rs(L]H
%%]JPG)((V>YjiFF,T/ufQXNh7"<@`S6fJb!8&mVB%5ZmT9LgG$k2N?KRq0$&RKHVNR3j8EKJ]-)_5m[>,?Fc`WR(L+WDCtBB^2"8
%2"g3"RX4BD9t_3In,G$5:40bT]@8q4p&=DXn&3iT^J"Mig=K!sUOBi*5MF^^rDS-X(N@'o)DBu+d][p9+sS<861*ofRPJIP<cg+J
%FJ>./H.pk<oJVI/S"6goKI_rlHF(5%lAQ5_7GN:g)tnmRBqiinGSO2J(!O+EA(Er@\kZRE$nh+oYUMs"Rs6dm2YI*3l_#um<@\>1
%dcANInm7B#N*Llg#_*>2O?FWK078=7N7G^<56/_D.V7"fO2H9VqR(n_Nm65s`h()HKu_C5eZ:E-[!-o]s7^%d"U-*@j\d"?=%dO!
%Wq)>&Oj!^L1p\PXRW?*XE86euWEb=Gfgfqt\)gsNXH%2q^!fFIc]5@l#+D6nKF@_SZ@@&;/#=r4Z*5W9"_pIY-Y'L0s866MWpUE]
%S!e95.DSh(U0!-u%bRU0^/#pO4gDe->+r)DF?JlK`4dH?8^Vqn`U8[mll"c`YD8\:=EHATSFl7Ln!suS6>s86c6iQW[I@Nhj`[XW
%qknKb@G.b.rBDd+fgQ-,HdLsX7H7WNs!Peq5j5rlTDr+_H1C^6s*jS=h_7_>j'hEVNZ';.8&T;`cIf;SSTXaXM:skXL9ZTF^Dmj[
%f7+0J.F;WDL1*&"%1i3c7,:+]Ha=`T8;dCJd)dTnd3Qnu1JB]hq6+4V3H.B_>k5X]8>)"NZ^Dh>h:WG9=EX.TM%>Sb7,iNhru*fu
%l-Ips-1sZJP0JK3T)m0nIg$l,ES9RY#AaplA9LG^h3UJXNatm`)I9(oBVVL7\Tp/>bi$l-LL%Dc(Ms.2QHgJq4*+7[>RW!\0oCV*
%AWhlQQV^"3)7Z$C46oH9_]CqQk)_TfPc<]_U0j(nens^VjT5`HcDI^J@f\:kf2tbXV::ncjrKsYo-FkCJ>U(MHiAu$?j]##/OB3#
%'!L"[NWt&oaD+<(=BK,`UVjPiM$m2W;`q]-s1Lh44?MBXGdo#"P"B\.:2-*6jGKMmT:JEoS-eiH-U)_YoK?R^b1TpLef>N3/7F"U
%_PD9O;n=bj%M(Y]@7S^l-G`)T'9j\p;P[Cko3mm9V^/N=o1ko3.5$qhm$!BU>Kg_qZqNN=OZJ0jg*+47c44bR0LnaU-.FD,</R$\
%%Zbf-S,(Br`7,R8gpJ_R/G>Cqh5Zd&A&Og4;_">5*i;gQRH3LHLs@tp+8XAf;E?$iO=^nXo5WrsbDnt=oFh4[0KsY=*VP!r+c8\j
%N?O6tni((Z0^Ksb!Ic8RDeD!G/k2Ws>7;\>kVfL"!h;O=eX/5M8h`^s2Ald(6(F,^1&Fn6jtO$QfMJ>%*mVSmK<suq+2ZO;R5/8]
%BMD<->=V#c&c!(dboCmgj3G$0B^D'YYs2Jf%b26'hUX]((*sc]p<gZ^*br;36'De0.cO?2$ks":l<+4LN"&rlV6O4LJO\Bj8ZUo/
%8M'@EXS**F9Q(W=<A?6\fU-l/W[d#d,>da\X_8CmD-*s7C>!jK$3TL7$([[/_sC9!3c0^-4<FuR$Q(HgD,7HRP`E$f_`Qjn_J21[
%r?`UH#4<DrNj8Oee`9rpN2SNVbus%2'ZX^C&n`cMKa!CMbL>Z<o7Fi(2No&OT*oYLZ&=`KlaV^IbGsW>/?7rEef';n9N[cYX4djn
%P[B?7+j(_f9kVn59h?oD8X>4f'\/)D27Ama3gM)?FAtG?LLh+lJl2OA;WlW!@KXpi<7DqpAg`PV>J6%X3YL\A'p/cE/X:#SB_6C/
%c>EiklmS<N4/sH:F[V]n%$a7RE%=ugpO";>@:YI,!#]*JLjplOMBlk],I5*?Fl3cumsSh0>R\EPfA^\KR8@e[rGXL0:)G6^e1rS?
%EPO99V;'[.$edVeeKtW:$E@kfR::<o8'O)0d?GfR9S/,Da/5[h/9dKDR+0.L@,E.2Tl+lrfbt[)2XQG&DMc'[P`4^GS5Y5QkZ$7R
%&h9B"NJ0'N(7XS3@BpISX*P,6G*OJPTjJ1ld_`RXV,E9#s/C+qTfg-q9uZ?6<pe/-^=Y@^oS9]PflF_%rcQgCVM8Achm73b9Xhf"
%nS<P^DCds>I#6R?V#-,4,S;)u.RI+1%7S)qA\9W+`_q`BE8Cbh0N&UtGrasXG/e$I`<c.*<<@G`$2<qZcake<n.9VcD5%M4Q(+nn
%L=+IF-&b9sdi$%pk(a,2^V$NN=VCj_P:1r/WcDTMkhl!q@ProSK#PJ/_kf>^gMe!Os!%<MReF2\iXOg&Yo%N_6;[0'XUQnUV:iMr
%g/MNi-SYmi3/,@K1WdS$G+EMriisUh\7*m[8tG3gAs<Th+-FZIDt;N$#$4O@flE_o(]RdJ'g6pU]8+?C(`rXn=+BP0d<lBCrlNmS
%LDl\2%```469OVZlm\;%#W<to)o)j_q-W-sLE3;UR*Q['VcZl88GsrUCuO@1RX(<8afuO[VR]uW5e,4Z?Y^IB*d?bo5FiQ0fG0p+
%9h%u&?t+WZq&+n4`j%fF'h/5+DF[m__?XR/qQH<1*b&DM[p!5JG7gC'?QDkB`hHFV#ZZsl)$!DjFuPAC`H!MrT?mBR\rfP2I(!9r
%.&mkN/+HaDDa=]pRS#Id[-71[CX1+,O%Ge2OIOBZdl7K]@WU^I(4Y705))ui]"<G4Q6agMP!)lTI>si[bWBkSXRFdGhp:O"(l.Or
%:4^7\lf0C`g49b1*#+-U1tH(!^^JPS[djF&a^0(Eb=Tb"QJp\kO*aL'N4'_i$TJ=>l2urq/(n*%<>-e0!nL=\JBf+N-dP3Nig;'s
%BNnZo0Z[[Hp;_7=F/Fli=d7Bo+=GtO\IQrhT@d9JXg$^j:-)<hUWcs[V-mA2V/t4Y[TXX)QS5bmU[#_a>+YkZ?sI%t?oO$?=:O3%
%*%nY]f<0=a>1p23W%g"u99eB;f+u^UBnaPmE>8l;/po`>"8M7-nm/FW&)P%1(k,1<RWQn:JE-7;9`!MH(uu!,fQ,EhK2!RlmjBG5
%n=%NtqCUb.Rm4S2[`OS4DUpWP\5Rj_VD7oO<\B'NeZdFig/6cnTJeeu?mYkY"#rHkai#P*BZ8\!'1#<'9sb3f:dEJ=?I>-k89RO&
%S@Rnc"W)ed+$Q<6K=;8">7"D9Gi`:qEDaRS2pc7CO4p<sft5\6A#@J'*0er+j]F>EQS6bOV<VT2Zpe->&M[*J@'dRJgpDu^!jPpb
%V-0u%IkI6aVp59(&3F0CI?8t,FgPQYD%M4\jD21Y!:AJ[.bp-;P?YWkA;a$iDG:Rp)se?goP;mZ1jfMb+g:?1g'XNX<JK(d0#Eml
%U:cY6UK^=>6\S1W-9sMRLVVOp'C,8rT]h=`-eHO%6secLSf>9/?Af.Fg<CqmRCYY131Q`9=(kp!,HhT1L+NAU8m9J*(,dnSM?KQ#
%$#4RZI<fh^Fu^8g6BBcO:D\YkclS(P>'a;<qQ5>-C/1E6*j%#h9XPqV7@D!Y?e&TB7*o(??#"6es"06sePEHZ>VFdqr$bt3#FC=\
%+Yq+nn[Q#keL#:;j\W9%)(Q+e5`]guCUJ8Y,XP9-h5)O"]ZN(W$Z5/XQfC]C7Q#6<FH30G6L46k?0@6O-q\fY.;ukFPKu/XbKNem
%I/Q._GZkOZDl#YtqsV9K.e$<0W1_I*;>tVQBJuE[QQ(FTIfKnrk,%A^"29"*q"'eI]mYmVQ_S?ck"8\^H*MrUnd]&Y7/m2Q-NLmU
%I->5=UK9O45EF4<!gc)7K0L<bnEk9M$\.ls:Hj3Oc+t42$T<INVjlS9i*5+Rrk&DB._[;Q#![^DPj>2e1qM\^\*t-6?7l^([k[Xk
%TpdAuD^#SY-,Q=e6;`tri6OL[1K+4nrV5?<%X?/B$LFE9Tq@^@%)=H_R&C1Aiof(\hoY'BHr07fdOsLS[,Ricr@H#)@Z`!eqm/6p
%b(UrGq!EP]G<OWGd\j9p<4Z1Omtbb8TBMYBfE3;R9b#`QNOr^oSsM#,ER3G<rO7"=On-WTq=#n[)gQaAb>b8K)bb8qdO1\Kr'283
%]C>5em_[oG).1nKogjTpDAVAVW/WFHlJVM!+Ot]+%^(kIUp)?W];X*]GA9&d_C6`eL$R;mRX;`*16o`*o*p2u5P#Z50m=UGjH"cg
%]SB+id:q8qHONp^YK;jB.,,9qJ"DAuNC9bj2P@_!Q8L5WHUg<uAG3DD:4udqRCqb>(Pep=CoD_aBC\9"]i:q8(TrpkB@ZnVn(?k%
%JdUV*;G-*"oK:=+_YIncpsk/C-E5+&/m8l(B;tInVbkHIYJ*N3MpG3^20iWu%/='Kf+un+\P%]Zr5Fls'D1I3W"@'U^Q`L3RL_5V
%)!AqE@@T=BVGa\<-c\ln)A=$#hV^Y=?(V5OoblXj;1h]=b^NT;7Z)li7:2BW8#!07BB5=.'eV.\`f?=2oPZ#!IoGb8';=3dhLoqB
%X5=UkHAD[^Q&68uG.rWs]&X>/"Q*H`i9Kif$>)([,j`$b5nSD7qVU3a\)<mTl+`DmO`;ea#^iK-XU#V]b"K:XDct4'/mV<q2UnR`
%;IC2c:E/f)6HYXk/!U'Mr'CS0XVhkd30$n1CKH&ohnS&IOk9._(%"Hl<:"CF9$rjb28q+E,/q*Z*f=1X-)lRljIAhsh="=#BhMDd
%J&tP*+^V"NGLS]sh!;doU/&B4.4UZGDbt*@VdEDPb(Q][2HZ]20CC_up.?AuB`@(llI#NpW\rpVl6<OnWI!a+9jO<D!`[X<XARST
%IRpk]QZ;;NI_;HD=5PXqE>C0*cgB0^"S;J7Q_N??a04"5D'DYrmr)B/s)IJ#55VlO24/NPeAt9aWCcgJLRL)p($_^kn3\eFCt1u)
%3\-PD?FY*&$Z</k5Bsh^Ko0NM/$_/2E7(#C@i*0j:&l,4i]DMT8mhDlY2em@eWo`K:0`)/l,QdDgpC>'qaK:?H`N-3p"*rre`^A[
%>rUg0WU"GIJ*VET5sqjRf]?kWW4&`g!MDZ<CTM;r#9&u>kARMK1L5W@QG0u,gXVHLDK#Ghi!p1-&+2t==`lOU;qdf3EZoXQdTO(U
%5)qk`q4$hcGNnD*iNBV&_-MO-S[t;of5^QPpM%SEj::t?Dje/Zh._$X\+nLB\A-^TDZId?]dXHH$SVPAEAc$*4hbn*b7f3*$p=1P
%`O@3\h+^#"fCk7QG;6!X`=h5&<&m/%\I:VH4?)6<WTPFnXa"/^pJ"F2l[JAO?="%&UQ<C:1LF1W8(@(o'S&475$ld#67^sZ&TcKj
%*[R/#kih*MRl`+HT<4m2i-K?aH#X`^C8I[#UF4[an`YB`qDmhj&!KN@m>pDWr3J?P;Z0AGlPoN#]i"6/mZ",La51WrH1C$P]H;[o
%<g*1nhTNsee9gKjT6d-5.p[(K*lbm#@cG?g/NlM8X%;0bk?U2<HkA+,k_n?57=E5.a034o`@UGX2-PE8o/1aSHPlVB^A$19deB/W
%$Mc%A>2-M+jj0SXo]8gsJ+PPgkYGfR=o[`1HKd'ja,g3mTHjEEe!AVcqV(30qrdR^IpAY1rak'*(%;sV?6E8W2$9h(4Vp))?UP!]
%T@+q1N/maca7J:Xi+#5^"GXHk#U]$s:+(W`V4UR<l@!XWPAd:ii)qp$$<B0J(qfRf3l._^p`Ad^40QKJnEhO3S@)]jJ\]lALeZ4L
%U#W/R)_-9_T:r<)BcMH/I$?r<fA\4NI@6+MQED0OF@Fj>Fr/#s:qI(,6tS+2nj41J)ngqer:JS$_S$J_*1h7B%h[FcFqfcQj[,)/
%2SquZX.P0g`V=Ki\PKkYOcS+LbK))X1Pi-HT'9pen8]C@HFr3NIP?ObU)3S'LZj0b`"VNCgf:-0oBA6s3p07IOdhhX/DYLt@`;@?
%4k@\,\_-N0q0NO+@j:WqI.,L45CZ"@GO?&kQKSVHq6K7^n%VI*FSD4scr0q33NDo@!"?bM"_,\i.kk@G*Vtr0S#'5ab7nU5[+`0*
%O+)gGbF\PsCi38pZPUUT-h]83Xg!5YQ"#7.DBBZC[AI1a*r+ZNM2sa$R4=_JD])?BqlYFFj0".A%D]nlb@2lKHBRj=c_!P,pg_[W
%N/LK'7=;ps(5^Bd\4gES;Q`Ea=?K42`>X:q0ChOZI_rp#1)MR4-.C(.2(95KXlSkDX.AU;rSus7k/j)"^;cA99V@H,9WPg54JqOf
%lmUDNB#2uk%unhFiurhKXj5B3`Bl]cS3+GW%kmM2)0[=OAm"StR43CLkF(Z,i$@n;HGITtT7jPeiR;p-/%@"#^<S4]-ZLid%W>/%
%.2KsqMt--n?E=FQV35b:Hs:ot+86l&IE0M@rGY+#h2.>CnU#N/*;!tnSb-^UjQH.1j"tfM<'8D/qgm4scCfC8^@tm&cHd///mPrK
%Ei5c%>OLc#=Ne+E0;/[4k/4b(/.sClc>m"7gKA#mDk;*)E9U&bG;AtrUCtcA.F+8uq2_J%IkmJaeGJ!Vk;k7`^>+57iZGlU55B,(
%B2J)gN4o[fld_eM0rLkbH_KFObb\VOJ13skJm=FNla^J?\NDNoFt<;5cf;$48i<aeV=R/5>'bN4n>5s$AZHgBk(_ta3Z':&]i'6'
%(n<\p^5)02E#]g-KI_%a-Zg<N7>8kg:+M/lqRoc7>X:'/\"hekjX1b(Wc[Bt==lD,;>"p*c;c7.nQ.;iH]bB!J\ZKsm\O!dI:k%X
%H!nTtS``Cbke)%"GWR#&Mn'4Fj(34MqYYel!@C/OTKJ"Q\j%c0ePFr`5b`SJ`s:p_qj6cp!(5RLk(\TLjmClc^&0K&;cf[BfAMN^
%Q=$d9'(2g$aiS=t&\Sm=)l7bID7mAZiPnZ=jD2&RNk8FUHX/M`bP1*Up%Gr-:(&l0FX,p2!ar/q6cm-'5LuWKcFE>mc$_WrFu-\?
%4)`)+mp2t,]BQc\)hIf:ja%BlVJjdUDOXdYj7[9aft@dembN)@Q](4dF";`g-f#i)mM#&ebl-WGGBs5Q/Uotf$8$LAjTGPUH2$fu
%5&reWT=ON&ZMO:nfEh;6+2::3]r054-hUGb]B_Yo]s-a6W\aR#c49,PcaVm"m!2J=e6eTh7I]Djqg*bV^NXb&J^Y\5>!*]e^V4mS
%\Mre*l31SPNj#bE\%Cs,rG?^>:;+\08b[RaHN&:6VLj$ZkhTOT?1TkOG40D^q?Y#TX,l8))1B04/:/C5Xo$g4bMPO+T(C3-B2r_R
%GE6[2c0g#[^=ed'h4%aIC3^?*oNDXbV)Q#bFo'5Lf6@8+7n`g&rC]D7T@4+OH2:bWa2R).:TjQCqeSAWY!,@JH1$T#\_:,[j_]L,
%(,K^@>u-Ldc.M*+0HNg60`DtM*a[`8?\[%13cn'1PKdG$]Cd)2I*]QBVk]2pg`P@=psa!I4n">*b1GnJdu"_bY/a+OP!<YT-L\$T
%55"_-^1l9@]M<f.qK*KJ7@1@P.ebV9FE8gNQ>X4qbuX^O4pt6N!6e78,FA1NW-)>X`C33E++:bfg;-a"&NKX2r4b6LXCX/n/YQu'
%3V9_n77Hfu)oGTQi8btE:'FDfa\@#[$+Q\BA3Np%jUrZ7d+Nh+7`Ri^OjMchah_n3r8]o^.6"DpDs51qGBUSLPWgmg;:U)9g*qHu
%:H@Mh)`kZ(%Of*T`D;0mhq,qLT&4gm#g_=)&MNfHL%6T**BSZV+Fjcu(q>SZfYo.%V_j:'2*Q%c+jHk"Ci])o')<)NW<\IOX*<fC
%>:`B37s<&d"n<o]>6^cFc?uuC4=G>9!HY*8P1"RWUP3BS".h?ocqdR0ZN;saj8J[H3%;n_$&/&+,dE76'q&BP.:CbQ.eN'<;3@77
%OZF,C$V4!j(G/OIo?8GH?]E@I,W>h>SBd1got!UhALp'kcQJ"lTj0A:/r<J7<=W<c+%d>,W^Z?A7a]j4;,*"]je'u-OJqa#6l,'P
%dTL8Q;Y[b2>H*PY),Tpu?3CpCrGW!/L"W1o?Xu6DNk``@C`lO*3.?*X#o+]$)lK&g0IFj\YJ0Gb-+=_oQ).P2bu^+8f'sW!T.[\O
%X)dGUG`at7^:5/T*6!Aa9T[TGj?A5n0mpF$<5f)7RSJI=N'P[6eqFNU_=?McH@6:TkZGLZf+J-GIZYD3p[%bc9LnqcAubPY"9[DD
%hWVobBKWs8jXQKr'eM[U\e7g=*.NU5Q*Dkd>,\XQgZ@b/3Rg[d4cuk[7faG/?ju_aF&f]&RN,X5Nm+2g:k!,p*(^@5&.AcuA7":K
%2B+K*]'tD,,8O)h"+SAc<&TLMIsRmo3XA(oVW>=AIaXFk$!`laV1mZZOp0@2ql&3-Glq"K7L&cV=5;,Gk"mRj]W]nG5+6Neot-EP
%Tf.<_",FGIjg^@o>%J+qZ<Pn(m?@1^SmOd^Jb?1*^;Nf#M]i'X4u5NRHTr)N:b`e)E+7UA/Zk[hUj):T]`hB/Q^mo8S12qkrs"*a
%<od<AZ^7SX3Re_/J)O%G,r;LJl@V)(ps3:'<2e.gf5tl,S?ma7FF.3cd]kg^psU06]N&lDBls^iBZ,p#Z29h)\TB.1]!@"S'>O)I
%$X0Ns[$Wd8&8DbBL"'e'Hn>KI;L.O?5Y]L_;!Y*tP77+5i\s+s[d'W7%(6!o&p1KEkFk/m?ciZiYa4)0cQY5e?RJRA?3[7"-.Mjk
%?0#"a)V'ZE^BEb$<a;"Z]nj=-oYp=J'Pa[sG&.I"J@U!.Seis!I4<V=^;mT@e@L"WqWde'VGQaIbY3]tqaM+kXqIdoXe9"IpN%s*
%!VJ!_s8MN(RmDaVo5N7i>*@WXo?.@HW3:4;X`5:6LO.MGqL0ud";+T5`^oOP14!dDFj^\D+0D1CFSkpt`!e*qZZ%em!U5;F'MY!#
%rf/6UTVed>_\HIt:ckgk76c%BUt*@U*'t)X8Mb%YLANt"^7)D0e5OHpocn_AOeIdj6%e:hd[+#A"I8ZAr)FI]!!<6lV8_&s)Zl&$
%l\^"QH?CS=!&_Mndu1E9%#0)j08BuVVKefn6Vme#p2-3\f.f:)(HS^jSjTH]FhN%?6rJ0r2h3BZN)6A0=[7_1]oK*hTn\:Cdp:qR
%H\)6=B6X$[Nlg^U7AB\-KM^nj%UWe[Y/fXH%7"LVFLB&2Vg"gZmKC-A-3X`jhpYm0p"]3-W^E?([F`dRiiXrTF;@T[H<7:2?%NWb
%NXD?j/7>43]$k1^n1a?LB`7@,:2J\=>pReIWK_/1<>-.uQch4LHVU!dXa-mnj.Uj;EHc\U;*/tTA>ZIF\=haETho30EAuRbb3)eh
%Mn9dtc"uZ/U>@c[S#^1VQrc2YY-hpRl;2_L?1@/Omp5+QS27d8QrZHAh\T'0neTa`_$?#X/6L]0L>0].mAp'=94%BW%<)?9C$Pr*
%D?f!VFua)Qp[NUI/Rkg#h9!to1(r($?%\q9]eu!4SVT`-\)</gjQh$E5PIQ%RPV);aI]u[.D`[.pin)9>n,3ZmO.rkn9rnnVK\(B
%Y5@sBlKZTFBp*Sl^?5"<IQtIa?,+PuC5qN\S?9)4qFKW#P6LXA/#d`89EPVPlOP&-:`lRb=!+>k@/_>%;=EZ0JWmW".@qc$Q-3,i
%hair^.:BK<-?%O-f2G`!IsHVf]JsN%E9ZKcY'7:PE4^Tmq-O1RpoOj8`aFgSd0BTtj!]V^j\BG5J5.Uj<2U'dG+"rukh,.[$I+?V
%Wr5%WTXnXNdr#/qI]bGn%)qj2<-#7Xdq2">%!cGgj-Xn/54#;A:[ib1la[n4g04qB*dG)Il4VquQ;D:hODO-/!=5&X"]"ZR4)S7f
%I<rAR>+lQ5W6hWFJ1DB!8V,%KTVedXTB,:&5cp"<*.H@'NOM#R%U\C;oY*TJlZK7)6c\6!.gr;4!L1.*3RmiQP6!-5ULWj2D$^qO
%/M*QH)(1eQFKM3Zn2/:>>ZZX)>!bYQMBu6cUthqG+Z2;-LM`[k26W]hR4rSF&:F+EmYn2HIpE3$M`0@bP9sRp;p%BdkbkQ:UEbc`
%J;!7J8YqP=J+UE_5E&3?i?838'qo,>6bFSdQ,e>+;eb"e2ID3D5[T7Kh\iPQp;ld"Gka`iWg[7e.t''>)2ZX5!<o*9F+=5@W1s@j
%6>Rd1No6BGJWV)Yc(^3uUR)T,/:7i0#cELr+pF@WQ&db?5Y\8M\/b6@UE$Lce,)L)aY^%he)uR_,P20d68oG&7k=ZMV,4><<Acml
%X=)s3JFm+\>k,[%d4/gdQ@dT&*iIZ;SIM>Q`)6^BKm*sQ7*PH&C,=ntgPpCA^.ohL2U"VG5i`i;kcOGYZL:0Km/H_,X:Gn#C,^l#
%A\#WU-;t84KA6,D;4VLY=D:L=j-R/A<:4C46#`UO4-4aae+`HIaa+YSF=poVVW72H2iXJQef3bC1A>;U)F9YV64rEgnB7JYT#+F$
%(+R'7kA#4^+][r34n;okb&<2qdK!q*_o`-fWA>(Y@uM=!XamLHK2d79^:e2I[;5+Z,Gt:[(D_>PFEj6,llb:IcgaH[N&\`E"SC@Z
%pZf15%e882a-%JWNTtmEdpf5'[umhD(XZeHo2">UhJ.!66f=?-;H,%3b';Em4"W@c?Ib1iH_%CM!1;B1?h-\(R*Vl6=[`D<D`"p"
%=qMh+E//75.n3mIg]1&I=sG&n)1Z"9AfQ=A=5<o-GkB+qdqSl+"9f*i!>mGEnXJ<@GbMu&)bADgSBFL-_DbUDU?K(CJ95%_N*0(M
%6\>HF_(9]>Na)4t>].1?%pO;(S=>][0)0"]N4<ITe*OYWPb&i*"]W7#CsA2A$XlU_<C@SC)o9BhakihQ/#hdl52;='f<X_.b#p)Z
%W`PKu$;tBn='7Ra!<"N]cS%gtb^^@qYT)!4\1H$*d;aoi^hmREoBQ,,CeQ=J*52'gB0RWfFebe:kF`?ne=^]D'^N056qC]*FNUO2
%ASl:>ei$5q5V#CY3,EF:_-^j/-AQLI10(`o&#SU!g\+=)[kYt``YKVf,5Tu0'b6Z&VF_/7Rq4h/c?!=SXHeUhf/4WY?WF&R*.-Ss
%874eXP((9^bOGG0Z>Ze\`>6qeprlXaQ=i]L1WW6oR/(Ii%&u-3:+'B!eDqCFLA5mmJQ\WH'4otO,%JE!P<N*hABjGAY'HS`fODWa
%mru#@VO>[N]3N/$AecBAEMrB%C`1'iUIoc9]6c#c(>Ni8&TN;7\^g<d%Squg8.A=I.h4Cmfg*sD<-Du?NO)co2,8=p!,kV9q4+F9
%n(KEpJVe"AM"L+l_R&U:'"Qh\nYP=omfC(0H_UkMKr<82/I'EO'Pb#UkeYEjI%*Zhe^XQ07Xm1r-c<m_p\ZcTG0?#N"M3spQ.UXp
%MG>B?E4T9nm*,:J_)-%N/F"43J:=_@+*7KH[)X4.['8Q6^ZR^^(fApBFZ']iXr2h4UOW:oiqs#?e@r2GKbuO!>3_)u&=FHMfMBe,
%EA;dlOehT6C1ZMcBcYg3$kdQObYR#F*$WCqEF[7_[cB8M@Mdde5_6?On!GO->t@<NB#BVi[,0'A5]/J7d`rt;\Cj.)]/Pb>c(]>h
%\#^m&anBmT'82l_kY7h+=BKgiHK+WQDD"nhkZ$?^N-+c^dMp-^M#5l]&Z:ef(P/\Z1>4uT<M3X4d0ojL_I*CoUC%!2[.,t7hJ@:T
%+bN\<"Bo<(Cu!fr5G[0N!pFrH)<\OW<6O^f`YB\jP+AanR#)!'Fi(Y:`1CqGjps?bF#\%q7qlCIoH#i2&TBVBg+ePIHEK7_X;(ZB
%+oPqm]bTaO3,6P1:c)qkm2EhNmC^_q=tqsh:^_)R$W1^16DIJcC/?gCJ9n%L20u"dg@i]'Wb5f]O.`oZQljrpnca+C8"3Qe/\-.B
%aj%6-dJB_`g+@!4h<li%)j[jJp/cc!ZFtEc?i#KeVbnc=>.Z@UGV5su_Ya!E'PrcbK*)9U``fN.BS!e_SU;)B]<g")CQc-:U#0NB
%>uh)BBQrieB@(O:XAcHI6]9."Qn1nmrdhf4NbQ[^[^uBMLiV^,(KhsC6/_ppjBU'9B?[TH_GZ4Og!TJ;^[ktTmt#eRmq5?32eA_'
%c/R)FPj[#UE^PPK`_g#arP8F)3M0DWO6Z:O.HF=YCi!d;H`&9]N=Ghq=,!=_Zrm60g7XTLdUbRn'\-p\Y8^["1/8+Ed^gD&q\V5r
%Nt2`5Il$+u[O)H*g+M6s/?4Yeff1F&C`brYS3okh?lq[M3t3Ffh@r7GM4S#'s+@.fgsW8e3:QnfRC.g@]mnIfei;CM[bKS6gN%Xu
%d5[RJ'5>Ksa*#KbY`JLt;7l#qUI`Y6_*5$hWVP(66eR$:['PhIX]ar?%SQX!@dh;cX*,pYa&$nh>/W>W6t1ePWA^TU&Qk(bXP_FH
%ZlS4"p]7afE6t$U,n?;#2,;Kb<cMuS9TK\>@:^CJKi?BblsegUD>nm0`"&$>2s\6c241AAM4&[QpT"81;Q\F*?!*OEm+ec2NjE<5
%PAq!1k!=aqE`e/liGiBmH#gL((OA!4[3#XN`kaifLtL-4eF]5<b*/S[Zu/m[>+iJ87lu.\eh$`Z@Pift@Tc0<[:0_HdB^d6-CW_?
%P.#(pal+GoMng:Z9`XH"b]Df9_$BS=@#c:UkSk7.8(p&&o@`<tC!G@,l$OZ/>X$XrqafnVJ1BaQkrbG@deW6Nq$tp(`SJu<1f-ne
%q6[344/MQ%kOKYW;AXOJkHiLre&Tp\8E[>*jZ>/l0)do&cT[[k?&I8hS^0Kd:L0(;0qHWSQVYA'i)f/jq@1g6-6,n3oZeINNjT@h
%FWOZAFDmZ"X>rQSiZrA5^cUr[%A(2r[Y1!qVYr;G"&_k^ar%J<bUTY=Kco:.Y^]s85.[.^53r15QE2iI@=K^DNW8jXetBp.^lSRE
%#:kKdXbE<D\05?n;\G^$$LnnNj6/+SfA`T5$;th@(KR%^hE#K8@,,Rf^Lu\,>7.K@Qg.LOg,2W-2UeuNJTeE>KG8kgDmdB9[=D8e
%q'k;OS&q6]kgqoKcEf7mcGBJm4=T'IG3:.!Cek[H,M5B;S_a:."!nb-,B%C!.lP[Nec^<e0N$&AcD0:T"_P0-&99;.;%@$`eD6gm
%kdV]$,#DK<NeOTu?=aR_[<]2*fI`%D&%'G2LL@aC^e(1n^CV2:6r^CFmT2:m.6(,D0n&NkM5P3[O7oldpG',!.9qA6_QWS_asl-0
%P?lJ`(mb\,bHl6tS/O>$rf&_@Cj+Ych.P/kB'VCNN+\=lG2.jne5NDa2KY]'^Gb37\@'/;c)ki-:kLW7C\seUAm%10-W;oXHXb]`
%N1DPgB"aAu)lDl-gQlC8j2EJ>*7Pp[=^1#H4q#>dS,62CUe_lDk_Hi_)k3!=f,??GXaO2.lCM2a^MV?Jb;7Bc-XPshkC[O^@>jCJ
%J^'B0fYWiqlS'SldD06R\oEV.G..WZ2Q,o(?F&ERr)GU,XB89JXOI.gBS"DJZ!OD7T6ja^A1N">[@gAc_u3u\o5*2W4\YQdd>dDn
%=#JOA4L!!#13f2;\OKLF$2OmVCtu2^05hT`0_I!%TCuRF;_/44A=>WZXF"hBp>;0bVrJQaa\'t]>/$P1Keq@h+NUcujL906.7[/D
%&3E3o]BG4a-X?i^U;cMV<U3G2q)tc:V!"i`\o_WMUGli0q8*]ViB3O=rEabZoYseWR#@L;*9V)/7d6DE'8/p8agm&fc+tJl:,WI]
%idA?L-dOs%[ndPjbD3E_hC-l5bD4iV8&UQ9D-Z"H+46S"\QSRE&@QZ"Rn\6(f<^)\p2r\+-$S"?U3EF).sZC);Id&be>@(D:)rNo
%`Ek;FcgDYIC_t@?JJ\Hh=j=p7*d`X$o_`1!NOfnDSH^X%POi]N$gRY!QcG[H)jOjPRm$R`lP)S4I9@mLa/0Qche\Z=:8;3ST7[7^
%X(590YY`67p&aVtY<4r?a(JM9"kW[@aG9Rd87tSZ>@cmLc.;TUR>5s0Y:&N3E[kglRCB#grAHHMD)6!D0=`UQbe.;$L>=I<c[(J\
%f?Cl0-`N$9BBEo.VaYCuaNQa@@uHHEmkaQ/GMWFLpRIZ7W,Hk*bd1Y*FLEe)K.\+-dXfl[28MJmF$ok*lZEup*hiN/Xd=d%(VeN&
%G?[*%ef-71B7"m1.V`NLHE\1dLCG,ufN($!%N='k&HI'\(cGp04_!_/eot`rEm($JNj`%/(Bii)](JMG[;?51`Zs]+mF&;Ip-tYU
%[AToB_kuk$X`^)oGV$Tn=msa]m&C/ZmkEEq>]j`5pG!^t/*hH]>>K696^u-Vk,40rL3@tj#B#5(7a%0Y6cU:XVLK_Ka]#JTrig*2
%+4,`VL(#4YG\s4F%Aqqd:6K-0p66j"qQmXV=jYY>P@S$Mp6-cF\=@+.CiCOYY06<@P%6jG:6atY`["^6d-eHH3+M'un\\.=d4p'r
%245.>aJ:U#'UqV/>3oVEHT&n6R.Z6d`adT7Ted[,mG37iSrHn-B2Tf@Tq*Rgr[KACEd7"2.;rR7cOEHklZ5i0-+7#UhHK^5nNW2$
%GG%+J9?qt?a3Hk^;/NYR[s\$89_$U!\M2jhG[PpKZ!E7EmiMkFei-BO4)Y3Z739O[]4]SukT?L7]c,ut0,LB<#<R/^2abZe;)%7]
%k)!;Hg'X5,V\]`YFrmR9?0-%Q2*OOV<2t'GXogAWc^2sWkukN7j^ZJ#]e$jh[SLg7,GnS!SNi@oid%SH(2DZsc9=Qdn?(+Aja9MU
%nQ"eZ^7;6WN>%0^CZ<_8g,q4)_&qb^SS=;)$u'qRqkp;Lg8-l3/se0(4BW\upLoo[#>Zm]/>8fUa=X&3h=)]\2sY"h-ei1H3G/d9
%Sj[H&'qRhmV&>lEUp,ADg0HMNC7sk`d*V%4$IlIo^Vg,D+?Hr%J.(!TqmhATe.O5_>b!V]/<g$qm\BPWl,,"<Y&0MKk=HSb*pCp!
%]QQMD5YY=@)T0aY("=0A%UWMsPIQ,l\`NCQT^Q%pI\6c<-78u"Ju:@#EY&X3aq\Uq:!t-"/FT6:-p(Y!<F^miqC-=S;O'*^PGh1&
%DQCPJra%\L(9f\/d'#3i2P"ns@D_\c,:E&P3d;FJZSTsaMsPOUQZ[=GEPp(%j,U9j*Ns,<(mELK4W^e>G3$fL_KK]jD;1GJBc/%2
%H=ul)kG@M=%bdH?L7UK:0<)83XY%0M:/a;g)\6+,Vf6K;FNM@*D5T?R3Fg#Wj#?AQG!9eURuR_-gHhrGP!];aho%]1&gXMr\!W.h
%@\;=)5o[8e;duA%Hq]Ntm4GThN48ugK/E=bfOqXn7(3hM5Daf#CZ5Sr:ZpC[Z-R-oHcO&g@oG'2VHkY+;duB9*DKS,btc@;-MEk0
%o>he"qb6?4RpBg2kIqT+bd.)r<cN=ZlnciM1X0%T/[<VQX7'HF1V1"jlnds93A.P^`'1N`onK<!I3eNSAbB3pZh\`QT353e`^oPK
%Z-U^Hg1+Ta=]=I@`B,C>XZ*Z`"Qj&:p?d]NS".IbR.fja^@e?CV"ni!fVb!GP1=d7.+;t4`',uL<6k$dB4@K9<hJ4[XL7Sf`',us
%.!qW\Qe5rZ:R"OmpR'TG7Zt>$[C=(<leUBD:$cpXpY7p:cZ11Y^PRBn4ZUX,?\LIV4\%n(Zlsk=?]pA''Yc662Y\;I6oD#Z'_!V%
%Vqec-^,".VFtUfg:[p5^K</@=?_?=jP0iB7i,UeeQ2MT9A2VLAX#>8CQ?&YmU#GNb)pdknMN_'i*#P=+mmK8q3'"?8A9l]8X\E,Q
%".TqOi(8Hg:?luE.a`>TRk'sIX!s7Sdq'oiH4+/eYt<s`fS.SqpTi=aoD*l2rH6<$s0PI@)JT2iiI<1O%[6Ma[LV(0&-)OoIcr?o
%s0E&Vld,Uc.]B2ijbrRN#jM-R5A^t[qY\+!&-(,GI]ts7Ds&,d!"='p(NSu3QnlG/?]N00p=`A1Y),6S^:"6%bPHE0cEP($/2ZE9
%VpBYkTC^mp(V`(U?nJ(5lnl0.!424J5+<!KNmm#2Dg"^neSkc^\_Zhh0tW[Ik%$WO$(W.#_"_cTHn]IkC>GB)\&>cL]%*gg^TCNg
%Vd$8]lpbng*:0tOP_^4Pj[tE('sqaia$a:aOM))cpqqAE%Ypcap]37ZIAX\(:54NL>,k>QftJeo?O#+WNJ;ds29KpU$b0'@c^iJY
%I@FgOYVk!/8rpuZX`IG.Rr:#po@-@\aei>N"n:LQlEjn%ZP\BS3RUZSKeN[Gh66iI@a+deq\0C\9bst@I3%a3_VI:<_#Q6<_f8<S
%:(o@CK=f>?aS+$Sa"[NCB*#AK]%X5Vg(k.rikVk-/L.2;I8\+OLCrc4/[Vrglm.M+H9;8$/@_!4iVV;u(uoQt3]Zs'^d5]t*mX^_
%_fcecs8?[pY+>Ia.p%/rF8sHiFj8<`3t3EGe&H9(>fZ%,*B6&EE'Lm1[R^@7Q(;B0mbbU]EL=ACh78"?><]bAmX=m7%o%/7_d+B[
%Z@+g;[`e.S`>u7440J"+^qtYde$1!<I^I[WS;=_:CgYhP7IY)n*F5nCXg<FMU?]7^h6VN</%3d4gFiC&_0.3%B$62u5\rA#,:;I@
%d:jFkh.L4X*j^<N))F1-<#W*oQ5ns`3D?5p1sGB1$i/Oph#XW<SD@]*\RC*ikU=/^QUmr_R\O$"K;>?F5AHSKgWr#7N"f[a]sX:e
%o,*UqYsZ^.=D[IDaYX>oRNlTC@kkRbW,tNN,<eA3IsJMW`rTbXYd/-&D)&V1hIL:,)Zm(QgLAZ0,5^MN+Ae^sC\nEP(>!__=KY+R
%3^@YR__<\:gnM+WpN7>8'/DcW%b%]MCkXp/l'ThX=R8^))/it]P0TF>S1o27Q?k#D$W"7.kH^?8X3',f@NjGU((7AT\6lU#-\ghu
%XN+(r7Hr:1!#YIdI/IHF&pQaV=D-cmYHps*5j:&q6H?co-6Ed*[/OaMUD%BSFU[0&>s;X\AdK1ZZuB6Zejd[P3HEhi2'^T]]>OXm
%)1A1$GVi\aZr!D6F6)>AKDMiA(8AujR3MsP8?39@3[HJ%E]gTjL<o#'_>'4k?feeJ4qVdDSc2.fZeJ\WW8>*FkaOkle,[:Y>tX&J
%UG^QleP!lE_rt>qNP.'0HbJ"<@#W7td5P4`ZOY/!"#,am`aA&Wap"6DS8:1N8b4MYA.T-LZ-er-`0XKKA7kgSiunnY7lIaROM%H7
%[`u6&gLK%tD6Yf";loSOILJ4#;G"=d+okA52gick6oOj@gMYfP`!J'Wmq:YrE!*1#\?0\ZZtG[&`i\XVj0m[OAWqnH/p/4;V8kT_
%WgSK&@#fC>Q0e7"3hT<?GX/XEO\n31f(OWrY=:Ot9AF+iR/OP"fER(p(e/.d*i.Cld2CA:L2#.9GeT6,`d?CC%/R$GmIj>i40UmP
%X1Yo1nFuK;QAGT]YBu)']pEpQKAfC1GeWeG[s^YJ\+>&Y9&d%HY,eh!0I>+LhV,tP%;\YG#L"$kg"`$).nZ/!)=r)7Y.Bb\?RhNt
%]@u"5=q)_F)FG8o)!d0,gBA#D6e"dOe4%poS:p_1CNfLK'tPCl(!@slB\*M0kLnOU91Md`d$,WKQ[;A=>C1hQ/h'V?:>Gqr-DW!R
%B8r3jq'ZG[Y.>B#KDOJqQY>'-Wp[?<TUb0k3_;q3%[</p]T;D'&\8h\Ci/2Uac>IU)g*GFHAC'0Ss6l&dl&1dZmF0ZjsE)9PM7V:
%ig,Db&t%e3X?B(CPXME*?L.M.7k'9io+A*[Vk]JEVtl/$(\i,FiYHOt>uD<+js(p\%^5n$8tsd^`3hb;^ZZsKq1o9uPPT`nP3=_E
%n\BFIQR,-Aj<NA0Y<#6HFIJ8hcD9i+''0U,UW_Rp=WLO6Jrl:h\"CPF[/t3;Yd`(iKpmk=J+Bh\ort"II-,8U/&XKnRT4\qXRH4^
%Iri(03NtNFcoc-RpVR?i1KOK"LD:jiHlCe#LD:kDEhi!JWlJJKr9?A!:USp"JVWB^8kqJ'D7A?s5+cTOkeKQ@:USpL^dC,[E=YjQ
%Z9@\rMl0bGEo<Y"^\74t/+WiRmDE]d/*t#4nB`XP1?hK*SK<#ho]GhE*?'n/G&^pWJVV!9o@`EE6egN%8grFq*8'D\_h0PdpU!*Q
%cuH..[f[-u$%O?g@+?:Qn\E$o2oGXg^dJ"J%aB1OrT_0cqdHRD;;C]W6[R"3WS,1?LUP<<&``fOf?*g]V]G'S#WB<%Q3SIK]C#H]
%#9MTkG,S1_fs2da=i&\*PV!D.ZtmX(8(Vnh*]dKsgASfSqgEPkl]9<dh1:@TF#i:KmU%&\\3@:-V]?i2kMeNenBb%im!dldXWss)
%g":34(,m:ZkVt_C[f[.`)/3la*L_>G^Gt`Pf32Ro!tR!%9g7r@mgf?*ToIA;3H04<iNH-3%"?no%Qk0QSp#pf;0t:ld!cMm!BQfe
%%gO00`"^!p<9H2p*S9$eG\ASub+9,DFm^q)iIQbgla5OiGj*d[hsJ3H2*'+/iR`V5mD-WAVmsK'nBef_1)Ms;2<P2cRYT(Bf<913
%G<>;5Mh_<"Eo<YiZl:Nb4WJ\`Z9@SOS`9'^i1[jUA%DJFgB.tgZ8NACai.6i4PVe1fAV:9Nm9*/4fR'4ZpX"<\kESrFIoMI*``7%
%JVTOA<9U\V]HFb?!tS+bq4l&/0"WB8_$rL"S#FCp^8&Us])rT2BD6"do;_s(XUoP54ImO<\?EI+L'%t2'!EiA,kmXMAN]@!/c>+m
%!tXcp4#DknrT_0c6g#A2ml<,NNXe1Y:X[eiBfd>[BRea0AIrn:!tT6b]0joad=I)H.hcI2jj")PP-e-YTUtD^cJKUdBQ#D?hq4BU
%H9AcN/*_,DKQCrVFPB?Bl81n^3DX6$1IQn5f0VF_pIAXRD'#Nn;mJUJjjbd[s$ReJ6Y]db$O%h(O?BVO51!l.YenU@b5W)V;3@77
%1<S-'*`AfJO<f"c;o(-O3Yj`uHF\gS"J85>(5#e,[d*Xf@QG/bHgs51W7hkJVN'ShS!`O+4dkuMmUuIFB\KK``5+R!Ct4$hWDUG0
%PokEZ%5,S"-?Ji`rOHi$o8CrGi-IAsX2HVlp[(Sghej5tJa]MTG@T&0*Il@%chXDZeFNJ^M=XODN,'cc@Rme<E#a,*p[1D:d%ru$
%j-eE]rmA(u8S?^''n!&e;J`$]%NY<'H!6leEjTf_+OCktm#%r&Xp1%G4Gub26-ct/Ks/(LF@sjVbl+1D0W409(YC;R9#.4FpSkU.
%pc<WJZ%cqllK,`Gq6%9IZLf^;FlAQLmAU>$io:c%KqB=&/4bb_?XkG>)VfUeV#3&p76Om]KWJlnI7-4an'PXoP<L$(Ngd)m\aQ:n
%4,mmcQcY>PWsZXmhKgbD;K_Fe&<DpWE!`oX,n8a@0Ve7ER$rc*+&tbs0`!aIlb]pRa,iZq"dQS"mI@elAt5]F=mq</QQHQ!p\EGs
%=:/X!h,pAp<qG8'ja$jsme2OA-9nY"RDe?XOR_,uMf7eH.\`1[4GCp[[,Lh23&L9cLFY4\:ape!')^9`N@DVT:Q!%bN.E!+/b__!
%)*7INMQlJ_5>9*Y57qT'4`HTR"P*`'oQ3"NcL+q7[+Ib<]\>r"GLNfb4FjR7VWDIKB/YElJq8@A"+KAWpugBu%&7a2kN(\kBEqir
%kg0#$=8o^)8HA>i/Y6BsqOu\0L-Tg`Ggoa]Ks`l-R(dScWkIqFqPi8C2)c_Ng47tg_Ft'm16oGOUKe:Cb#dGp4lo.$HXiYDiO,%h
%+VIj59U_D(eRY5)5?Zc^p\h#m^lUIW6b$*>cG1fb>XoLairL@aLSs0;7raYtZ3VD\VU5M:R9m:PI`h'OSmN<kLS83R67@$1)KFCG
%\.,27C`o-GG]OhC@-E+g9s`m2;)t-Q]]Y@?H]M2YJc<UA(!T(sVmr`M!):K,fHb9of!NK9gi10m8a,SE9'5R$=+';8n&GM\nD'aK
%0n+FWq8o_Pi%H,m5#`\8"0;EWOT(o8(Ud:+KeD?e(36kU>[q:dg;B5&NJ.4HI)jCe<\NoTfX'[)V_*C.^Cmc1"E("5S;0g&7o>-P
%gE(tb5-!@Dh(\WY8)SB[&V4RqK@._Zs'*#G&!cT*X,rdQL74/.WX)VK0mjQ(9jo%?$M)HuB>&CaUKVD7LPAU&,\mNT>gKGW()#_6
%i/UhqO[+>Qi=YNin)=U[c?oJPOM@&A6_tbMQb/mZnf!&pUIOeI9dl!,4oXU;eQ;0.ndj*oSj:7-_\8ZpEh3uflt+n%79:OHQ:p$5
%W/c]XP_ICsc6\O/.puDra-+'L.Mptl2ilY$`lsL.BH]'qi2OrBC8"<kDi^OVdp-I3s7cp8/(G*F7k89HVr=O(p^m*`XesKtGCU+l
%k"I,_E>68q>BkO&d'8]`)B68V?JtQOQ8Iui/n=uW7"(`L;hTgYOQo7!>#h+%YRNV>GVuSpr[Xph&%,%Fm6f.99f,]]r.=bNL'Xh7
%Mrg?VD(YlK=Pr8,\K?I(`TdT)fXZr_/s!BJ?WQ@#>)Z3u0?stU(<11-o-.I$5FKol<.e&&i]HQNm(cUrK7lRa=CER%&VPg*YYIX@
%%B.aCXA2^ge`+W*(P1Z>dC/@Cj[R]Y0MU&SN]$DoIGfHiR/6n0RRP3S40eMQi:\Z8)X>n73WA!G&NXE3EK1QUG^6#/+9*9]phG%+
%Z7@j"cC8&^(.h\HRFWC*E))>IdhM\!p"=jWjO:mo/U.mu3M.F&A:fMa#qL7KbURe(3@]$&N0h"8s$j?,`>^q=a+dCI!n;F.VK0-o
%U5:aLd-kKJ:S1g+)B/QrF!1N6n8'ud1.bP,A&E;:AZ`iANe0jJHZF.`B0T48K)U)X&VY1%GcdN&U:>)FE^<e\5hlV2qSZl,N'2IJ
%$Jt)(kIl2RhRV+Z,I\R/!AY":U,PVEG(E(?>h[)ic_#)qW0[Jp1Dc_\HZ^i@!/q#*,d?iR0\Amg^UPE4<5'\:Vu;=bXEU(4Im#Sr
%VK`HE,f0>l3l%,'c_h96n,P[d``a).jj4CKUXKbsM66mDIkLlDiMLHV^.>cg_%>(U0.Mc)bUf,[J"P,\bVr,XZ083?5CT:ejK<5)
%a.2na%D2kTC2B7KGd<.57b;srHX"(/A\bj*%<=8L*VCZ?Cu?V-0_?0QG\j??9_sYO&ciXX:.K<4F?MWq9/i!C$L7\a_u:$$AHFC(
%KLRC4O:A@I.9+5+],Y$i-qePmgCl&l`#WqdoLp:AZKg6$U0t79?oej@Ne*]NZQJQ2#GQeeJmF=l:*MGnLg>Z?s$TIQ2+f5n#H>P(
%I<X%0;U[qYjnPAQd0-UmM>#BST*/PZKdb1Ip[RL*&'sK&hn-T88nXj93?OjS"6aH)BO5$?\9o]:b3<6B/A5]R[E`@CL!I^So)\D9
%F^BpZ#C-q+OsWEA#R7l)kBq9'1m^tKkJ^n=jI<lLU+,!Z=Nj;\^9s[>WLrHM^"hlIU?1RPCOkD#;6HKsiP=!km&dc=+BAM]Jsrh!
%jKiE;=;^l4fB$agaQ.jG(gj:;L'uqu1BfcI(,$,JZ[B*4!O8[-o]2g,/!O7`.>%a`"atdW.D;#sQ.$=p>N1+U#R4ZfBnf@%eE$_E
%9CF6(Ul'G*dQF+1P9A+?3g<:K(Zj$5H,/=o5=bdu<pYR6=gmh<e@#F<qZ]?9?q\o2ab.rH^+oHDo?iOr`ac0D*Tt)$>lTjV>4?<I
%AE"*9#mH^dYWhuT0DV#BQW#m6M.gMsoV+/o1n&\DDbME?ptOhIJ#W.)49qPXY5HD0&6/qr%s%*[nBB^rKB4,cHP=9t(^logIF3;)
%T7@ea.rJ<q>Eb)_CdGa$qKCkQ]Zr+-hamTZ7Q9kKs.Qh*es`R<4.U[fQWBZn"4F1EceJ88=aKBl''&Dl#M`uNnhFkC.=>C*/Ks.L
%^kEL\(j`jkb(U5N\9&64A[&J`YVuhO<&P\Nr=1%8nGk`Lo*W9D\RMP_h\P*V[i"i.nT2HD2E!D\XQQgMhF+[pJq:F#VNLLQ=i%UK
%WEtM9m*sJgWe"WKHU@;kLL#Y*dkM*Cm&]:hQus7!gtK&PDq;1hmGF2^hQ6[uPqhc3^CAIC]=/n"M&Y-HXGYab4`*cu_5s%7Z/$Z7
%H#ZZRD&kX7.L+0OT!URsf&CDBB"2s#_St4Z.eN)R;k\29TYg*q3W/-:_Lq;9.b'B.]@X2q.[#fK.,XsJ6\U$P%4[S]JT%X:U*;^d
%K5Z/fI/-m@!g47p_UO>Obrm.=pR2pVg;XL&$ujL5KZAQ;<VV.,;G(af?Q9DZ.=^f5r5m9bdZ`#f=5A8al_G"-'DI_TY89-22/kjp
%q+><D+8*P9ZQ$Fa*%t/84lMDeQTH;Ns,XbcClY:R\H]f5<Vd5lPObZaa\K.,ZRmP1NcOhQ>B4o#qg@)S^,R7g%C01V8sX[:l`/^K
%1]ql.!.fb)i609p+7l]"rqfJp"+tK4ZAgU=n]J>oZeb<2`qugo01!4biR@DKn7A\46[/M*e$gl;N2jnlr!S]D6G&<Wc^!/Sr3V5>
%)c^Yt,QI+?*]r<CH*!RZJ8.m2F1_J6bN;ng#G^;>>I0&JXW)8+Ac(p9p?_P(<nW(m1B$7]cbCP"PD?knhHZ?F,MiBIY_%uIqtTfA
%_sbj1S*UPGLEU%)Qp1e?1=$I"IXLGS6&icm"ok[_i4*WQSY!?5*@JuN%\c*+.l[";!6<E8piUA"lMBn%n_&[NP(.T1S5'fD-APO7
%kMXen\i8caq<M6LHj;7mnE/^_D8lD4S$.]2+&>(;`DQO4p3@<ke?QnTnss8tR-@t+^s/75=o8e\)cH2:05h\Bn*pt+.IWl<?V[e0
%HhR!k`aJhsch7$j?f1@RA#2UfpKq*)32B?"jIUgsS*bK-Yh?:jFr[I5I<NV)k+JDt]A37*g=]Q]EA)^`8iq3gSaiiH2Q,8ABA@%<
%XgI-^fbl]9NSe[_SeDC(b9+l\kBCjpX#ib$2CR2/em@1HFIRc^2lf0rG5`lfDtDB1IsW^;^R&lAmc4l_)[BRXs.`qbXbEh52AWM[
%0>/s#(,%d/YY\MMbih)pTYAb5EBr,9+rY(q;^-fLa2\IS`@r&S@fC.=qV2XA^/q5eS.$L2O-@J&F!g\Q<;.Jcgn$B6&DGiN`7%Jn
%nAinCVU*[Thl((XMgMb-nP>;%Y(+u_VgYPBc\eVpr#D?@;*Qrk$TTm%ahCH@,@bsV,Bj"Mf#o_%dp&l.Y<PMs3rBYTpj`9g[9#EL
%(-Z#E-HC:=ErFJ^e#<U9k6B2T1k(m_qRO=JfZNWp46>Fn:;$J;ripkM0&DTa_&'sa8"Y:EgfsjFEP\LiSRThuUC57_H%5\DlMUs[
%?UX:&rlJ])/8Q1l"]7Q)*:#)$9BZ,+Zd2Pl"shNEp)TOkO(Y)_*a7LZc9>#eh<#g*5#6S/WW'6W5AR(aPdA\7n$KmFRsglSLCX<q
%g#o>iZ8nQ1kF@C:a'ULmnbpL%B(7=6ptUIipARbcBTi^Ir;14?4%99WBPCX\/b5TZH1OJ](sRMJ3Ks.q-dL;D_s4+D:'[bYs.9/=
%>iT_b)L?_!4Yu7LIIl<H?(gM)[p%N<S#i6\pAMN<+)Z.2m;h6'%BjrXYr48<O`!>=:><uL)OA2O2W,i6Re]`P&!08(pY5VDfnC_Y
%%/cMd^2P/Yq)SK>cI\IB0h!ZY]RA8`>.b]LSr'O7Znc`=@g`/VlUs.,nF49]J2P9imnE`;@Q)]DP[&JjrS$Z,FMNrP&dB_MT,rlt
%J[>b?2laO^`HL1_rhSEEj:7JHKtE-gHK'/=Rq`2qnbBTh9l=?0U\WtbZbJ\!^:CoVN0^p/%_F^g]LorJ5aS'g+ibc'E3C.7"$$it
%6VTC/q<eGq7>X=?EddkN)[&<Bk/ND`T'2(\?]Kf'A&lF@Fa;rh=#UE66-I0VAe;2>c&Hugm'K0>_r>UD"oaIiK.sHX4h]RY)"9H.
%HEaXN_VO*mIBQB$CrToHq;C8q#AtM@JY[cMT[qJC)p!_T`facB$gPZGI""!l>U/50^45bBf9`Jc?UNsn:]-UJgD60GaIQaTpRLIk
%RV3C-Nr7^kE2Vo0p@fDJNuS$ASB-0QLVWV2s'T:7YEmc:(G!VL(Du0JY:!R"SXoO8)6qMKh;lZ9RVGZZZX0F+4oL_i#'j]7^"8(1
%O`Ybb`iL[HBZFFH^.@E*&(8!c;u6@eD8(PL!p]#Y>01Qm.0"$r+m!s_]n"#L:3hiflcI5qPT,9n'4,2:nnr3dieuPQC[N+[V<OmB
%eINh4^%PsYb&)Q%>Ic9\p;SU3[s)gQAu2'j?J>u;@hb$6dQ6!)0pqp?jhC[ZcS[6?CjR7<MUAKCXgIR94-s%2s6<$rk-fpEOt/-`
%7<XR%oMc>e\*6#qnpWK+g\kBG:Rc.dkhh!tf>RpM]XSS(T]V>r*K2p!AnFg<&DeRiAGj2H>/SPF>i2gm&*]9iA2q%XLfIo8#'5PV
%8d<M37>\9JQD]p_48O([G,i+CU#&nCH2/;.Ps;I]pXYtoW%V:,4("Ck;KJIM`iaG>7%"J*!`(_XIi^koghUgAPfFX$>,pSCI`sVi
%.QK0R=&"MZS!/9dX3Jc#o5<:CA5=cU2pH'k@2e_1KDj>Bp>^6\^TPnOgY?(I-cc-q6sX(TQS3GIrd!gN0a;&BVI0A%>*jtDkLFC+
%T'^`^*;qme&X>TXPtaDI6Wp4O^[4,0']@)GBWBoTFYapjFecNL=5-r[pXYsWc9L,sEJITfiZ">Ps6aeV:VJtWD!g0K^$"skK%^U=
%4#>R5UEYI\[q5tiD1D>g&S+HnP^5!lFg)e!O\BMV[q>JfVUOj,&)[d9\0;EgL6,afjnk!.g+kJ/mre@2cRW>3m:"-+O7bY[-4FK!
%Ul]K/G\hEHr:FGno<&OiZZ`!b"G4Css7!IHLO1g8[K`pTi.$Nq[kfhHFQqY(2KcC>`E3/#q6N(:<kb%q@]lBTcWU%clc?0iZ4E/j
%T.ZCE[Sb]C+-.>)_o,J<rRl`F?/%)]1(3TLr!Mr:Q61,!eKYA+mE])$%:r/Ph-O8f7T)16;EYrVr`_ASF2l\_]*!4`g--L3WAnO!
%(frH3c,6ZeZihbbe*Zh+gJ)qN^?K@dB$Qmi;jSNNOD6\Wl!a3^3d7F'l!`j]oGm1TC@1<)1/6-M7@Km+F]1I[R2d1hV_:]Pe#+-U
%::s&#naSq([6&@A9qEi?akn_u6gV#:b'?&>AHe=nFE[4p_G?E/S_S^($HS;r25.1cS[^rq`J9\d9M$0bh-.s-%^uYHX/Enu2=FpS
%nFsXM`gX!t^2W`(bBrLFrSN<*5VZHX.(8M1];la?0R]1$8o-[qjXi[`oG;?E,IP3=KaZ_RR$XTsWk%q$GOK?7--pY?#R;hCrH[`N
%jTp2mafRbjkZ"n_RTa%[U#3Q27<2mB:U\f)eE)D+'%s30(BuXpP:H\88pYMj+Q1-BM[SjO&$B79l>"05pRO0kIe`'meW#3`-hh7g
%]lY^VI5^[YW*[n__d9&p`9hbG.r5]2Ba=KM2Og/a#?"8VXjttUUc_hN&A#oc4Q<,g,!V8a1RiLE[C7+BHS)ln=FS[HG].rs:0`El
%S<@B!$85)VdN$!8Q/%nBK'b"&0:8[8msC)s]#TSdV^iii>dUL-`C@j97''9_M,!TpRAH2=BK@1%c7+)En8^<GmJ9Pd%d,4!:,D1O
%f:($H?J]?+BkY=#;t=O0Gn5Ze=-^(Ldeh5Yo>JpP;kN-FfWFVV4C(Nr/f\`VeS`Te>D%k8a'-k,]0B#OdORIpk&TeL!(pc\\afPc
%.Z8al^Y!WqqWo#YM5SIT]BQ'$qX`Wg7p@FJP!2$S]:IaPoinc2_VB5Iel7gF]=YeV<j+1J;6rP<DKj'u\ClpaS(Yg1M;@gs`A[rO
%Ma][2-Oec>i986^JC.;t_R=MA/a$_;:Wc9U-g<*&hsMYdrjk1?p%A3k2B(,qXQu07Obbj0HQ.</:+>!YZ:]sqY0gIW0AbWU?SbEe
%X!u)B[.R\t/e1Eln#`7YOYZ$(ggN,,D*-5Eja6T9eKhHXp+sP`R'_,b?@\#m1Kn:&qqb=N=D;>?3E$XXpS:E*<]7-i2WslV0J1qP
%?84!1Rc6)$FIRsp?RHn2?/O/h$sksarP;KqGOLT"hP`&e:JBTS/]Q/qeMrgSO^8l)Uq2NA)OBE_TBk?7,3N.,?;8:AKI:)5gihe0
%*[d9m'rSpB1>rg'hiW6B]GL99G5'u0/lgEO)VH[n-A(ZRoFgVjMJQejf,cBB(J0:*jatIl>$0rt?K!"ddD@pdo4lKl?'H,UrG;Jn
%qf3E:f6k>YocQt)0X$d,DlKetWb#OVUOYN9li$\S2-*hXgRj]"ZZnW]o4-bql:9@WjG0KLl#:2XUM3lfVWG7oRbUSLT!J7/)DBhb
%:NiG6G$3jn[qV)`osGf$Mms.C]Y]QQ<n;d^]>FF;o6l;#1'bYQ.BEelALSjRV6D/N(!k-3.]a69lKY"$>P@^e.tn_3Xi@kuH_eN!
%p1g8),.*Vl&M-XFQCBpf5KMR$DU3gr&%3DQh#5'L[Mir8<jrG%_kK2W_WoTNFGIoga<UJ%LO=_r_0Bat_O<-_aKF!Nlr;"SXCnmJ
%pIO=]DK\a]c0I=07!l/W-.Q4T&dNu%acNEa`h96?RI]^uV.j@CR\G"ahljt%<__Ddj2r2aS(I(?J*dd;r\b/\SGb`d&D1o8L)i="
%T)N,%*k$%hIA1bH(O5=Vp>XhnX!`7FJI@8[E0;"sF[e$g*?F:EN7ghaVtL1)4'nSkGn6Bb9s)/-Hp)ELa)%dRH$b*n$YX2[kMZTm
%F&'2N@,M*49Aio*&=)-2Bk&7L#.Sq:A#^ek5CV`U:Dc#C/F^\@!rKtU2$H!OgNU*SiUUl7%.5saJ5XE,g%>'a3csDjfAEaXV:=<:
%GA9Dk<h96tGO"=;HFVFnrFGNrgY%dAnl)7CcF?##:jsBV51>:MO4furV[(A*6-9#/nZfNi8JF:Y/a&1$T,npnlZDrfWg;ml*^"mT
%Cts'^>R2tu*k0c]\3_5prZ%j1VCNV=Z%^2&!qU-MU!qa_@ndX);j]om>DU>h,[735eP@lSL9oR1\pYBmk>Zsi@EVE@oC%:7EIoq#
%?rXg:(d!B?j`L:i-KE["i'oFENrE]*[`^l2*.02`X/IB6qSc&b[6G\CE>BI]Chj$'TK6b@Dk>_6g#9P(4!aqYd:t&-0-H`)>b,#E
%EK6D`"*^B^$gYB3VQ4CoJk8o>$sm'"JfX$![4<i[pH$B5SDNcSPFX?nhht,JrtSH(H[3Ukm&0Tk@!0b@Nn;gGNn"Z`]Z:]"fs]ub
%*Nn3?><>WUL@t:Ce(3nn))WJ^FY6/.!P)S[QE^Q"g&h/I7XeV!JO1eZN*q-(?%)?YNt!/a*XaL*4B)WVjB58ui,r4".r/f/Y`RXb
%o5o[eeV@FRb0nssh$*AGDVb[rShXH+r)>r-ku"#fZcR[`T=9\loo"f!rN1qpL%64Y3mU=8FP@jq;DIoXGQ.m%)=sk6T+;dP4LmHk
%?or5hHaJZUrp.g6TOM.4kFJ)ao'%I)Q<r;BHR_CMK2<qHAb#'?2@[L_?_&jIDm"[242osA:?ju)al7,Pf*>mk["-g]][GSQ1#XTX
%cg;ZW-&L`jG^5Rc$MofXP(r^D>:17a(lX]$`SQOKY)7N$^gK6nc[Td68poV-h^/fipAPsIE9,-Ufj2ZWp*\EbGSO5nDdVCrpF:?_
%(#t0TP92KmRVa#ZgH^d!\l4WmAM9ZND`Ckq`>4Hllh&gh4`bMef4F7D94(MJp`,uq@rWC;C$-).5<2L-SAOlKAraiA*;n.gbogla
%ii/T=@rW@o5FaSrh[U2<C[3p?`F[8F4s$.a3m^R4aS.l^=h^qSF,s?X6+nb#F:"-^3ZceQ51cgkH1D3R6rt%<j,N->l]4t`Eg"G(
%TBqQ$gQgpgo0@(TWEE<5,r>>Y;L8?>D@(U8eX\qJk5lc^nMF`6D9Tk*]EXYR%<^KTq#^YDdjgPNC%I'!^@`!eCA$c]IA8#p_U)p+
%<k7i_.`^H+#lDd;b-PPngB$pOg!2M4Y2*QUOLd4F[?]PB]g##eMk&EqGMhheeW8VF6o[^h#O:Y>;SRkVqEm/iEIIL(>9s^f0#IL)
%*Uoemb(,mccrE9b1#):X%("nLq3fj.q/4M^5at^Mpo"*9Hm.(f)DgKPAnD1tdGcC7Gd]`FET\3EJ=#%.VWi?51MJpF/[&DpNj,qh
%pYF$][\"YSq7LlQ?"2jn&hH</GT_e>55d9"^jp0qe,9buR]YoTo$:jA=;kjbEKsU9TNqU$c@P_+<4&&rfH,far<ehF*ME3Tm.%kU
%RdUsbhHaHnL0b,N]`!/%O`%MrkLeW0aj#O;S"q3Wm@5Xc"d@u:UZm2?N/`1UB/I:L35pTrhYk0p6u(_rfa].r+J#FZCZZ7!s(OH?
%2n!AAD"ILugP/<[o48a-mF->;ES-ZYpjReKgH9,eckoTRgB]Y$bbA;>FMB$%20X[ZHt<W)<DFb!2r38V^27_b;ZrD2H_*.(FDP>6
%qt&p3mK7h=JG<J+UH*ud$M44CB(VI_ms,8apJcYrNj[trkLo)Shg`n+SskU<0j[>`;__47a'(2`s-](QQp)2G(kC8J@bbZ:B>sM2
%0Z%$U0.WpGK^%Mahu3-/==XRd]pqe[?+rs8BVG!uR&Q62SYo\Ng]f*aFe`sqQ=&t2k4n?@*@k`JH&i`ohNfmXcNa!PA*r`d(qi"T
%1(Z5Wo^quMN#OZmO2k]FI[lA9_u_Y?q;TV#9GA$oqe>YlGrDgC_I)hL[f?5NqRd2ZbBSB^T1AXIl2bE>d$R"\_ZOEhC2a4s'7n/*
%""F:]VG@B:oV""m`n\rohiOH?>/15NmP?!7<An\iXf2_697"j:ml@H^"K(p:ZDlemdU/2V=0n4uhcDp2An$sH>5t54W0pe?MjX`u
%IX6<I)u'7l54ZDWX,D0+Xl"4=8G+Y6VSHoODU\uAPIKSHrMIAE1-"q%qb>LQHMi**Ye/6/Dt90qF.1>-7/K[l9n_eRPSs0#?GE#q
%;NYNX341[EkZ5-3[!)$_ApRT)s.<hJNJqJA.[82TH7,.E")Bq*6;@(`qs0bnQ/#XEY`ueM350t%:^Q`*3L_))c*ZpBrRNGp"-!Q)
%J'5q#EISH<34YG@?1%Xe.F">A#'$GaP9+MrpkSK+1N.4DN!_G5K6cLI_LH@XN!$BePP?5h2stNX@GX-Br\nPfo]ITh2rhmNr5\Qr
%@afYns(?56dFs*17]#^K[\%HtL0:]!p$aI[`cE017Z=%p-55pp.a#IXR@r$Yrn8A&F-@puX5rE_pg.amE,86l*(:uuDhFi<(SQ+q
%F7S]j]"S)OkO`<Co>POGSa5t1eXb_!NNN'J`VWnQQm&!)[bofrdIp=iE*B?,;4J.M(<PTaY]6tV6^+sfG:IB@$jAGu##AH#O.>%$
%\MM6ug&Mfs!Z?Wj`^eC.B@Fnj['>*+F:eD^5pjq?7/#p>UP33#&&3F+gn'X"Zi05\K^S*c&NJJcrV<_s>Eef.05U[>8?]$N3C\b6
%EL8E-&O*[>S=uc4_g/Ph^>8AiSL\5p4^M)h5<Z#komti&_qXe1]kVYjHi@iaQ+8F&L2IDR"[ou1?1F/][54=W/8-bSUnfCcs/;tO
%Ik@CWqXp9<CY;-@#i;rb:"BmZhdY:K>;h[@adu(bG3M?J#[uOlb$L&\hs`b2VVge%D@QL7#"(Q<YW,hJ^BM+U#B4TEh77Q/"[R)c
%DL[)&n-=Er)u-c#-Ns9:#)d].*UMT[CK$#+S$\/mgf^12])$m<s,1t&1-WEX\]/cW:9oS^rWK[VBjtiYmD`2:r%p*_s7nF+07CJ2
%l6J33F#'52\oWjl.<TdnFUBJk%V%C4N:$/Kr3nm`^hSJ`CNAU^kmC?;7QTQk?HneH^'TDV7dG,d-\M3j1_%uC79uIq_e)_7<mfrs
%C_\[@f6BTjma$u1OhSQgcGt=$r0BkQfmS<Ye7q"Wn`s;tX+;AhHnTcs<S_1''[9Q?G>Jef5Kd!Yjm:OIirrKCk#^21Y3gcBIi<I8
%n:Gc._WOXg:<8crMshF.*%s7MSkbh=$VguU?V_JPV('E71td`-<]YG9R=QuZ1:!,#I,8iR(qO/i6FVT._n)BRHS"7hgG9?;q2+N0
%PN1+*(C-l$rE1`AGQ-6a]fiY^b6`T59Zo1iB$[O9O"Kmk)Iom8ITi'&hgn#2M9+"rES*ME[?aXaNF!Wl0BKrp'Ih(n2kk',qt7eu
%1T#;`_N95+TBt[ep_%MkCpkU+FD'ouY1SS[fT^#hYQlKKKCFhQY%$m5g=$*N1NW1!<rqHjrg:3rV?_I[JY>t)$L!!scBUVe!1-AS
%HMmJtE6;A71#0ITeYnKbHau5PKhE3Gm*"WfqGuE/3n76sBb,g/eoj[BrI/LKOQ6!l;UoouWNL0K[SmGj92.H/8Uk`(cKak29/@r:
%FH2'0N^J>oVUm0BC2JBHmd%Qo=9Tshkjnt2Hj)?MI)Rg9o:?tSG'M_$3b<k4QG3?@pQB03rj>Z/1ScugOc#:UW47.1Ff3F;R@4XW
%(+-3@*7mF;2M1RU1ZgS$X4*n(ptLG.gRJ"NHVCo!ORs]@\bU,?LG'5"3,h1E1I0=Xl#,RXO4KWuoB*-.`_9Zu7M3=_cAF%)bW]95
%QP]8q4lqa^fuq8rSN[#G]+2&Zf()Z-n1uGqAK1Mf)K>FWF.8%<S'*=PHu\i0h.)\u-I'st]kWe\qci+Hl#8>mVUPZQG@e,,1[B,*
%G](gY1D=XD)GcJSYlo1<*7Hs0`J;H<'ua,36gRXfWhMDlj.G<uA%#gJdmaQ`$RX.6438";r-8e-_24B?afQX#3$-?[;jZf'K76ng
%HEh79d=9"R4M_bjnA?(Z)"!2(?1i+MOPt4bRjJ*s#\CK:%&=]\Yk6nNETiu_5XYB-A[;C)i0mS&F6i7?Db,.IDCoo,ju=2km`P0j
%J:V=amp&M@q`!sd<U4lHkas=DF5FGr1MKY7h^d69/Z7?fB781CEV-i/O.PmJd>L-/I;_Og..tL/'@MY%'StU]\pYOm54?sYZPHg,
%?e5N2<kU;&rc5aG7qlqWYApigqju&R5,XO4>]=%$9XeBu8pdg^h0lafgO@bOma2hT"7aA%5;-'m(OJaNKtRHZ_N[@:EU,>`gQ"I(
%R;%FPhKjOL/URAH`pgf?qJ:*,@:=?mCpt;9cptk8f*<1'An4s?Y3cD6fX!<s=h?-Nm`mi]o$=]!)0bfZ/7O%!]DDo?Uf+A%9><YK
%f;61YF^X?NlLJ?*ee<A8bHko#Z^tL02tg5<[<F:$hQMD[[dI8,Z]4O\-gRLSr(jrekUQK$_,W1&B=ZBAUdt$k>5q^]r4[K,p$3i'
%G1kTuknah-"[hF9d2u$WIFTmI=)pXbm'UWh[68*Xll0=D!NmmCe*Do&kP1t;i1+rVDFV3OnQau5TBogsq2k1hZ"MgX#6VmRdY=>K
%f0H-Q[)pl8mGiS>SMcK"L@4P=RD7\/o?.C+U/qSFo/:ONOPJQ0`o=hi`r,/g=.<UbkC*ite^RUncW/J'GeDE>S]g`0b6@\<krbOM
%lYCXsr.IV/q+3^Emgk:?F"jYBSDrI?kA]J[Q!a8eXtN!D):ggVcZ@%#%;nkrop)T&l+,rd]FA0dm9c")6mf3RJ[>l?fk@<RVpMX/
%:I]Z@*=VnQpmlsg^)(JGg;Lqo>l*E,e<N&^#_h[Z#@ot[r5l"(_>Ck+FlUrbJ$AFl5"G4*q;TB91TN4!J(OgiSbS";aNZ0-G%^-u
%Y`E\I1f+&)OSX.b.@8V2.8F?1Ip"kGpiQu&q)c(6D^I85jhmY^='o"c#-,iOhG_UPH8&JZCoCL7TofGEj-,&i'ufAqDI!4-Yh!8(
%W%MHSYj*jtW302X?]FUImJgK2qk(0oM@3Ej<>XflruAcMH0=@g&"gRBT\GRY0u(;hV@UDTrO2Cjh7NRQrib2uhhHW@hL5?N@H#*$
%l@8-3]2cT8DYWVd]*ksr+Y&uSm,A.KJZ.VQ:P5-R]W\fZls/7OI(f&6H*YqN"4YU?g)'l^!%`*FFDmfMpkc_3omSSYo4R#H1b@E!
%T1a'5->G/9h_Ng1W2P@.khu<mX0$=%,F,nN5X>mE/hOe?Sc+$7`lcR&f2B"trR#$=gOXg`q=E9*_N+9>ip,OMCAg6_*g!)d4A0SI
%h-Yq32,DfDc5j!XL[n$*ZpApG>l[VH6S=]=$Wk)SHLoP<O,#7W^Sa$3F+6!\[[HNactBh*XLs%%+"_VBh4CV;`T=Nima@0>7sdFH
%eqR-F9cCdA?-;.\]^tQlh+HboU=db-C[0AXrlE::X>aS`)\ke+)8e**b%QpjVoYQBn!JU4L,83qoBZ!Tn+^RcBR<Tb)h)IDML<_&
%jQe>q_@5/CC&-T]PrHr0c,q[\Ui2_U#4dZ_MsnW>Cql@L]_bR]k4Y%qD0m(+48IVe6@SgN@+]i]-boGjJ3:g*NS/G9@8e8YcU_re
%D2qSoNAiMn1`*ncA#.t/:B<E0CGVqC)h3l31S*s\,QJXlQcq!VDYsWPaM420VSe%aWO!_U?p)ZjqX4f<,2Afu^icp/N/^=Vaq"H`
%Z8l,b]l7lDEW0*2Mjg;jnNZKgT?egQlQq#)]nZ;]/3V@h=3KcF-dBZ"3r!XK0&n<TgXH"!]?%:W5B"<H=+;LH9=D+3#Wqe.^s*<e
%KZs_R(uDM%p;Z'Dbl77tkmN-uCehZmBn+8h5VYLGbqQmp=MZ9o#)n-76V5MZ^AP=0\p,c8:*8:**G"/d?<qpT\bSQ"X.k$3=-(AQ
%gE?LLiS_WGlJ:Fr4V!$hXE,KC]A!2#7:,[l7p93oZeM!Ocf`Q5^R@=4edf4`1q,\d]P]:1kK47&])(o0212,[lh@#iD&ck%Y3t1s
%2R3'iDM:g%lVK.XhZ!JenDb3kT>@tXi0Z%#EakEVoM$s@XT'GtrU03qV71q4f:R!M5@/S`kM%74dC#skT6El=(-?<$al*0+K>"H]
%gP6:]59n-.rl1Z14q83"AL:dN"W@)B/e7#.?+bO7fUg4Gi0Q6&9LY7-1H5.LX%m0p1o_3l[7eLUCWn%"UPF\GaCmJ5kdit_CbS0t
%*>nh#+c]XX)7I2gUh:##>Mo,JdZ7GZ)El:/KN.;^qp=E,)>hFPo;1:=,_'lV\Q,nV)lmPbY:%mL=h9g*N`HF!ff-Q,,B<Gogu!d,
%.Vgt@Vt3r[>3"ifp5O'b[eIb[l"D"86Vc1S[%T7e[H'r=2mFude-BZo(F>;fn9kVtB>7JX+3FH8QAD4)B8/'XRn,a0BgauC[@ZJ"
%Pi*H9l^*qIJbbZsP53DBMbD7Ja#9[iF`D3_8p^TIL+h]\_)38u^:W*(j3se?9AD_<==)P7k-JiE:]Mp^],S*3bR%P%H2\5qP"?k(
%Ao:p)[dBVe"?Nh*I54>]:IX\hW2H5FmY3*sGVnj:R+D\LVn4,Ki]KH&]A^ucf^=K(:")\K]-23/s/#r?>g=3K#TLPX@kZ8j__X:_
%J"GM2`o40e%PuAZIRI\M2f92:CQKKgon0_,g`W!P>]LhBBT3jal-#gOjmr8/DiuV9g[d(F-35fk+49BE\A_k?i:H=K5?#bOWC\h+
%4hWW,8iuP];^Yp^oE>X'pNP5N/)n'U0kT.a*Odi%B)hQJk5=UlVJ?Sa?A.4Q\DFpNR/bnW8NbOK[\]7\C2JuNs2<h6ZW!dZkPbX^
%K*rOGnoWJC#A#\QHd"?VB4Q1gmfI+J]TjY4,J;#=@Reki]u`imJ_/(hSCQ:tj)::8Ci\kGN#%5[7N+"Ma6n%Zg!"'r)TAOrTDc@2
%I<45VfDK_@GPS;NG1XlR*G)ri\4VcaBd^UGr#$2F\C0Md(Wn1mqg@i^@;%'8n'@VKQ&(\`TD\)7*3Xme=5&&q2\0=tg:S?;m<8-]
%Xn<QQNLrkSnfAtoTn(pDF4+H,Z[_i`F8d>2Q5RdK&^+Y-FQtu+7^<kpVb`.,(J)i#8DD5LeWjL),KI%Mdf-/Hqo]?PRm5"0,q&Q_
%cMHi;2a6!K7G\5CkV(NmN_"<Q.%hJt^`5W-$g3E(qV!oS0ABm^bgP<7_%SbKoAjQ5N+4OdRH&o+_'*G0Rt5KHA-!6*]ompp;>SO"
%Vu<s(H1khg:Kg#@'-CR>??6Z/B]-Rn&j)W>Rq]+ERh@f!_?C_@S<r,]?Z,tn<!&(q5G4]g942l=_.3Y,hNkt@p'9E(J%&,tB'[bd
%U'Lso6>p&of%[/50.cSPf6d)JDa)BQE:;%T_!uHU@,7R1>GcE^niO'#m`dOsM1]3G]F.g1T"XR]h?1Kp!dil=7u93^`(!&U1mIc`
%0fD5Q[MS>r-a[.cY`KXfb,0?jY"&J*_=bhIkG1c-gKX$MJu]E_s8BM+C%L9M?0o9%BtK=8FSj/fj]psF#f]GdEk-"PbbI1N0Q,ZM
%LFRO*n)F;,ki-NP_d\"X3b[djk@&bU:TF4^RgX%=4"AII*S=$!*:iG<1uS$mdeo>%F>A3ji-tu(I^/G)ZA"4NI*S4cB]1aZU1*$S
%T+Dce/l6tnp#<<2hr`$*piOj2k,1n1hYNo8RI5?jHX!Zp5$?d1WM[,42K(a[/5l0<-r8^5=XZ6:_Y>X3/jj9qp.>?^Su*&FLKL(h
%630WTZC4HX;on"ndLQn0E<7=CP-u$EYk_AskK12a%C*!n5IZc>FbXMrc>r8urmTob",$;qRU):hrQX"(jrmu$9`2[$%ZHf6e8OCG
%PA_OF^gO.3C)IjhM(UC*\;.e4Q,;kimW*c_L$d_PZai4$QM-IG4q,r/?Ne6Y+jeVLWt%5PA,uJmou376l.92c!_='hNJY?3-;0=F
%CG4PE1Xfujee4^N?s4`9q/Z)m>8cl4eW2ojn(mFshcV4S\b>I/VltHNs7[Pukk'K&0;8F8DcpF<Zg'lCkO_E-:\Vp9Sn.'nl-tDM
%1/sDEX"Yi,cEI6F^%#h3qpW$XYCHQ?Ka%JBnZBJ0],MP%/ssD!8UkgK_B_9InrgrUX!nOg^;TWWjD3_Ha8^pEHoLa`J+1>rr0,cg
%_LIVRj-.uAp@s.-gC=#D1O\tH/u6UC>8Nkp:G0:#UG)B+X`Q]So-?p!/?d3r^6"W55hC-ae@NeEQ<bVeY023SSLAU4,Euj65a=@D
%leLTtn+nZNj^*6OD`uHMOli[hb=\h@U6clK?0\droQsR`Ku,4J8h7JKOlTMn8K&jG?0.p*b+^F%rhsN0LJcNG3N,l&OK-ThWhubl
%2_$Y4TF6_eo2+NDT[X^)8/Ee@@\FE9Y0*K9>OkTU.';`OFck7S[R0UX?>4_Yg'Hq/?5.OM<*>gDq(Y4h+OAI]9be+uW`c9$BjDMH
%Ft.E`FKL_-.$[^(_.uIU.2,F*>HeYJ1Q<s!SQ7Rn,mb<=1o3^oWn-USFYQGN@4HRUX]3,'APR`Odt221BS>UBb;:[5<iE*X4M_0S
%.qO@=b3Dl;>,;CWTH'b17O(>d.BQ`DeUou^\M*2]o9*\Kh<QiBC$96GSP5J"=^<CdQ<BooW!f0EW+8r-(sq"b1eP?^&r^BZ;"Rg\
%VKJmPo@uqIkkDZaH,Eml:fV&up,Pj#2U>)*Zbjsd=lN4KW2@D5l8kt[C@"jEM?,:S\t)I_QPZqW)<B%$"cYP@7B)3pI$5t)-b:e@
%[h2L?Q!c`!dNYBLQ?7_je4JeUBYbHA$/s]SSQ4?nB33i96SgKr<'c#-nj7,<SP%:#dF-5R9hfK-P1!uC9p;*F7?M++U^&4%-80(q
%-p(KZG)L6%,U&Ubg67o-19jIsU%qXZ/@cWs&h7V+eoYK)0tT7T25k7.@X:LL<I!eT:h3!h&#qG>Y)NuU9U]BGlHBNJXHb8:\Qu?E
%D9EXJTu`KCR5u@!2)]EBPZB63\g/SbdIZG!8?itHbV5#c9#Hgg[1UjZgbc)hJ7XVSV@P.m31A(6hMo7IX\U0,lcEJ4*70Vq:dA`+
%#$fO`(DYbdAkJClM)?m08k]PjT7Nk6=jcN6nbTU?#BWO@L9u>cW\Qp*J1fV0*r<VPNLt\R>3+>M1dlUTK1A6C?+S].g'H)2Ar=#-
%4VV3sV:gC+!kfNELY4mCPgTo;Bb=h2N)3N\:31WSoiG^a(*f6;eeYqdQBn@Q[Ap/0oRq>N/Bt6^Jt`E@;b9o[WhQkQbq]SW6./9U
%ogXb7Oer=d`X(fpNVu]i7>epY751Z2=4B7pC0fIBV5.%'XVoYV[o9Y)$Q?I<1qhG"/>S!ZA"ee"4/(1p]8D=5MK^1W=k7[?P`p!X
%nLbHG4<m7L=$\&r$PR==K$l+4!W"k'Bj2kF_+Ds";ACWT>)%c^Foe^B.n$#W!CJ&F8omA/b=U$GFJYcYHbo&.dWVutKtbEkOBV@"
%^EOD]d2Q^)kpTk4-0^ECh^A'MoM!nFM9>U]8.2ARAhqo`lKT'MFSsL*f5)-i]*Y7uNOY_S8EtY``LEaO.!1iP-O;"DU+=cQ\>!i%
%o81\,N.gI^:&gHb<bXc6mRe=';W78X'jZYq<DJI=NbHifm=Wk_DU31JpXg9_RG)MNBGJn:bih*pgf#Fc'1ZtE43aQXl!-pr>SUd)
%A;Z(S`b@p3,.X6[>'..`U)OPTL"8[YS():LRc&jZ+*r1#kF;a?FI]5+,J==nh(0;+OL?F``@O&2O:"^kbO^m]T2BWS8nTF:Q].6$
%=Xmr8d3:/eBA0g>>GAuS;UTh#>=''^BA=<'8?:2NOI\gM9$]n`hQ/<_.Tu1_P_+dj)<X_SeZ<H+V6FIrUsN;Ae"/auQ(pug"7-Eq
%i$"@N)MHt,%%r3<4mb9Kas?_J*9eI^'DdY=JCJK-Pcd_NQ;C>`2/#lYSWn6'A?7E)3[+C)b_j&0:1"bng_o?#Zg10P5S):AP8:FP
%94r5JSPmgk6*$:#>er3dW]=k7RrimI<a_*;0hsg%od-Rks-`(!:h9"$HB&ao2LS<"#Rf*%.eNGATIW2P=O@p"?&:B[NK66?kV+PZ
%$,D#7BO0W=^hD3e97rQIm\!3ear4iIPG]U_Y2nWr9H?l%<QP?SVBrG0<S3\E7K]3p0POa,W[:Z,c?p\e['BpY&Y.kQOCY_C.L\BN
%-Y@-geJMSj1L3u*7%qAj"\see7_8\U%U!%J?j'pO$>F\4i6pQ4WhB*oZ_CAr%T'iVqpL3@^i&d\:9pp.co*s!(/_Sf@A.E1.;ie8
%Y_$J[]h9U8$p9tR*$``_V),`X^#bZuUmkb&2]EF-?9u`,U=Y,DE/#eOhe$@bLaL01K8gbMTm#52K[!'n^[G+:TZ.>J3toVL:;_si
%2G6;F13L2b@4TslOduW#!MkRAD$esfIP^,d1E,4J'Y<+d&1T@YAFjPO`q9*e28mZFB;'I$7_)L<\&6B<g@nTuNR"C]`f5(T<j3j]
%?LS)2Q'!]E.l0jUQ#s4*J1'F5"^5=OQCMdlAVA,+Ag>9sbKd3)K>AU*.Cl/'!:S,b%42CEmDmeDmTh4d;\jonhH=jbS9T>r9:&CM
%H=g?ob02KhUig$Ds74/B+T3nb$(6lc99K&nCVgqdE,t14bfOW*WO&(-_3*PQCGrV\+k*bNEB7:8`gUU)4.J2p%@7R%I9QBG$JJ6I
%Z(]Y1V,69hh$GVH#a%jL\O<6Cl2C4\fd7^C=/jK5g/XCQ+))&R54+)7PV.5M3CLqu:Y_'FWc';h4=eWugu/qg"E8U!JBX<@mRVmm
%V(7[NOM`&9]n[7XF/iV@-TL59hIDR/*Z?D0(,03>mste+a1/X]%h]qr1i/skaI$VBFNb=l'**ZhW7]osqi(WFah4@U9YRgeDdB]$
%c;`LuF:pnjg@5[?P>l`hSrTA*Q6"2FCGB7AdBh4a,-T@b],fXa[X1KMS!j`LIObo^Ke,k\R,#W&lp98tWcjh-pKNrZXiY=T+X,UW
%\W<F-Mq?4H??f%$Y95NU<Da0`%r18c1oqE+Xq'#R7`Jda!#+'B1`iKkE+q5OfWX&#99V)\92o[j/kR>k=%7F05SJ[ecpcS!AKfJo
%-!@\l.8+Jq.%i+rDOh0_![)3GT!F#beGDe`;W/eNGr`1UBdo==2,*-\5R0CbK735dBEm]')LgjVOs<>@QF7`Z&o^'KC!h:T!nRq,
%3CYFL!K''6>#U);0Ka=!rgmDZ/4BAgQABNI+f+WoCNs9Md)r-FL8CVZG5)\ppdQoLXUs_L3YrYGA>(c#6>=?60R`a?13Q!2Kui_\
%PCqXND1r&;6=Y@0.BmAfZAVUJ_t,-b<?kIOJ!IG3eKI=MPrG!I-t,`+]-'U*2gu1[>MrpW#jPWjm"63")NB?_.bahq%j1idqCD-u
%aeDA-e09JUU*G^m)l8KS_55>nhj(!4'H@)XNaP6VOHL$B5s^rm<&JC5*'f1s1U<TGXF\AX=M/`$QPIME!O*5![ii^<!NMV<1Ef"7
%1&i[F>H?RNQNI+Zk`jE8c=EQhY(c"5O=>ld_D65]-$A(s2pg=u2HR41Bp2S>Y%(P[qjRIadeQ@iK5O^.j<,cA")(Sa![S>;6Hg>S
%V1GInF]1XN2b-W3Fq6mk@6ftb5"Xp*abYi[Ma0blI5?'%N0)WaM5nQ;Ueg41d^!=^8t2"1J_K%uf%[>%(`)-@TeuM+82qMEWFQ&!
%_BC(KmP5V+(;dnP(\WAP3<J+>;/gt@]c92:1!n%#WraQ9Kd:OGR1QGDo)[,Ym0LX!i5Ca=V%^fM@3DAal-2Poo'mGm0Q\KE9:tR-
%,W/);Z^OF@2E^B^KG>D0-LUPr[7aT).SY\9X\F&6c2`9=/h.50XJFgub_'Pe'U=Me+5C"<A5^9*.o#N/#12RdW%=1N@&84eARZO-
%HqB7j-c"4ogU-5M1WWf-N(RLH[+f;u-c.p@aeUe%+<Dblq,SPh>gS`'*.T,(<[jS>"fVfP,n_]G<ad0*!#!o'R?hD@B8S(-mG*T5
%L992uO6?]mFUQAKe&Fg&?PeH8C9WmkW$6FBV(YC8=s9=p[_n!>GmkbBasMLd['ELW*Ae&LrLn.65:9=>SJ#a)M6+KqasnP7<u@mB
%795r-70We*fIGkL$QL<fN4^;SLljDO:ZGq["X?FMd?*H"?\FJ17l?]u251qU#qgpL#D@Jk&dL[9(5!Pp2Yu,m+:BVHnI1FDd\6b]
%fb5EldL$/<5.S5H1Z-;2Wu>Paheo7-C`I5@=#^GRi$pj0g1iIT0`/sQ,KC^WFp9eFq'R)B3UO=Cdt9VF4t/K;5g*:JCc$q5)joJR
%5!TeiG#aR16rnWcAH9TDo%&X`j;;L;N,8RR6C>.u"\l$QD4q%^<3YWA3&)=8'@%:2\M?L>J#6mW?^f8,l0Q52USFkiK_,>:ZPc)4
%$%i9(9TbK7L&L,$hE=pa+[h71+`T2^cSO*.ID-<FH+P'ZKo@rVn#K\E3_6'^X+f!@8CF2*X$5]L+<fH[eidfuG7pu)]RM<[OKeQ<
%R[tGf2F(RgJ$W/cRF.g('C,a1io!t$3Ge(KA*T9T!M@?a-^lq@*h;k1g;)aQ,05IO*aHU>6.@/gPd,%Y!)3L@+A:;l<UBj#+h7)b
%HW!!q;=W)2dB,!Lg>'p\3+3J6(QiiQe&^oe[p@$K+ZVSZgZ.P>pcDT2%15D%K>nnIAk&h[AW`.<Ss@mC0tXTrj/pi77gWDK=f</>
%)GqDH;UNaC=GYgoYlZH*&/j2IWF[2K1Cb/<-6\&5k[M[c<!8:?S9MojCj_>26&o5HY,Kg)N1.pd-jp3I!*Ff,,u8tu#)a>!/m"G_
%;ZnpF(2srGJe7`7E%l;K_IdIJT$UU#FZ<,:'irr#lPsY4lmGsHV!6PUW-]<fG%Sa1PUpP.&Y15'85]K$Tl*3^]QT3<pn02!/&L^P
%l5QMDU85]9X?rW-GG\qL"6$MnNY*K$)Km?.`!L?hg+-`EOXJ1TM3Kfu.Z6$YrQc0q'XOK@9.>C`A<J'W5iW0LRuURUSJ\b!Je4><
%M1EA4"QqAVL$]n]TBS0c<D28$:f@(+%i[-a&HSR\n7Zc&>2#?S3hC'4F%3QXcWqXki:[>dar]kF[j][%c`pn"bL]U^!sh4IhJ:$I
%8W?OM/_R_Ur9UD8/_t]-pS"Q0%EqW^?R^d5Yn1cWL)"-MS0r.!@)SP>c=r?8AuJ>qO,='HANQJ$^i`010LG3;ERT]2U"?$(ce\\U
%0E`.;/"8'b$N[mC[puQ15S"?/\H+#@WWT@c@RPDk_5G+0`AX8AHFgFLq`:WJk84c2&%hF+qREW647L[)UPGpGZ4HnBlBkASCrp8\
%OP<Tej]TTYZ8@ZTH45`WVe7!Ze^7n!DTuUG3,Bq.FpT,?%i0@(@DRJW(VT49e-]GIYnjsT"9aiL<=eon$k7t,P$kl<6"VHo^EZ6e
%8$d'1++TABlOFbBU#E6<2&M&.j5^q\]da@k:C$r"J;iFP=7fD_8Ierfa.n3_7j$*4.B4RB2/!SY`[;'0Ni=Ka"qQ&E!HF6,_h%DS
%fS@DtJ0J'1j.\nbd'[RY8QF-fR8MHG3eWS<gGRs#?D2s?)50TioaDhLI\FU`Gl*2&:^cd$=/a>j_kCFnN`$^0Nkj0u7&M:aTIM8Z
%=6KNK#WsC7WUCXT-*5j?J%lOk).Cb]$BamM$5&'W(SXVONP9ibEnY2R38SJT&?4RgJg*ci.E3M-L%7N-_6"ja8p8T:65;jXAGRdq
%8U?'jhpo8"Ykj#<a@kT#lOtHI+n8=g*[/sb30;,Ymh=-V)+C4#?`<UFmTq&5R'L4n=)#T+>MH;fW._$-Gu&$5),s_lFt4RXUrga$
%:Yq:W!r?##Y>A!*.aQkj:qr+_j8/^@Cq7!:Wa;A#I#.X[4dd$qbX;!NI<Bk[h$RY81h!n#Te[Jck%[0/IN\hnP*<@#;^,tmg#s6P
%#='M=[.7<:GV8'jEU:ULGs%Ndb:(NQMR(g-looGX!AN!kC$P'Kg*^ep+h.$l:#9;uEX^]0-R>MPde&TAW,NlsenANfjQsblocR?B
%j]]UgEonTjci4X?U,Jm8EQsa@'=.m!WT^]?Pl^]?$t';pi,C'-8rNb3StqOV#51"gj`@e,(3/Q=ZYZ@@f-i"+b+4Q4bbJG@33XM4
%G)-2R5f@U:a-oA5Q,ikX1*Z'pKR?#n5%gi`fS;TO5r75_P\GC`/COnKK@1%<V?!Df$QuJfBC^l&7]6cT(no`tI<3"=&-<;5"eL*a
%_2rTV]&dd41h>5E>&=s>2i?l>72cZh#Z+P#Ahk1Nm/^fO'T>9kff>'N*CIW&U2n;:_IMfk;+1(:b'OhJ5)P(:_<6kO%#E%[Le:['
%8U?1bT86.Y(n&\^Pnk"!?kSU%&sMo"R62.JL(fct'9sIMQXgeoXu%ou.5#`m.LGG9*3PYCYc)*<\?rWA"Lj1\\Ytb)\E(?%1r,K3
%_Pku&\0T+bRC19?!MQ$DG&?b!,?,o2ZZW2hKNTg'f&10*MTk7<5U^JP<[R$7jJ;SSP]X!g<6"l'F<4$6*C?DaGWV3*D%0"GN=>Of
%Fjb6(KQJS'UZZe`6N#d$'KK3MS@Acam2)L:.S1<&R$:>oZs7iZ<$LAZ`sCXW9[gpVBhN'VHJg]U&`dEKk$Y'h&]t1C(CS&[F2:O#
%j98npkR'`S>?(Y=)jrXl/*bX?0'@aY8qs?$.DZQN#@4+7YRrXlgo<8K@M5\L(oJr;ST[ut*Cs:-Bc-Xn+YkBK\d!iOR)f^'hQ/^m
%P\BWWHlJ8RN2)YS%X4(&?PHZVD6SRk5^jiL*&LZU.N?YrBeI`,MIS3UE?CoW'N'7:(hQ8P7jO+3&jok@`I3U$cc#?mU)6$jgn4q9
%;&!4`NqX7,TSh`<7BsF5k[>&cZREgs,kimJ72Nq`MdlD!E!0[lL2j<6./m]jP;8#Z)8km$ie^,::8=2W;&n4*2D+N@b80G#]Nfap
%_j+*$OFT`Y:d?(YUB/F)M.;@`,O*Hm,j?/SFVJ[SL&`8`-'':I8($(dM"39Zq\\UI<"_H$3^H_S6<&h0<3encg-o&IiR]i6;Lkl?
%oeQhK.g58B,G6InFjQ;19PmtO:,QA)oN0E&oDkZnFX_u3-9;O^?n.[#NYdlh@%+J`m7@*\+>Y60g5F8^/!C/+@p8\3&7B,uou[QJ
%)ifX9iC\`'fIKCQkb@9c0uUdSMI7FW0S6_M7=aG]BE53$9uEY,g:B+8['4@U&WZ2b014ln]oqfN%#hUhO\-JS\OW_El]@E'"*>Cm
%5P^8+6U4?ZEii$6#0`djj%mX6O:YlqX4-oCNDN#.X&#Z-)XA(%"PJ*S]&C4aTePod-drAEp'>e.OaTQeTOsfm-Tp*-e.&eY$$ASC
%I6sL_Di[^RN8,f1#tXds\VPFTGMS@*T26oFhC$eZe+X,j"9*^8*U5n^:ks_N,LiPGoEfYr&UctdMFCUFLTJlNe=h<_$$?M!4[NF(
%8tSq8eC#_oTuZd2Fbr#)6643DT2:=@dj*A=&bQHQ#YBG2*GSN6:mWHX-e+hooa,bs>>[^m(-tb=O%5,pm"G"C<g>':LjWuD@:BsH
%Sshko/u3@[]+?qi81]nb"cdnZ6cB3TK(=+/E(CX5*Xo#IZ6A"+g&Y;q-.3.?Vfa9r6;.rVJ'mgdN=_2a;K2;:H7SBHniPq_aCHKQ
%b0So-'YZirYRhb/Ku+H@E-tO`NFWDSq.X7`%XO@*A%jrO,:MfMJ6nE_=QW;)0[Ccj#/T,;O;$KMB>M;amIOUFodgYm7!.%-m\$-T
%*5>,AL46%l"XfWQ\Q@:U;lg$e7:>.ul;4.^;5^-Y=GHrE^^0lO'1!WGG-r!ur_KF%"baaM%\63+MH!CgW=#Y!5UaOXh=5L;;e6%0
%(Hm`__f_tQ!,N4^@HnCG^ISods3el6XY8EX2h\D8K1]]LbgS4M"Df<);`c:e&?5gQ6PKjl(/q6]N[EtUAYMg66(1udc33%^%jZ;`
%9N3?Q9EpZkFXARj"[U<51m/XDnEWbeR+760Fm;Y^9J$UW)"8ZL1K!>*(?)f)@@[]7nm["b1q?14pZbFcpbeu_,c@eDB;2Ps!@??&
%Vp9r"HkqmV_`AIhLh+>6M5u?]WN*t:=65VO3q_1I8-D+NAkVO`S5Q`4&[!ffXY+:++%eb?"5n_HZ=R^@<`<!FfEe;e.OAd26;=a-
%NXS$G,$?1QaDe'q*kT-oSf#F#<5q5tNl9;YQA7'a>t.DiUL,2[^e4Wd^_rmJ-@q[9<*VQ;O6^8dk\q[sP#[6*QK@TEIHZ5/5!^&:
%(HoZ0\9'MrZQT@FZV=*r]gO(DN%.C=)\V)X2;&I,K4,LX'>\\cOFNt?>Z$+F6pc^Aa=t:^63K]Y_9<6`#MMB`hZ[#AMBGLp+]$@e
%&=/j(eK@.)!.@\.G+g,=;QsGOUIo,a7q-.L<-iAh^<=luOZm>]TJV]2`Po)!%6Feq]tj%Y6&ncGA8l4(Mj>M[5'/Tq9Gmh1dNWOo
%L.4WUSS*&WA51#W&jga[NC:UCNCM#0llq4p5sd$:nUQ;5;LjFt'@gOJ/5[VVX4cK)q2l%u5OW:tihSe9k1DB12t9hR:uheY<b'KB
%4aX[j,Wqf6W5(Ir6_i`@na!do_M812e=7!"P];@E+h`,dd*5Erh\qW4i2s&WplA^QFEl28P:hQSCgO\?-7"44-#G2f/K20;XGljn
%MbWQ?A`K.37+tOY+9>QF.7si%=pF=rU'VU`NJ?TN:6Z%75R:5SgdJiE3`CPJgJl"bm$Q9L^`rB[+XBoP814Va8;Ejs(JEh0'sl^A
%K:XUp:8QqWGXa>0j&(P,R03]?7g;$t"Q7\\Ot9!nYUN,a[Z=,I1D5;id]nfn')$$S=^7fd1:5?C8p#'#o=Vqh@Yn!aEt[u&ntD&B
%Gt0&@aA-i;b\W`#2RPOg*A2)13[)<<NQD8G0:/7TJV#NT!JRPV)4,J?06AblNl9;3WHh[T&_5a]'W(N^Ih=3OpJi]CX7MN!P3W0[
%6XqmLL#D^A&.6So.SfFG$l@Q%<UTa2Yg>Ol)+&l%)ap$f[ZUlslHgAU/"^^D):ik1@VFDK=:TM6A:9eqhLGn:erdM#b(L34J]qd,
%_OaRU^MRWjMk\cDS#o+#E"NbuquAq%"1Q3t7O,g%&h=+12"+B/;hHGn2]&fSkahFJ2SoFtO-fLH#n>Lb>tO#oatRNh"L,;g^h=a-
%#e5b"k*bVXrtF1:8C7"XmN>6E5t[:g5l7XMT>jNg2'P_aW`De$Jb:*#W.5F.%M<$%:sp\75_4Q/gfRJd8DrbNj@ij`:2A$<kXZ,A
%B:F2=g:k`QWg]):C]#PNJ1]uj*gu:r$A&a\aFoSInZtA1!MKjr(/[PhWLa`;`q\Xl-.q\sg*,c)nT`M"jMVET"!>lFknC,GKAIGZ
%aI$o%X;u-0.Yn*k#fgHp<j'8SU'&Ba(/3DaX>8a>5f0SOg4_@MM4qgM7'*6b19e=R/JE;tHR1e3F75+Z+P[I#J1AG+8!N@^?3*.+
%1cM]]$eu%>j0CqK93KdoArHTs3->u3rp2@,q;rkncENG8?!'@M8ese;aRYu/./DXGOoWUul0rTpbofRs%!U\*-:MHSm1?:F/tFa4
%9l#rO@*YU1!mIHDOUPfS\rA7[n2Fr2+(2H"^"t+TfNR;^fi,$dFZF/[USr1u3C#pK,B=(qO@[3cD0@<Q8:*2Pgn?%fq,:-"g=WfE
%A8*Y*gp.^kCeo()k=4WCYt5X%XTIi@8)7Z$Z4.q@qC)`$<`;Rn@O)5<3<;rD81!+KObT4K"GpC7Y[Goa[7sp:N5]a)U-U1^1cMGQ
%_:<lI>#;?Yc4Y.<l5W>"l%T6bd`as\8L9VVcqo_.;NR2E74oOYS\+sBD9Lu%k&;)gS./kC<a;3Il6^NpO:U5:h]W[H5"OY+&jbi5
%!T!)*<$[5E@!S1T"Vt!63s0V$CQV*k$!Ma/ZtF?'Og*Au(`Mlbr/_\-laogkH:1N20I)(/84Cmr91*tu01]cC9P(V:;>L-0fZ\:^
%4J9)m1/&W\K.i<:^UAaV<#/St`e60$"[0$M\WGMkM8Eah5p?p&:*JR>(@8O:nf^4Qpp`jVag94,R4,=W\<'HGF[@\$HqEV]JOd[h
%9\cQ/@MRe(_)")h"8X`3X'E6E0S:B"rA;lF)$%^gY62QY6GBFM-(PA.&T_!"Oe!unWJ<AsK]Ku)*,qU)SU*>$AH#`XATGmRj@>=u
%(1'2'C>2RX\;HYmC@#D!!`]U6F,c;)TS%t+81dB5/2d0r%9`L@P6b7c'IZq[#6i:NeV+-ORW>Up9RSWBD,RS@rFtSDG9hq*7c5IK
%3<d*_!D/tBnf]0uh,$2@5MNF:KLn!WYr+9bj:Eie5P&o(TM`D\$Wnid:(kF2*n@Cpka_F97(NjZ`sOAJeDi]s&?X)u-UW]=+_)^;
%agjrN_/^>u)aG^192-U\/"19_JG`_s(F7F$VNKE.c`l]Sq*GC7BU9>\m_'#KN2C>O5Dk+Q+JGKTCekRjT3<!p*uZq'q'Sc$]?Mt&
%#^a+\1W,,>20'RB[O,$U$6C":dOIf05n9-F4p?1*6/`am3u4hBij2J6\,_5K1G.un,ck!3`YLg3)BG8kEbj<g%4I8K#spBJDLgYV
%$!445*D%HAI7_$/btqk_A"YLf*&-#pRA:D7>Fu$RI%(8=rYm"Sh(nIC6_ia5UpD>fGQfE*ZJ@<5!,-B8\l<:L_gofHUDX-$Q[Xf[
%GpV`FFi1V\`6e9qPpD1X?3Z*.bFE'(#,)#K]#j]%7,CCObr%`h1B\5O(`G&kc:p(bFBTOeZKc&tV97tq_1N0>0!T>bH^IFi+)1)a
%QTcK'\*NB4J5!3<*PiPC4?Tp9#=:b+)+dX6$PDdTM=ScEp`RJZiM(QT!)6s:JBP+6d%Dl!([gP"9TDrQUCXXuRZ%--JFSu8;o')s
%,[D[.BRq9+JFk`HP*7#T,iAo;:iWLu-,DGR+B0JM8n\SJOuQW8a99^kGcP0oX!D9q8.83N7U:@+E9B!t@EMdnKdENjbIA.'>*k,i
%Dd>;54DT`(H!E9<a9DcAB_rc%8Vom^/#&(-OFh9%<e:HDhI=jcS16^Yk#W2S,=;du!<TZ>#Zsd-;MAAm-.?WJU'r;>pn/K@].d"g
%Q@BRc@4D<k3_Ko10^hWd)ejeapKU/g9QiT&944N8"^8hn(r._m_Hc5g,qI`$ak4],2\ml4l>N$uXuW2a@G:jp"%Ut$1P3;jg3kTk
%QLR+@2#n82G)=!^JhNplRO/f9>X9ub>+/&)Tu>=5Le\`>L*hPOmkR]OR4-,!&u*T$,S4Gu4VqkJ%>YHZGhO'&@3JhJ:1/=qZE_k]
%GLGO`%J&+FRW]/a;[,M,VGapA?5Q30\`>;=GbH75*/aG4@gSRV2`,UgR7[u-!7eX5)GL6c6=qJe.bAD(;OB@8%A(d1?8*0Z7U,eR
%"U^b#/j0aIWYG46,]KVR6X.A]7h!!Y8qQgf%XPV8/Tlb(Pc3ETSP@h0'bDc>.)>tm.."e:(V%;'+=N!)6O=R4/<pXIp0>Uui]tB?
%[(-L6C7bK?T!b[-@0<aE5TUdV%]V%2AQ&W#+d^r:gf$HII[aRrr]hu#p7t8A!3lQ?SLp+--nd]g7IK28L,^TEGTbsVJoJmq8KM=I
%f<R*R?!,rJ>>PXVm6a'A+9AFq-$lkM`3m4aThrV_W/sMXhc2@9'm^qmHGS&s?TQ%4B2Zit$BPg-1eVI(8'!PI//Xs2i/5%[WhjDD
%R:)t%!pGr!:85a'Te0tO;AgWlel`3@6N#ViHot&Yhk:P1@Pj#u=.tMP3T*%/*b?:sJ5D-j>h$Et'NtP^:r&c2m:8KMCXTL[YG9!2
%lYqH(K/s94I4e'8eSD`AW)1?oG]GH>hKp,C"ef9IQ#YU9)dt6f.f_mK`T#Lpcp(>8ZI293oSIUZk*l\dO'ps/D05?UP8P3=0">sG
%jHS6pioiK;?)a%6e`!!;.UMPn#jG)&K>'VaD20O;9-.=kA$n\7j.;[m.g"*AmfCARL%'A6Bn.,YX0nsu);*=FH,B6l:2KT[hu[a2
%^S63KO[2X?U7:rBOX5QG^^9`n>"H9DF-Ce;.'joqVrmYYq5KZ''pQNABbMQ]O@ld&9>=YHLOPrD,cgW>A]SlqjoI9YX1?bh.k#KH
%KGVN397N^4Cm7\'m?#5DfGqRT/IBl[Z#P7=)]1oqERl/Q+7b;?_dkaZA.='NTo93eRgt0PB;jOan8!`#8COZICI)o#m%IcR+,@eh
%%[!4gm0)[p*K1$o&K-3eJY+%tb=>GqG3n-HG]5=TkHN-RLM6s17)Fe+%d"+So3fo[E-;D;Y!^%GMia4djaVKqr"+Ili8$$,$:&"1
%K=loB,Ns\t6fe77,V%`_[16e$9R5R!CE]i$-;T/]7RiHZo]i5\0G?)1:\RUN#<u.UqSb;.e.=`@*onSjP"]7G(;UU68QVUf2oo1b
%SaHro?o8;oZX9XEAN@+,=%5$OlYZQ](7dta2@#oLbELZCqK;X3csdTUTYJ&r(/#EBF6^1s^uijnhT285/X`U!QSY[/gEbIVEsj#g
%3q;NeF??r[jD0u$@ase._PW:<)!LZtiPsl+KoSp1GFSn0Vqc\1&6_=!$Gjd,b<tKXQKK)Nd-VE6=eIu0g:,)^KA3'R.L2i_WF.D&
%3YLjf0$$qJ,,?2FTa*FN.ku0PW_.p_Z(&j^,\>4IHuZtbDX![ke4O7gB$en*Ng0cj3^SqtC2#r-Q?12c<kV,'OD%h!(u#`L>YA.d
%CmcR4k0>QQ-,gUQ'nS5uAN\t?0"Ju&_ha'N.YorN1tZh9Bip_8J9?L]5:t<^%3:.:PO=!9"_OU,hJ:rH8-g@Ji(f[ir%-n4Z6A2m
%:ZVMtg+V9Y*_HiXTj5t%*!*5*15\XLW9`)"MR5f./hS[>#I9<q7Y%Pk27.LJ,ln(*4R>#P-!i^4$h:U^GX;!<hp^+=M)7fdF(;`6
%JRmh]Sj/)J\<$_:EnQ@Q1#ab=;aJ:WeqK>3">bUXf>d3/&H?Sj_gM73bH^@_^/2[Q^%RK7mUZrhW!!0Qqb*A!,\1I";tn+`oqABY
%=T],QI95Z7birr245:Z7/@q8Mg_+c/fHpi1d7kc0.c8gY39nq^*So0jPSi+!aK$?/G8UC<%7.g&Zjh(Y+qo)r=J?G34Z!D</Cah?
%i"D3SKt\9M*),Z(Q8`%6SI2oudoWA07K0Oc*9ZJED3DnIKL'#4#*`IkP%Fo&OWM*q1*#tO?f:Sj'EIKa?bd/TK4%$DquXOPYT@R^
%IXsZ,dZ:_YatM\7.T"ecJ>f%0$TJ['!06H2?bkn;()uS(?N@tnoHHBY(YCPrr%[Z)?U/t4XS1D<GKMR(#`,@"=ZYX\5f5(9?^%Tj
%IY!L6^tWtm(RV=7B>PPq@IXNJE%n(GFhlX&@IXM+-fk)IMD&XBM(/ZIIFqJG6%`#L0!qkX!n[IT9.qs#;ga-*l*-@L=F@qAqZBOs
%;dm=j:@SLI.Keo"<cdXE1TOsS"Utf;&23Jd?[r^Q;p'OC.DDGer%WN(;f_uc)to0Te6LAEZgd#(SXKqt129ure=E$9&AlSUja9-I
%(Nc3k&D0b&"Zi6rOn3X$4#Ii$0TjAPNGBU/e6L@VL;N;#*;RLDRLA=bQH0?r@;jDE%*l!,T.rc,R*7of0cWU&j9eJH3[IB:U-)5=
%6H)9sa<D#&F2q!=(G$;K'Kf=KA_^RjiY7VH@GpOQ_G=?c:atoi(8=5b-BmEp,pXsYnUh;prr`rlp8gj21O\9"!"rlq"c(IT-:4ba
%0GPBj?B5A0:.]&]$-AAB,WoND9,&T-Z=eFc&js"PI!$54n^@I='8=u@)KY9^<eHK7dUj[HmZ?N#bTW,31<m6c4f\"*=1sm6O<mEe
%UoY\L&g1jV?99b*59JkGWf4g!K7m;oO!S=OMVZ0,4hP7IY/J\)oMPkoq_"YOD"5:RD7C>_E95e`NLs3!je:'_g4O-TjEf2rcq$6m
%-hJ2aNX-)6h+>AlC5Uel=lC8kc83)7O<:Sj,?:/q$ON2)N@>)=YP)mqapfVN7PC[&2:d,BPl-RhXU,'7@4DC8'YJPk!g\qE\VB6_
%nB,$'W$hh;TAR3gZMQ,)62Woo3/Z-PTI^Weh%j_E5r8)X+XAKB7E``>UuA#;)Jk_ZkT/B00bLKK(.ua;kp_ImrBbdkHQ1h%L!"oT
%cmP&)3.-C^6!;%B#GrVCA$%S"J!Da,]QJNd1e7a"";1kpPQQ+PJKQNrZbk5$K1(lJg!ji;G\$o[PoAGG9Oa=W%r4]A#iA`G;PSpY
%p-r?u8'bb>E'2SMlm-#V6R)-37t?2U3=[T`!K7f>V?)s&2IPf"Ye8DI$e"p<9]fD<aZpm==COsNV]CEMaF^i3._P?X[!0V+L?4iu
%QROmoU[^7q2YDSKQ71JRT:n,MF3c`RKT(R4OOPrB)8XAKW0"Tuk;$1:8HS?cM.W!68B&/!6\cpV_<,@A4dR8t-h[?/<o=#"1;(+n
%!J!no`J%"J&LihV/JI:jU%.-E&RG7dToed.RQWY@/0st_GqEH@YeuVqmNG4/>EC.]MNKeTM4pUGhl,O^RDu&g\P0sN+u)_]'j#8@
%+@tR"&iH2I<]f4t5bI!X3[P%$AqJI=R8UanW(XL*nf\#>Gm0]]PSm76q\%cg\o.&j1@q!AZD/fu]<[*+F>Ym-VcP)Y6=JVRp.JsO
%FVZI_=d(`bXtE*e=;D6Wq=JJhpF3EIbFmin`[I'&k>B_mbmk@djZ1I@%B1IS(oLV<ddBX7NTVo5fCWCg[k!Bj#P'%3[8^1O<md7L
%BMa@e8c=L_$C.77#!BaQ<Q%3i]4<$'?MYKgVaBu3#/(boA.'`JQ6P$/6UKC&k9J#><i1J%k=W"4o')6=?3DN/:sZ-Admfhs;NtV@
%9_cb67tIoe"@a]cABKr.!'jt-Ou,"4#aL\Eg`W<U!/^7"?s=aG,l<?06Z]"XX2VWrG8\0`/0lM@#SNDg<)H1W=DVZTZO.OZ6-^g4
%b)-ntVd<h5L)m!V%QUZpp48/bAn;mhPHXoD+btK=?Of"r[<BZ#%".9UPA&Jkg*4n/rUA@"&P>[jS(ptpA[Dm-fZ5;Z[p9RgPfm/=
%,X=/$gZ.OOPD#E7\_ZI\-t*]nT/>,C))'+T8B?ZaC$=&5,06`]biP)q1g\q$9ho9+5$C7(]o1)T7%P+$J?):Ipgr;B>YiC9;qR/c
%q8lB5gi96+4f,ZEJTN7OA5n..0Jn"D$CnGapY%$_J:6hS>8@d4;%rSe2,cgJ(N/_uS:-_Ia%hjT_V;l_DQ8;]USAp8bC*L<`D8Th
%+/G_5G>]QuUgC.$j;qSJ0[H:1A?(3`E3?Q6/d/.hj>#+q1<`9pq<0IW0X4>q%O@8i6uN0=.&Y`:J0\+9Uf&/t<[`okR*+J@j9JHm
%%7fFpQa^`U`$o0Tje]2?6]%M=@?%1)V!%/Gcills#K5ZNS2E8g,lDBt+Ekm``l9/8O,'[M^.^[P&reYeR$r;tC\QCj)$GrQ9>BTl
%B5d+Q#G^6:(Ga29Wh*0I)7QP@,4(0OX4#GT-6_7.c3qCAg<d&,r8L[9ZFg=<Si`]>bm4?\N4VK1:r;'Z+lMF]"nZ+J/X3J&n@0kQ
%i>D=ELWq=V#Do<XRZ6S;%*+lBpW*Db):pp4Usm!EoF-@KOi^^7NjSAaA^WmhLq(qU/K+]SLdEF?e)kN&7c;>)Ytho9c*8Q8*19*\
%EYr%U2gH@1jrQs3l^"'>kW?3.$R*2Co3*)VSu=KuTS1M#N"E-flDKtjf1!g4MBjHjR4JLh@<ud$\jQQ-ADM*gla(A7E(U=\02DhP
%%WY0f)*^CPF8nj<mLTf$TOb'36q@OGo@c.*HDsLZcIBF8H3@g^3<YW)OD2(qj5R3q!L7f\.t7+?&K&iVOn!KX+;Ap_-2@RXaHlE"
%_`&uD%&"B7.^$o?A/`o$HE)KBP?<"%#+;8ZS&h_-G_?^T7.krn^<?<EZ&0[q%h^2:CE%:+,SIqck8S,""dmns%UB&gZ=mO+&&dWD
%3?31gZOnsAlO5=I=hY?-k":Bq$g:,Yq'7IW":G#RBu6f9'8Y4i,oc.N'9`0n_]\"Tg#KqsI\WbKR2*#"#))R&miS#BErma];m[$V
%`4Q*QX@O;5eAdWs!,":P!>8_g&/(Z9[cf&Iig#I15U&bkJi='I[Z,t`ckA*k=XY$8&NW60OgI9XH3G#L.$OPVF!(95R3YZ(?3[ra
%bs>PPN`?ILC=Eu_BgIj-U6;-;$8gaQN=CKHYb43j"qH?R*XEC)'9@3_(hbBt&KoKVj%iKL+TZqmNPCX0=6L2lMf3[BK^]p4Z;\j@
%AIp=a^JSg%$FVYb)uCDq"9V^Oj'2nId;`<IJ>oKq6(J9-"X,O6$jkf$-40IgNE$GpV&RY"K\WES1c4sK&D;)(bZH8DgNWjB+$??`
%"*4O00^K(]/Eo]-,S.\)D-M8X>m;33Fmc>VAZq7G,daqRX44=!DLkC/0,AMNboM+@fA@#$<mn-<J-3<FZ](E9#A9`6UEmST*j30^
%.!OV`KV^<k,F!-q1Q>X<6)+B7?=H?q6kJ8>^QI,+RtX6OEgE[YU_@:'6)'Sl0+XRpR9Ul-1a?@\pf1L?DipB8Il%H,ANV^>F?,E?
%KRD*4)XCB^0*srdD%A7W(A7DFi0Q``k9CT$/t42PYV@._Z+BBZ$Kb_`h.5tGOP(e.Ho`u=AZ'&F@T6n^HF@T'LX?,a$G""p>$G!/
%*e%Uq">c057Lj1]afl[T'V;do#(g,QO;WTZ$`L(pW+7Mr21YcJ'WUD+#?;c$P[-6\:9AS7i.-Ml:rfkoC72f43JH@oNXha\7S]>6
%"+$g(2aAR[/g(]X4R"I-.?q(,kfaF,pK]+RLS,m*UbG'Ne#nd/U-4/=Y\P,YJ.N2?Q[WM%"#VTt2N!H4Gp[!,<X?(Vej@@SV-6X)
%G)]TOORN<KORR"51;>&0]k@GV%aZ&p]'!Oo4qSPs*pFY"Z5+Ja]DsM3SJ"d<b;-Wh<!EtqGi;eYI@&>&Y)5`3a[V@g9(%6!@3(O7
%`eQ'Y!hgm<S-d=Tkd<"@<-Ob7.J_(llic.n:uS_=a]fo7]d="68VMaa,&7g[->Wb=lfeWg86D0VR>ST:*?iU#.oAEZ1"m>TGJFtI
%g,39KBn[0EKSFDfOPL6eNsH9%=OMBLYd[ON%<$&ME7:h[fKEn\Z:Y*XrMZ+O6X?CW5"8g$<+-Q"\6l2`2G*d';>\Fb49DLSCtLOd
%8C1:AQ=Nci.$VJI?L*`Fp/3?k*L<+*4cQI,pdi)oe1U\4OKSfGH\n88aWREMjQrmSEl![hX8LH.P_)dJ!bn4s#NVu'n$CY0iOEi%
%OO2K;*c\#!*NdMuX\Ge/-8FVdO2]9gZ\f?Bi!RI!I+5:9W?@V5LeZK!78?MDcUsPjbS=C\=tC+a)MGH>mg[ts>D#-R<&Npg[^ha!
%?VJ4-!!eUerT_p=.QJ;gf)_.!,c+RgTY7Xm?#i$niZNTA99V#k#[)DC;S%O.&4,$`B>LO.\dr\4hh\Y'!`1B9KmX-&P=n_mP:eN]
%Q%?&*e6QS!2A66]%``ln(CJ,mRluCO'Ok^*^$,cN9=0:/.SU5JP[lADh#<8F55HqOM*r7gnRo4^90+1o7B`fY$fH^A*s<5?SMn&^
%c;@rj!Q59FVMNsZh;SSL$DP5i1'hS*HtB!.JD=!F-u_AtUH&G!erVdL8NTIp7l%P)?'!df1bbW);!l]fXAI9Y!hFf@r%ss-J7O>0
%R*`AjBmBh4PdQX$qb/<L9J'p5Ghp;&iD<GsPpJh\Aa4E[L4o75WDu2%kglR9-&1PO_:*KYK=He4s&Y%aoT#idCH@-(D%%-51-u"e
%(3PUM,q'L'HqZ&eW1H[;h48$O6uDVIpIHcG9t5cX7qUo2*5!joOFl:.Zou\imP`Zt2P:_b'=We=\r'2=MFn#0b:)rh_kU[+Y5K>d
%#f5]'BS[)[>+pb'/5$4-_J=LX\dfA'1J]RdDP>"q^/cha!I\%KF<P<6OH<!D96dfaQDhHRUhDuPE'R@#QKr0kA%4"74JSmZd?X-q
%O?oblP'*kuTFDU/(*(D_Scbjshb;Cu*)RBY,;D$u9;0UP7>oJk^$3(d/jq.+QI$h5",S"?Q^WS*8-Cb-g?!eV@P2.78X3<m7W]?*
%l:i>MjZKDI3f:=sG3\ATC<kX'+^M5pR(=f=\D<]VW4C2*9h8i2$n6(Md6.8f3EfgQ\f.O"?=CZRa<4"ul77FoR^LKP7]A^O@R0F!
%JY8NqN#5[i,K_]p&jnJ-R'fuPoj(%\A8>*t96'<p`O[5OQ+M_Q,,&QGQ(/%41hWZ:l%NI`Q0h;Y2KR"P?:T@D+MYKXA!U;1mmF&E
%43jVO"qn7JV\3NIWZ];qKEP8FCOaAHRN8"WDP[[2L.,F[R^Yht(;$ab69Us-*KFq0`$c7YbK)$pB<=DK/S#Sr&M(;u(>0#R*7pbB
%;of*A*\'spIM!k'4fu*Km?+##'A77D$"m64eWMt[JVNk.0?opF9bnZnK'Hnqdo_H[K[G/&klbP3$IT(f8m%Q8Sn(KmGicV5U:9UF
%noFCYE"nK*0&UfcaWY]ba`hIAHLV'%D0\/Tp2'=M>PDBWCW+<iJHS_/S;(^G#F!%M5X>Gh2hoIbNhdAd2)p?OGGHS'4tNWF`HR,J
%:.0(UcH,-5VOh/VV#*i2a[$&dM0,l(]]pctWjH;lK8`gTXiIsIL6)1>]Q8`n9X*$F0Ec"#Suq4a#g5<gTRUCN0N;m]_4`m'rM2\\
%2OWH^C?/:\pJoTEN"uh=*TKj>YjlGL!1;2"bd_LKD9N>fU;BctC%bm'00>sScfh.Vdlu&pLpB:?Cmc]P.*@O.E_)s1gDD:ub2&(4
%S[MuCf2:liNEYh64"'/q+)N+<(`G+E9:Y5[AOJt'A[bCmRH.A*QE%t$:G+>g`;a<4V9&@lenGVq<atMf&1[VC\/h81,NP+V2+!m+
%Otuu37*-PbD?U<2Z9TN?'r!Ab,\kGc@0p'Z$Q8_2/rFZ3.)qhRA^r"m+]1OjW:3JSTI24"1c"iJBVJb,@TY@)Y`lt=_q;b0</>I'
%YgC?f4L5f#8Vt\Y_G:O"\>>k:N"30(:!iXqJF0$B)BJPm*BQGF"<AN,*Z5a&69(;N!!>!!;aQ"[!1s4An)]]P9d^cI&eguf%Zt:Y
%j-UTFbRFAo09'HUqdU=s,as`KP1X5tMD4!qb=!eVlI<-""aB5FX(sO<BGaGrMP2Ji`,chgPd3WNpf8Ug>EQk->&FG.WS/Q_9Qa:!
%^t(1dBhQO[0Ua^4c+P&bij1CharncW?=j[MFbuDX<Ck3LL.LmqBF<iL)WiG+k:i>@)T+6La]1J\UtAP/f,36.am@c,*q(LHYSG<L
%:e4np@^-3BEL[e)r<8O\:mRSU[n$4,.eV0.E_drl*uakI-uO5;5Pudiq(S8=*lE;bU!JdmiEMEV<;t:u!$cLkifb$FV)c$s\">=V
%r)t_Cfn&C*]M6\L&-\+a-\r1@;b]l;%Va89&/i6r83*qX_Dk(*7e1*%Z.KA]g)NX!635KBD_IkFWF0$PRRF+f`"(Bg+ZFO,4;(5"
%W'kM$DtY=P8korg]gF%fM&)<eJEPo.p[b`q\pqSeDE8V#6<9$`RWLE+@S,HV]TOE_/,OBO)_e]ek;K*Hp78D7BlWYLFslG:=UA81
%,3j\p5gLW?etL=JKg6e:eKV==7jgmJ,[-e0YK?%&0q"YR3M`FU;6:DL=4FmbfJI<d5,?(>*7M:EjMY0&>h5RZ0KP8=BG0H&c3QTj
%674,rO%rFkS`:]^/NkTPg'WBs-1[7^=Y=)$83kS2E&]+R%tNl&oat?qUXS@$cG#@biu_D9^^:f_lN7F7m]hiZ"t&k%D3(cp&<6.>
%$5?TYc*+MU+YBp?8>'+A@)O2S<Q]%`UEV5+3*^fPOOFOO>&HH%[]ous9G%@LZumBoV@Y%T7YZ\.@o&k/=B6]'k\.^U$mKRTHoPLi
%N/[_SGOZR$&',)Xg)IfVT*F_7j>G=PZBd$[5-g@bSiE_r;d=CAW&@L-%B#q(=,gmEAOSjqUf#9.b;g%oM`)`U.o.I+O?c-e]&Gc+
%`Uk5kh8AU?<bQlUR&4UQh:Y8?H*]7CMRGSp64$8KO+Ti#aJ/=^DbcIB7^g@tG&j>rm2[+=OmW!7GPjP5EF<Sf_NCr/XjH9lLnhR3
%T%oiuT/`^m@oU@eOf^!6Ls(%N",(n:H/]:>R_*E_ouh<>>_K7L2slQAs#IBIW"nl,3ePoBSM]+.b3L;Q$/)U/Z3T^::9G2B?r-2=
%bI<>n9foAuXVLDr>B-uS1*LLaDXP[5g\]cF="*ahrIK`dSVBZ//@Im1=-X"W?:AZ%Bi^ti3[EFb/L]")ZJG++[W-Cg$gP66ekp:h
%7lAp_1`aII\V;5+8[:)F'MkbF]B@?OU12=0f&Xa$*p9;eV->+3bdM.?$csWO)oNP0,ot__?:LDRFI=5jG,p\iH`qgMMM60?ou)T)
%S\_e8e!s3U#^&1[TsYa&H-k6j#Gg?oo0,_YXi95kdUC.72@FYnU.10;=SAi%BRS&P5(kE=W/jpo0LjYg?DF;2HF2c;Rl`/$#d'L%
%P40G#mQBmE*^p;ioQi!(lTTXO$8@DT6X_.+m))/H+&q=P8[<$7Wji.b=6:-'7P27)i>bKV)&6Ef^cX*>CE5]p4#$uF1B;H%Oq)Ar
%"K?N/,JBBjr(N9g_0@8.<j'@[,grJ7!!#?=X&Q!-S=#'4>=PFS%8AoA+OQ21WAnurGp,iqs7)!1.;lsEHsJ6*#%j'h$D@lQN$AaN
%>7-4Ln7A7)'t`#)U8L44.6$pcH*WC-B8%0@!/sNXKnlNOS&-W>?u9f'7RJDIJNsM+\Uer>9([FD<rgIF8e`mX@DuG$<(MNA6CpOK
%$'!6Qc!lB[`/l+816EdeM-LAc4gYkG]*H756KJ3ND./P_.B9X@G^Qk/b!JY@p5T^TbG1i)F=@nWY*'0`$@srI<-Lmo=;>^7LM!em
%^/i@CXAeY;%?8R3_BM^-(C"\;g;_DQ@j)/j67APXP8CcIN[8Sm.d/*Z5[J`d6eATie%WqsQ@qOpG[30%1/M]1L13,Df(+NJkA0&<
%ai1>lT-^Fg!W\moj*GBl9)n!QLP5aG0UM,=KlV8J96,>[eddJ@CY=",FrK&CR64Kjpo=`T&.TkeknXY<U4tg+Mcpj4R%'S=<[;!l
%8#DLs.TpnY,ta<(3&Durffoclg01!A.[f]L)oG#KQ`a'^Tp5qC(:;^nU1k[%jI'Lh^jZpV;mIk.eEjV6F![<eZAXhAI0I/;W!JAJ
%L)aW_U(/'+"a;20VU[qn8;%K_JLVE3LH1G/T#$(,FIk@X8o,X3*$.i_g8V0D6!^a\^R`im9i5]R)M3Zpb*_B'=\49tKj*n2aW2Y?
%C>"]ijT@e8ajOUZW+p<G%ZQ1AAPG/:Wd2BT@RL5?gFQtkmfNEC,4PqVY\3pp*R3iE$F5sPac#SW#R[Lq-_uS@]RWgoAZA3J`G0Ol
%3*Ae@D="1CE]blr3?+&&Q%4-]k*Q:.8=ILbdsRL2D@6U=]9@E#%<N_Ge>&m3+a[_)307b1>t";;'go5q(Hpc*4B.hp>lu5^Frk)D
%`qMI7>YG$%2K6D.E""q/rFBU8d(GHmq(#,+F7(r<luh';,=sl<^G;?4%5_=*5?eMu"'XDM6OR1b9@#N!!G73OGY"J-4"6KDQq4`G
%`)m_?<%Ogg>5N.jL(5?QU2s4q&)&J?BGg2U=]>nA,'^2@cGOtZK95&)aolT1I_Wg.K$M?h7F:j<OK0DZHZ=n9_-flrdK9n$BElIh
%?7B'.-RFQ5,tWhe:+p@GP[#lSa\+MI[Ujgq&sC]LM,F_VL*c+-ZO/_X?8Z3cS1>\`jm)i!TK>E;oWYJR."2JA,k^Z41+:-F$-?Bh
%)V>LP)ZfZJE:k_YO?+6ZBbbPmF0T8Z8T,t]%j@?-$46)7on8>K9@<<n;O6h)),O8;<WU+1V'!oW]A9Z@Zt_0cgi=0CY`&tZQ"4JS
%3]Vtd4jcE!DIM%WO;_2o(jt0YY"#-$+Z@;5Ol0YGllXjHSY9e;:.eC:S.:MkA$25<@ibj8($/l"V-h[\&kE0QPI*#[7R51Oi*\kq
%oq/,@Qr12qL*dP+]l$]8.<"\J;U/->`!Zd"R.'d96YsWk'j8]5[4Ri<LCIrQ_epeqRBo`nM9P::ND*O?A.MD1";q8X;$@No,r:7m
%.GFNIn6TFZ-7`%Dg$ogET*'8GdX\Q582N];E$*MYOIq)h"hbs#Od*/$#f7FAL5!S;g?Ze1\cK)Cr6RjHI/4"?2T^n;1r2)8H9i;+
%X>I)1'hT#OF+bc5f,&94'G=CQoN5S0aJ=uDN%[`_V%V%b15;jo)?AR[/rn'C+'C)Ocm8%(DEifeKQBoUd?7#EV%ElfC35^ERh6T:
%Y@1C&ZkWX%f]8`F*>bEcOR`GgC81tn2nMd6*goS@SWZ/l\_RT-IX)7^p:,?%BCj#]G$S\K[C78Jec`2d&4X+8*SDBuKrQ9f!$Q3Q
%FSKq4&(i,XEWl_#b#jU=/*o;$N,DHSU=6B4_0JqU-<>!<52/9d@)/FV0tECg/5EEDAR21sVU2)b998@64fZaao7nM.Ak0;d*nA3`
%$DC0b>>%:=P23Xk-m_W\b7<`^O@W#mFSk['.9h7A,BY?DNUFh.e'n96cLC`c0cfCH[Ap]&Be?:d3=;C2ZcX!rn\?%:9Ph=IjD]`e
%d@,qKF9GtP'Y5aYDj_Y?H:5ECTjX0MiuAR3UK7L4g_r3>`!g&&lf=:GhrEiG0tF@cbIe$V,Cur@5qT?k8CWg<btebta(o$YdD>.8
%?]46"'A#fg<)4Pc6r&ANYDc.<@@(sU,-N7-q@IA'9g?4[&Tap])C*5/=;o_kaU4$qq)#[$eB.*U/73gI,HIc/=JL1X=dd3,bT%A=
%>"T'HKp>tC7pJL&ZUQl")id@q2iDF8(>!SD<:`!`)VkL5F;MKO>LCF`Zl@C2c\csu4OZ#=Db#o<EP0X^4E)9I-CS#SpCnV'RW*@q
%_\8Lb\iSK=].K'.gLu;R8;(^W.#M]+(6W]tEXPIhd%d<s?B/cj3P,%KW#hP#ZPM"!1p4%Gao+f58<D5`@:B?]4Z-5uSRl[WV3Z-j
%`&;cZeK8sVO4dC4C:Q6F9[hb+p:4%[GU$DgNc#>CKgteR*n@05<4h1!FQ;FZ/XR&C:MCoTJ/Khp_K+7B02&e^30'c'<tAfq@)k.S
%*n?_6$@+@8(6Vh8ghRn!^F>fe(6KWfdX5`>Wh8&brQkfjgK8lG:\KuV]+:[+`/eXlDhUZ)X]L?iF[DfP>It=W6&G6VYBItj%cGAA
%Xm(M=_BHl46BtoJ(T=R26:8We!"sCO[[n*Wd.4J^6<QWU'&]\0I6.F_OP<B`Y*&jV3)K_ajVAccM)@b*-u4A!g^")A0oAAp&gg+K
%l*0:s=10e/er6Wt/NqplOV&nhXc]lBauKce(igK2MWXY.\4JBF_mCiU#Z9:ikSP$35EtD?C3;+c'9T$t`/tOMc0-V!F>+&*Mc;#/
%OXEFjO>m#nH#f\a)g`&]<P[-t+^peC%,Ia:2q(L";pq=!XY,DVE2XFnQ"*(JenT=m!ecRHLC=QUILZe,6Z\@o#9b`[I;%8k.3Mr0
%+js&+)/:Q>?3hT;`iL8s3Aj-^#adKF?jP..U@(=@D':'_*_KH;46lnNMn+sBk`(NP&/<[b8hZ<-oI-\h#0IM,`<dZD)+\]SCI%W!
%M3`Q9PX,7)jh>Zhs)s+s/osa6`ejBi]O]E!PQSfIqLZ!%+\*'r;Nh%^+jVcbnSXcTK_Z&j9sC.p,fX8hj<3`<eR2%QR\E?)fYtp$
%RKkrVUrNcp*("A\KL)_9n/E*`K/0p0]Ncfo]TaVd#!uX]74V@#D&XpiBi-n&I7G^fVe4Wa?0"?6Qk<*_VAVr:oHSd>g;7$Ul@DPO
%PD5Y<^&0?Y31:$p9+aOf;jU1[Lt^:j`MOMnPs,:h*A9eYaHB"COg;i<][@-N[.I97)?S82RST`>jAO*r<cWq\=5B?eI:O@H#eB_s
%9@,U(6)(;!$cuR3Z*P$$Xf.a?#^[+\BdO4L1<6:bKMjEa.FQH#7GPrUQoD3<K3<!%BoN\p+VX\N1tqFI<SCEK+$FOSToECX8$O!^
%DG*H9mMIenV/X_[\\c"Hr^U^+'$%[(RXWDRA_fWRiA.>`dlZ>-XSIT9K\l![q`C#;!p6pmk6EB$Qg/j,W$WR'bV4Dc<1KjB#f&]h
%"bQYhY?)tWd7bkgZc\A;UAWMnhCFl%ch-OK-BLEDGlGdn1F&mG_F+^Q#h#oijMiF^Ml?-DY4jF:X'8phD28e79[?)QVauGj+#jd6
%9:)>"kpS6]emVpmPc^bL^e6"[;!:PiQ6%0/*</MaNmg*=dmr!!<s0$_k\*0GH7pCol;bPZ1g-/OI6/+nogt:eh^i=n8?Vdbs0VN3
%4doWrQ1"eL+8SEV"H6!a0B4De@fdPSYT[^7H4u*4>Ggm).8]ZhrqCK[\Ml<SX30Y#:$[?7/4&+>q;lX`\.N@.8(c`lgXAaQ3okIZ
%HZFW=s)=G2Es?OhR?/Nr^\5C4m\9St2-Wug8O!8GGF/`W;IA;%U:;'7UU#kcoIG-ZE_,<k<>7J<f*IIXO]]aUO-B1ULT8nWo4;+m
%@XJ2&K(/QZM]`*91Cn)<>0Z.@JpmoSmF7Uq*76jM-NgN^L-/rJSi(4.\.V2F4k\WGdn1+`j8oH[\*FN5r16BB&h]88r4WtKb4/hV
%nr9^I1!mptoiNPb<.aIDC;5,us/F52P''g4^18<L_@%N,R+4cm5_)V&V8/O%!GR]"cJ)R'\*i$rE&$:`jfKVJ5!UBf`ZPF^SKACD
%LU,D*#b6UQAV!<'!<pcDLpnQ7/<@U5#X:9@],%`X[RoPmNgcj(%%-fUAt9Jm4h]!!'&:U(C+R@!aP=(5Y#bF\5gj[O;X;jN<<:e,
%8Q=@fYe20tD:/CdB:]97YsSIT!ZNai"HBRK1\@]_@]c`kXMG1*1joUA1<-n`eJ>Q%T-X&OSLK$A\g)/QTLYbQhpPtHTgi.:!HC3A
%2E!YA;WtdNcsR\LX_0o(=4tuV/uUoQoftQ1kp;e'=a)\NED'1dc.Jfn*Uej19!\HN&Lo"A0[q6<)de/(0a;X@`]DgMM'H#O+#kId
%=$i!`/0`/E&BfiX65fA-PQX[uP]^`f+LEO.,^!f=1m%cc!^J-AJMl>>6*$7M6lWYBpU'1tQfCZ[)KPU>-rB2JP`]*hR?E5?rNWO[
%86*S5f'QF6UB`GY)4*WU>l]53QrS<>+F#^2;Qt;l3i7^0ZPO3%A"LUZ7%g/s@d@6FU`0I`E2!c>);HXH9d3@[TY6l7--i7jlZX(Q
%N2-g80?_(eJDh`oFK-[jGpg*@r+G\ngYsR%cR,B/WjKoBF;`/%Spes(+Vo)faGr/'N*7"Jj/s3HVL32j["?[h@!5:s76.X[2&bMj
%?4TD$+/CkE+sr-H6prE51ps50'7<2=WS$CBch*dhTpm/oW;Rs":jZ4;6UMai@MB'6)9;jq]Qq;$">^Asb9gA.G]f2k`C"9G:+5:W
%IW7o=fCo[4`cRKq886(#5<><)&1i8@Kc@=q=.uHQOOYK-[cBTt@bj>gJl?u`J_a@NkZ-%dg!kaAVnAF<6>gA*;i@^^=BFT4X57J$
%U"XT6V^t`-eYOrXU35*)fdmI`ZT(ROd]c*F?`oeS@T?SQ`!g_h&\ocWNI7620$F_!GZ*<#!Ld+q+r"[W^G;PkHBtN!SN!<A%B'EN
%Fk8semApsn#W?*/;CD_Ufi7\(GsSanm75OS$"7rZ.8;)I5;n_WFb#YrMn./LD8bD"Y5$H8AVBg..hSLEp"Bpb\/\O,/SG>LO_mBj
%7`ip,BAV_\JK?B-(jpI,i"M+`.KeMRBH>X^$)\$iHQNFmq*#/:!bn#;L'^856o8lP8=?2B6[,5`I'SaQf'66I'M"n32m74-,bbO<
%@+#(,&I7s]+0">Y51^lYB#tmts'1BpnfDG?HOM7HV>,`E..8UAgMnP,lbnJG`L]T!L)-69li]"4[oTd_jLpOj#G?I%1X3Q!FQ8R@
%5Y5X1,6AIh1c.Whfs38po85UD4<[0FSH>ce!EdK*,,dFC'a=]fIR(S]ON>ogJPEAJqUL,l!rl.g\23#57C8Nr5bKR?9K>X:RefA/
%[urT)n]q`W#bP;3\3<tG@O(t`6eQS0p8C9gm]iIb,4KEq/!b94"AGBM:/e>5Jhgh)UsoERV"k$o`<'2jms1nc!<DgoNHii>]g2;o
%0a^-,[R0Q\E=oHbbnJ<BKh-gZZ.]XX";f,Mk:2GG9>cK&,V"8%cjL7+"<""\p0QT00&l\+@+LiqG8WXeb<"Bp<AS1IEd+*W&@$)Q
%S4G0aBbrJg\On^)K'pPs"K,T5Ukef&aE[La?lH":0$lmj"RlsgCG0d%&YUniLeoZ!k!FGUTt-!BqEkU3*F&eaC4?gbGUk70#!ET0
%X&C'q.QX;OnD$k+k`Qul#3H/=YODP-^Z0r_j01.+VQrt:@KDkY?;SY/o11tD+uEYVX51h&qs$;-?,Ue!K*M*CCm6:1;1iJOB"6_:
%ks]tt9%_APUb)6IhZ,+j;qjIeG5,=1$M,T`P$A%sO.6ZfFj_4:).s`dUBSnG57,;abIa]r4<XoWi:XWraMEmm?"fY;J0l_I[)r5G
%+?F?Q,N[k"[d#+\UjSiWBFNA[>JP*qC>Y`?[YR.6oAhTS_C,SS:AGu6=q6#,\jNasVI`X@D4lLe-#ltX>h$n-Tf$:q6mE!e^UWbg
%i8^DTClD35r4BdJnRbDq+C-eFHI@"ij_n!2\UeoSnmIJoD\:9CO%S$@Ja1/hF6?!700JFEfg1pK=sp$Ll7DA7SuNRc8j/"sC+-\E
%@9f7e!n^q=gJ2eg0WUfbW+XKAWq/"#0uU7r7Mu1U/BWU`A$H"28A")/D4T5jIFKE%FH_rUl?J[[Ol^GSW_'YMU:9,NP[sm?q5]^7
%q_llcIO.A#GLeWC^F#8=>>;6Eg"+ar\#oeAS`c5Da+^1e\'DC7;e+H$OD-)#or@rAG'D=B>+'"Obo*<?7Q.>pRSB]Kc4VNAS.2KX
%N^TnicfB-`i!A-5Cd;OPL3q&6a1E=H7B+'HJ_rl%V-_8gClq".99N8HJ5hVLaLgmC[=/^H4Qc1Nh(l7!)TsdnAMacS'/NL<&?,:I
%;QGf(##3$+co;?V:^.e$n,OO*-E;Ph8EJg*]`lJ&aLZqk/I514#=sn@-K[otp`^N:/_Pr'n59gTn1n28%_!Y&D9;<*@s,/M<:(C!
%bcdBfNPar@;*0!.&0L"OA7;:l#Y>26r0elJU%WYI%ChV-.]k39gP/<SP4HeT:arO4&DDqmpnKm'2Q4"q'pC]RX\%+eq(*h74]qmV
%>M=2dR,dZsSWi_fSo7g7Zul_G7ft1jYm>`@E\IQ_>s]"q;_YrS=lHK8\$([L="S!eGZg<0K<3qO?9Ik(-96BL(/t#PZnj4]UU`e'
%VPoK!DOj^>(/C)h=Q@RQh@ChFh['lmd'Z>J/WfZfdZfa;ZX,gPpj4!VeU@(q_2!hAbF=sWI&h\\2$SmGUm)?$'39encBB0NK*,9e
%&8I@B/a<o#itSR3,]+T?'"]t.JXaP*S!u)\PTp5A4UNVcUX.X251e]Vj[)q!2K<\*K^*l+`nI(DXi:+_7C:M?MS.u/b=l(o&eW8t
%&eP55)?WTo9rV10:QMZ4o_98;$Zc/aF-K'.-<4LD>8G)1+SGUCbNa6oUIqRNfrm\pl=ILa]SgI:TinpM8!d'Ug_q?;#<,B0kMJr%
%9^?h<]l_dj]?*SaU"d=4TstT0LQd<],%t1+2[Me4A3t@W?<!>llYXQiqJFiaajj-f%!2]ISDFS,@/rJc6+0:43XV5SHE,,fZJc"l
%17T7f<)d!Ze*#PHU(MbaTKX\m&<JZ18H[b`+DJq+)C`aPh%MJ`#8F5HGnG*4:<+.!R0u;>=qZ'gD80eRIG$Qef*1uF(aMG@"Xo(1
%Gq+G5C=F]jn%)92_?j3c@hd-(i:&DkdS@uo1T45%r%r:KU>gtHjX6GKS.t@kL3?Dg&ho/MOEQMM1pk.%1&&l'Fs4dnZ?[J#!oC=]
%6]jW#&(B0*jq.YY!0!JV#H*?;JA,p3>7Q=<a-H'i*m4V=:rssj;)(J0fm.&s2.L$kl]=0F9Mq#&$0)V*IcrCmE:j](</F?JgGgI/
%^-V:Oc#LL_U,T[K+lIcG4-TA&!gFG&eEJ3_F$IVJ4DJQ@Djj"kh*@uGZ;`[u2'C@Vd<ODHq87@T\EY#e%%mKm67I">*s'fM456]b
%1FH-43g+(Wn7Ok"W!6hu:Q)_iCFNoBS_T(B<=<ZR'5SO?J6;5=*GLcmG8A3<^RDKu4&nX^Z[>mJHL1Ht_L^9nd[p(k6EHBFWu413
%o(q6VI9dU1n1j:fG?#(<\>(ld%I527jpViLAHb_rf`GH=L:PrI.RLSrK7RKk3*k&?0>IjR])!([JOZTi=0b*11Ve-R)NY(t&-8lX
%$*M_8l=L#8Q+rSP(ghjSWGK(>X"C:2,dJ](5Ae)#BH^uO:)5rN>k3M[]amWVP>OZNjs]LELmSAi+\&/'ajdM</;s3[ijo%"d.`li
%F*&9g\#Bs+^mboa-=:E5:*29alV$)HgPm::Kt=$7'cK)F5*(qJd0V60``fWrUZ7AL=G"kUULa%IX,#n)3cq`;<n?m@-oT[E[+mnX
%TkiGV^F1Cc3`JQBa[SDE++c`/g9W64`0X>!KT'"9;N>p_;Y-"_e#\*4<+)?[NmP<;#Xo6"4H3k]p%>(RN!P]j0`iO"k9l%JL.p]C
%J2:mgBJ'MsFbUE<>du8a%Q,c`/%Cad:\1=EH38:o<I(8o51WDDKqoUT\7@e$Y,!^+gPDUj--4g!<@19BX6ib-9nS6&S-X])>0r!`
%e:Lk*DEse<fGBO4$?_d,[C'67mt<t71f8I"c'tY4.Hst@>,:L:M^FV)LPSgmERBX)^qenWcBH0hc"/42LMcuer,6Qn2c_Mh5_\s^
%9kT,md^3jc,6(>)q]Slh%5+EoW;4N80J"8Y4Y455HaUdT?Z0^3"4DS6b'"-_>Y:c=]=k?'%'8?cS.EW[U[4@hcOhPGU$7l"2a$@6
%N2a\pjad2II7.l.,NlQF,2?aA>&oJV1N$b<W=pIP'KSAj&[BK)I01aRdeJjQo7kRV)6]6ulkB=2:/Tj`Ur]F`Z:?1rLesI&m)kLT
%b,h\7&h\e;mb:3Y&O?D`+%Fs:W$Z_g=V+'Dp<5$OUteqeb7)N^A[aFBFK6!@VeVol-+*@Ml]s]=@4GK]].s\>A6LFCMie>^CtT!8
%MMH>W/?c!'Y"/dHWEL';E_niBMNkNF%!)i0ng@@IVNR9lJ(/p=+5.kV-;%LI7`\&b`&SK<$bAM#^KX6>7$Ul#;DXFKMrm[_E5c]G
%V?-bGL(r@X_aRDZBe3Z6GE-dQ:D@3%X\Eb9<DAaEA&GH,pn8Ftq_%A]d5>W^V,4/KhikmT78LrbDa13n<UcS,:S,7HiRc\_AJ(F]
%\e0aL^4*b:XFb+C?M/^RbfGD59@^@7\og%Bb]F%G'p"ck%$u,rK-\ke&\ASqA;"?(@^IY<9Dn`6#s$>bMHHmcQE&>DMLDJ(@Aa$k
%Wat7,U7("UW_/b\pLYnqW>]l]R[pI:B.E8I>(*R=TB[NRFWt#92@G!j(?rb,aO\NY,o8jn.8OpVBC7i@fj<$R=/cAF/n6c;'O)OR
%>N-d@AP\>QF?Ap)X*<#0]PB/aB,d,8QKN,VZj#:[@.1\:R836(Rq.Hi_[N)Q=Nt)ocMWsuP?f3F+7<@scfo%hVQHHl#eUI"BI2Ot
%Ud>:Qn2=t>3@GieaGP<Y7g984_+:0(0U*QMjUN3XC=nE?a,'lfc]`*s._!n@6pr\b+SVP'k:A_E#BWR(V@k82eC!=M%+Bg4#Fo")
%4UT=-Ar0VN3>6.)[X#ccA<o=Vh&[arkKp]!ZZjIK]Amu`&?&>EcgB0.RK\9Q(E1nh_l8Spmjf"7P/^dEU]l`Z!Ol'oOQmlX6^DFE
%o7?$i<3VNsV*o=g^:s8`RHuq<E6FO7DJF\l6`!]rW_W;,WU%;.3auBJWUXim1gPdJ/a'R8ql9.6AbjUIF=WZl?0H1&q\^.EWK*4S
%,P5Fq@WB0,L*dkh$M0F!FPe<fc?:.)I>_>8jK=itJrmbT`dC;*n?\1urfQ1diA-=Q*PHAYZ"X:\dRCO:\1*4[p/+]T4-m3f<`2R1
%SP_iXTmK`JO?n4,+C`2AOp71D7[gb=RXIA5mc\_5N[`/el!2*M=#PdF1#X6tBLHh2h1Wa$+r2W7bcrJ%C%t&RYnog/8;\ZT%QU(_
%dPZ5PBZa$a6#1,%L9o)PB]&u(O7S)a"70Z_Aa^n"bilJtf1HHpL=;3D5uJ."&^VH1$nT3r.E@%JYBeQO&\n[^:0\4U>tb.D\Hi7?
%E+dnup=L$=daA=%60%'4<J*2+qM"hDf\9"_!<(QAO$rCA;VDZn\__Jd)3Ro;HFg#n0XX5($t?$3>CT5"6fCX7.ZY\u:9Z:PK0;PT
%'%m-">R5@]MK8EhG$]KI"@mL`9EaQW!Gugri$KEpbKQO1F)&9c?j6r!J8oqIbj>oaYat[_A^NZ,#=7$3j<4et<)Q/_qHaMd9nT,V
%%gs%W-+jF=P(KQ-btDP]C61Pfcj*7#lSE35.jEL4jOs'#SbGSfDbguTL7mKKPQ2%E>aD?0c,Gs6'#.@*3aW:p9QYPLHrO7Z*B9[T
%h[`X9$-t)h2<7?Oel7ZO35-SE&>"K4RE>3<%Ul:Z>bA-D189LLO=m1R\KuLRQrkA86AVTKb],^`0pb!\0VM1Y6tPrLL1rMV[>q5V
%,PZToC;&$d3frIh0,j,kMKaR3m0J<;[\PMhVI?i-7VX2EQg62jD%[Q7JnA^J5c%+P4!PJV(MlD(r6dd3`B`SICu6qD?PQt!RN>@:
%L>((QZc-GmLUj_>Z,o"Fp!X8'47PsFk/Nc=o;FHp2`u*&>oSJDf&^=AH@.Z-L`%s)!+n3,SOS$l<Ac7"%,/Wtb96$+#q;+/.X4Qm
%4Ju/MdQGjSVe9PmF*d7'Ab_MLECr;Q+i9aIF3a#:mi$CF]YeF]l2cV+YFQ@n+NY\Q2DkcBTg=V<3/ea0a0HgAJNI:HY6IRHdMeqU
%A6?(\pejh-!AUX^r*W4o1\;_le`ZUu8b=lTOPZ/JTg0LX9Tp$p>Qt%Ohf)U5"g9]l6?uFuLZ0Fm8`E#-C63N\%>.^J9&!pKJfkWP
%Q1/qlZU*/(P!Q#sXQm_`X_+&M2$bZ&Th&7;[,`L)D@fk)#dOHSi+5ADm^!$^pqY>/jjg"q#VO%](d@-gmQGtS8Ynr!@i8(*/4T*8
%#UJGG6"Srd(4+!EQU"*2.l`!BTfR!iXa1C&e>trnY6Ac@^82#_R40ZiMeo-u,sUV:gcDQWO.[O_JrZSC/SJ+O):fh,Z'8g2V-Ojg
%+BVYL=19/"=PjDiE!-1A.[;q)e,b2D+H1'^U:R"ZG)-(d=cpT-7lE2*pU9#d6D=C[aOMD]@%`XcCsR('9LA6Q/bIC^3Q3;K?m68U
%C/-T*qar6D&QhFV`a]F?[V`.pFHi6KcFRf)*.m2Z;AG[53L\#XI-(>M]<2DXV/[s_-m@fe0KhWZEjRaJ$h*u1O27EUfW:=gGMH@p
%Nc6$jO!%m%bEt_jX.U$=X@h:j<m%I0O>(?GK6J[T?OgD,!BQpNJCMHh8>):r:R4OqHGc[o:bN='%(Zd6c';g*$?k*3,.k.UBr&H.
%AH>L-OCRrG*4-m..?/Qa[$B5pqnT9<8V^@MPm'_'9T$d^_T*A4liJ*3.+FI,?,fIX5_6SN2)>rKKKL$llE]h?YeRDLdW[9Vl9o'8
%6+T&eC:q8t9%7Ta.0dn/08$'R(5#'X%8M[jSjG?_!Fnqr-N4=F`c5T1FgDNC1K<YkAZ[Qc#f:=:/lSlW_$a2Y*YG+4I1\4%lFB@k
%=<-M$k:/0gE:Gaf2P!''Q$6-nRT^H$:)QRsVXD;`RJt+tZ-Z4,;e2]qS=1YK!*9GnOY(G/hUmG0)Sr(P=@YTUTXtt*!_`fP(?#p[
%+>(B7Jul7a3W><)Eu+KQA\^_bMD@_mAJqhVQf]F6$4mb""+-uP-m)8SRS5@R5nh<fB3cM#AuA'd:lcKij"8Kr4!S3>K-XERg4%*a
%\nc3$fj7\!Tl(?M$"4Lc+?>PqU`d`0irEU87D6^W3Hi6)IO`M^oId0gf>u"G[*;e$W9Rt+_DN])=9eC?H5u.-ZL2N(g`pKs"[<.W
%\pAm]Eqsq2=.(3;4_PFNG+D(1J0=$6NrF/+a-4ZjV4p,grc:6[[fRO?<S3MXcsRG%-(.>T1_9d>Q7==nh6;%.&qj0TeJCP28[biF
%'u1$Xe^^U%=19uH:s@E55@k-R'1F/78trd)ZGO2!]Nj+o=./?J=CU+'&N'5S?&u\5$[da9\6b^Yk_SFJCj#)\*=ia_fTVaar2_Eh
%'4l=K.atlt1;bY<-bNgQ=pKuf&\\%>.0&YNgU?ph)s's7i-*9@AgEXH[-5kYlA].(?p@frWQ__L(^&4D@?PXMfKuFE$eAXD.=b:+
%X9>cPP*.+`#oqbm,s;atPW3Y_\O>\MNAoE?QhP&kD3BF.>Eu2=a\1htV3J1O1pgF_Y:(H:0!o0!lAs0o8]rM6>&=.DI4VR3G,L/I
%K'n?Cm`!l9ep)P%R"1;1gqDoV9"=;+rO]_*hOQ!#$SkW#)ds@l7CG7qY<n7j"1@uW+5X%9An;QmobC\mOYg<c(RS$^Oqq;I'1b8Y
%8"uM/jfQ1,7Nq@tS^"fTkFM6X$bBCN]bM]=>KX;ZX1g0CqPZ\19(l.<H'$pQqQ,!)>Ft[!f6o;!qco7dDp-T"?LH?\1CC[2$gmM&
%16T="n_ZDCiCAU__)AR!)b:D>a-XL;l?5D^Ua8FD/(a=p%GY_O'-NZ?DpIQ3V\GtKg=1<rf8g7C]bAT7#]?P^]?L\=TL%Qj4+k5F
%>3-Rup0R=&q97`SVl*MHn)W8.d&e_ogT'fnC&4DJ6'm'>Ru<G*#<DcL&-M\`9"++^eA%Eq^M+2IW%n#^"8=\WDn@%NI1u#g(g<"b
%LEk+c"lt>K&CRJ=cq&uu9:K#<HXPY)B\_9\A;rb?/OEW;\&p!0jW975l7:pq@Z=%O>TRWd./LZ-\9D#"cMFoD*+*Ts@p76m"jO`?
%c'r<)cY6ION'C+\kpPX3P]@j<q&!Z_O](%.3L?V-hc%NT.cirRQ]q%iA72(Q":Z40?9\rO4Iic4Z9T38cFdfe4e0i>3OPtk]ZY5[
%oDK*[+Ri><&>mft/d$fd_Htm;j-WaT`61aq&0"E'/8r1ShS^'f9(GLd(gPBuXDOu/)#2P)DDDDS_"/6)fE9i67r-Y#jeA;aHi^qD
%0#5SBaNh)f@blCY/m>KfmjIbJ]:<AGmIMWXnVI+kJ`n%beM6[@lQrL2&')b_Ng>RmE:803%;=r(8dT9S`[G3urjBYmDHr^F'CIc(
%o[m2'jf8OoE@ibf6'Yi'Y,t;ARYq50egMt9kc"u&3!&l0G0/9>-8o#M1cp%_J<d<SoRNYRUXT<4#`D)-NiN8rP!SFolW2N_0S@]C
%8o"ZF'A/HQN2*B34#^<D''5X/*ctL=\%]3ijGl0qK&dqi!DpW?1m^]nTNtLB(&"/d^`q(t2*(P0f\d\-N].S>;0tXl]P[t5aBOhe
%6t@g9cJ3Ns*OX#DUeYL(Jf9,8EuAKt=2D^-VM;n6@];Ph-9h3@!:&Z*9fpr7pIpI!cjY4gS8TT;N8^es`hR`ACZ]]d[FAJr7@R'$
%hYfT3:AEU/h2:i=<SD9*H^_TUY^b]6-6L4aDLW9]j!c#Q^g4%1BH2u/fm-L!,BJ&knmIF&:P[?YeamgfV-L!i%McY0cT@mY(sZNZ
%bUhE'Y6F$!Nj`6X<Y\:WSTb=id]?/KSds^GkB!M.`E]";PJH-Bmab]8Q:sfghT)\l?>F:j]l<iLDudmW2qV7k/as]t;*YN?k5"N#
%<]<)oYhq7[,a\c@WcbrB"B$DBaDF!6ICsdrpHpds"B6VEABeZgNb;F+UpSj!(.O/X(l\t[1]ZVGVosiH\Im.2'tkG=#Y.pk-_2fR
%1SRt3/;iZai\XsVoEOFCMMt+=-&?I[27Oa=(E+mg.>B7@8[l#.n-ksNg+&L=*(_SJ(2(/\"T=-c"PITV+#`o^&MrdJ6HYsaLsNKT
%ZlCN0=k1Yo/AKqX%J=9$Xe9QrHTq>V7"AU!hXS[UELo:\r=+U[A4;W1j0PBV6fd,da9=-!2:U)l-N@c)gc)+b0:rE"/@;k4EfVZ=
%&:^McXC<aeRdgE6d6\_>i4KPb-<t[tJ6t?Si*JU*":t%+FOh-s-^JRt1BkIN#%Jq@BSCI.=ick]$.X7+!g=I1IBUoPX\pGgHF(mm
%]]A0VgC5n_6kE<&:AmRG)=>!L>R;jJSl3(p:*T7ZS=F5O50))2Muo)m3eUCr3.c*G5LrF2bo5ll1IlYGY>VD;Mm*h]AWYjM0kf=l
%<5AKa02ctJM2N3>7goD06(;\*+_WbqiBX-M?r!@'2.P\Qf\/TChX-c''G)9D<JNideB)1aXoSiibUdG6Kd>cC$'jNp]:orKm=QgT
%^3g^;YlZM7@9Argopo;m=&MW5=K\-3UK&7a=9qVS##kt&3BZ5He06#!Jsr86-:AY:Q)36594+;WK0EsE:htXU[5_S;BGGZ38mb?q
%FMX?4nDJ?s_m;@K<(L@h5fs6-$`%1?q]*)P6[bf4@EV'K8Ia+Z9*dkpn0I9BW"Xuu8*7EH/e'X7qZ1H5Cf*aR;+Y3`LS15Z`necd
%[epL4$r![<.LST=SC>b]d&?sMFeS]Cs,p\W9V3D_E!s#n:_]-!R#4en\kM2ld;?W*o*DWsn^p'+1'oB+]U0a'$;1)h#68?;M!m=L
%1isRe,X?7!El2@.2,LpdrM[+4M&Y?\ZaZE1+Z!mcAi1.^Z@c+_7<r3Zb^$0Rcoj@5Fbim?oCc<$IfVj9&O!&#!8dK:]e'>uSDaUk
%[foWKmuS5e]Z?GWED0$UMGhW@B&oke:`1\1.b"qTBJGnNlM[1do*g&NZ>l-#gORc>E9OSj:&OH@A*sQX96plA-:@4'-U(mP+Cmr@
%ie=8,Vljc%e$'h,0el=1<6d]Q<j@fdQQ%Of;=8(83dGmc$Wje6e(.1ggm0r$VTt@(6g=R&2K_L7S[L?;p/D2<=%c'u,uW9Q>b*-=
%ECn\uE`Jc+4XjC!b14!WeZr01/Q]d3e,iQK`E[gH;s@!+9QS`c.i#Y`Y03%i^*_1BmkW`./3K,.TQ_O9p2auZ7*m7i)lU3NaT7/&
%ff\@JYNg"!6kaFRhK0(]fH>^:_*&G!YOds>m-6gj_P<ah93.:S.P%BMY:0r;.86n,0>Ih[<^F_MnnJpO=:3VObt`k=N)1_=c2_"B
%O[;_V&RS>QkNoa5O11d/'`'tU4U$WH;Y$"97Sjs6Ve$2[:`R*=#n[6=fVXoJCbZNW<6_.&]C%G4VD7Xu[S[O&4"^P`#_jjm##`GU
%VRN9u!&ZMMh%umpp8B6mZE7F)ED5<6Q(i,=TMoZ.-$Nl$CG3%l7Lb2M[@A[[mkU7NO[0W"O.a3C/Mp!S8rY3gSKXUMfeT-q1,s5%
%W@80e1b\jJfaj>A"Pg#VoH6]b`hq8e/]kV%r07SDIae05lfYq#a>dsKAIFq@+;$oZi.]Z*WS()PY=?C#6%e[q7aTp@F9e4/jgA?>
%/U29DF$1,M-8`b8OONljXJ.6(':mRE-.tpCY%8^B:$r;:miZG^&CY(/9C`fXC/U?,n3.-tC^Cl-&JoO&1X%<fJN#MYNBK%$[HoUc
%GX;BG.j4o(VfXT`6=e_H6jF+40i_\EO8rc%hF.P<e:a`i2p2t[WU[6PAdVfPP.WdX9u`TZN5l6O1/m-Y8RiTW9;P"?6*bOqB+Y')
%n6mY4EtR7X8>!LeD!3-kl37QHm!XMmTbDEBH&X?_QC1b>1oO\A:+YVYaGnNC%EJoLE!Le=\MJh@lej99a2"aVQ/8I!f@bf(B_iI>
%h.X>bP's052bm0'.Zi*GLkQ1d;PgW,C^OB5QW0'2(FX]2q4lNh)p:Pkk\7FMXc:%mh7>6p,'9qkO`=]"=?*/$T\ec['t$M/9pS2@
%)EI":bZ^ib[`@D`T`HYXk$.%@QA')srFe5)eQ^Ec?T1F(?il5p#tl03dsS+^_^D0fj@8D7>mh(QIFqAV6fgt+<*4@Dk_,U#FWV3i
%\C(Yf\@1-6HaG]f>mg8QK'kG"gMH:rM'\S5QQ`^c/lW&3A>uN6(8e9j+#DMiR:2DbHCLqkV7VSc\ZIu4+1GS1FLaQBh4=IA/CDsE
%1p[[h<':mf"cn2&rsG<7I7s7'.()SX,dfjOKN.DM7"=_pn'@HKT;=N\pIF-<j)aK"*]00H*E68IBgp"!nf(+r%bfK,=?Tr<IZIn[
%D,?#-p6-EQiK^:b5RDAtWNE5RniJ;r!rZE(\bm)j@]9`NP!E*."m]XPonW4jfU9enSX$a#CfT:fr]'7B$8m==]Z\?\*9uHSRk)5Y
%pU%/QJ%?W4p2nKTjT;4/KR1$%HFGQ?I@,l.7Y7jD%Z$&8c$Y@_XUkl*o'<D#Mn+;!V+5Is&7.rq=-(Qg[<kE_(PeLNenY/)?!6JU
%-#?q_,3c[%9lc8L78dM6/ktI,W%d!e%L!YP.=ES?NP\oR##i+IICLM3!Rse\h(ZU/kh;B3(eU>c#$Jr.0P^1>6pOqRh\=)jL1>Jc
%GKmp;VD?E5S`0'@*Ap+o5te*ZSrbi\O#t\qaAY.%.D\.\P!n6f=F>6#&gY=4AD1P7$D`><9WbpH0WG2f0pS.l?8ak=%Sno""7J_`
%as^D;@"fq3!I!rY9UAU0Fq+dXd]=h3$t\/Xc5'uNUV`pLW3KtCn?pWV;ih\t":%ECj/Z+=@<\KP*To[@R=l"=[#S>Nkp=2-5kShK
%T$o4>P'_;BFunukA7o6([hba'BdTnbX"h[\OQ7<785F=!e@/0Cbofpc.$d8R/X3HL#c.q22G/GWV<V;-HKft8FHX$,Lu:\F14*j]
%Y^l0D(B)UBHOjN0jk4ag!"0XZg"_f0r9M@r?BWh\R1C+*$idR'1q,:.,s>m>ZQIEHjUrW&-HND.HZ0/qWrWDr$U_Wli4,T=dl`m7
%(Zr"TBEg9`ctPsN^U$N=:bc*SJK\,Y<Lk%M6C!TJ;G4-?72+_sG9r!7>1VDt`\X,7&@a$_XPLZK;_MJXB$2B?/KQc?a\<pl+7)PB
%9`3BIOr2Ug;,jFBVNpHeSojKDLK1r'LZap*-Ghf[Tp@uUo.@$5=?!_BQiS>(6[2CeIta<7nkdU;RC1NM*&"R(cW(\\5q#kVjqfmg
%^YTKn8JZ:`+oA&%WQX%r5OB\a!=:S>/t-NsR7Z+O,=:]YXEFB2*(<7\'NdNGm3$e(+qEjT0"rT\o`"Pgd/@1YJ!6iBEq<T*a$tB2
%h2^"^dJij8H-RsaR2%Nao_t0YWebh)":>iCF.Bd9Q,K#r9RBD$rE_KJ,se.;Zd5T0BB8_a6N&@Ps-.Xkb(LmIB94l<83&53S/Q;D
%*c<PSElJbA$]Br[`iZ"*b*XDdnW>O68_K-b$qsQ"-lGsKKK2]Nj<`h%PHgZM);+#OE)NPo)1.s>d8/%C-tPT,Z8"rh,2HBPnW\If
%d$/Qr8sr*WOP;`"A.?+HI>i[blfmXK7]7bO,PXVc,"q'b^W`PgE#N6r@K>6]Cc*&o'3Qdi]mZb3I<YCXYkr/16E>Cec/<nS'er>2
%c*OF+h7JKNTR/K#4%$?=0A<)SL`+["_?9sQ@9HJQ`'LjV0;Zt!NB"jX7qM$)>\;JL\-&>l;T#53SF[qjEZD47""(kc6U8%NBkh3P
%;T[pa7@aK^4m]b"i%V>27!b%r'(V,fm*$bA4nX!/'Nf<,Es3fWqnD'3<96m*b7hj/O'r6D`2GtJ2"Ui0<T+,&+H*9))VVnPLX;W>
%RPg["G6V3OGM/%D9;msr(,HFB*5E)/U(><5fBi!DP=2ap,N=:I.sns5XW4cu(oU8U.VgcpYpfRBMGn8[34OGKP95FdoYc=:MbY2q
%!dFe_$LOc#QsNDDPX1$<_:G`BJA/?k(NfUrrPM;V1=ajt2![8nL$m5fJ*&`U(g]nh:hAJ@nU9-+Y*#5grs#Qsfh%BQrMH]#X-_kf
%1q0CS8l2H[)eW?X.CBWGTe(><[4C((XrjdXVFu3Q]ZBBZ9?Y1Q,BbO0OIH$IlVVZ)HC=^aL_C%r?mANLU*_i,R$1?!C:THf`_t^D
%+u44Cn2F,Xf'Y>]/fXm=O`"5(#I.)ah(t<(d?:B;RPaQ=P1u$QZ"6)<\k^(h%Hi`%$#+Qr\qEZp2gM\4Ior%Q+UPBI@'o?lgp)\T
%"J@XZ#,MUYUgu/??*.]NchaL2e..Tn=?D5=A`nlhHKUJkYn6)]eA:Vom8+QRRN%5#1lY-m,mYP)Jg&(\:F?R(ai]6/P5obL#T]qO
%36.\3<*F`%&4q4Z,!B#6:W&5t3V:!_72dH>L-\]J\?.q8a9.cEcg:;k=[lSJ;Ef^[.#HEQ[m)B26RT:jJ3I0O)4r3!PfO>2+#1>3
%(@UnCkm@>O\e2?&X/-sO"8Z[K>'-.35nLSl?9>(s.5ND8aC%UM'U]X];qak4_?N1V,7WN0#;m^=R8$j53N`ELkMIJokON]r3*m28
%]u&"E$I<l5(QkM)Z.163a9g/a_(^$MUu\ZjZtM1;<e>:P4!k?d;@<K'PopB-l`hh),RZoeFSQ+bBJ>a&[9PNo_/OX3Fh4Ws8s"'P
%Jafs6ZSP,d8f9GnA,)g(U^U<s;SDETo.B9%-]3Gq1Io(A1T9(1S=^qSbo#KsKR/c(P<jP!X&[c'OXS)ah?@P2oe,49VJr16Z340D
%.7te6Jm#"6i^6^;ndn'\g$I$.8BQH*k3DPFPp_D&!I8*mc7QZ-L;EM]9MN'IZ<j=bicXqd(^_>+ZNg%TD=Z#)Ui79gU2!+I&L3hr
%&N#M7g&'FqGJOaH^>G>W)hM)m/<rg-%+$;h&tg8fDpjR,FInZ<GZ'fsV"a_6C$Dc_Q)\l$MIlMc[i\?$Il)HNdH(6rPP6.nhL@A-
%s"?0R:K0s!fJdsF[8W]a%Gs2Ji9S,*`4inbH'Q"0.X^Y@GrJX`X?A&->Ten63m,`jr\Pnoo'2\p?j/maYfAU9V;'G=j(+Ojh(E/.
%#s(hPA;BOZ)h$TYBgML<Q2:b[Wm?lB(Ys5(&q-hXp/e,Fp3%hO3V/BM$J@L34b5<Er,dA>3ZOg^fC,H:6Mgj`rZ@eY,nHQN5M0T8
%neq@1'Vq!#j-[,O_q(WoFM&Nf"qM^l2Ee[H?c*IlT'"MEr;J92RQ;ZM@taC7$u9!k="hr3Y*o"u"O/G7n`L5m#L-$eCn>u@*&KtM
%mSY?b.g6E(1?f6sDDP0j_/8Yp!&&`Y)iU(?Wqc9V4sYN]XPO?-H"1"WbI.ihj^lFD$MeF>UcIAV=oaC;9\lfZJ6Fip9?6c/.f=DW
%*TF'?!XldBgfj%<FlK[1n<:gR"I6+T=t1(<Y?+;W!UFm$`nsSPU4;=R7-Q4L1,k.I"#;a@;fa3=7T/Qj(L0$<ChRDTJ<-rg>W_\V
%XP;A]?u1.kSK'>&E`'d`3k:UY;be$&W0s5F%2\Y%&:?%l91L38K'qkQ`'30'e4RZA0+Kc0K.q!#c?s3;ER7D@Yk&\O#OU6F-O`?(
%-V^r,+="c>#Am6rj.?SV0F6?h[)IrUYR(\/]/ZaZK5eoG`g741-(&Ln`^)R+c'J`<*!@G>di0rh"gE5MT#5OZm%6__4V!(cVJ+5-
%6$2c5#OaVX1.1'Z*=%.J+nR/"+=IL)YM:daK;?Og*40IeXtXPST^sZST;!I"WSX51o\SBBYp0[/BfN3a%e.Q?5r.\bK@#t>b##-o
%9a1V&,?9&ohj5&TZ;bG_E'c+1@l8a_?YD`LS'1d(o_'n-a4m2S#cG)c$jF`*&;3YP3?hfgcj2+fcouu1HOSYo_b[YEe'e.">%CVC
%6*lcU:@[X*9YCkr0?5),&XH>EV[PjB75`8Nekuq0'\>7\g:cVIjqu#c/olQoSDm'%5_c`QpCsFq%M$p=>]Z^-ofMkU\ljoQ/5Ju`
%N;%DN&3<G\\#lK+O"/]H9!uo!%Cf@f0@^_02&A&cb#H87f/cV`@5H`p9NsL,@*Z0[;bc^Sq`NDbcaECDi.)Nc+9P_:5p(+iM@:IL
%"mj;r6rIEV$u@3nJ4Unu;NRCW\0hFnaoRN#d%qE^.KQG>!OIq#Y7t(i"ZoB8f2=lD*2G1fc-&BM&l?Caj=gaD9Rn8S[I:>$/E8$a
%71QpafORh3Ffr!hTM;mK7U00IQY<EGXh\/fLkER,Qdd-07fmf:<)\IJX&%PZf!,:l?R@Q"3uW4oG;RRoc8g#s&N!X_fa/-C6LpCJ
%#ig<4f.grn6B]-$`'Nu.[+`hH,n;EFLK3Q:KL*eSX_m&?kiiBh8K<E?[)aW4T[i\3iuf`R$5Q2gBQUdkn8gmW^[W_n]n.ZR^!%V?
%J!MM(IGcNp%@&%AK<EtjOqS)n''g,7c!&\c;AElRMQD[.2c:b96"RJQ;16YM&3n<$3c)4]3L4rgAUk=k;Z3nSe8;;lM&#'<jup/_
%Z>O/VA'f5:gTHfSP7l:810Lu?14,b4hZP[\8<nWhLk2R2=e7pM)/@NupXH!=?cM^kAKR<1+\Wal-CbZH(5k2Z`g#k#b!7^j7="35
%ad@Efb`'0rRi\+[UujLg'4Sp0e`30KE_;0K,O(`GL;'"Ac7)bk1p9jCfbkguPbN@o)EaiNSl.(7l(2N%e2("h3DK743daD05,DAR
%P.mQEP2+'B!jGBd?h#PFbl220a,k2fQ*-WbIn'9!AKm5B,=i[kUb!-6Ad^'BL7A94b"<jh8s-Bf8/Z""/2o?@*>oNPPat??UH55p
%IHO&JJi],1VRg)89,f;i93WBi*%hi'P]\X]ga&S37Gi/mW$tZqN'1t!kVZujRkgU1g"</1EAQ1W)4/L1gL\Md1ZQ3:[7a42YGNjU
%'4.p41mHY_P/skZ,e^pHZ;<,NQP0(raa,b/=1;Yq<i5Rc.*5ku`RprNq^3P"pFY>Pa>K<Z+P3J#JpbHt$?E9?.-Tm.#Ckp+pJI$)
%!CT3`:_3bTBL3Eo5RpYQK1c>5*dA8#3=&+hjM2m%."IRN5n9P#"Z`MS&EH,5;36Ff6pV=('*NSO:_`!+78]/!.0W!Yn.Z$dkYr8W
%5Zg=6LN>mM%N#rb3J^ffaJ2)/<$9U^+ti$^9c+->N[72!+@E](1ok/J*V"%Us1bbmH;octRDX\!NSK\'>$\NLd\CB0_Y)iW2FjH3
%SgV^aq_XS^H=!7UdRlHs!UWc>Fe;?Zcan."ekRY+/H<C,@Bfrgb[K>$j$;j<=5L7XqMAfLAJMC.P4>L=.&9%Ubo/E"bWgPo_teF#
%[.UNg./!Z0C"HCWNe]k&MDQN)"H8)H!GXlQj$m!LolB(,_H]m2^(RQ`Pu-U,%f&Up`qZm,996DsM-1u2hU?5`<NIGNm\qH@g)&9h
%JA<tt\gfeX&R9#T"@@Jt-XALT,0;TnN)C!i_5K.PVn"SSS`g3sWOH7tiGmU]*p^U@LlnR938#/PTe!51'1Tcl06>aF,ZY5,pPng5
%D=CUPFikpo-cGN1NAqG<Y<1`GPomY3VpAoHJp?/gNF8$,0]oOGr2:GLTd'[t^"E=[r`NMQ:>ekXEMq-9Hg6U-Mc4r%2a1mZR+7/4
%H\0qZ4q&D'.1QE3+EBMD\C/ch4UULM2@Dg/XnMFg6!5Ap8lsbUfVimlW1?t&l@CGs74Md?9TLd8&E^"$(O,UJI.j54<:12<aJmeE
%GKDA'Ej5Kjj>imPb_+4FJ5Mr*N"Ap;ZK$UsQplY]gk`k%VD=-2-f0kh#0jc72q_>aT<k!2DEdT^XS.gJR1,8.O(aRFUb`j[E5,S@
%jMXZP\Rc"7i4Wo$dS%*!iKiWVXA*ja`321KKO%M2F<NqUIX42Se*Q@)\Lp/BZc=/'CXoUt6l#*L_5CN0DX[:jR@Y1?,Bpa:a0%7=
%MYG"'`soG=]:H?)'k;)tpLjca<h8(6q0`?^B9bF6gPm%F,K`*'CmN1.U64GU)(m@9UajNEpbE:2fB$'R]lTR5n["\0U.t8>r;gsP
%2'\GCZ=&3.+LLQQmYT<sR%(/_]-J.XS'd19aY8>IU)*'e9<2]55ts)\k3'8AnjV([Eeutge7Euj4p8"jbmt>PY=uZI0:U.N_8s0i
%3._q+NSs[!ooLu[P&^B/[Sb?_V!DHlj3P-Q0YAELJ-2a6lbC=[E%[I8[If.8e^%jT%%Lo6E9`%:Q;"W&_$*'TUSOXlq<k\Z//fN0
%pAu1Bi5k=\,+eqZ^S-qhn<5PMJ\Z!;a+PNN)93$<Q)HnO_k_VlAslRWi/goF7A=rJ\ilfPRRN&(Tp`I"SuE%<IMkWpl]$PfibJ*I
%Ouu]f-(M,]F`mt[!(YhNQlkl'mF/`aU^GgqORXp=FKmZ@B1Z"mN^Y6oertdYDDUD0D*\)M2']ZC07$?4<\aM0XH(`C_O=]fX%]Si
%.aX<?*D7H4!HJ_rb1gIsUcMa\i96alLFkaE]!C\'VoCcAQ[O.jasXB?'V<+_?7.h:pETSJ1<@Wa!UC@]b`X:!/>@c77[a55[BFAH
%%#m1]'$b$>%[,br0DhS'Mg)BmFK)">LI6E]`sQf/SS:Z,]jO@+m3QB5M.(!ij[u%;Un+*#Vu$ac9FG^1]d=6a;sg%)TMZA@G1$St
%6PK/n$Tgfhc9idi(oc"1[9.uF0_F!8g(LF_9piepb/:V+-Fjop'i`0Df/uSkld=<&!,2Q\B5Am6\^uEmK6;E+&=.)<cZTe:1X0ns
%B#cpEeWY\AT<SlE]TOR0=FFs;9bur0orYb,A'b:`IsT'OI;AE/Au,cDeZHA?pRC:\]^rcT*1Yo-!j=mLZiNYN:0.A.H\1"p5Nnp&
%RX'@l`0:Qe&Da^KDj'g3]AsCV:#!+W3k%@*W4g"-]tAR>NS!XK:@Pt\AT<IO\>N2-Gh6eM2-\^"MMpDg,H+\3'4/L+0aS+PqCU#\
%#[2>"$UGDu:&[Lu8<K,/N8%L&\=B(n10Gq/>5'9<i[lsiPs6[O&-M[l"G`S:J9Z>e8CY9\Eq=aE6ou'*+rk@@*`mNKWVf]e-H[^)
%H^q4\BrN(;YmnOWR\jdF5@*E[>>8u31$]1IP,g!:^4\"9kLl!.pQ^'rR;\H0$b8!W)P+uiDC-d&X4><E]`Hr-AZ8BY\%SXslI;,l
%aW2!c80XJDk!Z\Zo_fK6%S1N1%UQI(N-Cjqb%<j'!_;Oo&u;o'Bm)O$4qdBWEk>Z[(e8EL:(;0qf[^hX_$7o\bDd"O_8AQ'BloJk
%EUZSa(7oS$%X,*8",gnJ%^tMGD(agU*:/rUj\#>O=r7LrE2.t#^c4B<DNr4mLN.E$dAr!p!95InX4B0;?lV<?@8^PlJ8kSB[V/$<
%&*)kYjYMF,FPm5#L._O,(g*Q"E97/?0fTeS!9:kpYpoZb!98Ti_5_NB^c5@d=F*1S,R#dAJQ*8$QP=CNTVeAa.?c_3^uWY]"Ae(q
%:HSk1?&JBnJl2TD*)n?hH:l#O##Jb)9=uI0es]:/!C8E+34sLM#<6O4qKNp9]F@/r*T;BrE\+/t#Jg=c!8ZRcF9D.AE-8MIU':n:
%R::lUF;nWd!+'#sVIk>sKF".:P6F9.F32p$eP?@3&ZG1t'ncbYc)>L?i/TM@R4]ClpfY6\=Sm1#XQ=LZENV9g@0IOF*u?)=VZ&/%
%-T2\AW3u)9fA88^m^MhW54gh-Ne>RC"'r*paqR5_#9hileuP6iRMJW9qg3W8odPaDLu.&p:/.hPTc-urf$I@H('8_OZc9;DN+Hj0
%\l#7i@1D\>.fL(1Z=CrMN:hQjLaOM5P7e,Ca:+op0JeTK3U+Z[oa[]K7&$;>&^/#-]Drd!q+.>+e75e6^<Uk1h_i6r`?DXpUi>'+
%"Sh@O^Ga!PKIg8E3DPpGbo'Pgl%iKQ!YR?@$Mm/Br!3WAWY?IUjCA"`"!Jmu`_C<5l%-Yj]St@H[J#crj8VgFHg5sRp5J)#UR(Q+
%WRlgP@-jP([jj90jE1?)e/-<0O#I0;:$LDSjs?Q8]f3o6C`=mg@XXB\$=D6Wjngg`Q1D<R;P@Xc9_F<;QMlukfDd2^%duJ&XX&F8
%<?Yn#jdoLV[Rer?i9B`BZq+BiT($fU>SOkkX1+EU+FTA4E5!TYY(*LBO$p5q+GNPoFr(]W<aJAk^On&=:TMkMI",>eK+_m@n1q%R
%Ss6Db4q#0F]$V:@?ne.ZK4Zf:+D>H">+$k\RB?AkM98joM#aK>F`"+[''(W@iZ+9krQ\RMV8Vom5=`WQcQ@lPs7TS\0/;?9Q8oF=
%Y33b,6(VKu"Z`_\']`@\6'17?76urj'EpKl;`)5G3sdH/3LmdE,*V0/_9acjh0An)=,-/@1e`Z3=8P!BF?u>_'VIZ-\t]?r#IV%'
%02=F7K2#ib#>Fh'rLP`(%>8-8)"FdDOu_/N+O$PG;h?SG\<*n\_/XeN#9KLF%*hB;WcFA+3Y/f4m^&tNWVcq-WK'5B-/Rs';t,7m
%'YPcj9m(ukhUSKT/,@muE)/[f+.0H-/k;#upJgZ[W"jeM*InW!i,aANmnra3>\&&i%Yh''@J(<bP>&:_:C$EB:*7M=T!!9X"<L@j
%';9[s6]CQ>L>_#WW.c7u*[MMJ'TWk6hR<_%PU#4g<G[:/]FP?G6N16p-m<\12*O/ganV,H^tT"dj<6d`k88Keb=L3sC=IRPbNK7:
%T(:l*9>GiC.p'N3)(>6\\2p5R12,ji7n@srX&D90n]O?dHL^SL+MIR/)j"D(Z5Sg2L9aYM>,Kc4?@l&482"jB#rjSe'*pQN_6\F4
%MkB&2kG<r]N2k&(S<oAN>U@8P3A8b<=HuoT^j-5MYNNP$n(VniK#-b50@5D4O)@Z-eT"pn)\4n]IT[+>07K`.3%t9c"e6AnlN5@i
%?fqL9Mgq,qqo(4C!WC!`Q%1U&;f#.eEBO3=0*D=S`R"()$P(CB!1j@Yo$+JZ*V76_0`c\&Mj^`0#=O7$.1?HG#/;nuba78ZHfg6Y
%Pl^P(ph68r&d:;`9/'(&*MohjVR[;C?i4g3>?ss1b"c*Zdp1>C^0a]2T?A=AKP7O"aS:Cm4EfCg-MV>!.%Ln1`L!c.N_=&'&DpF`
%<=mkOs!n!]\t54iGpqRFCj7r2%Nk[/IK?A'nr[!*7#FdH?PMpp:p&4MeL,GT/+4Gr=Q),t^O,(77e[Jt+Uui1Ek`%n6d`l)T_MtC
%!=c6o@_tdKNBXpS&/8Hp]0&Pic3M<)]D]V:0F0?*eh@C/%M$7BXq?(KEK/oFibR2AK=HU3X7-H[1V57Or*=OV^\<RViVtOE`bUbc
%Sljr/:a5eUkJ-<ZhgPFsmlpYFX@L&#inKM9s3K;Hr8tosB`I\IQ]JoXqMu`u^&>cc^\d0Js#C$dq!\[hgX!Y6m].u_?[_b%YJ0uL
%rqPqHq[%ktMXo`P+8W:?TXORk5CW<ijhoDnro*VOpCi%bs0SEs5!Lq&E'H5ZE'H5YE'H40YFcFH@P-F8%IAtN#(OM8q!(cOI?rFX
%m#8AtS_]u:'#7^3U&*0U>gR7&KB\3A@gOf#K3l1B2F*r-_L7.TZU(d"$n$W-bqVN2E>N[^Y?bs6Xef*Y07P\qo\.9-jNBk>,J9BQ
%8o1l;Sai;6klg4f;<9DGN@K.W=%8Ii=>6cQ`SsbV0,BKrJ$F5tGm8ULWnbR")--ZF_5Qo@Mapd_XnSU5?S!6uD^QLt5bpm"-g)>i
%Inu*0rbu*&p;?jYrkn\6s,"kVp\M!60I,q6^m))'IQ:j2i?.BXG0R.u&UH?6^;l\E1tc2eTWsV4r$EE`\\%&Mo?/HDT0MupID9Ul
%81`A`jdui1Wu7^]BSt#<3?W1^K'`Wi=/\s5f5CbDMTP#]'?GXddC(8-'=hR41GX/B)EC@@E(rjIT/;A?BB?7_<st([nLBj>e?8V:
%0m/c[ZkrLo3VoBHdX&RE@DNn8rW65:*?Cm?Iqg*[I>SoMc^Q:>1%0D9:Y\WMfgtDWJqZi7":FJNLgk^\54RB'$N]S*V_p3tH.l'L
%_qodp:\+^=oBEm[r`bkZpH8C%DQ@\?rVIa*k/j9SIeW5H9IgVQG9;:G[h$2r#C10aG\q(bD%<O^k-(EUUh#lXrPL9Ps7X))p!rYX
%?[_P=Qf%cI#0fsD:r^Uq5(<>&n?^Gj[=@u%b?r!Zp:CjMr8qA$ro7?Mr;,G<J+n#CLc;)Xq9=-@IIknHb%lDgnos!hV1gN")e$MW
%l;.G#r9hnR4QHJ?*/!uiN6n3qns>t55QC&mDnc&890>e(r-S>H'"TtrJ,RR]#G;$2rkgsJrPr8pq&^]nrO]fpJ+1p:qXRE(J+r>s
%?TgT%qq4dEo[bbrho?77If2,Vp$j]sY<MmKgQ-h9PN:bZ^])D8s+WbS5<Ah\:Oi3Os7jQG5Pb<ZHo1!~>
%AI9_PrivateDataEnd
