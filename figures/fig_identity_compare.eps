%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig_identity_compare.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Harry Zhao
%%CreationDate: 5/15/2019
%%BoundingBox: 0 0 355 279
%%HiResBoundingBox: 0 0 354.6221 278.8912
%%CropBox: 0 0 354.6221 278.8912
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.2 x274 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 9317 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFA8FFA8A8A8FD7AFF7DA87D7D7DA8FFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FF7DA87DA87DFFA8FD17FF
%A8FD45FFA8FD17FFA8FD06FFA8FDBAFF7DA8FD3CFFA8FD3FFF7D52A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0CFF
%A8FD1DFFA8FD15FFA8A87D7DA8FD48FFA8FD1AFFA87D7DA8FD13FF7D7D52
%7D7DA8FD0CFFA8A87DA8FFA87DA87DA8FFFF7DFD21FFA8FFA8FD0AFFA8FD
%1AFFA87D7D7DA8FD12FFFD067DA8FD0CFF7D7DFF7DA87DA87D7D52A8FF7D
%FD2FFFFD0D7DA87DA87DA87DA87DA8FD047D5252527D527DA1A87DA87DA8
%7DA87DA87DA87DA87D7D52FD067DFD0DA852FFFFA852A8FFFFA8A852A8A8
%FD21FFA8FD0EFFA8FFFD04A87D7D52A8A8FFA8FFA8A8A8FFA8A8A8FFA8FF
%7D7D527D527D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D527D527D7D7D
%A8FD0CFF76A8FF527D7DFFFFA87DFF527DFD24FFA8FD13FFA852A8FD0EFF
%7D7D527D7DA8FD10FFA87D527D527D7DFD0DFFA87D7D7DA87D52A87D7DFF
%A87DFD21FFA8FD18FF52A8FD0EFF7D7D767D7DFD11FFA87D7D7D527DA8FD
%3DFFA8FD16FF52A8FD0DFFA87D7D527DA8FD11FFFD047D52A8FD3AFFA8FD
%05FFA8A8A87DA87DFFA8FD0CFFA852FD0EFFA87D7D7DA8FD12FFFD047DA8
%FD0DFF7DFD0CFF7D7DFD04FFA87D7DA8FD1CFF7DA8A87D7DA8A9FFA8FD0C
%FF7D52FD0DFFA87D527D7DFD13FF7D7D7DA8FD0CFF52A87DA8A8FFFFA8A8
%CAA8FFA8A87D7DA8FFA8FFA87D7DA8FD16FFA8FFA8FD04FFA8A87DA87DFD
%0FFFA852A8FD0DFF7D7D7DA8FD13FFA87D7DA8FFFFFFA8FFA8FFA8FFA8FF
%A87D7DA8527D52A87D7D527D7DA8FD067D52A87DA8A8FD24FFA8FD0DFF7D
%52FD0DFFA852527DFD13FFA87D7DA8A8FFA8FFFD06A8FFFFA8FF5252A87D
%52A8FD047D52FF7DA8A8527D527DA87DA8FD16FFA8FFA9FD1AFF52A8FD0C
%FFA87D7D7DA8FD13FF7D7DA8FD0CFF7D7DA852A8FD047DFFA8A87DA8FF52
%A8FD047D527D7DFD19FFA8FD19FFA852FD0DFF7D5252A8FD13FFA852FD1F
%FFA8FFA8FFA8FD17FFA8FD1DFF7D7DFD0CFFA87D7D7DFD14FFA8A8FD3DFF
%A8FD1AFF7D52A8FD0BFFA87D527DFD14FFA8A8FD24FFA8FD0DFFA8FD07FF
%A8FD0CFFA8FD11FF527DFD0CFF7D7D7DFD15FFA8FD0BFFA87D7D7DA8FD0E
%FFA8A8FD04FFA852FFA87DA8A87DFD05FF7D7DFD15FFA8FD10FF7D52A8FD
%0AFFA87D527DA8FD19FFA8FFFFFFA8FFFFFFA8FD047DA87DA87DA87D7DA8
%A87DA87DA8527DA87DA8A85252FFFF52A87DA87D7D52A87DA87DFF52A87D
%A87DA8A8FFA8FD0AFFA8FD11FFA8527DFD0BFF7D7D7DA8FD14FFFD04A87D
%A8A8A87DA8A8A8FFFF7DFFA852A87DA8FD047D52A8FFFD067D527D7DA852
%FFFF7D52FFFFFD047DA8A87D7DFF527D7DA8FD0FFFA8FD11FF7D52A8FD0A
%FFA8527D7DFD19FFA8FFFFFFA8FD04FF52A8A852FF527D527D7DA8277DFF
%7D527D7D7D52A87D76A852FFFF527D52A852A8FF52A8A8527D7D7DA8527D
%FFA8FD20FF52A8FD0AFFA87D52A8FD22FF7DA8A87DFFA87DA87DA8A8A87D
%A8A8A87DA8A8A87DFFA8A87DFFFF7DA8FF7D7DA8FF7DFFA8A8A87DA8FFA8
%FD05FFA8FFFFA8A87DA87DA8FD15FF7D52FD0BFF7D7D52FD13FFA8FD2FFF
%7DA8FD0AFFA8FD05FFA87DA87DA87DFFA8FD13FFA8527DFD0AFF7D527DA8
%FD13FFA8FFA8FFA8A8A8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFA8A87D7D7DA8FFFFA8FD13FF5276A8FD09FF7D7D52A8
%FD15FF7D527D527D527DA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FD05FFA8FD06FF
%A8FFFFFFA8FD14FFA852A8FD09FFA8527D7DFD15FFA87D7D7D527D7DFD40
%FFA8FD13FFA85252FD09FFA87D527DA8FD15FF7D7D52527D7DA8FD33FFA8
%FD0AFFA8FD15FF7D52A8FD09FF7D7D7DFD16FFA87D7D527D7DA8FD3FFFA8
%FD14FFA8527DFD08FFA87D527DA8FD15FF7D7D7D767D7D7DFD33FFA8FD21
%FF7D52FD09FF7D7D52A8FD16FF7D7D527D7D7DA8FD33FFA8FD20FF7D527D
%FD08FFA8527D7DFD15FFA87D7D7D527D52A8FD55FF527DA8FD07FFA87D52
%7DA8FD15FFFD067DA8FD33FFA8FD21FFA852A8FD08FF7D7D7DA8FD15FFA8
%7D7D527D7D7DFD3DFFA8FD17FFA87D52FD08FF7D527DA8FD15FFA87D7D7D
%527D7DFD3EFFA8FD17FF52527DFD07FF7D7D527DFD16FF7D7D52527D7DA8
%FD31FFA8FD0AFFA8FD18FFA8527DA8FD06FFA87D7D7DFD16FFA87D7D527D
%7DA8FD37FF7DA87DA8FFFFA8FD17FFA87D52A8FD06FFA87D527DA8FD15FF
%7D7D7D52527D7DFD31FFA8FD05FF7D7DA87EFFA8FD19FFA8527DFD07FF7D
%7D52A8FD15FFA87D7D527D7D7DFD32FFA8FD04FF7DA87DA8FD1CFF52527D
%FD06FFA852527DFD15FFA87D7D7D527D52A8FD56FFA8527DFD06FFA87D7D
%7DFD16FFFD067DA8FD31FFA8FD24FFA87D52A8FD06FF7D5252FD16FFA852
%7D527D7DA8FD3BFFA8FD1BFF7D527DFD06FFA87D7DA8FD15FFA87D7D7D52
%7D7DFD3CFFA8FD1AFFA85252A8FD05FF7D7D527DA8FD15FF7D7D52527D7D
%A8FD2FFFA8FD0AFFA8FD1CFFA8527DFD06FF7D7D7DFD16FFA87D7D527D7D
%A8FD3BFFA8FD1BFFA87D52A8FD04FFA87D527D7DFD15FFA87D7D7D527D7D
%FD2FFFA8FD28FF7D767DFD05FF7D7D7DA8FD16FF7D7D527D7D7DA8FD2FFF
%A8FD27FFA852527DFD04FFA8527D7DFD15FFA87D7D7D527D52A8FD58FFA8
%527DA8FFFFFFA87D527DA8FD15FFA8FD067DFD2FFFA8FD28FFA87D52A8FD
%04FF7D7D527DFD16FF7D7D527D7D7DA8FD33FFFD04A8FFA8FD1FFF7D7D7D
%A8FFFFFFA8527D7DFD16FFA87D7D527D7DA8FD33FF537D7DA8FFFFA8FD1E
%FFA852527DFFFFFFA87D527D7DFD15FF7D7D7D52527D7DFD2DFFA8FD05FF
%7D7DA87DFFA8FD20FFA8527DA8FFFFFFFD047DFD16FF7D7D527D7D7DFD33
%FFA8FFA8FD23FFA87D527DA8FFFFA8527D7DA8FD15FF7D7D7D527D7DA8FD
%59FF7D7D52A8FFFFA87D527D7DFD15FFFD077DFD2DFFA8FD2BFFA852527D
%FFFFFF7D7D527DA8FD14FFA8527D527D7D7DA8FD59FFA8527D7DFFFFA852
%7D7DA8FD15FFA87D7D52A87DA8FD2CFFA8FD2CFFA87D527DA8FFA87D527D
%7DFD15FF7D7D7D52527D7DFD36FFA8FD23FFA87D527DFFFF7D7D527DA8FD
%15FF7D7D527D7D7DA8FD36FFA8FD23FF7D5252A8FFA87D7D527DA8FD14FF
%7D527D527D527DFD2AFFA8FD0AFFA8FD24FFA8527D7DFFFF7D527D7DA8FD
%14FFA87D7D7D76A87DFD36FFA8FD24FFA8527D7DFF7D7D527D7DFD15FF7D
%7D52527D7D7DFD29FFA8FD30FFA87D527D7DFF7D7D527DA8FD14FFA87D7D
%527D7D7DFD2AFFA8FD30FF7D7D52FD057D527DFD14FFA87D7D7D527D52A8
%FD2FFFA8A87DFD29FF7D7D52A8A87D527D7DA8FD14FF7D7D7D527D7D7DFD
%29FFA8FD04FF527DA8A8A8FFA8FD26FFA87D52527D7D7D527D7DFD14FFA8
%527D52FD047DFD27FFA8FD05FFA87DA87DFFA8FD28FFA87D52FD047D527D
%A8FD14FF7D7D7D527D7D7DFD2FFFA8FFFFFFA8FD27FFA87D5252527D7D7D
%527DA8FD13FF7D7D7D52527D52A8FD26FFA8FD0AFFA8FD29FFA87D527D7D
%7D527D7DA8FD14FF7D7D7D527D7D7DFD32FFA8FD29FFA87D527D527D527D
%7DFD14FFA8527D52FD047DFD25FFA8FD36FFA87D527D527D527D7DFD14FF
%7D7D7D527D7D7DA8FD25FFA8FD36FF7D7D5252527D527DA8FD13FFFD047D
%527D52A8FD5DFF7D7D5252527D7D7DFD14FFFD057DA87DA8FD24FFA8FD37
%FFA87D7D2752527D7DA8FD13FFA8527D7D527D7D7DFD2EFFA8FD2EFFA87D
%7D2752527D7DA8FD13FF7D7D7D52FD047DFD2EFFA8FD2EFFA85252275227
%7D7DFD13FFA87D527D52FD047DFD21FFA8FD0AFFA8FD30FFA87D52275252
%7D7DFD13FFA87D7D7D527D7D7DA8FD26FFFD04A8FD33FFA852272752527D
%7DFD13FFFD047D527D7D7DA8FD26FF7DA87DFFA8FD32FFA87D272752527D
%7DFD13FFFD047D527D7D7DA8FD1FFFA8FD04FFFD047DFFFFA8FD31FFA87D
%52272752527D7DFD13FF7D7D7D76527D7D7DA8FD1DFFA8FD06FFA8FFA8FD
%36FFA87D522752527D7DFD13FFFD047D527D7DA8FD1EFFA8FD3EFFA8A852
%522752527D7DFD13FFFD047D527D7D7DA8FD26FFA8FD36FFA87D52275252
%7D7DFD13FFFD047D527D7D7DA8FD26FFA8FD36FFA87D52272727527DFD13
%FFFD047D52527D7D7DA8FD18FFA8FD0AFFA8FD39FF7D52275227527DFD13
%FFA8A87D7D52FD047DFD24FFA8FD39FF7D5227272752527DFD12FFA8A87D
%7D5252527D7DA8FD16FFA8FD46FFA87D27272752277DA8FD13FFA87D7D7D
%527D52A8A8FD15FFA8FD47FFA852FD0427527DFD13FFA8A87D7D5252527D
%7DFD5EFF7D7D2727275252A8FD14FFA8A87D7D5252527DA8FD11FFA8FD4A
%FFA8A852522727275252A8FD14FFA8A87D7D5252527D7DA8A8FD16FFA8FD
%43FFA8FF7D7D272727527DA8A8FFA8FFA8FFA8FFA8FD0DFFA87D527D527D
%527D7DA8A8FFA8FFA8FFFFFFA8FD06FF7DA8FFA8A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA87D5252275227FD08527D527D5276527D527D527D527D527DFD0452
%2727275227522752525227A8FD05FFA8A8A8FFA8FD17FFA8FD37FFA8FD07
%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FD0BFFA8FD08FF7DA8FD81FF
%A8FD15FFA8FFA8FD17FFA8FD15FFA8FFA8FD2DFFA8FFA8FD06FFA87DA8FD
%14FFA87D7D7DFD13FFA87D7D7DA8FD13FF7DA87DA8FD13FFA8527E7DA8FD
%12FF7DA8FD047DFD06FFA87DA8FD14FFA8A87DA8FD13FFA852A87DA8FD13
%FF7D7DA8A8FD13FFA87D7DA8A8FD13FF7DA87DA87DFD06FFA8A8A8FD14FF
%FD04A8FD14FFFD04A8FD13FFA8A87EA8FD14FFA8A87DFD13FFA8FFFD04A8
%FDFCFFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-15T01:00:33-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7rqOm+e1m46fMZ7YarFc&#xA;u09z6Uz2ym3JjXhG6iHabmnwnw5VIZVEeWbfzDYafqUt7HcJcLEhiF7cfWg9xHG3qyx0lk4RO9KJ&#xA;VafyjFWSKmocRymiLdyImA+71DirfC+/37F/yLb/AKqYq7hff79i/wCRbf8AVTFXcL7/AH7F/wAi&#xA;2/6qYq7hff79i/5Ft/1UxVbIuohRwkiJqtQY26Eip/vOwxVdwvv9+xf8i2/6qYq7hff79i/5Ft/1&#xA;UxV3C+/37F/yLb/qpiruF9/v2L/kW3/VTFXcL7/fsX/Itv8Aqpiq1l1EMnGSIgn4z6bbCh3/ALzx&#xA;piq7hff79i/5Ft/1UxV3C+/37F/yLb/qpiruF9/v2L/kW3/VTFXcL7/fsX/Itv8AqpiruF9/v2L/&#xA;AJFt/wBVMVWldR9RQJIuBB5N6bVBqKD+8+eKruF9/v2L/kW3/VTFXcL7/fsX/Itv+qmKu4X3+/Yv&#xA;+Rbf9VMVdwvv9+xf8i2/6qYq7hff79i/5Ft/1UxVaF1H1GBki4ADi3ptUmpqP7z5Yqu4X3+/Yv8A&#xA;kW3/AFUxV3C+/wB+xf8AItv+qmKu4X3+/Yv+Rbf9VMVdwvv9+xf8i2/6qYq4pfU2mir2/dN/1UxV&#xA;bZSXTGdLkozxScFeNSgZSitXiWem7EdcVROKqF//ALw3H/GJ/wDiJxVXxV2KuxV2KuxV2KqV3d21&#xA;pbvc3MixQRiryMaADFUq0fzfomr3slnZSM0qLzBZSgZQaHjXfv4YqnWKuxV2KuxVKNf806TocYN2&#xA;5adxWO3jFXYdK9gB7nFXnx8zal5m8wQWMs0ltpl1IIjbQtx+A/zMB8RPvtir0qx0trO1S2jvLh44&#xA;xRDIY3YDsORSu2Kq/wBXm/5apfui/wCaMVd9Xm/5apfui/5oxVKbzzP5Ysb36he+ZLW1vqgfVZrm&#xA;0jlq3T4GAbf5Yqv1HzB5f0yeK31HzBb2VxMAYYbie1idwdhxVwpPXtiqtZ6npd6Lo2esx3IsWMd7&#xA;6MtvJ6LrXksvFTwIoahsVX6be2GqWou9M1Zb61JKi4tngmjLL1HNFZajFUV9Xm/5apfui/5oxV31&#xA;eb/lql+6L/mjFXfV5v8Alql+6L/mjFXfV5v+WqX7ov8AmjFXfV5v+WqX7ov+aMVd9Xm/5apfui/5&#xA;oxV31eb/AJapfui/5oxVaRNFNCDM8iyOVZWCUpwZv2VX+XFV1v8A311/xlH/ACaTFVfFVC//AN4b&#xA;j/jE/wDxE4qx+80Tz9LcXT2vmi3t4JZC1rE2mLIYkLVCFjOvOi7VoMVQ1zof5nKkrWvmiykkIHpR&#xA;TaZwUHavxrOx/wCFOKpENe8/6fq6ad5m1O30pbuP0rDUI7MXFlJcEClZjJEyMd/gdB7NirKhpHnf&#xA;lGT5jtyqxlZB+jh8T0NHB9fYe2Kuj0fzwvoep5jt34cvrFNOC+pX7NP354cfpriq1NG89BYw3mW3&#xA;YrJykP6NA5R7fAP3+x/ysVYF+ZenfmLB6T3GrQX2nPJ+6AtzbohNfhcK8tWA+yT+GKsW8uahqltq&#xA;8N1DfiFraf05WaDoOjbF9wUavyxV7l+jvNH/AFeYf+kMf9VcVd+jvNH/AFeYf+kMf9VcVd+jvNH/&#xA;AFeYf+kMf9VcVUrrTvOZgcWmt2qzkHiZrEsvT/JnSnz3+WKvFtcfzXb6pcJq8K3d4jUmdJCkh8OK&#xA;PVKU6fvKYqmHkW9guvMmnmMkOlwqyxMOLo3gynp/nTFXsn6O1f8A6u0n/ImD/mnFXDTdYqa6vIan&#xA;YejBtt/q4qvisNUSQM+pvIorVDFEAdvEKDirzJLnUtK/Lm48tfoCd/McaPHdwzaZd31pqUzE8pfr&#xA;NqUQGdqN6kkgKdxtiqbeWWGgtrNh5k0e6mu9UupZ21G1sZ7yC6t5qelEzQLO8foofS4S0AC7EjFV&#xA;Gz0W5j1TVtd8sWNzZ6tps8MK2F1DNbRX9hHaQRG29SVQjskkMnpSozAN3KPUqsz8mtK3lqyklt5b&#xA;R5Q8htrhDFLH6kjMFdDurb74qnWKuxV2KuxV2KuxV2KqFx/fWv8AxlP/ACafFXW/99df8ZR/yaTF&#xA;Uin8136rMYtOT1IL4WLW0txxncMkbh4ljjmV2pLXjyAAFSw3oq3pPmK51fTr5prRLfjbJcQCOb1u&#xA;cVxGzpyqkQR/h+JdwPHFWRIxZQSpUn9k0qPuJGKt4qg9X0jT9X06fTtQhWe0uF4yRsPuI8COoOKs&#xA;O8l6tqOi65N5K1yYzPEpl0O9frPbD9lj3dOmKs9xV2KobU9OtdSsZrK6XlDMvFvEHsw9wdxirwHW&#xA;9Pn0jX/qlw0hcM1sUUViJp6qSH+WqrsfcDFXuvlu8N7oNhck1d4E5nxZRxb/AIYYqmWKuxV2KsW8&#xA;7+UF1q3F1a0XUYFITsJV68CfH+U4q8y8r2CjzppU5DRXMM4jk7Fl3BRx3odx4H6cVe7Yq7FWmZVU&#xA;sxoqipJ7AYqxew/MPR7m0i1G6gn0vQ7lPUtNav2tobSVSQFo3rM8fOtVEqJXFU1XzV5Ya0ubxdYs&#xA;jZ2T+leXIuYjHDJWnCV+XFGr2bFVkHnDylPNHBBrdhLNNG08MSXULM8Sgs0iqGqUARiWG2xxVLPM&#xA;Xn/S9JvbG1gmsrx5rqC21GP64kc1pFcgMk7RBZKpxNfiK7U3xVNG83+U1tLe8bWrAWd25itLk3UP&#xA;pyyA0KRvy4uwPYYqkQ8/aiutfo6bSoljXWv0LJOl0zEc7RbyGYIYFryQ0deQ4noW7KszxV2KuxV2&#xA;KuxVQuTSW2NK/vDt/wA8nxVbZsWe5YqUJlHwtSo/dp4EjFVG80DQr11e9021uXRzKrTQxyESEKpc&#xA;FlPxURRX2Hhiq39F6Zp9heiws4LQTrJJMII0j5uVNWbgByb3OKpjirsVdirEPzK8uT6noyalpxMe&#xA;taM31uwkXZiU3eOvgy4qm3lDzJb+YvL9pqkOzSrSePukq7OpHbfFU5xV2KvJvzmsPq88epq7QpJF&#xA;yleMVatswdtu/JKLTFWV/lfei48tejWv1aZ1X/VekgP3scVZdirsVdirsVec6vo5sfzG0+5RaQX0&#xA;yyqe3PpIPv8Ai+nFWbx6LZpHFGsl0Vim+sKWu7piXHZmaQlk/wCK2qntirn0OydZVMl2BNL678by&#xA;6Uh99kIlBRN/sLRfbFVeOxijmuJ0eX1LgqXDzSugKfZ4Rs5RB/MEA5d8VeXeZPyt8waraTLYaXoW&#xA;i3j29xbzTWMk0K3huYzEzXCpbLxVOXqKh9Q8qfGKElVG33kDzZJ5kTXbWLTY2ifTboWbTzem89lB&#xA;NbvExFt9nhcExy0qCo+Df4VVWL8r79nt55ZraB7y6vm161gMnpGx1BlkltIWoharwICWVa8nYAHY&#xA;qt/8q716Py5YW3q2l9q2n6haXCPcs6xSWmmkraws4jkYNwozHgaOzde6qUeYfyl81ajBqUdvdWka&#xA;ayt3cXdus89vHFeXJj4isURe4hVYVqGKAvVyprxxVMofJ/n1tYW9nt9LSJtbt9YlCXtw7BIrEWTR&#xA;rWzQM1BzBqPD3xV6XirsVdirsVdiqhcf31r/AMZT/wAmnxV1v/fXX/GUf8mkxVXxVQv/APeG4/4x&#xA;P/xE4qr4q7FXYq7FXl2jTHyb+Y93o0hKaNrh+s2X8iSOfiUeHxn6ak9sVeo4q7FWJfmdY/WPLZnA&#xA;+K0lSSo68W+A/iwxVjP5K6hyF1ZtP9YcxqXmK8C0lu5hlPHah5HfFXqeKuxV2KuxVL9YsYrgWkzD&#xA;95a3MUkTeFXCN+DYqiDqOng0N1FX/jIv9cVd+ktO/wCWqH/kYv8AXFWxf2jnjFPHLIQeEautSadO&#xA;uKsMj89+bE1W7sb3y9axDTYLS81JoL+a5ljt7p3VjFElkDK8SxOzIDvSik1xVMrD8y/JuoSWsdne&#xA;TTPfBzaBbO8/e+nB9ZYITDQn0fiA6noKnbFVNvzU8jiETG8n9I2xvQwsb01t1bg8u0P2UbZ/5e9M&#xA;VRx89eVvrX1dbxn2Ym4jgne2BSA3LK1yqGBXEKl+BflTtiqWaj+aWgW5sfqsV1dm51IaXdRC1u45&#xA;7eQwNPV4Gh9Unio4rx+IGo2U4qmC/mD5QLzKdQCCGNpvUkimjjljVxEWt5HRUuB6jqv7otuQO4xV&#xA;BeTfN99r2oeZYKRyQ6VdJDp5a3uLGRlkgWXhcR3BeRXRm4FuArTlx3piqG8u/mDq2u6ak1po8Lah&#xA;9ZniuLVLt3it4LeVoXlmmFsCJGeNvThVCzLRthXiqi7X80/JN1PBBBdXLy3Eot4x9QvwPWMjRem5&#xA;MACNzRhRqdMVQw/MO2bzDDxuIo/LT2F9cT3FzbXFtNHPp80MUnxTlA0f7+m0f2l+0egVR0f5k+UJ&#xA;J4rcXNwLmWeO2W3exvUlWWdeUQkjaENGJFqVZwFIBodjiqZWGtafq6Q3NiZGhiupbd2lhmgPqQo6&#xA;SALMkbMFYFagUqCOxxVHW/8AfXX/ABlH/JpMVSybzl5ciqTdmQCVoGaGKaYK8YQuWMaOFRfVSrn4&#xA;RXriq+317S9WsL02MjyCGM8+cUsVQ6Eoy+qqc0YfZZaqexxVN8VdirsVdirBvzc8vzah5eXUbNf9&#xA;yGkuLiE9yvR128fwFcVTzyV5hj1/y5aX6tylKhJ/Hmo3r8xQ4qnuKpf5gs/rmh39tSpkgcJ/rBSV&#xA;/wCGGKvIPy3vmtPNyRvIpWWRo+CjiQkyVUN7+oMVe34q7FXYq7FVC8/uV/4yxf8AJ1cVQx8u+XyS&#xA;TploSdyTBH/zTirv8OeXv+rXaf8AIiL/AJpxVfBomi28qzQWFtDMm6SRwxqw7bECuKpE3lPWx5j1&#xA;vWItUtlXVrOOyit2s5GMPoeoYnZxcr6m8z8hxWu1KU3VQFr+Xeq2mj+V7W31mJdQ8rM4trs2bNFL&#xA;FJA9sVeH16h+En2vUpX9ntiqC0v8q9YsoUt5Nehnt00i80b/AHhZJCl3I0vq8hcleSvx240IB6Vq&#xA;FVTSvy08xad5e1Ly/D5jjXT9SSUs6WTpcQzTIFdopRdbIXHIqyk7kBh2VUtP/KW8sLgz2uq2sLLq&#xA;Nrq0EMVgyQrNb2rWsilBc1ZZVct9rkG3ZnNaqqdj+S1pY6W9haXVnbyQtHJpmow6dEl6rQ3KXMQu&#xA;5xJW5VWiUUonLvvQhVkvl3yvrOl6trmp3OqQXk2tGGVlW0aFYpoYFgBH7+TlHRB8P2v8o9cVSPQv&#xA;yrv9EtxPp+tra68J5ZZb+C1ZLe5imlaYxXlo08izFGkYJIro6rQV23VWzeUb/SvJ1x5elu3v9R1G&#xA;/e70u8srGWMW11LcC5WWQmS5REhlPOrstVHEVbqqivMX5ZPrEtpCmpi10u002bTVgEBe4JlaOQTe&#xA;uZQvJZbaJqGM1+Kp+Kqqqs/5fX99DqVzqWrRza9ex2aW+owWphjtzp8pnt3WAzSMzeqxZ/3m/QUG&#xA;KskstPj06z0yxjYuttSP1CAC5WF+TtTux3PviqKt/wC+uv8AjKP+TSYqlGoeTrG9nlmN1cwNPK8l&#xA;wIjFSRJEhR4m5xv8DfVkO1G8GxVux8uW2kadfJHcTXQlgES/WPTPCGGMrHEvppH8Kgn7VW8TiqeI&#xA;iIoVFCqOigUAxVvFXYq7FVssUc0TxSKHjkUq6noVYUIxV5T5Fmfyr591LyvcNS0vH9WyLHYltxQf&#xA;Nu38wxV6xirsVeAXqyaN5ukVPTT6tM3p9pGaCWqU8VC/dir32KRJYklQ1SRQynxBFRiq7FXYq7FW&#xA;njSRSkih0PVWFQfoOKvK/wAzLBrLWYbiCsUF3FXivwrzj+FqAexXFWB6ZdXK/WbdpnLW87gEsa8Z&#xA;KSp9AWTj9GKvoDS0sL3TbW7FvEfXiSQ/AvVlBPbxxVFfULH/AJZ4v+AX+mKu+oWP/LPF/wAAv9MV&#xA;d9Qsf+WeL/gF/pirvqFj/wAs8X/AL/TFXfULH/lni/4Bf6Yq76hY/wDLPF/wC/0xV31Cx/5Z4v8A&#xA;gF/pirvqFj/yzxf8Av8ATFXfULH/AJZ4v+AX+mKu+oWP/LPF/wAAv9MVd9Qsf+WeL/gF/piq5LS1&#xA;Q1SGNTSlQoGx+QxVTs40je5SNQiCUUVRQD92nYYqicVUL/8A3huP+MT/APETiqvirsVdirsVdirz&#xA;H85NJlgWx80WlVn09wJmTrw3Ndvav0hcVZ55d1iLWNGtdQjIrKg9QDoHGzD7+ntiqZYq8X/NKy+r&#xA;eavrCqlJfSl5OacVdfScqfElcVem+Sr7655YsJCatHH6LeNYiUFfoUHFU7xV2KuxV2KsQ/M+w+se&#xA;XhcgfHaSq5P+Q/wH8SuKvGdotZPhdwV/2UDfrIl/DFXtn5b331nyxFGTV7WR4T40rzH4PTFWU4q7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FVC3/vrr/jKP+TSYqr4qoX/APvDcf8AGJ/+InFVfFXYq7FXYq7F&#xA;UFremx6npN1YSAFbiMqK9A3VT9DAHFXl/wCUmtzaXq915WvaoFY/Vw2xBFeI/wCBUofdRir13FXn&#xA;H5x6Ys1naXfph6h4HU7AkjnGKjpuGxVE/lDqDzaTdWso4yRuk3CoNPVWjCo8CmKs+xV2KuxV2KoP&#xA;WbEX+lXdnSpnidF/1iPhP0HFXztqoMZtbnobe4TkP8mWsLV+XqcvoxV6X+U9/wAby+sWO0sazIPd&#xA;Dxanz5j7sVelYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVC3/vrr/jKP+TSYqkHnSz8x3L6YdG9akU/O&#xA;59GURbArx51mgqlOVf7wf8Vv2VUPLdjrlvpupjU1uomeFADdXAuS0yxsJ5Yv3kwSN2oVT4afyjFW&#xA;WIpVQCxYj9o0qfuAGKt4q7FXYq7FXYq8h/NjS30bX7HzNZ/ulY/6S67UKkVf/Y/C/wBDYq9P0HVo&#xA;9W0m2v0oDKv7xR+y67OPvGKpd580/wCu+WLsAVe3AuE/55mrf8JXFXnf5TXn1HXzZemYoZxLCgZu&#xA;Qan71WB+8AYq9kxV2KuxV2KuxV4R560cRavqunn4UmLmM+CzDktP9Xliq/8ALvVzHrOlXjfCLjjF&#xA;MvgZV4EH/Vc/hir3TFXYq7FXYq7FXYq7FXYq7FXYq7FXEVBFae+KoazUq9ypYuRKPialT+7TwAGK&#xA;onFVC/8A94bj/jE//ETiqvirsVdirsVdirsVSbzfoKa5oNzZFQ0tOcFf51BoP9kCV+nFXnv5Pa9J&#xA;ZXdx5bvHIKtS3L9SQPgO/wDMg4n/AClxV6zLEksTxSDkkilXHiCKHFXgEBl0Lzf6gicyW8n72QH4&#xA;K2slONOxcMfuxV7/ABSJLGksZ5I6hlbxBFQcVXYq7FXYq7FXmf5r6fwvrO/UbTRmFyP5ozUV+Yb8&#xA;MVeb6W7QXN3bqeLQzetEe/Gb95X/AJGcx9GKvovS71b7Tra8XpcRJJQdiwqR9BxVE4q7FXYq7FXY&#xA;q7FXYq7FXYq7FXYqoW/99df8ZR/yaTFVfFVC/wD94bj/AIxP/wAROKq+KuxV2KuxV2KuxV2KvGPz&#xA;M0mby/5ng1+zrHDO3N2X9k8gWP8AsHo/yJxV6t5e1qDWNJgvoqAuOMyD9mQfaX+ntiryf81tNFn5&#xA;jF6FkZZGjuESLuWBgcEftAVLkYq9F/L7U/r3lqBWNZbQm3f5Jun/AAhGKskxV2KuxV2Ksa/MPTje&#xA;eWZ2UVktGW4X5Ls//CsTirw6f9zq1tL0W5Rrd/d0rJH9wEmKvZvyx1L6zoLWjGsllIVA/wAiT4l/&#xA;HkMVZhirsVdirsVdirsVdirsVdirsVdiqhb/AN9df8ZR/wAmkxVIfOHme50S40uOIIsN7MUmmdFk&#xA;oAVAjRGntqu/MkcS7bbI3ZVD+W/Mt5rWm6m88ttP6MKMBaKyek8sbM9tLykkrLERRj8P+qMVZYjF&#xA;lBKlSf2TSo+4kYq3irsVdirsVdirsVSbzfoMeuaFcWRUNLQvBX+cDp/shVT88VeX/lb5kk0bWJNE&#xA;vWKwOVjBfbrURPv/AMA/3nFWZ/mtpIu9CjuwCGtnKOy7ERzDiTX/AFuOKsY/KLXBBfNp8hcR3IMQ&#xA;MwAYzW5KhjTb4wD067Yq9dxV2KuxV2KrJoY5oXhkHKORSjqe6sKEYq+ePNemT2L3lqAWuLCX1IvF&#xA;jC3Naf66in04qy78r9VSLXViDVg1CIqh7FgPUQ/cCPpxV65irsVdirsVdirsVdirsVdirsVcTQE0&#xA;r7YqhrNiz3LFShMo+FqVH7tPAkYqicVUL/8A3huP+MT/APETiqvirsVdirsVdirsVdirsVeOfm15&#xA;ak07Uo9esYyUkYtIijqT/fJ/swOa/wCUMVZt5Y1W382eUHtpJA9wYfQmY7kkr+7l+nY/OuKvIopL&#xA;nTNdI5SrchvVSu6RSW5VSoNfhJJBp88Ve/6RqMWpaZbX0X2bhA9PBujL9DVGKovFXYq7FXYq8t/N&#xA;LTPQ1iG/QUS8jo5/4sioP+IlcVYF5cu5dPnVYjSbTJx6XhwBEkQ+QRgv0HFX0TZXcN5aQ3UJrFOi&#xA;yIfZhXFVbFXYq7FXYq7FXYq7FXYq7FXYqoW/99df8ZR/yaTFVfFVC/8A94bj/jE//ETiqvirsVdi&#xA;rsVdirsVdirsVQOuaTBq2lz2M2wlX4H/AJXG6t9BxV4l5a1XUPJvmiWzlQrCGYGDsyA/vYx7qfiT&#xA;29q4qmX5l6dHHqKapZu5tL5VvoTD1crvJHQ0B5+B/mxVkX5UeYVkR9KkJCyD6xactjuBzSh/4L78&#xA;Vej4q7FXYq7FWO+fNI/SXl2fgKz2v+kRePwD4h9K1xV4XP8A6PqsE/8Auu6X6vJ/rrV4j/xMfMjF&#xA;Xrf5WayZrKfSpWq9sfVgB/325+ID/Vb9eKs7xV2KuxV2KuxV2KuxV2KuxV2KqFv/AH11/wAZR/ya&#xA;TFVmoapp+nrA15MsIuZ47W3rUl5pmCIigAmpJ+jqdsVQUOv6Vqun3z2UrMsEZ9QyRSwjiyEq6+qq&#xA;c0YCodaqfHFU2R0dQyMGU9GBqDireKuxV2KuxV2KuxV2KuxV5v8Am35R+uWy6xajjNDx9Z1G6sv9&#xA;3L9H2W8Rt0rirDNI1ptR0OXSLv4bi2cyW6H/AHXMPtxiv7EqnkvvTxxVB6DqM+k6yk0Xqu0EguUd&#xA;zVSHY84lbrT2PY7bYq+gLG9t76zhu7duUM6h0Psex9x3xVXxV2KuxVxAIodweoxV4J538vtZ6jfa&#xA;cnwAMJbNzuBuJIW9+LAfdiq3yf5jeyvLPVYwQvS4i70rxljPupBHzGKve4ZY5okmiYPFIodHHQqw&#xA;qCMVXYq7FXYq7FXYq7FXYq7FXEgAkmgHU4qhrORJHuXjYOhlFGU1B/dp3GKoLXfLGl61Jay3hnWa&#xA;ykWSCSCeWEjjLHKQQjBWDNCvUVH7NDviqjYeXbfRtPvViuZ7n1IRGhuDGTHFChWOJPTSP4VB/aq3&#xA;icVTzFXYq7FXYq7FXYq7FXYq7FVssUcsTxSqHjkBV0YVBUihBGKvDfzA8pXHl7VhfWSNJbODwUdX&#xA;iFSYv9eMmqeP0nFWMPdRzBZEZ5XhU3VosR4mZOJHCh2PWlD7HFXqv5WeYVo+jzsV5/vrMNsakVdP&#xA;+NvvxV6NirsVdirsVYP+Z+gm5sY9WhWstp8E4HUxMdj/ALFj+OKvH4/9D1R4jtb39ZIvATqP3i/7&#xA;NRyHybFXsf5Z6+LvTm0uZv8ASLMVh8WhJ/41Jp8qYqzXFXYq7FXYq7FXYq7FXYq7FVC3/vrr/jKP&#xA;+TSYqr4qoX/+8Nx/xif/AIicVV8VdirsVdirsVdirsVdirsVdiqC1nR7PV9PksroVR91cfaRx0Zf&#xA;cYq+cfOfl7UPL2oSinD6vIZVYD4VZv8Adg/4rlH2vA/7LFVvlrXWW6SW1VoZEczu5cfu5+YPEK29&#xA;HO4+kYq+i/LuuQa1pUV7FQOfhnj/AJJB9pf4j2xVMsVdirsVWTwxTwyQSqHilUpIh6FWFCMVeBea&#xA;/Lslne3OmSsVeJg9tcDqKfFHIP4j5jFVnlXzBc2V5BqCLxurVzHdQA7VGzp/qspqp8CDir3ywvra&#xA;/s4ry2fnBMoZG+fY+46HFVfFXYq7FXYq7FXYq7FXYqoW/wDfXX/GUf8AJpMVV8VUL/8A3huP+MT/&#xA;APETiqvirsVdirsVdirsVdirsVdirsVdiqSeafKtjr9p6ctI7qMH0LgCtK/ssO6nwxV8vedPL155&#xA;V1Z2miMdoJVVwd1gkBBQH/itiAUbsfoxVnX5Y/mI1pe/v6AuKXtqlaGMGiypXutf4d8Ve/wTw3EK&#xA;TwOJIZAGR1NQQe4xVfirsVdirFPP3lVtXslurRa39qDRR1kj6lPmOq4q8TvopLW4/SEKE0AS9hUE&#xA;l4x0YAdXj6+4qOtMVZz+XvnBNOuEt5pQ+lXlGWStVRmHwyD/ACT3+/FXrwIIqNwehxV2KuxV2Kux&#xA;V2KuxV2KqFv/AH11/wAZR/yaTFUm83aJeasljHb2dlcpDOssst27RzRBGVgbZ1hn4u1KFttum+4V&#xA;QXlvy1eaLpuprcR20DTQolbNi3qtFGytcy8o4/3spNW+1/rHFWWIpVQCxYj9o0qfuAGKt4q7FXYq&#xA;7FXYq7FXYq7FXYq7FXYqxnzx5Ls/MenupjQ3ioVQuAVkQ1rFIDsVPv0xV8v6/wCX9V8m3pnhMy2E&#xA;LcWLgtLamv2JK7tCafaO47+OKvUPy4/NT6uqwvVrRj+9s2I5Jvu8JrQg9afqxV7fY31rfWsd3aSC&#xA;WCUVRx+o+BHcYqr4q7FXYq898++SC5k1fS4yZCeV3bKK1r1kQDv/ADD6cVeTukmmTNLEpfT5WLTw&#xA;qCWhdjvIgHVCd2Xt1HfFXpXkDz3HAkdhqFxzsZADZ3RPJUB6KW/kPY9vl0VeoAgio3B6HFXYq7FX&#xA;Yq7FXYq4ioIrT3xVDWalXuVLFyJR8TUqf3aeAAxVE4qoX/8AvDcf8Yn/AOInFVfFXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FUl8y+U9J8wWxivIws3EqlwoHIA9jX7S+xxV8v/AJg/lhr/AJI1L6xZRGbT&#xA;HZmgCbKh6/umqOPjwY09x1KrIfyv/Oh9KuPq1+GltHIF0tCrI3TkValG/WPoOKvorRtd0nWbUXWm&#xA;3KXEW3Lid1J7MOoxVH4q7FXYqwnzf+Xq6jK9/pZWK7beWBtkkPiD+y34H2xV5HfaPqOkXkqQxGJw&#xA;xNxp8nwqWPVoz+wx/wCBb264qyTyh+ZN7YTrayO8sCACXT7j4ZY18Y612H+SSuKvYdJ1jT9WtFub&#xA;KUSRn7S9GQ/ysvY4qjcVdirsVdirsVULf++uv+Mo/wCTSYqr4qoX/wDvDcf8Yn/4icVV8VdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdiqhfWFlf2r2t7ClxbyCjxOKg4q8U8//APOOdneTm/8ALJNvL/yz&#xA;8t13rRS+zL7N07Yq8utpPzJ8g6o8rQTpJEQHktw1Cvf1IepHyrir2byH/wA5C+WNXh+r61OtneRU&#xA;V5+J9Mmn7QAqp+j6Bir1TT9U07UYfXsLmO5i/niYMB86dMVROKuxVBapomlapF6d/bJMAKKxFHX/&#xA;AFWFGH34qwLzF+T9vdgnT5VZB8SQz1DI3jHKvxKfD9eKsQXRPzE8rXH1i2imkSPq5+1TwMsYeJx7&#xA;Mo9zirK9I/OzT0VYfMNpLYTLs85WkdfdqmMfQ5+WKs10/wA5eV9QiSS21KAq/wBkO4jJ+QfjXFU4&#xA;VlZQykFTuCNwRireKuxVQt/766/4yj/k0mKq+KsT8ta/qXmDTtSQzWk06woIjbqyLDLNGxa3mJec&#xA;84moHNB/q4qyRX1DiOUMQbuBKxH3+mMVb533++ov+Rjf9U8Vdzvv99Rf8jG/6p4q7nff76i/5GN/&#xA;1TxV3O+/31F/yMb/AKp4qtkbUSo4RxBqrUmRulRy/wB1+GKrud9/vqL/AJGN/wBU8Vdzvv8AfUX/&#xA;ACMb/qnirud9/vqL/kY3/VPFXc77/fUX/Ixv+qeKu533++ov+Rjf9U8VWu2olk4xxBQfjBkbcUPT&#xA;9340xVdzvv8AfUX/ACMb/qnirud9/vqL/kY3/VPFXc77/fUX/Ixv+qeKu533++ov+Rjf9U8VUrm3&#xA;e6j9O5s7eeP+SRuY+5ozirEtd/KTyZrcoe90Gz5cGUyxSyRSAkgjiyIKd8VY7b/kImlzNN5b1/U9&#xA;HkIoqrdLMg7/ALUIf/hsVTq28qfm7b8FHnaCdF6+vpsTMRt1ZGjxVXPl783CD/zt1kGPQjTFoN/A&#xA;ydaYqqQaH+bEbEv5p0+b4qhZNNIFPA8JkP44qrHSfzUooHmHTPh7nTpDy3/apcD8KYqtOkfmryNP&#xA;MWmcdiP9xzk17j/egfD+PviqHvPK35iXoZbvWdHnVh+3pTMV/wBUtcHb8ffFWMz/AJH6pNI0v1vS&#xA;IpXNXeGxuY2/2LC7qPprirrb8nvzCsCraV50GnkVqsdvcSIa/wCTNcyYqm9v5P8AzphAX/H1tKo/&#xA;35pUTH7/AFK4qj7fQPzgiZWfzZp1wFBBSTSyAxJqCeE6HbptirJPLNn5htbGRdfu7e91CSUuZ7WJ&#xA;oY+HFVUcGZzUcfHFU2xVIvOF1qVtpsT2MlzDym4zzWVuLqdU9KQrxiMc9QZQit8BoD264qmumvdP&#xA;p1q92ON00MZnFKUkKjlt88VRGKuxV2KuxVhnmXVdbi1uSDTptSjgSJDciOx9aEK0kfJ7WQW8nOVI&#xA;i7EM7CuwUnoqyHy3NfzaJay35ka5YNyeeMQysvMhGkjCx8GKUJHEfLFUyxV2KuxV2KsC1XWvOw1P&#xA;Uo3tr/T9NRoRa3FpbQXbhALkF0CC6ZzK6Q8gY/gU7hftMqzXTXun061e7HG6aGMzilKSFRy2+eKo&#xA;jFXYq7FXYq81h1zz28VLgajBOJZKelaCWNpuUfpwfFZoUgoZKyVYdKTHFXpWKuxV2KuxVD6jJcRa&#xA;fcyWyl7hInaFFAYlwpKgKSKmvauKsE0PV/Os11p6Xz3wDSotDZ0imjMsgnaeR7S3aPhGE4VSKvg3&#xA;UqvQ8VdirsVdiqWa6+qxx2b6e9P9Lt1ukWL1GaF5lWShr8ACEljTp4dcVYOms+dzxrNqe6qd9PUf&#xA;6b+75Wx/0ba23f8Ae/8AJTFXpeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 7.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BookAntiqua</stFnt:fontName>
                  <stFnt:fontFamily>Book Antiqua</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.35</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BKANT.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -278.891 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 278.891 li
354.622 278.891 li
354.622 0 li
cp
clp
20.875 261.519 mo
346.375 261.519 li
346.375 4.64404 li
20.875 4.64404 li
20.875 261.519 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
39.1299 26.6909 mo
39.1299 26.4829 li
39.1362 26.4829 li
39.1299 26.6909 li
40.5151 27.187 mo
40.4048 27.1392 li
39.8701 27.0601 li
39.8882 26.415 li
40.4048 26.3682 li
40.7339 26.4111 li
40.5151 27.187 li
262.64 259.001 mo
261.89 259.001 li
261.892 258.913 li
261.759 258.909 li
261.745 258.909 li
261.128 258.909 li
261.128 258.983 li
260.378 258.962 li
260.378 258.909 li
259.628 258.909 li
259.628 258.963 li
258.878 258.918 li
258.878 258.909 li
258.724 258.909 li
258.49 258.895 li
255.235 258.895 li
251.98 258.895 li
248.725 258.895 li
245.47 258.895 li
248.725 258.895 li
251.98 258.895 li
255.235 258.895 li
258.49 258.895 li
261.745 258.895 li
262.642 258.948 li
262.64 259.001 li
264.138 259.088 mo
263.388 259.088 li
263.391 258.993 li
264.14 259.037 li
264.138 259.088 li
265.627 259.088 mo
265 259.088 li
264.889 259.088 li
264.889 259.082 li
265 259.088 li
265.627 259.088 li
45.0869 27.5542 mo
44.8159 28.5161 li
45.5381 28.7202 li
45.8091 27.7573 li
45.0869 27.5542 li
46.5313 27.9609 mo
46.2598 28.9229 li
46.7319 29.0562 li
46.876 29.1289 li
47.3291 28.2378 li
47.1411 28.1431 li
47.0508 28.1069 li
46.5313 27.9609 li
47.9971 28.5771 mo
47.5449 29.4692 li
48.2139 29.8081 li
48.666 28.916 li
47.9971 28.5771 li
49.335 29.2549 mo
48.8828 30.147 li
49.5522 30.4868 li
50.0039 29.5952 li
49.335 29.2549 li
50.7329 30.0669 mo
50.0752 30.8198 li
50.6392 31.314 li
51.2969 30.561 li
50.7329 30.0669 li
51.8618 31.0542 mo
51.2041 31.8071 li
51.769 32.3013 li
52.4272 31.5479 li
51.8618 31.0542 li
52.9922 32.041 mo
52.334 32.7939 li
52.8989 33.2881 li
53.5571 32.5352 li
52.9922 32.041 li
54.123 33.0903 mo
53.4019 33.7822 li
53.9209 34.3232 li
54.6431 33.6309 li
54.123 33.0903 li
55.1621 34.1719 mo
54.4399 34.8652 li
54.959 35.4063 li
55.6812 34.7139 li
55.1621 34.1719 li
56.2002 35.2549 mo
55.478 35.9473 li
55.9971 36.4878 li
56.7192 35.7959 li
56.2002 35.2549 li
57.25 36.3979 mo
56.458 37.0093 li
56.916 37.603 li
57.708 36.9922 li
57.25 36.3979 li
58.166 37.5859 mo
57.374 38.1973 li
57.832 38.791 li
58.624 38.1802 li
58.166 37.5859 li
59.082 38.7739 mo
58.29 39.3853 li
58.748 39.978 li
59.54 39.3682 li
59.082 38.7739 li
59.998 39.9619 mo
59.2061 40.5723 li
59.5249 40.9849 li
59.623 41.1392 li
60.4668 40.604 li
60.3569 40.4312 li
60.3311 40.3931 li
59.998 39.9619 li
60.8691 41.2383 mo
60.0239 41.7729 li
60.4248 42.4063 li
61.27 41.8711 li
60.8691 41.2383 li
61.6719 42.5049 mo
60.8271 43.04 li
61.228 43.6743 li
62.0732 43.1382 li
61.6719 42.5049 li
62.4741 43.772 mo
61.6299 44.3071 li
62.0313 44.9409 li
62.876 44.4053 li
62.4741 43.772 li
63.2769 45.0391 mo
62.4321 45.5742 li
62.7612 46.0942 li
62.8169 46.1909 li
63.6851 45.6948 li
63.624 45.5869 li
63.6118 45.5679 li
63.2769 45.0391 li
64.0581 46.3462 mo
63.1899 46.8423 li
63.562 47.4932 li
64.4302 46.9961 li
64.0581 46.3462 li
64.8032 47.647 mo
63.9351 48.144 li
64.3071 48.7949 li
65.1748 48.2979 li
64.8032 47.647 li
65.5479 48.9492 mo
64.6802 49.4458 li
65.0518 50.0972 li
65.9199 49.6001 li
65.5479 48.9492 li
66.293 50.251 mo
65.4248 50.748 li
65.7979 51.3989 li
66.665 50.9019 li
66.293 50.251 li
67.0352 51.5933 mo
66.1348 52.0298 li
66.4629 52.7051 li
67.3618 52.2671 li
67.0352 51.5933 li
67.6899 52.9419 mo
66.791 53.3789 li
67.1191 54.0542 li
68.0181 53.6172 li
67.6899 52.9419 li
68.3462 54.291 mo
67.4468 54.728 li
67.7749 55.4028 li
68.6738 54.9663 li
68.3462 54.291 li
69.002 55.6401 mo
68.1021 56.0771 li
68.4302 56.752 li
69.3301 56.3149 li
69.002 55.6401 li
69.6572 56.9893 mo
68.7578 57.4263 li
69.0859 58.1011 li
69.9849 57.6641 li
69.6572 56.9893 li
70.3159 58.3252 mo
69.4258 58.7822 li
69.769 59.4492 li
70.6592 58.9922 li
70.3159 58.3252 li
71.002 59.6592 mo
70.1118 60.1162 li
70.4551 60.7832 li
71.3438 60.3252 li
71.002 59.6592 li
71.688 60.9922 mo
70.7979 61.4502 li
71.1411 62.1172 li
72.0298 61.6602 li
71.688 60.9922 li
72.373 62.3262 mo
71.4839 62.7842 li
71.8271 63.4512 li
72.7158 62.9932 li
72.373 62.3262 li
73.0591 63.6611 mo
72.1699 64.1182 li
72.5098 64.7798 li
72.7681 64.647 li
73.4082 64.3403 li
73.4063 64.335 li
73.3999 64.3223 li
73.0591 63.6611 li
73.7329 65.0161 mo
72.8311 65.4492 li
73.1548 66.125 li
74.0571 65.6929 li
73.7329 65.0161 li
74.3809 66.3691 mo
73.479 66.8013 li
73.8042 67.478 li
74.7051 67.0449 li
74.3809 66.3691 li
75.0298 67.7212 mo
74.1279 68.1538 li
74.4521 68.8301 li
75.354 68.3979 li
75.0298 67.7212 li
75.6782 69.0742 mo
74.7759 69.5059 li
75.1011 70.1831 li
76.002 69.75 li
75.6782 69.0742 li
76.3271 70.4272 mo
75.4248 70.8589 li
75.749 71.5352 li
76.6509 71.103 li
76.3271 70.4272 li
76.9678 71.791 mo
76.0601 72.209 li
76.374 72.8901 li
77.2822 72.4722 li
76.9678 71.791 li
77.5962 73.1528 mo
76.688 73.5723 li
77.002 74.2529 li
77.9102 73.834 li
77.5962 73.1528 li
78.2241 74.5151 mo
77.3159 74.9341 li
77.6299 75.6152 li
78.5381 75.1973 li
78.2241 74.5151 li
78.8521 75.8779 mo
77.9429 76.2959 li
78.2568 76.9771 li
79.165 76.5591 li
78.8521 75.8779 li
79.479 77.2402 mo
78.5708 77.6592 li
78.8848 78.3398 li
79.793 77.9209 li
79.479 77.2402 li
80.1021 78.6172 mo
79.1841 79.0151 li
79.4819 79.7031 li
80.3999 79.3062 li
80.1021 78.6172 li
80.6982 79.9941 mo
79.7798 80.3911 li
80.0781 81.0801 li
80.9961 80.6821 li
80.6982 79.9941 li
81.2939 81.3711 mo
80.376 81.7681 li
80.6738 82.4561 li
81.5908 82.0591 li
81.2939 81.3711 li
81.8892 82.7471 mo
80.9712 83.145 li
81.269 83.833 li
82.187 83.436 li
81.8892 82.7471 li
82.4849 84.124 mo
81.5669 84.521 li
81.8652 85.209 li
82.7832 84.812 li
82.4849 84.124 li
83.0811 85.501 mo
82.1631 85.8979 li
82.2612 86.125 li
82.2651 86.1343 li
82.4731 86.5913 li
83.3828 86.1772 li
83.1782 85.7251 li
83.0811 85.501 li
83.6938 86.8589 mo
82.7832 87.2729 li
83.0942 87.9561 li
84.0039 87.542 li
83.6938 86.8589 li
84.3149 88.2251 mo
83.4038 88.6392 li
83.7148 89.3223 li
84.625 88.9082 li
84.3149 88.2251 li
84.936 89.5898 mo
84.0259 90.0039 li
84.3359 90.687 li
85.2461 90.2729 li
84.936 89.5898 li
85.5571 90.9561 mo
84.647 91.3701 li
84.957 92.0522 li
85.8672 91.6382 li
85.5571 90.9561 li
86.1782 92.3208 mo
85.2681 92.7349 li
85.5161 93.2798 li
85.5649 93.4019 li
86.4912 93.0239 li
86.438 92.894 li
86.4302 92.875 li
86.1782 92.3208 li
86.7739 93.7192 mo
85.8491 94.0962 li
86.1318 94.791 li
87.0581 94.4131 li
86.7739 93.7192 li
87.3408 95.1079 mo
86.415 95.4849 li
86.6982 96.1802 li
87.624 95.8022 li
87.3408 95.1079 li
87.9072 96.4961 mo
86.981 96.874 li
87.2642 97.5688 li
88.1909 97.1909 li
87.9072 96.4961 li
88.4741 97.8853 mo
87.5479 98.2632 li
87.8311 98.958 li
88.7568 98.5801 li
88.4741 97.8853 li
89.04 99.2739 mo
88.1138 99.6519 li
88.397 100.346 li
89.3232 99.9692 li
89.04 99.2739 li
89.6069 100.663 mo
88.6812 101.041 li
88.7671 101.253 li
88.7842 101.29 li
89.02 101.755 li
89.9121 101.303 li
89.6851 100.856 li
89.6069 100.663 li
90.251 101.972 mo
89.3589 102.424 li
89.6982 103.093 li
90.5898 102.641 li
90.251 101.972 li
90.9292 103.31 mo
90.0371 103.762 li
90.376 104.431 li
91.2681 103.979 li
90.9292 103.31 li
91.6069 104.648 mo
90.7148 105.1 li
91.0542 105.769 li
91.9458 105.317 li
91.6069 104.648 li
92.2852 105.986 mo
91.3931 106.438 li
91.7319 107.107 li
92.624 106.655 li
92.2852 105.986 li
92.9702 107.344 mo
92.0591 107.758 li
92.3701 108.441 li
93.2798 108.027 li
92.9702 107.344 li
93.5908 108.709 mo
92.6812 109.123 li
92.9912 109.806 li
93.9009 109.392 li
93.5908 108.709 li
94.2119 110.075 mo
93.3018 110.489 li
93.6118 111.171 li
94.522 110.757 li
94.2119 110.075 li
94.833 111.44 mo
93.9229 111.854 li
94.2329 112.537 li
95.144 112.123 li
94.833 111.44 li
95.4541 112.805 mo
94.5439 113.22 li
94.854 113.902 li
95.7651 113.488 li
95.4541 112.805 li
96.0752 114.171 mo
95.165 114.585 li
95.2852 114.849 li
95.2891 114.858 li
95.4878 115.273 li
96.3901 114.84 li
96.1929 114.43 li
96.0752 114.171 li
96.7139 115.517 mo
95.812 115.949 li
96.1372 116.625 li
97.0381 116.193 li
96.7139 115.517 li
97.3628 116.869 mo
96.4609 117.302 li
96.7852 117.978 li
97.687 117.546 li
97.3628 116.869 li
98.0112 118.222 mo
97.1089 118.654 li
97.4341 119.33 li
98.335 118.898 li
98.0112 118.222 li
98.6602 119.574 mo
97.7578 120.007 li
98.082 120.683 li
98.9839 120.251 li
98.6602 119.574 li
99.3081 120.927 mo
98.4063 121.359 li
98.5439 121.646 li
98.5449 121.649 li
98.7339 122.037 li
99.6328 121.6 li
99.4448 121.212 li
99.4458 121.214 li
99.3081 120.927 li
99.9609 122.274 mo
99.062 122.711 li
99.3901 123.386 li
100.289 122.949 li
99.9609 122.274 li
100.617 123.623 mo
99.7168 124.061 li
100.045 124.735 li
100.945 124.298 li
100.617 123.623 li
101.273 124.973 mo
100.373 125.41 li
100.701 126.084 li
101.6 125.647 li
101.273 124.973 li
101.928 126.322 mo
101.029 126.759 li
101.357 127.433 li
102.256 126.996 li
101.928 126.322 li
102.584 127.671 mo
101.685 128.108 li
101.8 128.346 li
101.802 128.348 li
102.016 128.784 li
102.913 128.342 li
102.698 127.906 li
102.7 127.909 li
102.584 127.671 li
103.245 129.014 mo
102.347 129.456 li
102.679 130.129 li
103.576 129.687 li
103.245 129.014 li
103.908 130.36 mo
103.011 130.802 li
103.342 131.475 li
104.239 131.033 li
103.908 130.36 li
104.571 131.705 mo
103.674 132.147 li
104.005 132.82 li
104.902 132.378 li
104.571 131.705 li
105.234 133.051 mo
104.337 133.493 li
104.668 134.166 li
105.565 133.724 li
105.234 133.051 li
105.897 134.397 mo
105 134.839 li
105.057 134.954 li
105.062 134.964 li
105.349 135.515 li
106.236 135.052 li
105.951 134.506 li
105.897 134.397 li
106.583 135.717 mo
105.696 136.18 li
106.043 136.845 li
106.93 136.382 li
106.583 135.717 li
107.277 137.047 mo
106.39 137.51 li
106.737 138.175 li
107.624 137.712 li
107.277 137.047 li
107.97 138.377 mo
107.084 138.84 li
107.431 139.505 li
108.317 139.042 li
107.97 138.377 li
108.664 139.707 mo
107.778 140.17 li
108.125 140.835 li
109.011 140.372 li
108.664 139.707 li
109.357 141.044 mo
108.465 141.496 li
108.805 142.166 li
109.696 141.713 li
109.357 141.044 li
110.036 142.382 mo
109.144 142.834 li
109.483 143.503 li
110.375 143.051 li
110.036 142.382 li
110.714 143.72 mo
109.822 144.172 li
110.161 144.841 li
111.053 144.389 li
110.714 143.72 li
111.392 145.058 mo
110.5 145.51 li
110.839 146.179 li
111.731 145.727 li
111.392 145.058 li
112.07 146.396 mo
111.178 146.848 li
111.517 147.517 li
112.409 147.065 li
112.07 146.396 li
112.765 147.696 mo
111.897 148.193 li
112.269 148.844 li
113.137 148.347 li
112.765 147.696 li
113.509 148.999 mo
112.642 149.495 li
113.014 150.146 li
113.882 149.649 li
113.509 148.999 li
114.254 150.3 mo
113.387 150.797 li
113.759 151.447 li
114.627 150.951 li
114.254 150.3 li
115 151.602 mo
114.132 152.098 li
114.504 152.75 li
115.372 152.253 li
115 151.602 li
115.742 152.897 mo
114.881 153.406 li
115.263 154.052 li
116.124 153.542 li
115.742 152.897 li
116.505 154.188 mo
115.645 154.697 li
116.026 155.343 li
116.887 154.834 li
116.505 154.188 li
117.269 155.479 mo
116.408 155.988 li
116.79 156.634 li
117.651 156.125 li
117.269 155.479 li
118.033 156.77 mo
117.172 157.279 li
117.554 157.925 li
118.414 157.417 li
118.033 156.77 li
118.796 158.062 mo
117.935 158.57 li
118.092 158.835 li
118.304 159.212 li
119.175 158.721 li
118.961 158.34 li
118.955 158.332 li
118.796 158.062 li
119.543 159.375 mo
118.672 159.865 li
119.04 160.519 li
119.911 160.028 li
119.543 159.375 li
120.279 160.681 mo
119.408 161.172 li
119.776 161.826 li
120.647 161.335 li
120.279 160.681 li
121.015 161.988 mo
120.144 162.479 li
120.512 163.132 li
121.383 162.642 li
121.015 161.988 li
121.751 163.295 mo
120.88 163.786 li
121.248 164.439 li
122.119 163.949 li
121.751 163.295 li
122.486 164.607 mo
121.611 165.092 li
121.975 165.748 li
122.849 165.263 li
122.486 164.607 li
123.213 165.919 mo
122.338 166.404 li
122.702 167.06 li
123.577 166.575 li
123.213 165.919 li
123.94 167.231 mo
123.066 167.716 li
123.429 168.373 li
124.304 167.887 li
123.94 167.231 li
124.668 168.543 mo
123.793 169.028 li
124.157 169.683 li
125.031 169.199 li
124.668 168.543 li
125.395 169.854 mo
124.52 170.339 li
124.598 170.479 li
124.605 170.491 li
124.905 171 li
125.766 170.49 li
125.469 169.988 li
125.395 169.854 li
126.148 171.136 mo
125.287 171.645 li
125.669 172.291 li
126.529 171.781 li
126.148 171.136 li
126.911 172.427 mo
126.05 172.936 li
126.432 173.582 li
127.293 173.073 li
126.911 172.427 li
127.675 173.718 mo
126.814 174.227 li
127.196 174.874 li
128.056 174.364 li
127.675 173.718 li
128.438 175.009 mo
127.577 175.518 li
127.86 175.996 li
127.88 176.027 li
127.991 176.187 li
128.812 175.616 li
128.711 175.471 li
128.438 175.009 li
129.24 176.232 mo
128.419 176.803 li
128.848 177.418 li
129.669 176.847 li
129.24 176.232 li
130.097 177.463 mo
129.276 178.034 li
129.705 178.65 li
130.525 178.079 li
130.097 177.463 li
130.954 178.694 mo
130.133 179.265 li
130.561 179.881 li
131.382 179.31 li
130.954 178.694 li
131.81 179.926 mo
130.989 180.497 li
131.134 180.705 li
131.137 180.709 li
131.424 181.114 li
132.24 180.535 li
131.953 180.13 li
131.955 180.134 li
131.81 179.926 li
132.674 181.147 mo
131.858 181.725 li
132.292 182.337 li
133.108 181.758 li
132.674 181.147 li
133.542 182.37 mo
132.726 182.949 li
133.16 183.56 li
133.976 182.982 li
133.542 182.37 li
134.41 183.593 mo
133.594 184.172 li
134.028 184.784 li
134.844 184.205 li
134.41 183.593 li
135.272 184.803 mo
134.474 185.405 li
134.926 186.004 li
135.724 185.401 li
135.272 184.803 li
136.176 186 mo
135.378 186.602 li
135.83 187.201 li
136.628 186.598 li
136.176 186 li
137.08 187.197 mo
136.281 187.799 li
136.733 188.398 li
137.531 187.795 li
137.08 187.197 li
137.983 188.394 mo
137.185 188.998 li
137.637 189.595 li
138.435 188.993 li
137.983 188.394 li
138.879 189.615 mo
138.063 190.194 li
138.497 190.806 li
139.313 190.227 li
138.879 189.615 li
139.747 190.839 mo
138.931 191.418 li
139.365 192.029 li
140.181 191.45 li
139.747 190.839 li
140.615 192.062 mo
139.799 192.641 li
140.233 193.252 li
141.049 192.674 li
140.615 192.062 li
141.483 193.285 mo
140.667 193.864 li
140.902 194.195 li
140.924 194.224 li
141.143 194.489 li
141.915 193.853 li
141.708 193.602 li
141.483 193.285 li
142.392 194.432 mo
141.621 195.068 li
142.098 195.646 li
142.869 195.01 li
142.392 194.432 li
143.347 195.589 mo
142.575 196.225 li
143.053 196.803 li
143.824 196.167 li
143.347 195.589 li
144.301 196.746 mo
143.53 197.382 li
144.007 197.96 li
144.779 197.324 li
144.301 196.746 li
145.252 197.939 mo
144.448 198.534 li
144.894 199.137 li
145.698 198.542 li
145.252 197.939 li
146.144 199.145 mo
145.34 199.74 li
145.785 200.343 li
146.59 199.75 li
146.144 199.145 li
147.035 200.352 mo
146.231 200.946 li
146.677 201.549 li
147.481 200.955 li
147.035 200.352 li
147.927 201.558 mo
147.123 202.152 li
147.418 202.551 li
147.431 202.568 li
147.59 202.766 li
148.369 202.138 li
148.216 201.948 li
147.927 201.558 li
148.839 202.722 mo
148.061 203.35 li
148.532 203.933 li
149.31 203.306 li
148.839 202.722 li
149.781 203.889 mo
149.002 204.517 li
149.473 205.101 li
150.252 204.473 li
149.781 203.889 li
150.722 205.057 mo
149.944 205.685 li
150.415 206.269 li
151.193 205.641 li
150.722 205.057 li
151.658 206.182 mo
150.927 206.865 li
151.439 207.414 li
152.169 206.731 li
151.658 206.182 li
152.681 207.279 mo
151.951 207.961 li
152.462 208.509 li
153.193 207.827 li
152.681 207.279 li
153.705 208.375 mo
152.974 209.058 li
153.486 209.606 li
154.217 208.923 li
153.705 208.375 li
154.733 209.477 mo
153.993 210.15 li
154.498 210.704 li
155.237 210.031 li
154.733 209.477 li
155.742 210.586 mo
155.002 211.259 li
155.507 211.814 li
156.247 211.141 li
155.742 210.586 li
156.751 211.696 mo
156.012 212.369 li
156.516 212.923 li
157.256 212.25 li
156.751 211.696 li
240.147 259.851 mo
238.96 259.843 li
235.705 259.773 li
232.45 259.552 li
229.195 259.494 li
225.94 259.181 li
222.685 258.67 li
219.43 257.869 li
216.175 257.226 li
212.92 256.732 li
209.665 255.967 li
206.41 255.168 li
203.155 254.407 li
199.9 252.506 li
196.645 251.492 li
193.39 249.473 li
190.135 246.715 li
186.88 245.638 li
183.625 242.917 li
180.37 240.396 li
177.115 237.797 li
173.86 235.615 li
170.605 233.199 li
167.35 230.96 li
164.095 227.19 li
160.84 223.814 li
157.585 220.047 li
154.33 216.12 li
151.075 213.289 li
147.82 209.716 li
144.565 205.233 li
141.31 201.308 li
138.055 197.015 li
134.8 192.558 li
131.545 188.519 li
128.29 183.508 li
125.035 177.998 li
121.78 172.4 li
118.525 166.529 li
115.27 161.049 li
112.015 155.257 li
108.76 148.708 li
105.505 142.535 li
102.25 136.019 li
98.9951 129.298 li
95.7402 122.601 li
92.4849 114.478 li
89.23 108.567 li
85.9751 99.8032 li
82.7202 92.6372 li
79.4648 84.394 li
76.21 77.1973 li
72.9551 69.897 li
69.7002 62.7241 li
66.4448 55.3022 li
63.1899 49.127 li
59.9351 43.6831 li
56.6802 38.8013 li
53.4248 34.71 li
50.1699 31.7642 li
46.915 29.2651 li
43.6602 28.5459 li
41.21 27.4868 li
41.478 26.5361 li
41.292 26.4839 li
42.1299 26.5942 li
42.1299 26.9868 li
41.9282 27.7021 li
42.6499 27.9063 li
42.8599 27.1621 li
43.6392 27.1621 li
43.3721 28.1089 li
43.5239 28.1519 li
44.0938 28.313 li
44.3652 27.3501 li
43.7959 27.1899 li
43.6968 27.1621 li
44.7319 27.1621 li
46.915 27.9111 li
50.1699 28.7109 li
53.4248 31.4521 li
56.6802 34.1431 li
59.9351 37.6929 li
63.1899 42.519 li
66.4448 47.7109 li
69.7002 53.667 li
72.9551 59.1323 li
76.21 65.3901 li
79.4648 72.314 li
82.7202 79.085 li
85.9751 86.2251 li
89.23 93.3809 li
92.4849 100.331 li
95.7402 106.46 li
98.9951 113.335 li
102.25 119.996 li
105.505 126.682 li
108.76 132.977 li
112.015 139.249 li
115.27 144.809 li
118.525 150.322 li
121.78 155.983 li
125.035 162.13 li
128.29 167.604 li
131.545 171.892 li
134.8 177.061 li
138.055 181.186 li
141.31 186.072 li
144.565 190.01 li
145.063 190.664 li
147.82 195.51 li
151.075 202.838 li
154.33 207.417 li
157.585 212.683 li
157.717 212.845 li
157.021 213.478 li
157.209 213.684 li
157.501 214.03 li
158.2 213.44 li
158.674 214.022 li
157.985 214.603 li
158.469 215.176 li
159.147 214.603 li
159.62 215.185 li
158.953 215.75 li
159.437 216.322 li
160.094 215.767 li
160.567 216.349 li
159.921 216.895 li
160.405 217.468 li
161.024 216.945 li
161.448 217.542 li
160.964 218.033 li
161.498 218.56 li
161.889 218.164 li
162.33 218.784 li
162.032 219.086 li
162.566 219.613 li
162.771 219.405 li
163.212 220.026 li
163.1 220.14 li
163.634 220.667 li
163.653 220.647 li
164.095 221.27 li
167.35 224.411 li
170.605 227.194 li
173.86 230.227 li
177.115 234.162 li
180.37 237.612 li
183.625 241.326 li
186.88 243.701 li
190.135 246.171 li
193.39 247.55 li
196.645 249.297 li
199.9 250.621 li
203.155 252.249 li
206.41 253.363 li
209.665 254.291 li
212.92 255.291 li
216.175 256.321 li
219.43 257.326 li
222.685 257.847 li
225.94 258.403 li
229.195 258.977 li
232.45 259.423 li
235.705 259.657 li
237.106 259.688 li
237.104 259.713 li
237.853 259.756 li
237.856 259.704 li
238.606 259.721 li
238.602 259.798 li
238.932 259.816 li
238.946 259.817 li
239.365 259.829 li
239.368 259.739 li
240.118 259.758 li
240.115 259.85 li
240.147 259.851 li
241.615 259.861 mo
240.865 259.856 li
240.867 259.777 li
241.617 259.796 li
241.615 259.861 li
243.128 259.865 mo
242.378 259.865 li
242.378 259.814 li
243.128 259.826 li
243.128 259.865 li
244.628 259.865 mo
243.878 259.865 li
243.878 259.839 li
244.351 259.847 li
244.628 259.862 li
244.628 259.865 li
245.47 259.865 mo
245.378 259.865 li
245.378 259.864 li
245.47 259.865 li
.426154 .347417 .353185 .00985733 cmyk
f
345.127 259.001 mo
345.877 259.001 li
345.877 260.001 li
345.127 260.001 li
345.127 259.001 li
343.627 259.001 mo
344.377 259.001 li
344.377 260.001 li
343.627 260.001 li
343.627 259.001 li
342.127 259.001 mo
342.877 259.001 li
342.877 260.001 li
342.127 260.001 li
342.127 259.001 li
340.627 259.001 mo
341.377 259.001 li
341.377 260.001 li
340.627 260.001 li
340.627 259.001 li
339.127 259.001 mo
339.865 259.001 li
339.877 259.001 li
339.877 260.001 li
339.865 260.001 li
339.127 260.001 li
339.127 259.001 li
337.627 259.001 mo
338.377 259.001 li
338.377 260.001 li
337.627 260.001 li
337.627 259.001 li
336.127 259.001 mo
336.61 259.001 li
336.877 259.001 li
336.877 260.001 li
336.61 260.001 li
336.127 260.001 li
336.127 259.001 li
334.627 259.001 mo
335.377 259.001 li
335.377 260.001 li
334.627 260.001 li
334.627 259.001 li
333.127 259.001 mo
333.355 259.001 li
333.877 259.001 li
333.877 260.001 li
333.355 260.001 li
333.127 260.001 li
333.127 259.001 li
331.627 259.001 mo
332.377 259.001 li
332.377 260.001 li
331.627 260.001 li
331.627 259.001 li
330.127 259.001 mo
330.877 259.001 li
330.877 260.001 li
330.127 260.001 li
330.127 259.001 li
328.627 259.001 mo
329.377 259.001 li
329.377 260.001 li
328.627 260.001 li
328.627 259.001 li
327.127 259.001 mo
327.877 259.001 li
327.877 260.001 li
327.127 260.001 li
327.127 259.001 li
325.627 259.001 mo
326.377 259.001 li
326.377 260.001 li
325.627 260.001 li
325.627 259.001 li
324.127 259.001 mo
324.877 259.001 li
324.877 260.001 li
324.127 260.001 li
324.127 259.001 li
322.627 259.001 mo
323.377 259.001 li
323.377 260.001 li
322.627 260.001 li
322.627 259.001 li
321.127 259.001 mo
321.877 259.001 li
321.877 260.001 li
321.127 260.001 li
321.127 259.001 li
319.627 259.001 mo
320.335 259.001 li
320.377 259.001 li
320.377 260.001 li
320.335 260.001 li
319.627 260.001 li
319.627 259.001 li
318.127 259.001 mo
318.877 259.001 li
318.877 260.001 li
318.127 260.001 li
318.127 259.001 li
316.627 259.001 mo
317.08 259.001 li
317.377 259.001 li
317.377 260.001 li
317.08 260.001 li
316.627 260.001 li
316.627 259.001 li
315.127 259.001 mo
315.877 259.001 li
315.877 260.001 li
315.127 260.001 li
315.127 259.001 li
313.627 259.001 mo
313.825 259.001 li
314.377 259.001 li
314.377 260.001 li
313.825 260.001 li
313.627 260.001 li
313.627 259.001 li
312.127 259.001 mo
312.877 259.001 li
312.877 260.001 li
312.127 260.001 li
312.127 259.001 li
310.627 259.001 mo
311.377 259.001 li
311.377 260.001 li
310.627 260.001 li
310.627 259.001 li
309.127 259.001 mo
309.877 259.001 li
309.877 260.001 li
309.127 260.001 li
309.127 259.001 li
307.627 259.001 mo
308.377 259.001 li
308.377 260.001 li
307.627 260.001 li
307.627 259.001 li
306.127 259.001 mo
306.877 259.001 li
306.877 260.001 li
306.127 260.001 li
306.127 259.001 li
304.627 259.001 mo
305.377 259.001 li
305.377 260.001 li
304.627 260.001 li
304.627 259.001 li
303.127 259.001 mo
303.877 259.001 li
303.877 260.001 li
303.127 260.001 li
303.127 259.001 li
301.627 259.001 mo
302.377 259.001 li
302.377 260.001 li
301.627 260.001 li
301.627 259.001 li
300.127 259.001 mo
300.805 259.001 li
300.877 259.001 li
300.877 260.001 li
300.805 260.001 li
300.127 260.001 li
300.127 259.001 li
298.627 259.001 mo
299.377 259.001 li
299.377 260.001 li
298.627 260.001 li
298.627 259.001 li
297.127 259.001 mo
297.55 259.001 li
297.877 259.001 li
297.877 260.001 li
297.55 260.001 li
297.127 260.001 li
297.127 259.001 li
295.627 259.001 mo
296.377 259.001 li
296.377 260.001 li
295.627 260.001 li
295.627 259.001 li
294.127 259.001 mo
294.295 259.001 li
294.877 259.001 li
294.877 260.001 li
294.295 260.001 li
294.127 260.001 li
294.127 259.001 li
292.627 259.001 mo
293.377 259.001 li
293.377 260.001 li
292.627 260.001 li
292.627 259.001 li
291.127 259.001 mo
291.877 259.001 li
291.877 260.001 li
291.127 260.001 li
291.127 259.001 li
289.627 259.001 mo
290.377 259.001 li
290.377 260.001 li
289.627 260.001 li
289.627 259.001 li
288.127 259.001 mo
288.877 259.001 li
288.877 260.001 li
288.127 260.001 li
288.127 259.001 li
286.627 259.001 mo
287.377 259.001 li
287.377 260.001 li
286.627 260.001 li
286.627 259.001 li
285.127 259.001 mo
285.877 259.001 li
285.877 260.001 li
285.127 260.001 li
285.127 259.001 li
283.627 259.001 mo
284.377 259.001 li
284.377 260.001 li
283.627 260.001 li
283.627 259.001 li
282.127 259.001 mo
282.877 259.001 li
282.877 260.001 li
282.127 260.001 li
282.127 259.001 li
280.627 259.001 mo
281.275 259.001 li
281.377 259.001 li
281.377 260.001 li
281.275 260.001 li
280.627 260.001 li
280.627 259.001 li
279.127 259.001 mo
279.877 259.001 li
279.877 260.001 li
279.127 260.001 li
279.127 259.001 li
277.627 259.001 mo
278.02 259.001 li
278.377 259.001 li
278.377 260.001 li
278.02 260.001 li
277.627 260.001 li
277.627 259.001 li
276.127 259.001 mo
276.877 259.001 li
276.877 260.001 li
276.127 260.001 li
276.127 259.001 li
274.627 259.001 mo
274.765 259.001 li
275.377 259.001 li
275.377 260.001 li
274.765 260.001 li
274.627 260.001 li
274.627 259.001 li
273.127 259.001 mo
273.877 259.001 li
273.877 260.001 li
273.127 260.001 li
273.127 259.001 li
271.627 259.001 mo
272.377 259.001 li
272.377 260.001 li
271.627 260.001 li
271.627 259.001 li
270.127 259.001 mo
270.877 259.001 li
270.877 260.001 li
270.127 260.001 li
270.127 259.001 li
268.627 259.001 mo
269.377 259.001 li
269.377 260.001 li
268.627 260.001 li
268.627 259.001 li
267.127 259.001 mo
267.877 259.001 li
267.877 260.001 li
267.127 260.001 li
267.127 259.001 li
265.627 259.001 mo
266.377 259.001 li
266.377 260.001 li
265.627 260.001 li
265.627 259.001 li
264.141 258.976 mo
264.891 258.998 li
264.863 259.998 li
264.113 259.976 li
264.141 258.976 li
262.642 258.934 mo
263.392 258.955 li
263.363 259.955 li
262.614 259.934 li
262.642 258.934 li
261.128 258.909 mo
261.745 258.909 li
261.759 258.909 li
261.892 258.913 li
261.864 259.912 li
261.737 259.909 li
261.128 259.909 li
261.128 258.909 li
259.628 258.909 mo
260.378 258.909 li
260.378 259.909 li
259.628 259.909 li
259.628 258.909 li
258.128 258.909 mo
258.49 258.909 li
258.878 258.909 li
258.878 259.909 li
258.49 259.909 li
258.128 259.909 li
258.128 258.909 li
256.628 258.909 mo
257.378 258.909 li
257.378 259.909 li
256.628 259.909 li
256.628 258.909 li
255.128 258.909 mo
255.235 258.909 li
255.878 258.909 li
255.878 259.909 li
255.235 259.909 li
255.128 259.909 li
255.128 258.909 li
253.628 258.909 mo
254.378 258.909 li
254.378 259.909 li
253.628 259.909 li
253.628 258.909 li
252.128 258.909 mo
252.878 258.909 li
252.878 259.909 li
252.128 259.909 li
252.128 258.909 li
250.628 258.909 mo
251.378 258.909 li
251.378 259.909 li
250.628 259.909 li
250.628 258.909 li
249.128 258.909 mo
249.878 258.909 li
249.878 259.909 li
249.128 259.909 li
249.128 258.909 li
247.628 258.909 mo
248.378 258.909 li
248.378 259.909 li
247.628 259.909 li
247.628 258.909 li
246.128 258.909 mo
246.878 258.909 li
246.878 259.909 li
246.128 259.909 li
246.128 258.909 li
244.628 258.909 mo
245.378 258.909 li
245.378 259.909 li
244.628 259.909 li
244.628 258.909 li
243.128 258.909 mo
243.878 258.909 li
243.878 259.909 li
243.128 259.909 li
243.128 258.909 li
241.642 258.893 mo
242.223 258.909 li
242.378 258.909 li
242.378 259.909 li
242.215 259.909 li
242.201 259.909 li
241.614 259.892 li
241.642 258.893 li
240.143 258.85 mo
240.893 258.871 li
240.865 259.871 li
240.115 259.85 li
240.143 258.85 li
238.658 258.799 mo
238.98 258.818 li
239.393 258.829 li
239.365 259.829 li
238.946 259.817 li
238.932 259.816 li
238.602 259.798 li
238.658 258.799 li
237.161 258.715 mo
237.909 258.757 li
237.853 259.756 li
237.104 259.713 li
237.161 258.715 li
235.705 258.629 mo
235.754 258.636 li
236.412 258.673 li
236.355 259.671 li
235.677 259.633 li
235.635 259.629 li
235.566 259.619 li
235.705 258.629 li
234.22 258.419 mo
234.962 258.524 li
234.823 259.514 li
234.08 259.41 li
234.22 258.419 li
232.735 258.21 mo
233.477 258.315 li
233.338 259.305 li
232.595 259.2 li
232.735 258.21 li
231.214 258.069 mo
231.961 258.132 li
231.877 259.128 li
231.129 259.065 li
231.214 258.069 li
229.719 257.942 mo
230.466 258.005 li
230.382 259.002 li
229.635 258.939 li
229.719 257.942 li
228.313 257.688 mo
229.045 257.853 li
228.825 258.829 li
228.093 258.665 li
228.313 257.688 li
226.85 257.358 mo
227.582 257.523 li
227.362 258.5 li
226.63 258.334 li
226.85 257.358 li
225.421 257 mo
226.063 257.181 li
226.118 257.194 li
225.898 258.169 li
225.83 258.154 li
225.804 258.147 li
225.15 257.963 li
225.421 257 li
223.978 256.593 mo
224.699 256.797 li
224.428 257.759 li
223.706 257.556 li
223.978 256.593 li
222.548 256.183 mo
222.827 256.269 li
223.256 256.39 li
222.984 257.352 li
222.549 257.23 li
222.537 257.226 li
222.252 257.138 li
222.548 256.183 li
221.116 255.738 mo
221.832 255.961 li
221.536 256.916 li
220.82 256.694 li
221.116 255.738 li
219.683 255.294 mo
220.399 255.516 li
220.103 256.472 li
219.387 256.25 li
219.683 255.294 li
218.205 254.913 mo
218.932 255.097 li
218.686 256.067 li
217.96 255.882 li
218.205 254.913 li
216.751 254.544 mo
217.478 254.728 li
217.233 255.698 li
216.506 255.513 li
216.751 254.544 li
215.337 254.13 mo
216.054 254.353 li
215.758 255.308 li
215.041 255.086 li
215.337 254.13 li
213.905 253.686 mo
214.621 253.908 li
214.325 254.864 li
213.608 254.641 li
213.905 253.686 li
212.54 253.201 mo
213.092 253.434 li
213.188 253.464 li
212.892 254.419 li
212.772 254.382 li
212.725 254.365 li
212.15 254.122 li
212.54 253.201 li
211.158 252.617 mo
211.849 252.909 li
211.459 253.83 li
210.769 253.539 li
211.158 252.617 li
209.8 252.039 mo
209.87 252.072 li
210.467 252.325 li
210.078 253.246 li
209.47 252.989 li
209.449 252.979 li
209.367 252.94 li
209.8 252.039 li
208.447 251.39 mo
209.123 251.714 li
208.691 252.616 li
208.015 252.292 li
208.447 251.39 li
207.094 250.742 mo
207.77 251.066 li
207.338 251.968 li
206.662 251.644 li
207.094 250.742 li
205.661 250.162 mo
206.365 250.42 li
206.021 251.359 li
205.317 251.101 li
205.661 250.162 li
204.253 249.646 mo
204.957 249.904 li
204.613 250.843 li
203.908 250.585 li
204.253 249.646 li
202.923 249.098 mo
203.355 249.317 li
203.548 249.388 li
203.204 250.327 li
202.983 250.246 li
202.929 250.222 li
202.47 249.989 li
202.923 249.098 li
201.585 248.419 mo
202.254 248.758 li
201.801 249.65 li
201.132 249.311 li
201.585 248.419 li
200.247 247.74 mo
200.916 248.079 li
200.464 248.971 li
199.795 248.632 li
200.247 247.74 li
198.933 247.041 mo
199.594 247.394 li
199.122 248.276 li
198.461 247.921 li
198.933 247.041 li
197.611 246.332 mo
198.272 246.686 li
197.8 247.567 li
197.139 247.213 li
197.611 246.332 li
196.353 245.597 mo
196.9 245.951 li
196.95 245.978 li
196.478 246.859 li
196.409 246.822 li
196.373 246.801 li
195.809 246.436 li
196.353 245.597 li
195.094 244.781 mo
195.724 245.189 li
195.18 246.028 li
194.55 245.62 li
195.094 244.781 li
193.836 243.965 mo
194.465 244.374 li
193.921 245.212 li
193.292 244.804 li
193.836 243.965 li
192.685 243.078 mo
193.273 243.543 li
192.654 244.328 li
192.065 243.863 li
192.685 243.078 li
191.507 242.149 mo
192.096 242.614 li
191.476 243.399 li
190.888 242.934 li
191.507 242.149 li
190.253 241.195 mo
190.381 241.267 li
190.445 241.31 li
190.918 241.684 li
190.299 242.469 li
189.856 242.119 li
189.762 242.067 li
190.253 241.195 li
188.946 240.459 mo
189.599 240.827 li
189.109 241.698 li
188.455 241.33 li
188.946 240.459 li
187.639 239.722 mo
188.293 240.091 li
187.802 240.962 li
187.148 240.593 li
187.639 239.722 li
186.424 238.935 mo
187.037 239.367 li
186.461 240.185 li
185.848 239.753 li
186.424 238.935 li
185.198 238.071 mo
185.811 238.503 li
185.235 239.321 li
184.622 238.889 li
185.198 238.071 li
183.972 237.208 mo
184.585 237.639 li
184.009 238.457 li
183.396 238.025 li
183.972 237.208 li
182.791 236.312 mo
183.388 236.766 li
182.783 237.562 li
182.186 237.108 li
182.791 236.312 li
181.598 235.403 mo
182.195 235.858 li
181.589 236.653 li
180.992 236.199 li
181.598 235.403 li
180.445 234.5 mo
180.686 234.71 li
181.001 234.949 li
180.395 235.745 li
180.067 235.495 li
180.041 235.474 li
179.787 235.252 li
180.445 234.5 li
179.315 233.512 mo
179.88 234.005 li
179.222 234.758 li
178.657 234.265 li
179.315 233.512 li
178.185 232.525 mo
178.75 233.018 li
178.092 233.771 li
177.527 233.278 li
178.185 232.525 li
177.044 231.539 mo
177.438 231.872 li
177.444 231.877 li
177.621 232.031 li
176.963 232.785 li
176.79 232.634 li
176.399 232.303 li
177.044 231.539 li
175.899 230.571 mo
176.472 231.055 li
175.826 231.818 li
175.253 231.334 li
175.899 230.571 li
174.753 229.602 mo
175.326 230.086 li
174.68 230.85 li
174.108 230.366 li
174.753 229.602 li
173.675 228.617 mo
174.209 229.143 li
173.507 229.855 li
172.973 229.329 li
173.675 228.617 li
172.607 227.563 mo
173.141 228.09 li
172.439 228.802 li
171.905 228.275 li
172.607 227.563 li
171.539 226.51 mo
172.073 227.037 li
171.371 227.75 li
170.837 227.222 li
171.539 226.51 li
170.395 225.473 mo
170.921 225.903 li
170.956 225.934 li
171.006 225.983 li
170.303 226.695 li
170.271 226.663 li
169.762 226.247 li
170.395 225.473 li
169.233 224.523 mo
169.814 224.998 li
169.181 225.772 li
168.6 225.298 li
169.233 224.523 li
168.072 223.574 mo
168.652 224.049 li
168.019 224.823 li
167.439 224.348 li
168.072 223.574 li
167.006 222.588 mo
167.54 223.115 li
166.837 223.827 li
166.304 223.3 li
167.006 222.588 li
165.938 221.535 mo
166.472 222.061 li
165.77 222.773 li
165.236 222.248 li
165.938 221.535 li
164.87 220.481 mo
165.404 221.008 li
164.702 221.72 li
164.168 221.193 li
164.87 220.481 li
163.802 219.428 mo
164.336 219.955 li
163.634 220.667 li
163.1 220.14 li
163.802 219.428 li
162.734 218.375 mo
163.268 218.901 li
162.566 219.613 li
162.032 219.086 li
162.734 218.375 li
161.667 217.321 mo
162.2 217.848 li
161.498 218.56 li
160.964 218.033 li
161.667 217.321 li
160.685 216.25 mo
161.169 216.823 li
160.405 217.468 li
159.921 216.895 li
160.685 216.25 li
159.717 215.104 mo
160.201 215.677 li
159.437 216.322 li
158.953 215.75 li
159.717 215.104 li
158.749 213.958 mo
159.233 214.531 li
158.469 215.176 li
157.985 214.603 li
158.749 213.958 li
157.761 212.805 mo
157.955 213.018 li
157.967 213.032 li
158.265 213.385 li
157.501 214.03 li
157.209 213.684 li
157.021 213.478 li
157.761 212.805 li
156.751 211.696 mo
157.256 212.25 li
156.516 212.923 li
156.012 212.369 li
156.751 211.696 li
155.742 210.586 mo
156.247 211.141 li
155.507 211.814 li
155.002 211.259 li
155.742 210.586 li
154.733 209.477 mo
155.237 210.031 li
154.498 210.704 li
153.993 210.15 li
154.733 209.477 li
153.705 208.375 mo
154.217 208.923 li
153.486 209.606 li
152.974 209.058 li
153.705 208.375 li
152.681 207.279 mo
153.193 207.827 li
152.462 208.509 li
151.951 207.961 li
152.681 207.279 li
151.658 206.182 mo
152.169 206.731 li
151.439 207.414 li
150.927 206.865 li
151.658 206.182 li
150.722 205.057 mo
151.193 205.641 li
150.415 206.269 li
149.944 205.685 li
150.722 205.057 li
149.781 203.889 mo
150.252 204.473 li
149.473 205.101 li
149.002 204.517 li
149.781 203.889 li
148.839 202.722 mo
149.31 203.306 li
148.532 203.933 li
148.061 203.35 li
148.839 202.722 li
147.927 201.558 mo
148.216 201.948 li
148.369 202.138 li
147.59 202.766 li
147.431 202.568 li
147.418 202.551 li
147.123 202.152 li
147.927 201.558 li
147.035 200.352 mo
147.481 200.955 li
146.677 201.549 li
146.231 200.946 li
147.035 200.352 li
146.144 199.145 mo
146.59 199.75 li
145.785 200.343 li
145.34 199.74 li
146.144 199.145 li
145.252 197.939 mo
145.698 198.542 li
144.894 199.137 li
144.448 198.534 li
145.252 197.939 li
144.301 196.746 mo
144.779 197.324 li
144.007 197.96 li
143.53 197.382 li
144.301 196.746 li
143.347 195.589 mo
143.824 196.167 li
143.053 196.803 li
142.575 196.225 li
143.347 195.589 li
142.392 194.432 mo
142.869 195.01 li
142.098 195.646 li
141.621 195.068 li
142.392 194.432 li
141.483 193.285 mo
141.708 193.602 li
141.915 193.853 li
141.143 194.489 li
140.924 194.224 li
140.902 194.195 li
140.667 193.864 li
141.483 193.285 li
140.615 192.062 mo
141.049 192.674 li
140.233 193.252 li
139.799 192.641 li
140.615 192.062 li
139.747 190.839 mo
140.181 191.45 li
139.365 192.029 li
138.931 191.418 li
139.747 190.839 li
138.879 189.615 mo
139.313 190.227 li
138.497 190.806 li
138.063 190.194 li
138.879 189.615 li
137.983 188.394 mo
138.435 188.993 li
137.637 189.595 li
137.185 188.998 li
137.983 188.394 li
137.08 187.197 mo
137.531 187.795 li
136.733 188.398 li
136.281 187.799 li
137.08 187.197 li
136.176 186 mo
136.628 186.598 li
135.83 187.201 li
135.378 186.602 li
136.176 186 li
135.272 184.803 mo
135.724 185.401 li
134.926 186.004 li
134.474 185.405 li
135.272 184.803 li
134.41 183.593 mo
134.844 184.205 li
134.028 184.784 li
133.594 184.172 li
134.41 183.593 li
133.542 182.37 mo
133.976 182.982 li
133.16 183.56 li
132.726 182.949 li
133.542 182.37 li
132.674 181.147 mo
133.108 181.758 li
132.292 182.337 li
131.858 181.725 li
132.674 181.147 li
131.81 179.926 mo
131.955 180.134 li
131.953 180.13 li
132.24 180.535 li
131.424 181.114 li
131.137 180.709 li
131.134 180.705 li
130.989 180.497 li
131.81 179.926 li
130.954 178.694 mo
131.382 179.31 li
130.561 179.881 li
130.133 179.265 li
130.954 178.694 li
130.097 177.463 mo
130.525 178.079 li
129.705 178.65 li
129.276 178.034 li
130.097 177.463 li
129.24 176.232 mo
129.669 176.847 li
128.848 177.418 li
128.419 176.803 li
129.24 176.232 li
128.438 175.009 mo
128.711 175.471 li
128.812 175.616 li
127.991 176.187 li
127.88 176.027 li
127.86 175.996 li
127.577 175.518 li
128.438 175.009 li
127.675 173.718 mo
128.056 174.364 li
127.196 174.874 li
126.814 174.227 li
127.675 173.718 li
126.911 172.427 mo
127.293 173.073 li
126.432 173.582 li
126.05 172.936 li
126.911 172.427 li
126.148 171.136 mo
126.529 171.781 li
125.669 172.291 li
125.287 171.645 li
126.148 171.136 li
125.395 169.854 mo
125.469 169.988 li
125.766 170.49 li
124.905 171 li
124.605 170.491 li
124.598 170.479 li
124.52 170.339 li
125.395 169.854 li
124.668 168.543 mo
125.031 169.199 li
124.157 169.683 li
123.793 169.028 li
124.668 168.543 li
123.94 167.231 mo
124.304 167.887 li
123.429 168.373 li
123.066 167.716 li
123.94 167.231 li
123.213 165.919 mo
123.577 166.575 li
122.702 167.06 li
122.338 166.404 li
123.213 165.919 li
122.486 164.607 mo
122.849 165.263 li
121.975 165.748 li
121.611 165.092 li
122.486 164.607 li
121.751 163.295 mo
122.119 163.949 li
121.248 164.439 li
120.88 163.786 li
121.751 163.295 li
121.015 161.988 mo
121.383 162.642 li
120.512 163.132 li
120.144 162.479 li
121.015 161.988 li
120.279 160.681 mo
120.647 161.335 li
119.776 161.826 li
119.408 161.172 li
120.279 160.681 li
119.543 159.375 mo
119.911 160.028 li
119.04 160.519 li
118.672 159.865 li
119.543 159.375 li
118.796 158.062 mo
118.955 158.332 li
118.961 158.34 li
119.175 158.721 li
118.304 159.212 li
118.092 158.835 li
117.935 158.57 li
118.796 158.062 li
118.033 156.77 mo
118.414 157.417 li
117.554 157.925 li
117.172 157.279 li
118.033 156.77 li
117.269 155.479 mo
117.651 156.125 li
116.79 156.634 li
116.408 155.988 li
117.269 155.479 li
116.505 154.188 mo
116.887 154.834 li
116.026 155.343 li
115.645 154.697 li
116.505 154.188 li
115.742 152.897 mo
116.124 153.542 li
115.263 154.052 li
114.881 153.406 li
115.742 152.897 li
115 151.602 mo
115.372 152.253 li
114.504 152.75 li
114.132 152.098 li
115 151.602 li
114.254 150.3 mo
114.627 150.951 li
113.759 151.447 li
113.387 150.797 li
114.254 150.3 li
113.509 148.999 mo
113.882 149.649 li
113.014 150.146 li
112.642 149.495 li
113.509 148.999 li
112.765 147.696 mo
113.137 148.347 li
112.269 148.844 li
111.897 148.193 li
112.765 147.696 li
112.07 146.396 mo
112.409 147.065 li
111.517 147.517 li
111.178 146.848 li
112.07 146.396 li
111.392 145.058 mo
111.731 145.727 li
110.839 146.179 li
110.5 145.51 li
111.392 145.058 li
110.714 143.72 mo
111.053 144.389 li
110.161 144.841 li
109.822 144.172 li
110.714 143.72 li
110.036 142.382 mo
110.375 143.051 li
109.483 143.503 li
109.144 142.834 li
110.036 142.382 li
109.357 141.044 mo
109.696 141.713 li
108.805 142.166 li
108.465 141.496 li
109.357 141.044 li
108.664 139.707 mo
109.011 140.372 li
108.125 140.835 li
107.778 140.17 li
108.664 139.707 li
107.97 138.377 mo
108.317 139.042 li
107.431 139.505 li
107.084 138.84 li
107.97 138.377 li
107.277 137.047 mo
107.624 137.712 li
106.737 138.175 li
106.39 137.51 li
107.277 137.047 li
106.583 135.717 mo
106.93 136.382 li
106.043 136.845 li
105.696 136.18 li
106.583 135.717 li
105.897 134.397 mo
105.951 134.506 li
106.236 135.052 li
105.349 135.515 li
105.062 134.964 li
105.057 134.954 li
105 134.839 li
105.897 134.397 li
105.234 133.051 mo
105.565 133.724 li
104.668 134.166 li
104.337 133.493 li
105.234 133.051 li
104.571 131.705 mo
104.902 132.378 li
104.005 132.82 li
103.674 132.147 li
104.571 131.705 li
103.908 130.36 mo
104.239 131.033 li
103.342 131.475 li
103.011 130.802 li
103.908 130.36 li
103.245 129.014 mo
103.576 129.687 li
102.679 130.129 li
102.347 129.456 li
103.245 129.014 li
102.584 127.671 mo
102.7 127.909 li
102.698 127.906 li
102.913 128.342 li
102.016 128.784 li
101.802 128.348 li
101.8 128.346 li
101.685 128.108 li
102.584 127.671 li
101.928 126.322 mo
102.256 126.996 li
101.357 127.433 li
101.029 126.759 li
101.928 126.322 li
101.273 124.973 mo
101.6 125.647 li
100.701 126.084 li
100.373 125.41 li
101.273 124.973 li
100.617 123.623 mo
100.945 124.298 li
100.045 124.735 li
99.7168 124.061 li
100.617 123.623 li
99.9609 122.274 mo
100.289 122.949 li
99.3901 123.386 li
99.062 122.711 li
99.9609 122.274 li
99.3081 120.927 mo
99.4458 121.214 li
99.4448 121.212 li
99.6328 121.6 li
98.7339 122.037 li
98.5449 121.649 li
98.5439 121.646 li
98.4063 121.359 li
99.3081 120.927 li
98.6602 119.574 mo
98.9839 120.251 li
98.082 120.683 li
97.7578 120.007 li
98.6602 119.574 li
98.0112 118.222 mo
98.335 118.898 li
97.4341 119.33 li
97.1089 118.654 li
98.0112 118.222 li
97.3628 116.869 mo
97.687 117.546 li
96.7852 117.978 li
96.4609 117.302 li
97.3628 116.869 li
96.7139 115.517 mo
97.0381 116.193 li
96.1372 116.625 li
95.812 115.949 li
96.7139 115.517 li
96.0752 114.171 mo
96.1929 114.43 li
96.3901 114.84 li
95.4878 115.273 li
95.2891 114.858 li
95.2852 114.849 li
95.165 114.585 li
96.0752 114.171 li
95.4541 112.805 mo
95.7651 113.488 li
94.854 113.902 li
94.5439 113.22 li
95.4541 112.805 li
94.833 111.44 mo
95.144 112.123 li
94.2329 112.537 li
93.9229 111.854 li
94.833 111.44 li
94.2119 110.075 mo
94.522 110.757 li
93.6118 111.171 li
93.3018 110.489 li
94.2119 110.075 li
93.5908 108.709 mo
93.9009 109.392 li
92.9912 109.806 li
92.6812 109.123 li
93.5908 108.709 li
92.9702 107.344 mo
93.2798 108.027 li
92.3701 108.441 li
92.0591 107.758 li
92.9702 107.344 li
92.2852 105.986 mo
92.624 106.655 li
91.7319 107.107 li
91.3931 106.438 li
92.2852 105.986 li
91.6069 104.648 mo
91.9458 105.317 li
91.0542 105.769 li
90.7148 105.1 li
91.6069 104.648 li
90.9292 103.31 mo
91.2681 103.979 li
90.376 104.431 li
90.0371 103.762 li
90.9292 103.31 li
90.251 101.972 mo
90.5898 102.641 li
89.6982 103.093 li
89.3589 102.424 li
90.251 101.972 li
89.6069 100.663 mo
89.6851 100.856 li
89.9121 101.303 li
89.02 101.755 li
88.7842 101.29 li
88.7671 101.253 li
88.6812 101.041 li
89.6069 100.663 li
89.04 99.2739 mo
89.3232 99.9692 li
88.397 100.346 li
88.1138 99.6519 li
89.04 99.2739 li
88.4741 97.8853 mo
88.7568 98.5801 li
87.8311 98.958 li
87.5479 98.2632 li
88.4741 97.8853 li
87.9072 96.4961 mo
88.1909 97.1909 li
87.2642 97.5688 li
86.981 96.874 li
87.9072 96.4961 li
87.3408 95.1079 mo
87.624 95.8022 li
86.6982 96.1802 li
86.415 95.4849 li
87.3408 95.1079 li
86.7739 93.7192 mo
87.0581 94.4131 li
86.1318 94.791 li
85.8491 94.0962 li
86.7739 93.7192 li
86.1782 92.3208 mo
86.4302 92.875 li
86.438 92.894 li
86.4912 93.0239 li
85.5649 93.4019 li
85.5161 93.2798 li
85.2681 92.7349 li
86.1782 92.3208 li
85.5571 90.9561 mo
85.8672 91.6382 li
84.957 92.0522 li
84.647 91.3701 li
85.5571 90.9561 li
84.936 89.5898 mo
85.2461 90.2729 li
84.3359 90.687 li
84.0259 90.0039 li
84.936 89.5898 li
84.3149 88.2251 mo
84.625 88.9082 li
83.7148 89.3223 li
83.4038 88.6392 li
84.3149 88.2251 li
83.6938 86.8589 mo
84.0039 87.542 li
83.0942 87.9561 li
82.7832 87.2729 li
83.6938 86.8589 li
83.0811 85.501 mo
83.1782 85.7251 li
83.3828 86.1772 li
82.4731 86.5913 li
82.2651 86.1343 li
82.2612 86.125 li
82.1631 85.8979 li
83.0811 85.501 li
82.4849 84.124 mo
82.7832 84.812 li
81.8652 85.209 li
81.5669 84.521 li
82.4849 84.124 li
81.8892 82.7471 mo
82.187 83.436 li
81.269 83.833 li
80.9712 83.145 li
81.8892 82.7471 li
81.2939 81.3711 mo
81.5908 82.0591 li
80.6738 82.4561 li
80.376 81.7681 li
81.2939 81.3711 li
80.6982 79.9941 mo
80.9961 80.6821 li
80.0781 81.0801 li
79.7798 80.3911 li
80.6982 79.9941 li
80.1021 78.6172 mo
80.3999 79.3062 li
79.4819 79.7031 li
79.1841 79.0151 li
80.1021 78.6172 li
79.479 77.2402 mo
79.793 77.9209 li
78.8848 78.3398 li
78.5708 77.6592 li
79.479 77.2402 li
78.8521 75.8779 mo
79.165 76.5591 li
78.2568 76.9771 li
77.9429 76.2959 li
78.8521 75.8779 li
78.2241 74.5151 mo
78.5381 75.1973 li
77.6299 75.6152 li
77.3159 74.9341 li
78.2241 74.5151 li
77.5962 73.1528 mo
77.9102 73.834 li
77.002 74.2529 li
76.688 73.5723 li
77.5962 73.1528 li
76.9678 71.791 mo
77.2822 72.4722 li
76.374 72.8901 li
76.0601 72.209 li
76.9678 71.791 li
76.3271 70.4272 mo
76.6509 71.103 li
75.749 71.5352 li
75.4248 70.8589 li
76.3271 70.4272 li
75.6782 69.0742 mo
76.002 69.75 li
75.1011 70.1831 li
74.7759 69.5059 li
75.6782 69.0742 li
75.0298 67.7212 mo
75.354 68.3979 li
74.4521 68.8301 li
74.1279 68.1538 li
75.0298 67.7212 li
74.3809 66.3691 mo
74.7051 67.0449 li
73.8042 67.478 li
73.479 66.8013 li
74.3809 66.3691 li
73.7329 65.0161 mo
74.0571 65.6929 li
73.1548 66.125 li
72.8311 65.4492 li
73.7329 65.0161 li
73.0591 63.6611 mo
73.3999 64.3223 li
73.4063 64.335 li
73.4082 64.3403 li
72.5068 64.772 li
72.5039 64.7671 li
72.9551 64.5513 li
72.5098 64.7798 li
72.1699 64.1182 li
73.0591 63.6611 li
72.373 62.3262 mo
72.7158 62.9932 li
71.8271 63.4512 li
71.4839 62.7842 li
72.373 62.3262 li
71.688 60.9922 mo
72.0298 61.6602 li
71.1411 62.1172 li
70.7979 61.4502 li
71.688 60.9922 li
71.002 59.6592 mo
71.3438 60.3252 li
70.4551 60.7832 li
70.1118 60.1162 li
71.002 59.6592 li
70.3159 58.3252 mo
70.6592 58.9922 li
69.769 59.4492 li
69.4258 58.7822 li
70.3159 58.3252 li
69.6572 56.9893 mo
69.9849 57.6641 li
69.0859 58.1011 li
68.7578 57.4263 li
69.6572 56.9893 li
69.002 55.6401 mo
69.3301 56.3149 li
68.4302 56.752 li
68.1021 56.0771 li
69.002 55.6401 li
68.3462 54.291 mo
68.6738 54.9663 li
67.7749 55.4028 li
67.4468 54.728 li
68.3462 54.291 li
67.6899 52.9419 mo
68.0181 53.6172 li
67.1191 54.0542 li
66.791 53.3789 li
67.6899 52.9419 li
67.0352 51.5933 mo
67.3618 52.2671 li
66.4629 52.7051 li
66.1348 52.0298 li
67.0352 51.5933 li
66.293 50.251 mo
66.665 50.9019 li
65.7979 51.3989 li
65.4248 50.748 li
66.293 50.251 li
65.5479 48.9492 mo
65.9199 49.6001 li
65.0518 50.0972 li
64.6802 49.4458 li
65.5479 48.9492 li
64.8032 47.647 mo
65.1748 48.2979 li
64.3071 48.7949 li
63.9351 48.144 li
64.8032 47.647 li
64.0581 46.3462 mo
64.4302 46.9961 li
63.562 47.4932 li
63.1899 46.8423 li
64.0581 46.3462 li
63.2769 45.0391 mo
63.6118 45.5679 li
63.624 45.5869 li
63.6851 45.6948 li
62.8169 46.1909 li
62.7612 46.0942 li
62.4321 45.5742 li
63.2769 45.0391 li
62.4741 43.772 mo
62.876 44.4053 li
62.0313 44.9409 li
61.6299 44.3071 li
62.4741 43.772 li
61.6719 42.5049 mo
62.0732 43.1382 li
61.228 43.6743 li
60.8271 43.04 li
61.6719 42.5049 li
60.8691 41.2383 mo
61.27 41.8711 li
60.4248 42.4063 li
60.0239 41.7729 li
60.8691 41.2383 li
59.998 39.9619 mo
60.3311 40.3931 li
60.3569 40.4312 li
60.4668 40.604 li
59.623 41.1392 li
59.5249 40.9849 li
59.2061 40.5723 li
59.998 39.9619 li
59.082 38.7739 mo
59.54 39.3682 li
58.748 39.978 li
58.29 39.3853 li
59.082 38.7739 li
58.166 37.5859 mo
58.624 38.1802 li
57.832 38.791 li
57.374 38.1973 li
58.166 37.5859 li
57.25 36.3979 mo
57.708 36.9922 li
56.916 37.603 li
56.458 37.0093 li
57.25 36.3979 li
56.2002 35.2549 mo
56.7192 35.7959 li
55.9971 36.4878 li
55.478 35.9473 li
56.2002 35.2549 li
55.1621 34.1719 mo
55.6812 34.7139 li
54.959 35.4063 li
54.4399 34.8652 li
55.1621 34.1719 li
54.123 33.0903 mo
54.6431 33.6309 li
53.9209 34.3232 li
53.4019 33.7822 li
54.123 33.0903 li
52.9922 32.041 mo
53.5571 32.5352 li
52.8989 33.2881 li
52.334 32.7939 li
52.9922 32.041 li
51.8618 31.0542 mo
52.4272 31.5479 li
51.769 32.3013 li
51.2041 31.8071 li
51.8618 31.0542 li
50.7329 30.0669 mo
51.2969 30.561 li
50.6392 31.314 li
50.0752 30.8198 li
50.7329 30.0669 li
49.335 29.2549 mo
50.0039 29.5952 li
49.5522 30.4868 li
48.8828 30.147 li
49.335 29.2549 li
47.9971 28.5771 mo
48.666 28.916 li
48.2139 29.8081 li
47.5449 29.4692 li
47.9971 28.5771 li
46.5313 27.9609 mo
47.0508 28.1069 li
47.1411 28.1431 li
47.3291 28.2378 li
46.876 29.1289 li
46.7319 29.0562 li
46.2598 28.9229 li
46.5313 27.9609 li
45.0869 27.5542 mo
45.8091 27.7573 li
45.5381 28.7202 li
44.8159 28.5161 li
45.0869 27.5542 li
43.6431 27.147 mo
43.7959 27.1899 li
44.3652 27.3501 li
44.0938 28.313 li
43.5239 28.1519 li
43.3721 28.1089 li
43.6431 27.147 li
42.2002 26.7402 mo
42.9219 26.9429 li
42.6499 27.9063 li
41.9282 27.7021 li
42.2002 26.7402 li
40.7559 26.333 mo
41.478 26.5361 li
41.207 27.499 li
40.4849 27.2959 li
40.7559 26.333 li
39.1431 26.2183 mo
39.8931 26.2393 li
39.8652 27.2393 li
39.1152 27.2173 li
39.1431 26.2183 li
37.644 26.1763 mo
38.394 26.1973 li
38.3652 27.1963 li
37.6162 27.1753 li
37.644 26.1763 li
36.1299 26.1621 mo
36.8799 26.1621 li
36.8799 27.1621 li
36.1299 27.1621 li
36.1299 26.1621 li
34.6299 26.1621 mo
35.3799 26.1621 li
35.3799 27.1621 li
34.6299 27.1621 li
34.6299 26.1621 li
33.1299 26.1621 mo
33.8799 26.1621 li
33.8799 27.1621 li
33.1299 27.1621 li
33.1299 26.1621 li
31.6299 26.1621 mo
32.3799 26.1621 li
32.3799 27.1621 li
31.6299 27.1621 li
31.6299 26.1621 li
30.1299 26.1621 mo
30.6401 26.1621 li
30.8799 26.1621 li
30.8799 27.1621 li
30.6401 27.1621 li
30.1299 27.1621 li
30.1299 26.1621 li
28.6299 26.1621 mo
29.3799 26.1621 li
29.3799 27.1621 li
28.6299 27.1621 li
28.6299 26.1621 li
27.1299 26.1621 mo
27.3848 26.1621 li
27.8799 26.1621 li
27.8799 27.1621 li
27.3848 27.1621 li
27.1299 27.1621 li
27.1299 26.1621 li
25.6299 26.1621 mo
26.3799 26.1621 li
26.3799 27.1621 li
25.6299 27.1621 li
25.6299 26.1621 li
24.1299 26.1621 mo
24.8799 26.1621 li
24.8799 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
.67953 .634058 .618097 .562646 cmyk
f
336.127 259.875 mo
335.377 259.875 li
335.377 259.865 li
336.127 259.865 li
336.127 259.875 li
337.627 259.875 mo
336.877 259.875 li
336.877 259.866 li
337.627 259.868 li
337.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
335.377 259.875 mo
334.925 259.875 li
334.925 259.865 li
335.377 259.865 li
335.377 259.875 li
336.877 259.875 mo
336.61 259.875 li
336.127 259.875 li
336.127 259.865 li
336.61 259.865 li
336.877 259.866 li
336.877 259.875 li
337.925 259.875 mo
337.627 259.875 li
337.627 259.868 li
337.925 259.869 li
337.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
330.127 259.875 mo
330.1 259.875 li
329.377 259.875 li
329.377 259.792 li
330.1 259.811 li
330.127 259.812 li
330.127 259.875 li
331.627 259.875 mo
330.877 259.875 li
330.877 259.824 li
331.627 259.837 li
331.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
329.377 259.875 mo
328.925 259.875 li
328.925 259.779 li
329.377 259.792 li
329.377 259.875 li
330.877 259.875 mo
330.127 259.875 li
330.127 259.812 li
330.877 259.824 li
330.877 259.875 li
331.925 259.875 mo
331.627 259.875 li
331.627 259.837 li
331.925 259.842 li
331.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
324.127 259.875 mo
323.59 259.875 li
323.377 259.875 li
323.377 259.575 li
323.59 259.58 li
324.127 259.604 li
324.127 259.875 li
325.627 259.875 mo
324.877 259.875 li
324.877 259.637 li
325.627 259.67 li
325.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
323.377 259.875 mo
322.925 259.875 li
322.925 259.563 li
323.377 259.575 li
323.377 259.875 li
324.877 259.875 mo
324.127 259.875 li
324.127 259.604 li
324.877 259.637 li
324.877 259.875 li
325.925 259.875 mo
325.627 259.875 li
325.627 259.67 li
325.925 259.683 li
325.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
318.127 259.875 mo
317.377 259.875 li
317.377 259.126 li
318.127 259.219 li
318.127 259.875 li
319.627 259.875 mo
318.877 259.875 li
318.877 259.313 li
319.627 259.406 li
319.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
317.377 259.875 mo
317.08 259.875 li
316.925 259.875 li
316.925 259.088 li
317.049 259.088 li
317.08 259.089 li
317.377 259.126 li
317.377 259.875 li
318.877 259.875 mo
318.127 259.875 li
318.127 259.219 li
318.877 259.313 li
318.877 259.875 li
319.925 259.875 mo
319.627 259.875 li
319.627 259.406 li
319.925 259.443 li
319.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
312.127 259.875 mo
311.377 259.875 li
311.377 259.088 li
312.127 259.088 li
312.127 259.875 li
313.627 259.875 mo
312.877 259.875 li
312.877 259.088 li
313.627 259.088 li
313.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
311.377 259.875 mo
310.925 259.875 li
310.925 259.088 li
311.377 259.088 li
311.377 259.875 li
312.877 259.875 mo
312.127 259.875 li
312.127 259.088 li
312.877 259.088 li
312.877 259.875 li
313.925 259.875 mo
313.825 259.875 li
313.627 259.875 li
313.627 259.088 li
313.825 259.088 li
313.925 259.088 li
313.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
306.127 259.875 mo
305.377 259.875 li
305.377 259.088 li
306.127 259.088 li
306.127 259.875 li
307.627 259.875 mo
307.315 259.875 li
306.877 259.875 li
306.877 259.088 li
307.315 259.088 li
307.627 259.088 li
307.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
305.377 259.875 mo
304.925 259.875 li
304.925 259.088 li
305.377 259.088 li
305.377 259.875 li
306.877 259.875 mo
306.127 259.875 li
306.127 259.088 li
306.877 259.088 li
306.877 259.875 li
307.925 259.875 mo
307.627 259.875 li
307.627 259.088 li
307.925 259.088 li
307.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
300.127 259.875 mo
299.377 259.875 li
299.377 259.088 li
300.127 259.088 li
300.127 259.875 li
301.627 259.875 mo
300.877 259.875 li
300.877 259.088 li
301.627 259.088 li
301.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
299.377 259.875 mo
298.925 259.875 li
298.925 259.088 li
299.377 259.088 li
299.377 259.875 li
300.877 259.875 mo
300.805 259.875 li
300.127 259.875 li
300.127 259.088 li
300.805 259.088 li
300.877 259.088 li
300.877 259.875 li
301.925 259.875 mo
301.627 259.875 li
301.627 259.088 li
301.925 259.088 li
301.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
294.127 259.875 mo
293.377 259.875 li
293.377 259.088 li
294.127 259.088 li
294.127 259.875 li
295.627 259.875 mo
294.877 259.875 li
294.877 259.088 li
295.627 259.088 li
295.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
293.377 259.875 mo
292.925 259.875 li
292.925 259.088 li
293.377 259.088 li
293.377 259.875 li
294.877 259.875 mo
294.295 259.875 li
294.127 259.875 li
294.127 259.088 li
294.295 259.088 li
294.877 259.088 li
294.877 259.875 li
295.925 259.875 mo
295.627 259.875 li
295.627 259.088 li
295.925 259.088 li
295.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
288.127 259.875 mo
287.785 259.875 li
287.377 259.875 li
287.377 259.088 li
287.785 259.088 li
288.127 259.088 li
288.127 259.875 li
289.627 259.875 mo
288.877 259.875 li
288.877 259.088 li
289.627 259.088 li
289.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
287.377 259.875 mo
286.925 259.875 li
286.925 259.088 li
287.377 259.088 li
287.377 259.875 li
288.877 259.875 mo
288.127 259.875 li
288.127 259.088 li
288.877 259.088 li
288.877 259.875 li
289.925 259.875 mo
289.627 259.875 li
289.627 259.088 li
289.925 259.088 li
289.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
282.127 259.875 mo
281.377 259.875 li
281.377 259.088 li
282.127 259.088 li
282.127 259.875 li
283.627 259.875 mo
282.877 259.875 li
282.877 259.088 li
283.627 259.088 li
283.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
281.377 259.875 mo
281.275 259.875 li
280.925 259.875 li
280.925 259.088 li
281.275 259.088 li
281.377 259.088 li
281.377 259.875 li
282.877 259.875 mo
282.127 259.875 li
282.127 259.088 li
282.877 259.088 li
282.877 259.875 li
283.925 259.875 mo
283.627 259.875 li
283.627 259.088 li
283.925 259.088 li
283.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
276.127 259.875 mo
275.377 259.875 li
275.377 259.088 li
276.127 259.088 li
276.127 259.875 li
277.627 259.875 mo
276.877 259.875 li
276.877 259.088 li
277.627 259.088 li
277.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
275.377 259.875 mo
274.925 259.875 li
274.925 259.088 li
275.377 259.088 li
275.377 259.875 li
276.877 259.875 mo
276.127 259.875 li
276.127 259.088 li
276.877 259.088 li
276.877 259.875 li
277.925 259.875 mo
277.627 259.875 li
277.627 259.088 li
277.925 259.088 li
277.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
270.127 259.875 mo
269.377 259.875 li
269.377 259.088 li
270.127 259.088 li
270.127 259.875 li
271.627 259.875 mo
271.51 259.875 li
270.877 259.875 li
270.877 259.088 li
271.51 259.088 li
271.627 259.088 li
271.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
269.377 259.875 mo
268.925 259.875 li
268.925 259.088 li
269.377 259.088 li
269.377 259.875 li
270.877 259.875 mo
270.127 259.875 li
270.127 259.088 li
270.877 259.088 li
270.877 259.875 li
271.925 259.875 mo
271.627 259.875 li
271.627 259.088 li
271.925 259.088 li
271.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
264.116 259.875 mo
263.366 259.875 li
263.366 259.87 li
264.116 259.873 li
264.116 259.875 li
265.627 259.875 mo
265 259.875 li
264.866 259.875 li
264.866 259.875 li
265 259.875 li
265.627 259.875 li
.426154 .347417 .353185 .00985733 cmyk
f
264.116 259.873 mo
263.366 259.87 li
263.388 259.088 li
264.138 259.088 li
264.116 259.873 li
265.627 259.875 mo
265 259.875 li
264.866 259.875 li
264.889 259.088 li
265 259.088 li
265.627 259.088 li
265.627 259.875 li
.621485 .541985 .531304 .262943 cmyk
f
263.366 259.875 mo
262.925 259.875 li
262.925 259.088 li
263.388 259.088 li
263.366 259.87 li
263.366 259.875 li
264.866 259.875 mo
264.116 259.875 li
264.116 259.873 li
264.138 259.088 li
264.889 259.088 li
264.866 259.875 li
264.866 259.875 li
265.925 259.875 mo
265.627 259.875 li
265.627 259.088 li
265.925 259.088 li
265.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
96.1509 27.2593 mo
95.9048 28.229 li
98.812 28.9658 li
99.0581 27.9971 li
96.1509 27.2593 li
101.709 29.729 mo
101.149 30.5571 li
101.878 31.0513 li
102.857 32.6782 li
103.714 32.1621 li
102.679 30.4409 li
102.53 30.2842 li
101.709 29.729 li
105.26 34.7329 mo
104.403 35.249 li
105.045 36.3169 li
105.526 37.876 li
106.482 37.5811 li
105.983 35.9639 li
105.934 35.853 li
105.26 34.7329 li
107.366 40.4482 mo
106.411 40.7432 li
107.295 43.6089 li
108.251 43.3149 li
107.366 40.4482 li
109.135 46.1812 mo
108.18 46.4761 li
108.276 46.7891 li
108.842 49.3589 li
109.819 49.144 li
109.248 46.5542 li
109.238 46.5142 li
109.135 46.1812 li
110.465 52.0732 mo
109.488 52.2881 li
110.134 55.2183 li
111.11 55.0029 li
110.465 52.0732 li
111.756 57.9331 mo
110.779 58.1479 li
111.425 61.0781 li
112.401 60.8618 li
111.756 57.9331 li
113.007 63.8091 mo
112.027 64.0083 li
112.623 66.9482 li
113.603 66.749 li
113.007 63.8091 li
114.199 69.689 mo
113.219 69.8882 li
113.815 72.8281 li
114.795 72.6299 li
114.199 69.689 li
115.392 75.5698 mo
114.411 75.769 li
114.78 77.5859 li
114.782 77.5952 li
115.032 78.7139 li
116.008 78.4961 li
115.759 77.3833 li
115.392 75.5698 li
116.661 81.4243 mo
115.685 81.6421 li
116.338 84.5698 li
117.314 84.3521 li
116.661 81.4243 li
117.968 87.2798 mo
116.992 87.498 li
117.645 90.4253 li
118.621 90.208 li
117.968 87.2798 li
119.296 93.1201 mo
118.325 93.3579 li
119.038 96.272 li
120.009 96.0342 li
119.296 93.1201 li
120.722 98.9482 mo
119.751 99.186 li
120.464 102.1 li
121.435 101.862 li
120.722 98.9482 li
122.148 104.776 mo
121.177 105.014 li
121.294 105.493 li
121.882 107.928 li
122.854 107.694 li
122.266 105.257 li
122.148 104.776 li
123.558 110.61 mo
122.586 110.845 li
123.289 113.761 li
124.262 113.526 li
123.558 110.61 li
124.965 116.442 mo
123.993 116.677 li
124.549 118.979 li
124.553 118.993 li
124.719 119.603 li
125.684 119.34 li
125.519 118.737 li
124.965 116.442 li
126.474 122.234 mo
125.509 122.497 li
126.299 125.391 li
127.264 125.128 li
126.474 122.234 li
128.053 128.022 mo
127.089 128.285 li
127.808 130.92 li
127.809 130.925 li
127.883 131.185 li
128.845 130.91 li
128.772 130.654 li
128.053 128.022 li
129.67 133.794 mo
128.709 134.069 li
129.534 136.953 li
130.495 136.678 li
129.67 133.794 li
131.321 139.562 mo
130.359 139.837 li
131.064 142.301 li
131.07 142.321 li
131.208 142.736 li
132.157 142.421 li
132.023 142.017 li
131.321 139.562 li
133.101 145.269 mo
132.152 145.584 li
133.096 148.431 li
134.046 148.116 li
133.101 145.269 li
134.99 150.964 mo
134.041 151.279 li
134.325 152.138 li
134.329 152.149 li
135.036 154.121 li
135.978 153.784 li
135.273 151.818 li
134.99 150.964 li
136.99 156.608 mo
136.048 156.945 li
137.06 159.769 li
138.002 159.432 li
136.99 156.608 li
139.079 162.201 mo
138.158 162.59 li
139.325 165.354 li
140.246 164.965 li
139.079 162.201 li
141.413 167.728 mo
140.492 168.117 li
140.849 168.963 li
140.854 168.974 li
141.707 170.873 li
142.619 170.463 li
141.768 168.568 li
141.413 167.728 li
143.848 173.2 mo
142.936 173.609 li
144.109 176.221 li
144.115 176.235 li
144.175 176.358 li
145.074 175.921 li
145.018 175.805 li
143.848 173.2 li
146.386 178.619 mo
145.487 179.056 li
146.798 181.754 li
147.697 181.317 li
146.386 178.619 li
148.995 184.028 mo
148.091 184.455 li
149.374 187.167 li
150.278 186.74 li
148.995 184.028 li
151.553 189.427 mo
150.672 189.9 li
152.092 192.543 li
152.973 192.069 li
151.553 189.427 li
154.394 194.712 mo
153.513 195.185 li
153.89 195.886 li
153.9 195.903 li
155.022 197.801 li
155.883 197.292 li
154.766 195.404 li
154.394 194.712 li
157.409 199.875 mo
156.549 200.383 li
157.155 201.408 li
157.163 201.421 li
158.131 202.95 li
158.976 202.414 li
158.011 200.891 li
157.409 199.875 li
160.581 204.949 mo
159.737 205.484 li
160.418 206.558 li
160.422 206.565 li
161.371 208.009 li
162.207 207.46 li
161.261 206.021 li
160.581 204.949 li
163.854 209.968 mo
163.018 210.517 li
163.677 211.52 li
163.699 211.55 li
164.798 212.976 li
165.59 212.365 li
164.503 210.955 li
163.854 209.968 li
245.47 258.895 mo
244.955 258.895 li
244.956 258.879 li
242.243 258.726 li
241.96 258.71 li
241.951 258.881 li
238.964 258.717 li
238.979 258.542 li
235.99 258.29 li
235.979 258.417 li
235.705 258.389 li
232.45 257.625 li
229.195 257.042 li
225.94 255.71 li
222.685 254.253 li
219.43 253.067 li
216.175 252.057 li
212.92 250.352 li
209.665 248.17 li
206.41 245.572 li
203.155 243.861 li
199.9 242.815 li
196.645 240.142 li
193.39 238.083 li
190.135 235.933 li
186.88 233.168 li
183.625 231.542 li
180.37 229.193 li
177.115 226.116 li
176.673 225.657 li
175.238 223.836 li
175.06 223.977 li
173.86 222.728 li
173.063 221.72 li
173.299 221.51 li
171.308 219.266 li
171.199 219.363 li
170.605 218.613 li
169.125 217.196 li
169.345 217.006 li
167.737 215.148 li
167.423 214.74 li
166.892 215.15 li
164.095 213.03 li
160.84 210.062 li
157.585 206.158 li
154.33 203.016 li
151.075 198.816 li
147.82 194.287 li
145.063 190.664 li
144.565 189.789 li
141.31 182.78 li
138.055 175.272 li
134.8 167.018 li
131.545 157.612 li
128.29 147.536 li
125.035 137.443 li
121.78 124.715 li
118.525 112.815 li
115.27 99.1938 li
112.015 83.3262 li
108.76 67.001 li
105.505 53.0811 li
102.25 42.2192 li
98.9951 36.7041 li
95.7402 32.0479 li
92.4849 28.1001 li
90.6348 27.2822 li
92.4092 27.4321 li
92.9932 27.564 li
93.2129 26.5889 li
92.5952 26.4492 li
92.5269 26.439 li
90.6309 26.2793 li
92.4849 25.771 li
95.7402 23.2529 li
98.9951 20.1421 li
102.25 18.8823 li
105.505 18.4751 li
108.76 25.3062 li
112.015 38.2612 li
115.27 54.4072 li
118.525 69.9673 li
121.78 84.748 li
125.035 98.9731 li
128.29 112.882 li
131.545 125.636 li
134.8 135.822 li
138.055 145.759 li
141.31 153.597 li
144.565 161.018 li
147.82 168.769 li
151.075 174.979 li
154.33 182.705 li
157.585 188.379 li
160.84 194.793 li
164.095 200.082 li
167.35 205.533 li
170.605 210.411 li
173.86 214.779 li
177.115 219.039 li
180.37 222.666 li
183.625 225.488 li
186.88 228.172 li
190.135 231.131 li
193.39 234.565 li
196.645 238.119 li
199.9 240.548 li
203.155 242.319 li
206.41 244.835 li
209.665 246.312 li
212.92 248.116 li
216.175 250.545 li
219.43 252.349 li
222.685 253.102 li
225.94 254.25 li
229.195 255.826 li
232.45 256.929 li
235.705 257.685 li
238.96 258.237 li
242.215 258.549 li
245.47 258.895 li
259.628 259.868 mo
258.878 259.866 li
258.878 259.865 li
259.628 259.865 li
259.628 259.868 li
.426154 .347417 .353185 .00985733 cmyk
f
164.87 220.481 mo
164.168 221.193 li
164.702 221.72 li
165.404 221.008 li
164.87 220.481 li
165.938 221.535 mo
165.236 222.248 li
165.77 222.773 li
166.472 222.061 li
165.938 221.535 li
167.006 222.588 mo
166.304 223.3 li
166.837 223.827 li
167.54 223.115 li
167.006 222.588 li
168.072 223.574 mo
167.439 224.348 li
168.019 224.823 li
168.652 224.049 li
168.072 223.574 li
169.233 224.523 mo
168.6 225.298 li
169.181 225.772 li
169.814 224.998 li
169.233 224.523 li
170.395 225.473 mo
169.762 226.247 li
170.271 226.663 li
170.303 226.695 li
171.006 225.983 li
170.956 225.934 li
170.921 225.903 li
170.395 225.473 li
171.539 226.51 mo
170.837 227.222 li
171.371 227.75 li
172.073 227.037 li
171.539 226.51 li
172.607 227.563 mo
171.905 228.275 li
172.439 228.802 li
173.141 228.09 li
172.607 227.563 li
173.675 228.617 mo
172.973 229.329 li
173.507 229.855 li
174.209 229.143 li
173.675 228.617 li
174.753 229.602 mo
174.108 230.366 li
174.68 230.85 li
175.326 230.086 li
174.753 229.602 li
179.055 228.414 mo
178.316 229.087 li
180 230.939 li
180.009 230.948 li
180.353 231.307 li
181.075 230.615 li
180.734 230.26 li
179.055 228.414 li
175.899 230.571 mo
175.253 231.334 li
175.826 231.818 li
176.472 231.055 li
175.899 230.571 li
177.044 231.539 mo
176.399 232.303 li
176.79 232.634 li
176.963 232.785 li
177.621 232.031 li
177.444 231.877 li
177.438 231.872 li
177.044 231.539 li
178.185 232.525 mo
177.527 233.278 li
178.092 233.771 li
178.75 233.018 li
178.185 232.525 li
179.315 233.512 mo
178.657 234.265 li
179.222 234.758 li
179.88 234.005 li
179.315 233.512 li
183.151 232.78 mo
182.429 233.472 li
183.264 234.343 li
183.315 234.389 li
184.724 235.501 li
185.343 234.716 li
183.962 233.626 li
183.151 232.78 li
180.445 234.5 mo
179.787 235.252 li
180.041 235.474 li
180.067 235.495 li
180.395 235.745 li
181.001 234.949 li
180.686 234.71 li
180.445 234.5 li
181.598 235.403 mo
180.992 236.199 li
181.589 236.653 li
182.195 235.858 li
181.598 235.403 li
182.791 236.312 mo
182.186 237.108 li
182.783 237.562 li
183.388 236.766 li
182.791 236.312 li
183.972 237.208 mo
183.396 238.025 li
184.009 238.457 li
184.585 237.639 li
183.972 237.208 li
187.697 236.602 mo
187.052 237.365 li
189.342 239.302 li
189.988 238.539 li
187.697 236.602 li
185.198 238.071 mo
184.622 238.889 li
185.235 239.321 li
185.811 238.503 li
185.198 238.071 li
186.424 238.935 mo
185.848 239.753 li
186.461 240.185 li
187.037 239.367 li
186.424 238.935 li
187.639 239.722 mo
187.148 240.593 li
187.802 240.962 li
188.293 240.091 li
187.639 239.722 li
188.946 240.459 mo
188.455 241.33 li
189.109 241.698 li
189.599 240.827 li
188.946 240.459 li
190.253 241.195 mo
189.762 242.067 li
189.856 242.119 li
190.299 242.469 li
190.918 241.684 li
190.445 241.31 li
190.381 241.267 li
190.253 241.195 li
192.373 240.283 mo
191.797 241.1 li
193.091 242.012 li
194.182 242.874 li
194.801 242.088 li
193.7 241.219 li
193.678 241.202 li
192.373 240.283 li
191.507 242.149 mo
190.888 242.934 li
191.476 243.399 li
192.096 242.614 li
191.507 242.149 li
192.685 243.078 mo
192.065 243.863 li
192.654 244.328 li
193.273 243.543 li
192.685 243.078 li
193.836 243.965 mo
193.292 244.804 li
193.921 245.212 li
194.465 244.374 li
193.836 243.965 li
195.094 244.781 mo
194.55 245.62 li
195.18 246.028 li
195.724 245.189 li
195.094 244.781 li
197.114 243.87 mo
196.623 244.742 li
199.236 246.215 li
199.727 245.343 li
197.114 243.87 li
196.353 245.597 mo
195.809 246.436 li
196.373 246.801 li
196.409 246.822 li
196.478 246.859 li
196.95 245.978 li
196.9 245.951 li
196.353 245.597 li
197.611 246.332 mo
197.139 247.213 li
197.8 247.567 li
198.272 246.686 li
197.611 246.332 li
198.933 247.041 mo
198.461 247.921 li
199.122 248.276 li
199.594 247.394 li
198.933 247.041 li
200.247 247.74 mo
199.795 248.632 li
200.464 248.971 li
200.916 248.079 li
200.247 247.74 li
202.358 246.764 mo
201.886 247.645 li
202.919 248.199 li
204.53 249.061 li
205.002 248.18 li
203.391 247.317 li
202.358 246.764 li
201.585 248.419 mo
201.132 249.311 li
201.801 249.65 li
202.254 248.758 li
201.585 248.419 li
202.923 249.098 mo
202.47 249.989 li
202.929 250.222 li
202.983 250.246 li
203.204 250.327 li
203.548 249.388 li
203.355 249.317 li
202.923 249.098 li
204.253 249.646 mo
203.908 250.585 li
204.613 250.843 li
204.957 249.904 li
204.253 249.646 li
205.661 250.162 mo
205.317 251.101 li
206.021 251.359 li
206.365 250.42 li
205.661 250.162 li
207.648 249.422 mo
207.304 250.361 li
209.481 251.159 li
210.086 251.416 li
210.476 250.493 li
209.86 250.233 li
209.837 250.224 li
207.648 249.422 li
207.094 250.742 mo
206.662 251.644 li
207.338 251.968 li
207.77 251.066 li
207.094 250.742 li
208.447 251.39 mo
208.015 252.292 li
208.691 252.616 li
209.123 251.714 li
208.447 251.39 li
209.8 252.039 mo
209.367 252.94 li
209.449 252.979 li
209.47 252.989 li
210.078 253.246 li
210.467 252.325 li
209.87 252.072 li
209.8 252.039 li
211.158 252.617 mo
210.769 253.539 li
211.459 253.83 li
211.849 252.909 li
211.158 252.617 li
213.266 251.685 mo
212.814 252.577 li
215.489 253.934 li
215.942 253.042 li
213.266 251.685 li
212.54 253.201 mo
212.15 254.122 li
212.725 254.365 li
212.772 254.382 li
212.892 254.419 li
213.188 253.464 li
213.092 253.434 li
212.54 253.201 li
213.905 253.686 mo
213.608 254.641 li
214.325 254.864 li
214.621 253.908 li
213.905 253.686 li
215.337 254.13 mo
215.041 255.086 li
215.758 255.308 li
216.054 254.353 li
215.337 254.13 li
216.751 254.544 mo
216.506 255.513 li
217.233 255.698 li
217.478 254.728 li
216.751 254.544 li
221.057 255.928 mo
220.82 256.694 li
221.536 256.916 li
221.832 255.961 li
221.282 255.791 li
221.441 254.984 li
219.577 254.616 li
218.658 254.228 li
218.353 254.95 li
218.205 254.913 li
217.96 255.882 li
218.686 256.067 li
218.856 255.397 li
219.235 255.558 li
219.333 255.588 li
219.577 255.636 li
219.387 256.25 li
220.103 256.472 li
220.317 255.782 li
221.057 255.928 li
222.548 256.183 mo
222.252 257.138 li
222.537 257.226 li
222.549 257.23 li
222.984 257.352 li
223.256 256.39 li
222.827 256.269 li
222.548 256.183 li
223.978 256.593 mo
223.706 257.556 li
224.428 257.759 li
224.699 256.797 li
223.978 256.593 li
225.421 257 mo
225.15 257.963 li
225.804 258.147 li
225.83 258.154 li
225.898 258.169 li
226.118 257.194 li
226.063 257.181 li
225.421 257 li
226.848 257.37 mo
226.63 258.334 li
227.362 258.5 li
227.582 257.523 li
227.017 257.396 li
227.306 256.465 li
226.088 256.087 li
226.063 256.08 li
224.391 255.656 li
224.145 256.626 li
225.804 257.046 li
226.848 257.37 li
228.313 257.688 mo
228.093 258.665 li
228.825 258.829 li
229.045 257.853 li
228.313 257.688 li
232.646 258.841 mo
232.595 259.2 li
233.338 259.305 li
233.477 258.315 li
232.995 258.248 li
233.045 257.887 li
232.54 257.816 li
230.151 257.277 li
229.996 257.966 li
229.719 257.942 li
229.635 258.939 li
230.382 259.002 li
230.436 258.366 li
231.174 258.533 li
231.129 259.065 li
231.877 259.128 li
231.913 258.699 li
232.34 258.796 li
232.38 258.803 li
232.646 258.841 li
234.22 258.419 mo
234.08 259.41 li
234.823 259.514 li
234.962 258.524 li
234.22 258.419 li
237.106 259.688 mo
235.705 259.657 li
232.45 259.423 li
229.195 258.977 li
225.94 258.403 li
222.685 257.847 li
219.43 257.326 li
216.175 256.321 li
212.92 255.291 li
209.665 254.291 li
206.41 253.363 li
203.155 252.249 li
199.9 250.621 li
196.645 249.297 li
193.39 247.55 li
190.135 246.171 li
186.88 243.701 li
183.625 241.326 li
180.37 237.612 li
177.115 234.162 li
173.86 230.227 li
170.605 227.194 li
167.35 224.411 li
164.095 221.27 li
163.653 220.647 li
164.336 219.955 li
163.802 219.428 li
163.212 220.026 li
162.771 219.405 li
163.268 218.901 li
162.734 218.375 li
162.33 218.784 li
161.889 218.164 li
162.2 217.848 li
161.667 217.321 li
161.448 217.542 li
161.024 216.945 li
161.169 216.823 li
160.685 216.25 li
160.567 216.349 li
160.094 215.767 li
160.201 215.677 li
159.717 215.104 li
159.62 215.185 li
159.147 214.603 li
159.233 214.531 li
158.749 213.958 li
158.674 214.022 li
158.2 213.44 li
158.265 213.385 li
157.967 213.032 li
157.955 213.018 li
157.761 212.805 li
157.717 212.845 li
157.585 212.683 li
154.33 207.417 li
151.075 202.838 li
147.82 195.51 li
145.063 190.664 li
147.82 194.287 li
151.075 198.816 li
154.33 203.016 li
157.585 206.158 li
160.84 210.062 li
164.095 213.03 li
166.892 215.15 li
166.631 215.351 li
166.954 215.77 li
166.972 215.792 li
168.589 217.66 li
169.125 217.196 li
170.605 218.613 li
171.199 219.363 li
170.56 219.929 li
172.551 222.174 li
173.063 221.72 li
173.86 222.728 li
175.06 223.977 li
174.452 224.455 li
176.31 226.811 li
177.095 226.192 li
176.673 225.657 li
177.115 226.116 li
180.37 229.193 li
183.625 231.542 li
186.88 233.168 li
190.135 235.933 li
193.39 238.083 li
196.645 240.142 li
199.9 242.815 li
203.155 243.861 li
206.41 245.572 li
209.665 248.17 li
212.92 250.352 li
216.175 252.057 li
219.43 253.067 li
222.685 254.253 li
225.94 255.71 li
229.195 257.042 li
232.45 257.625 li
235.705 258.389 li
235.979 258.417 li
235.959 258.647 li
235.754 258.636 li
235.705 258.629 li
235.566 259.619 li
235.635 259.629 li
235.677 259.633 li
236.355 259.671 li
236.375 259.325 li
237.123 259.388 li
237.106 259.688 li
238.606 259.721 mo
237.856 259.704 li
237.87 259.452 li
238.618 259.515 li
238.606 259.721 li
241.617 259.796 mo
240.867 259.777 li
240.893 258.871 li
240.143 258.85 li
240.118 259.758 li
239.368 259.739 li
239.393 258.829 li
238.98 258.818 li
238.956 258.816 li
238.964 258.717 li
241.951 258.881 li
241.949 258.901 li
241.642 258.893 li
241.617 259.796 li
243.128 259.826 mo
242.378 259.814 li
242.378 259.736 li
243.128 259.778 li
243.128 259.826 li
244.351 259.847 mo
243.878 259.839 li
243.878 259.82 li
244.351 259.847 li
258.128 259.865 mo
257.378 259.865 li
257.378 258.909 li
256.628 258.909 li
255.878 258.909 li
255.235 258.909 li
255.128 258.909 li
254.378 258.909 li
253.628 258.909 li
253.628 259.865 li
252.878 259.865 li
252.878 258.909 li
252.128 258.909 li
252.128 259.865 li
251.98 259.865 li
251.378 259.865 li
251.378 258.909 li
250.628 258.909 li
249.878 258.909 li
249.128 258.909 li
248.725 258.909 li
248.378 258.909 li
247.628 258.909 li
247.628 259.865 li
246.878 259.865 li
246.878 258.909 li
246.128 258.909 li
246.128 259.865 li
245.47 259.865 li
245.378 259.864 li
245.378 258.909 li
244.954 258.909 li
244.955 258.895 li
245.47 258.895 li
248.725 258.895 li
251.98 258.895 li
255.235 258.895 li
258.49 258.895 li
258.724 258.909 li
258.49 258.909 li
258.128 258.909 li
258.128 259.865 li
259.628 259.865 mo
258.878 259.865 li
258.878 258.918 li
259.628 258.963 li
259.628 259.865 li
.621485 .541985 .531304 .262943 cmyk
f
158.2 213.44 mo
157.717 212.845 li
157.761 212.805 li
157.955 213.018 li
157.967 213.032 li
158.265 213.385 li
158.2 213.44 li
159.147 214.603 mo
158.674 214.022 li
158.749 213.958 li
159.233 214.531 li
159.147 214.603 li
160.094 215.767 mo
159.62 215.185 li
159.717 215.104 li
160.201 215.677 li
160.094 215.767 li
161.024 216.945 mo
160.84 216.685 li
160.567 216.349 li
160.685 216.25 li
161.169 216.823 li
161.024 216.945 li
161.889 218.164 mo
161.448 217.542 li
161.667 217.321 li
162.2 217.848 li
161.889 218.164 li
162.771 219.405 mo
162.33 218.784 li
162.734 218.375 li
163.268 218.901 li
162.771 219.405 li
163.653 220.647 mo
163.212 220.026 li
163.802 219.428 li
164.336 219.955 li
163.653 220.647 li
164.702 221.72 mo
164.168 221.193 li
164.87 220.481 li
165.404 221.008 li
164.702 221.72 li
165.77 222.773 mo
165.236 222.248 li
165.938 221.535 li
166.472 222.061 li
165.77 222.773 li
166.837 223.827 mo
166.304 223.3 li
167.006 222.588 li
167.54 223.115 li
166.837 223.827 li
168.019 224.823 mo
167.439 224.348 li
168.072 223.574 li
168.652 224.049 li
168.019 224.823 li
169.181 225.772 mo
168.6 225.298 li
169.233 224.523 li
169.814 224.998 li
169.181 225.772 li
170.303 226.695 mo
170.271 226.663 li
169.762 226.247 li
170.395 225.473 li
170.921 225.903 li
170.956 225.934 li
171.006 225.983 li
170.303 226.695 li
171.371 227.75 mo
170.837 227.222 li
171.539 226.51 li
172.073 227.037 li
171.371 227.75 li
172.439 228.802 mo
171.905 228.275 li
172.607 227.563 li
173.141 228.09 li
172.439 228.802 li
173.507 229.855 mo
172.973 229.329 li
173.675 228.617 li
174.209 229.143 li
173.507 229.855 li
174.68 230.85 mo
174.108 230.366 li
174.753 229.602 li
175.326 230.086 li
174.68 230.85 li
175.826 231.818 mo
175.253 231.334 li
175.899 230.571 li
176.472 231.055 li
175.826 231.818 li
176.963 232.785 mo
176.79 232.634 li
176.399 232.303 li
177.044 231.539 li
177.438 231.872 li
177.444 231.877 li
177.621 232.031 li
176.963 232.785 li
178.092 233.771 mo
177.527 233.278 li
178.185 232.525 li
178.75 233.018 li
178.092 233.771 li
179.222 234.758 mo
178.657 234.265 li
179.315 233.512 li
179.88 234.005 li
179.222 234.758 li
180.395 235.745 mo
180.067 235.495 li
180.041 235.474 li
179.787 235.252 li
180.445 234.5 li
180.686 234.71 li
181.001 234.949 li
180.395 235.745 li
181.589 236.653 mo
180.992 236.199 li
181.598 235.403 li
182.195 235.858 li
181.589 236.653 li
182.783 237.562 mo
182.186 237.108 li
182.791 236.312 li
183.388 236.766 li
182.783 237.562 li
184.009 238.457 mo
183.396 238.025 li
183.972 237.208 li
184.585 237.639 li
184.009 238.457 li
185.235 239.321 mo
184.622 238.889 li
185.198 238.071 li
185.811 238.503 li
185.235 239.321 li
186.461 240.185 mo
185.848 239.753 li
186.424 238.935 li
187.037 239.367 li
186.461 240.185 li
187.802 240.962 mo
187.148 240.593 li
187.639 239.722 li
188.293 240.091 li
187.802 240.962 li
189.109 241.698 mo
188.455 241.33 li
188.946 240.459 li
189.599 240.827 li
189.109 241.698 li
190.299 242.469 mo
189.856 242.119 li
189.762 242.067 li
190.253 241.195 li
190.381 241.267 li
190.445 241.31 li
190.918 241.684 li
190.299 242.469 li
191.476 243.399 mo
190.888 242.934 li
191.507 242.149 li
192.096 242.614 li
191.476 243.399 li
192.654 244.328 mo
192.065 243.863 li
192.685 243.078 li
193.273 243.543 li
192.654 244.328 li
193.921 245.212 mo
193.292 244.804 li
193.836 243.965 li
194.465 244.374 li
193.921 245.212 li
195.18 246.028 mo
194.55 245.62 li
195.094 244.781 li
195.724 245.189 li
195.18 246.028 li
196.478 246.859 mo
196.409 246.822 li
196.373 246.801 li
195.809 246.436 li
196.353 245.597 li
196.9 245.951 li
196.95 245.978 li
196.478 246.859 li
197.8 247.567 mo
197.139 247.213 li
197.611 246.332 li
198.272 246.686 li
197.8 247.567 li
199.122 248.276 mo
198.461 247.921 li
198.933 247.041 li
199.594 247.394 li
199.122 248.276 li
200.464 248.971 mo
199.795 248.632 li
200.247 247.74 li
200.916 248.079 li
200.464 248.971 li
201.801 249.65 mo
201.132 249.311 li
201.585 248.419 li
202.254 248.758 li
201.801 249.65 li
203.204 250.327 mo
202.983 250.246 li
202.929 250.222 li
202.47 249.989 li
202.923 249.098 li
203.355 249.317 li
203.548 249.388 li
203.204 250.327 li
204.613 250.843 mo
203.908 250.585 li
204.253 249.646 li
204.957 249.904 li
204.613 250.843 li
206.021 251.359 mo
205.317 251.101 li
205.661 250.162 li
206.365 250.42 li
206.021 251.359 li
207.338 251.968 mo
206.662 251.644 li
207.094 250.742 li
207.77 251.066 li
207.338 251.968 li
208.691 252.616 mo
208.015 252.292 li
208.447 251.39 li
209.123 251.714 li
208.691 252.616 li
210.078 253.246 mo
209.47 252.989 li
209.449 252.979 li
209.367 252.94 li
209.8 252.039 li
209.87 252.072 li
210.467 252.325 li
210.078 253.246 li
211.459 253.83 mo
210.769 253.539 li
211.158 252.617 li
211.849 252.909 li
211.459 253.83 li
212.892 254.419 mo
212.772 254.382 li
212.725 254.365 li
212.15 254.122 li
212.54 253.201 li
213.092 253.434 li
213.188 253.464 li
212.892 254.419 li
214.325 254.864 mo
213.608 254.641 li
213.905 253.686 li
214.621 253.908 li
214.325 254.864 li
215.758 255.308 mo
215.041 255.086 li
215.337 254.13 li
216.054 254.353 li
215.758 255.308 li
217.233 255.698 mo
216.506 255.513 li
216.751 254.544 li
217.478 254.728 li
217.233 255.698 li
218.686 256.067 mo
217.96 255.882 li
218.205 254.913 li
218.353 254.95 li
218.269 255.149 li
218.856 255.397 li
218.686 256.067 li
220.103 256.472 mo
219.387 256.25 li
219.577 255.636 li
220.317 255.782 li
220.103 256.472 li
221.536 256.916 mo
220.82 256.694 li
221.057 255.928 li
221.247 255.965 li
221.282 255.791 li
221.832 255.961 li
221.536 256.916 li
222.984 257.352 mo
222.549 257.23 li
222.537 257.226 li
222.252 257.138 li
222.548 256.183 li
222.827 256.269 li
223.256 256.39 li
222.984 257.352 li
224.428 257.759 mo
223.706 257.556 li
223.978 256.593 li
224.699 256.797 li
224.428 257.759 li
225.898 258.169 mo
225.83 258.154 li
225.804 258.147 li
225.15 257.963 li
225.421 257 li
226.063 257.181 li
226.118 257.194 li
225.898 258.169 li
227.362 258.5 mo
226.63 258.334 li
226.848 257.37 li
227.01 257.42 li
227.017 257.396 li
227.582 257.523 li
227.362 258.5 li
228.825 258.829 mo
228.093 258.665 li
228.313 257.688 li
229.045 257.853 li
228.825 258.829 li
230.382 259.002 mo
229.635 258.939 li
229.719 257.942 li
229.996 257.966 li
229.931 258.253 li
230.436 258.366 li
230.382 259.002 li
231.877 259.128 mo
231.129 259.065 li
231.174 258.533 li
231.913 258.699 li
231.877 259.128 li
233.338 259.305 mo
232.595 259.2 li
232.646 258.841 li
232.906 258.877 li
232.995 258.248 li
233.477 258.315 li
233.338 259.305 li
234.823 259.514 mo
234.08 259.41 li
234.22 258.419 li
234.962 258.524 li
234.823 259.514 li
236.355 259.671 mo
235.677 259.633 li
235.635 259.629 li
235.566 259.619 li
235.705 258.629 li
235.754 258.636 li
235.959 258.647 li
235.905 259.285 li
236.375 259.325 li
236.355 259.671 li
237.856 259.704 mo
237.106 259.688 li
237.123 259.388 li
237.87 259.452 li
237.856 259.704 li
239.368 259.739 mo
238.96 259.728 li
238.606 259.721 li
238.618 259.515 li
238.895 259.538 li
238.956 258.816 li
238.98 258.818 li
239.393 258.829 li
239.368 259.739 li
240.867 259.777 mo
240.118 259.758 li
240.143 258.85 li
240.893 258.871 li
240.867 259.777 li
242.378 259.814 mo
242.215 259.811 li
241.617 259.796 li
241.642 258.893 li
241.949 258.901 li
241.904 259.709 li
242.188 259.725 li
242.378 259.736 li
242.378 259.814 li
243.878 259.839 mo
243.128 259.826 li
243.128 259.778 li
243.878 259.82 li
243.878 259.839 li
245.378 259.864 mo
244.9 259.856 li
244.954 258.909 li
245.378 258.909 li
245.378 259.864 li
246.878 259.865 mo
246.128 259.865 li
246.128 258.909 li
246.878 258.909 li
246.878 259.865 li
247.926 259.865 mo
247.628 259.865 li
247.628 258.909 li
248.378 258.909 li
247.926 258.909 li
247.926 259.865 li
251.378 259.865 mo
250.926 259.865 li
250.926 258.909 li
250.628 258.909 li
251.378 258.909 li
251.378 259.865 li
252.878 259.865 mo
252.128 259.865 li
252.128 258.909 li
252.878 258.909 li
252.878 259.865 li
253.926 259.865 mo
253.628 259.865 li
253.628 258.909 li
254.378 258.909 li
253.926 258.909 li
253.926 259.865 li
257.378 259.865 mo
256.927 259.865 li
256.927 258.909 li
256.628 258.909 li
257.378 258.909 li
257.378 259.865 li
258.878 259.866 mo
258.49 259.865 li
258.128 259.865 li
258.128 258.909 li
258.49 258.909 li
258.724 258.909 li
258.878 258.918 li
258.878 259.865 li
258.878 259.866 li
259.914 259.869 mo
259.628 259.868 li
259.628 259.865 li
259.628 258.963 li
259.939 258.981 li
259.914 259.869 li
.749721 .679194 .670497 .901457 cmyk
f
90.1011 27.0469 mo
89.23 26.6621 li
90.1548 26.4092 li
90.1011 27.0469 li
.426154 .347417 .353185 .00985733 cmyk
f
343.925 259.001 mo
346.375 259.001 li
346.375 260.001 li
343.925 260.001 li
343.925 259.001 li
337.925 259.001 mo
339.865 259.001 li
340.925 259.001 li
340.925 260.001 li
339.865 260.001 li
337.925 260.001 li
337.925 259.001 li
331.925 259.001 mo
333.355 259.001 li
334.925 259.001 li
334.925 260.001 li
333.355 260.001 li
331.925 260.001 li
331.925 259.001 li
325.925 259.001 mo
326.845 259.001 li
328.925 259.001 li
328.925 260.001 li
326.845 260.001 li
325.925 260.001 li
325.925 259.001 li
319.925 259.001 mo
320.335 259.001 li
322.925 259.001 li
322.925 260.001 li
320.335 260.001 li
319.925 260.001 li
319.925 259.001 li
313.925 259.001 mo
316.925 259.001 li
316.925 260.001 li
313.925 260.001 li
313.925 259.001 li
307.925 259.001 mo
310.57 259.001 li
310.925 259.001 li
310.925 260.001 li
310.57 260.001 li
307.925 260.001 li
307.925 259.001 li
301.925 259.001 mo
304.06 259.001 li
304.925 259.001 li
304.925 260.001 li
304.06 260.001 li
301.925 260.001 li
301.925 259.001 li
295.925 259.001 mo
297.55 259.001 li
298.925 259.001 li
298.925 260.001 li
297.55 260.001 li
295.925 260.001 li
295.925 259.001 li
289.925 259.001 mo
291.04 259.001 li
292.925 259.001 li
292.925 260.001 li
291.04 260.001 li
289.925 260.001 li
289.925 259.001 li
283.925 259.001 mo
284.53 259.001 li
286.925 259.001 li
286.925 260.001 li
284.53 260.001 li
283.925 260.001 li
283.925 259.001 li
277.925 259.001 mo
278.02 259.001 li
280.925 259.001 li
280.925 260.001 li
278.02 260.001 li
277.925 260.001 li
277.925 259.001 li
271.925 259.001 mo
274.765 259.001 li
274.925 259.001 li
274.925 260.001 li
274.765 260.001 li
271.925 260.001 li
271.925 259.001 li
265.925 259.001 mo
268.255 259.001 li
268.925 259.001 li
268.925 260.001 li
268.255 260.001 li
265.925 260.001 li
265.925 259.001 li
259.94 258.95 mo
261.753 259.001 li
262.925 259.001 li
262.925 260.001 li
261.745 260.001 li
261.731 260.001 li
259.912 259.949 li
259.94 258.95 li
253.926 258.909 mo
255.235 258.909 li
256.927 258.909 li
256.927 259.909 li
255.235 259.909 li
253.926 259.909 li
253.926 258.909 li
247.926 258.909 mo
248.725 258.909 li
250.926 258.909 li
250.926 259.909 li
248.725 259.909 li
247.926 259.909 li
247.926 258.909 li
241.96 258.71 mo
242.243 258.726 li
244.956 258.879 li
244.899 259.878 li
242.188 259.725 li
241.904 259.709 li
241.96 258.71 li
235.99 258.29 mo
238.979 258.542 li
238.895 259.538 li
235.905 259.285 li
235.99 258.29 li
230.151 257.277 mo
232.54 257.816 li
233.045 257.887 li
232.906 258.877 li
232.38 258.803 li
232.34 258.796 li
229.931 258.253 li
230.151 257.277 li
224.391 255.656 mo
226.063 256.08 li
226.088 256.087 li
227.306 256.465 li
227.01 257.42 li
225.804 257.046 li
224.145 256.626 li
224.391 255.656 li
218.658 254.228 mo
219.577 254.616 li
221.441 254.984 li
221.247 255.965 li
219.333 255.588 li
219.235 255.558 li
218.269 255.149 li
218.658 254.228 li
213.266 251.685 mo
215.942 253.042 li
215.489 253.934 li
212.814 252.577 li
213.266 251.685 li
207.648 249.422 mo
209.837 250.224 li
209.86 250.233 li
210.476 250.493 li
210.086 251.416 li
209.481 251.159 li
207.304 250.361 li
207.648 249.422 li
202.358 246.764 mo
203.391 247.317 li
205.002 248.18 li
204.53 249.061 li
202.919 248.199 li
201.886 247.645 li
202.358 246.764 li
197.114 243.87 mo
199.727 245.343 li
199.236 246.215 li
196.623 244.742 li
197.114 243.87 li
192.373 240.283 mo
193.678 241.202 li
193.7 241.219 li
194.801 242.088 li
194.182 242.874 li
193.091 242.012 li
191.797 241.1 li
192.373 240.283 li
187.697 236.602 mo
189.988 238.539 li
189.342 239.302 li
187.052 237.365 li
187.697 236.602 li
183.151 232.78 mo
183.962 233.626 li
185.343 234.716 li
184.724 235.501 li
183.315 234.389 li
183.264 234.343 li
182.429 233.472 li
183.151 232.78 li
179.055 228.414 mo
180.734 230.26 li
181.075 230.615 li
180.353 231.307 li
180.009 230.948 li
180 230.939 li
178.316 229.087 li
179.055 228.414 li
175.238 223.836 mo
177.095 226.192 li
176.31 226.811 li
174.452 224.455 li
175.238 223.836 li
171.308 219.266 mo
173.299 221.51 li
172.551 222.174 li
170.56 219.929 li
171.308 219.266 li
167.423 214.74 mo
167.737 215.148 li
169.345 217.006 li
168.589 217.66 li
166.972 215.792 li
166.954 215.77 li
166.631 215.351 li
167.423 214.74 li
163.854 209.968 mo
164.503 210.955 li
165.59 212.365 li
164.798 212.976 li
163.699 211.55 li
163.677 211.52 li
163.018 210.517 li
163.854 209.968 li
160.581 204.949 mo
161.261 206.021 li
162.207 207.46 li
161.371 208.009 li
160.422 206.565 li
160.418 206.558 li
159.737 205.484 li
160.581 204.949 li
157.409 199.875 mo
158.011 200.891 li
158.976 202.414 li
158.131 202.95 li
157.163 201.421 li
157.155 201.408 li
156.549 200.383 li
157.409 199.875 li
154.394 194.712 mo
154.766 195.404 li
155.883 197.292 li
155.022 197.801 li
153.9 195.903 li
153.89 195.886 li
153.513 195.185 li
154.394 194.712 li
151.553 189.427 mo
152.973 192.069 li
152.092 192.543 li
150.672 189.9 li
151.553 189.427 li
148.995 184.028 mo
150.278 186.74 li
149.374 187.167 li
148.091 184.455 li
148.995 184.028 li
146.386 178.619 mo
147.697 181.317 li
146.798 181.754 li
145.487 179.056 li
146.386 178.619 li
143.848 173.2 mo
145.018 175.805 li
145.074 175.921 li
144.175 176.358 li
144.115 176.235 li
144.109 176.221 li
142.936 173.609 li
143.848 173.2 li
141.413 167.728 mo
141.768 168.568 li
142.619 170.463 li
141.707 170.873 li
140.854 168.974 li
140.849 168.963 li
140.492 168.117 li
141.413 167.728 li
139.079 162.201 mo
140.246 164.965 li
139.325 165.354 li
138.158 162.59 li
139.079 162.201 li
136.99 156.608 mo
138.002 159.432 li
137.06 159.769 li
136.048 156.945 li
136.99 156.608 li
134.99 150.964 mo
135.273 151.818 li
135.978 153.784 li
135.036 154.121 li
134.329 152.149 li
134.325 152.138 li
134.041 151.279 li
134.99 150.964 li
133.101 145.269 mo
134.046 148.116 li
133.096 148.431 li
132.152 145.584 li
133.101 145.269 li
131.321 139.562 mo
132.023 142.017 li
132.157 142.421 li
131.208 142.736 li
131.07 142.321 li
131.064 142.301 li
130.359 139.837 li
131.321 139.562 li
129.67 133.794 mo
130.495 136.678 li
129.534 136.953 li
128.709 134.069 li
129.67 133.794 li
128.053 128.022 mo
128.772 130.654 li
128.845 130.91 li
127.883 131.185 li
127.809 130.925 li
127.808 130.92 li
127.089 128.285 li
128.053 128.022 li
126.474 122.234 mo
127.264 125.128 li
126.299 125.391 li
125.509 122.497 li
126.474 122.234 li
124.965 116.442 mo
125.519 118.737 li
125.684 119.34 li
124.719 119.603 li
124.553 118.993 li
124.549 118.979 li
123.993 116.677 li
124.965 116.442 li
123.558 110.61 mo
124.262 113.526 li
123.289 113.761 li
122.586 110.845 li
123.558 110.61 li
122.148 104.776 mo
122.266 105.257 li
122.854 107.694 li
121.882 107.928 li
121.294 105.493 li
121.177 105.014 li
122.148 104.776 li
120.722 98.9482 mo
121.435 101.862 li
120.464 102.1 li
119.751 99.186 li
120.722 98.9482 li
119.296 93.1201 mo
120.009 96.0342 li
119.038 96.272 li
118.325 93.3579 li
119.296 93.1201 li
117.968 87.2798 mo
118.621 90.208 li
117.645 90.4253 li
116.992 87.498 li
117.968 87.2798 li
116.661 81.4243 mo
117.314 84.3521 li
116.338 84.5698 li
115.685 81.6421 li
116.661 81.4243 li
115.392 75.5698 mo
115.759 77.3833 li
116.008 78.4961 li
115.032 78.7139 li
114.782 77.5952 li
114.78 77.5859 li
114.411 75.769 li
115.392 75.5698 li
114.199 69.689 mo
114.795 72.6299 li
113.815 72.8281 li
113.219 69.8882 li
114.199 69.689 li
113.007 63.8091 mo
113.603 66.749 li
112.623 66.9482 li
112.027 64.0083 li
113.007 63.8091 li
111.756 57.9331 mo
112.401 60.8618 li
111.425 61.0781 li
110.779 58.1479 li
111.756 57.9331 li
110.465 52.0732 mo
111.11 55.0029 li
110.134 55.2183 li
109.488 52.2881 li
110.465 52.0732 li
109.135 46.1812 mo
109.238 46.5142 li
109.248 46.5542 li
109.819 49.144 li
108.842 49.3589 li
108.276 46.7891 li
108.18 46.4761 li
109.135 46.1812 li
107.366 40.4482 mo
108.251 43.3149 li
107.295 43.6089 li
106.411 40.7432 li
107.366 40.4482 li
105.26 34.7329 mo
105.934 35.853 li
105.983 35.9639 li
106.482 37.5811 li
105.526 37.876 li
105.045 36.3169 li
104.403 35.249 li
105.26 34.7329 li
101.709 29.729 mo
102.53 30.2842 li
102.679 30.4409 li
103.714 32.1621 li
102.857 32.6782 li
101.878 31.0513 li
101.149 30.5571 li
101.709 29.729 li
96.1509 27.2593 mo
99.0581 27.9971 li
98.812 28.9658 li
95.9048 28.229 li
96.1509 27.2593 li
90.1689 26.2402 mo
92.5269 26.439 li
92.5952 26.4492 li
93.2129 26.5889 li
92.9932 27.564 li
92.4092 27.4321 li
90.085 27.2358 li
90.1689 26.2402 li
84.1299 26.1621 mo
85.9751 26.1621 li
87.1299 26.1621 li
87.1299 27.1621 li
85.9751 27.1621 li
84.1299 27.1621 li
84.1299 26.1621 li
78.1299 26.1621 mo
79.4648 26.1621 li
81.1299 26.1621 li
81.1299 27.1621 li
79.4648 27.1621 li
78.1299 27.1621 li
78.1299 26.1621 li
72.1299 26.1621 mo
72.9551 26.1621 li
75.1299 26.1621 li
75.1299 27.1621 li
72.9551 27.1621 li
72.1299 27.1621 li
72.1299 26.1621 li
66.1299 26.1621 mo
66.4448 26.1621 li
69.1299 26.1621 li
69.1299 27.1621 li
66.4448 27.1621 li
66.1299 27.1621 li
66.1299 26.1621 li
60.1299 26.1621 mo
63.1299 26.1621 li
63.1299 27.1621 li
60.1299 27.1621 li
60.1299 26.1621 li
54.1299 26.1621 mo
56.6802 26.1621 li
57.1299 26.1621 li
57.1299 27.1621 li
56.6802 27.1621 li
54.1299 27.1621 li
54.1299 26.1621 li
48.1299 26.1621 mo
50.1699 26.1621 li
51.1299 26.1621 li
51.1299 27.1621 li
50.1699 27.1621 li
48.1299 27.1621 li
48.1299 26.1621 li
42.1299 26.1621 mo
43.6602 26.1621 li
45.1299 26.1621 li
45.1299 27.1621 li
43.6602 27.1621 li
42.1299 27.1621 li
42.1299 26.1621 li
36.1299 26.1621 mo
37.1499 26.1621 li
39.1299 26.1621 li
39.1299 27.1621 li
37.1499 27.1621 li
36.1299 27.1621 li
36.1299 26.1621 li
30.1299 26.1621 mo
30.6401 26.1621 li
33.1299 26.1621 li
33.1299 27.1621 li
30.6401 27.1621 li
30.1299 27.1621 li
30.1299 26.1621 li
24.1299 26.1621 mo
27.1299 26.1621 li
27.1299 27.1621 li
24.1299 27.1621 li
24.1299 26.1621 li
.67953 .634058 .618097 .562646 cmyk
f
337.627 259.088 mo
336.877 259.088 li
336.877 259.001 li
336.61 259.001 li
336.127 259.001 li
336.127 259.088 li
335.377 259.088 li
335.377 259.001 li
334.627 259.001 li
333.877 259.001 li
333.355 259.001 li
333.127 259.001 li
332.377 259.001 li
331.627 259.001 li
331.627 259.088 li
330.877 259.088 li
330.877 259.001 li
330.127 259.001 li
330.127 259.088 li
330.1 259.088 li
329.377 259.088 li
329.377 259.001 li
328.627 259.001 li
327.877 259.001 li
327.127 259.001 li
326.845 259.001 li
326.377 259.001 li
325.627 259.001 li
325.627 259.088 li
324.877 259.088 li
324.877 259.001 li
324.127 259.001 li
324.127 259.088 li
323.59 259.088 li
323.377 259.088 li
323.377 259.001 li
322.627 259.001 li
321.877 259.001 li
321.127 259.001 li
320.377 259.001 li
320.335 259.001 li
319.627 259.001 li
319.627 259.088 li
318.877 259.088 li
318.877 259.001 li
318.127 259.001 li
318.127 259.088 li
317.377 259.088 li
317.377 259.001 li
317.08 259.001 li
316.627 259.001 li
315.877 259.001 li
315.408 259.001 li
313.825 258.917 li
310.57 258.425 li
307.315 258.236 li
304.06 257.527 li
300.805 257.313 li
297.55 256.135 li
294.295 255.457 li
291.04 254.837 li
287.785 254.303 li
284.53 253.448 li
281.275 252.712 li
278.02 251.772 li
274.765 250.374 li
271.51 249.44 li
268.255 247.518 li
265 246.493 li
261.745 244.945 li
258.49 243.492 li
255.235 240.88 li
251.98 239.125 li
248.725 236.727 li
245.47 233.306 li
242.215 230.907 li
238.96 227.432 li
235.705 224.225 li
232.45 219.835 li
229.195 216.087 li
225.94 210.89 li
222.685 204.793 li
219.43 197.91 li
216.175 191.98 li
212.92 184.023 li
209.665 175.794 li
206.41 167.726 li
203.155 157.875 li
199.9 148.462 li
196.645 138.718 li
193.39 126.994 li
190.135 115.166 li
186.88 102.229 li
183.625 89.7329 li
180.37 78.9243 li
177.115 68.3062 li
173.86 58.459 li
170.605 51.855 li
167.35 43.4238 li
164.095 39.5649 li
160.84 36.1753 li
157.585 31.5449 li
154.33 28.1001 li
151.075 26.6621 li
154.33 25.771 li
157.585 23.5801 li
160.84 20.5029 li
164.095 18.4731 li
167.35 17.2339 li
170.605 13.6973 li
173.86 12.9771 li
177.115 11.2329 li
180.37 13.9219 li
183.625 18.644 li
186.88 29.6631 li
190.135 40.4868 li
193.39 53.2368 li
196.645 67.1099 li
199.9 82.665 li
203.155 96.5859 li
206.41 109.531 li
209.665 122.491 li
212.92 134.416 li
216.175 144.61 li
219.43 155.374 li
222.685 164.252 li
225.94 171.002 li
229.195 178.957 li
232.45 185.286 li
235.705 192.001 li
238.96 198.013 li
242.215 203.861 li
245.47 209.075 li
248.725 213.059 li
251.98 217.417 li
255.235 221.611 li
258.49 224.339 li
261.745 228.332 li
265 231.307 li
268.255 234.174 li
271.51 235.488 li
274.765 238.065 li
278.02 240.595 li
281.275 243.164 li
284.53 245.147 li
287.785 246.958 li
291.04 249.011 li
294.295 250.286 li
297.55 251.479 li
300.805 252.142 li
304.06 253.379 li
307.315 253.604 li
310.57 254.443 li
313.825 255.467 li
317.08 256.103 li
320.335 257.042 li
323.59 257.357 li
326.845 258.028 li
330.1 258.549 li
333.355 258.895 li
336.61 258.895 li
338.394 259.001 li
338.377 259.001 li
337.627 259.001 li
337.627 259.088 li
.426154 .347417 .353185 .00985733 cmyk
f
317.377 259.088 mo
317.08 259.088 li
317.049 259.088 li
316.925 259.082 li
316.925 259.001 li
316.627 259.001 li
317.08 259.001 li
317.377 259.001 li
317.377 259.088 li
318.877 259.088 mo
318.127 259.088 li
318.127 259.001 li
318.877 259.001 li
318.877 259.088 li
319.925 259.088 mo
319.627 259.088 li
319.627 259.001 li
320.335 259.001 li
320.377 259.001 li
320.335 259.001 li
319.925 259.001 li
319.925 259.088 li
323.377 259.088 mo
322.925 259.088 li
322.925 259.001 li
322.627 259.001 li
323.377 259.001 li
323.377 259.088 li
324.877 259.088 mo
324.127 259.088 li
324.127 259.001 li
324.877 259.001 li
324.877 259.088 li
325.925 259.088 mo
325.627 259.088 li
325.627 259.001 li
326.377 259.001 li
325.925 259.001 li
325.925 259.088 li
329.377 259.088 mo
328.925 259.088 li
328.925 259.001 li
328.627 259.001 li
329.377 259.001 li
329.377 259.088 li
330.877 259.088 mo
330.127 259.088 li
330.127 259.001 li
330.877 259.001 li
330.877 259.088 li
331.925 259.088 mo
331.627 259.088 li
331.627 259.001 li
332.377 259.001 li
331.925 259.001 li
331.925 259.088 li
335.377 259.088 mo
334.925 259.088 li
334.925 259.001 li
334.627 259.001 li
335.377 259.001 li
335.377 259.088 li
336.877 259.088 mo
336.61 259.088 li
336.127 259.088 li
336.127 259.001 li
336.61 259.001 li
336.877 259.001 li
336.877 259.088 li
337.925 259.088 mo
337.627 259.088 li
337.627 259.001 li
338.377 259.001 li
337.925 259.001 li
337.925 259.088 li
.749721 .679194 .670497 .901457 cmyk
f
342.127 259.875 mo
341.377 259.875 li
341.377 259.088 li
342.127 259.088 li
342.127 259.875 li
343.627 259.875 mo
343.12 259.875 li
342.877 259.875 li
342.877 259.088 li
343.12 259.088 li
343.627 259.088 li
343.627 259.875 li
.690425 .624842 .615991 .547539 cmyk
f
341.377 259.875 mo
340.925 259.875 li
340.925 259.088 li
341.377 259.088 li
341.377 259.875 li
342.877 259.875 mo
342.127 259.875 li
342.127 259.088 li
342.877 259.088 li
342.877 259.875 li
343.925 259.875 mo
343.627 259.875 li
343.627 259.088 li
343.925 259.088 li
343.925 259.875 li
.749721 .679194 .670497 .901457 cmyk
f
336.127 259.865 mo
335.377 259.865 li
335.377 259.088 li
336.127 259.088 li
336.127 259.865 li
337.627 259.868 mo
336.877 259.866 li
336.877 259.088 li
337.627 259.088 li
337.627 259.868 li
.690425 .624842 .615991 .547539 cmyk
f
335.377 259.865 mo
334.925 259.865 li
334.925 259.088 li
335.377 259.088 li
335.377 259.865 li
336.877 259.866 mo
336.61 259.865 li
336.127 259.865 li
336.127 259.088 li
336.61 259.088 li
336.877 259.088 li
336.877 259.866 li
337.925 259.869 mo
337.627 259.868 li
337.627 259.088 li
337.925 259.088 li
337.925 259.869 li
.749721 .679194 .670497 .901457 cmyk
f
330.127 259.812 mo
330.1 259.811 li
329.377 259.792 li
329.377 259.088 li
330.1 259.088 li
330.127 259.088 li
330.127 259.812 li
331.627 259.837 mo
330.877 259.824 li
330.877 259.088 li
331.627 259.088 li
331.627 259.837 li
.690425 .624842 .615991 .547539 cmyk
f
329.377 259.792 mo
328.925 259.779 li
328.925 259.088 li
329.377 259.088 li
329.377 259.792 li
330.877 259.824 mo
330.127 259.812 li
330.127 259.088 li
330.877 259.088 li
330.877 259.824 li
331.925 259.842 mo
331.627 259.837 li
331.627 259.088 li
331.925 259.088 li
331.925 259.842 li
.749721 .679194 .670497 .901457 cmyk
f
324.127 259.604 mo
323.59 259.58 li
323.377 259.575 li
323.377 259.088 li
323.59 259.088 li
324.127 259.088 li
324.127 259.604 li
325.627 259.67 mo
324.877 259.637 li
324.877 259.088 li
325.627 259.088 li
325.627 259.67 li
.690425 .624842 .615991 .547539 cmyk
f
323.377 259.575 mo
322.925 259.563 li
322.925 259.088 li
323.377 259.088 li
323.377 259.575 li
324.877 259.637 mo
324.127 259.604 li
324.127 259.088 li
324.877 259.088 li
324.877 259.637 li
325.925 259.683 mo
325.627 259.67 li
325.627 259.088 li
325.925 259.088 li
325.925 259.683 li
.749721 .679194 .670497 .901457 cmyk
f
318.127 259.219 mo
317.377 259.126 li
317.377 259.088 li
318.127 259.088 li
318.127 259.219 li
319.627 259.406 mo
318.877 259.313 li
318.877 259.088 li
319.627 259.088 li
319.627 259.406 li
.690425 .624842 .615991 .547539 cmyk
f
317.377 259.126 mo
317.08 259.089 li
317.049 259.088 li
317.08 259.088 li
317.377 259.088 li
317.377 259.126 li
318.877 259.313 mo
318.127 259.219 li
318.127 259.088 li
318.877 259.088 li
318.877 259.313 li
319.925 259.443 mo
319.627 259.406 li
319.627 259.088 li
319.925 259.088 li
319.925 259.443 li
.749721 .679194 .670497 .901457 cmyk
f
316.925 259.082 mo
315.408 259.001 li
315.877 259.001 li
316.627 259.001 li
316.925 259.001 li
316.925 259.082 li
322.925 259.563 mo
320.335 259.494 li
319.925 259.443 li
319.925 259.088 li
319.925 259.001 li
320.335 259.001 li
320.377 259.001 li
321.127 259.001 li
321.877 259.001 li
322.627 259.001 li
322.925 259.001 li
322.925 259.088 li
322.925 259.563 li
328.925 259.779 mo
326.845 259.723 li
325.925 259.683 li
325.925 259.088 li
325.925 259.001 li
326.377 259.001 li
326.845 259.001 li
327.127 259.001 li
327.877 259.001 li
328.627 259.001 li
328.925 259.001 li
328.925 259.088 li
328.925 259.779 li
334.925 259.865 mo
333.355 259.865 li
331.925 259.842 li
331.925 259.088 li
331.925 259.001 li
332.377 259.001 li
333.127 259.001 li
333.355 259.001 li
333.877 259.001 li
334.627 259.001 li
334.925 259.001 li
334.925 259.088 li
334.925 259.865 li
340.925 259.875 mo
339.865 259.875 li
337.925 259.869 li
337.925 259.088 li
337.925 259.001 li
338.377 259.001 li
338.394 259.001 li
339.865 259.088 li
340.925 259.088 li
340.925 259.875 li
346.375 259.875 mo
343.925 259.875 li
343.925 259.088 li
346.375 259.088 li
346.375 259.875 li
f
1 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
24.1299 26.6621 mo
27.3848 26.6621 li
30.6401 26.6621 li
33.895 26.6621 li
37.1499 26.6621 li
40.4048 26.6621 li
43.6602 26.6621 li
46.915 26.6621 li
50.1699 26.6621 li
53.4248 26.6621 li
56.6802 26.6621 li
59.9351 26.6621 li
63.1899 26.6621 li
66.4448 26.6621 li
69.7002 26.6621 li
72.9551 26.6621 li
76.21 26.6621 li
79.4648 26.6621 li
82.7202 26.6621 li
85.9751 26.6621 li
89.23 26.6621 li
92.4849 26.6621 li
95.7402 26.6621 li
98.9951 26.6621 li
102.25 26.6621 li
105.505 26.6621 li
108.76 26.6621 li
112.015 26.6621 li
115.27 26.6621 li
118.525 26.6621 li
121.78 26.6621 li
125.035 26.6621 li
128.29 26.6621 li
131.545 26.6621 li
134.8 26.6621 li
138.055 26.6621 li
141.31 26.6621 li
144.565 26.6621 li
147.82 26.6621 li
151.075 26.6621 li
154.33 26.937 li
157.585 27.5791 li
160.84 28.4048 li
164.095 29.1392 li
167.35 30.5151 li
170.605 33.1753 li
173.86 36.2949 li
177.115 40.6982 li
180.37 47.6709 li
183.625 55.7441 li
186.88 67.6699 li
190.135 79.7798 li
193.39 92.165 li
196.645 105.009 li
199.9 117.486 li
203.155 129.045 li
206.41 140.421 li
209.665 150.789 li
212.92 160.787 li
216.175 169.87 li
219.43 178.035 li
222.685 185.924 li
225.94 192.438 li
229.195 198.952 li
232.45 203.906 li
235.705 209.41 li
238.96 213.905 li
242.215 218.492 li
245.47 222.162 li
248.725 225.923 li
251.98 229.226 li
255.235 232.07 li
258.49 234.822 li
261.745 237.391 li
265 239.593 li
268.255 241.428 li
271.51 243.171 li
274.765 244.822 li
278.02 246.75 li
281.275 248.4 li
284.53 249.684 li
287.785 250.969 li
291.04 252.161 li
294.295 253.079 li
297.55 253.996 li
300.805 255.005 li
304.06 255.648 li
307.315 256.198 li
310.57 256.657 li
313.825 257.391 li
317.08 257.758 li
320.335 258.4 li
323.59 258.583 li
326.845 258.95 li
330.1 259.225 li
333.355 259.409 li
336.61 259.409 li
339.865 259.501 li
343.12 259.501 li
346.375 259.501 li
.67953 .634058 .618097 .562646 cmyk
@
.5 lw
2 lc
346.375 4.64404 mo
346.375 7.89893 li
281.275 4.64404 mo
281.275 7.89893 li
216.175 4.64404 mo
216.175 7.89893 li
151.075 4.64404 mo
151.075 7.89893 li
85.9751 4.64404 mo
85.9751 7.89893 li
20.875 4.64404 mo
20.875 7.89893 li
346.375 261.519 mo
346.375 258.264 li
281.275 261.519 mo
281.275 258.264 li
216.175 261.519 mo
216.175 258.264 li
151.075 261.519 mo
151.075 258.264 li
85.9751 261.519 mo
85.9751 258.264 li
20.875 261.519 mo
20.875 258.264 li
20.875 4.64404 mo
346.375 4.64404 li
20.875 261.519 mo
346.375 261.519 li
.639918 .563928 .533043 .294835 cmyk
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
def
/FontBBox {-665 -325 2000 1040} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE
023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C
071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D
17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63
B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F6
03BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A
7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219
571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A
1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A
55977C35> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IPWBQZ+ArialMT /ArialMT findfont ct_VMDictPut
/IPWBQZ+ArialMT*1 
[48{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six 
/.notdef /eight 199{/.notdef}rp]
IPWBQZ+ArialMT nf
IPWBQZ+ArialMT*1 [10.0001 0 0 -10.0001 0 0 ]msf
18.0625 275.644 mo
(02)
[62.292 0 ]xsh
85.9141 275.644 mo
(04)
[59.542 0 ]xsh
151.016 275.644 mo
(06)
[59.542 0 ]xsh
216.109 275.644 mo
(08)
[59.542 0 ]xsh
281.211 275.644 mo
(0)sh
337.938 275.644 mo
(100)sh
346.375 4.64404 mo
343.12 4.64404 li
346.375 41.3403 mo
343.12 41.3403 li
346.375 78.0371 mo
343.12 78.0371 li
346.375 114.733 mo
343.12 114.733 li
346.375 151.43 mo
343.12 151.43 li
346.375 188.126 mo
343.12 188.126 li
346.375 224.823 mo
343.12 224.823 li
346.375 261.519 mo
343.12 261.519 li
20.875 4.64404 mo
24.1299 4.64404 li
20.875 41.3403 mo
24.1299 41.3403 li
20.875 78.0371 mo
24.1299 78.0371 li
20.875 114.733 mo
24.1299 114.733 li
20.875 151.43 mo
24.1299 151.43 li
20.875 188.126 mo
24.1299 188.126 li
20.875 224.823 mo
24.1299 224.823 li
20.875 261.519 mo
24.1299 261.519 li
346.375 261.519 mo
346.375 4.64404 li
20.875 261.519 mo
20.875 4.64404 li
@
IPWBQZ+ArialMT*1 [10.0001 0 0 -10.0001 0 0 ]msf
11.25 265.457 mo
(0)sh
5.625 228.753 mo
(20)
[5.56152 0 ]xsh
5.625 192.066 mo
(40)
[5.56152 0 ]xsh
5.625 155.371 mo
(60)
[5.56152 0 ]xsh
5.625 118.667 mo
(80)
[5.56152 0 ]xsh
0 81.9722 mo
(100)sh
0 45.2847 mo
(120)sh
0 8.58154 mo
(140)sh
339.625 78.144 mo
339.625 14.769 li
175 14.769 li
175 78.144 li
339.625 78.144 li
cp
0 0 0 0 cmyk
f
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BookAntiqua def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 71 /G put
dup 78 /N put
def
/FontBBox {-136 -311 1154 1036} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/C <1C60D8A8C9B63818B1A6B2F842B10BC16CC92EA605298D74509D61F24455
84D5E2E370CBA3DBE8085067E5828F80ADBA27A3A7E50104662815AF695E07F7
332C34B49AEF08F999065E8DD920FC474D56808B8728913E9A694B052BC0B505
5ECAAAA076445BAAF41747CF437E4F995F39B330D760FEED31693C6C1B44BEE9
8D979426A15499EFED0B96E2E4A9EED5DCF34C6B842AAF6D1B021B83BED63FBD
743CA6D07E5DBCD33413> |-
/G <1C60D8A8C9B6EEDBB255DFB0DDB0085B69F92628A3EA4C0BD90268945DCF
46D6AAAFD0ADE0314913DCB03F32A3075B7460CCB2BA7CED7E419C7F7BC48EAB
38C556923B1C663FBF77ACA05A8F7E1441229773C576C560215A4DBB5ADC1A51
4798F3AE1D1BD78B7B4E715213ADBC0D44369AB589E59DB390DFE45A206FA1E9
CEE23A51C2CADA76D7AC9D3C909381278F95CFDE9E3C57E7BF77C6A0B24D3C7B
62DD53CF4D20601661AD37CA33E6BA74E319371805CCB57EED82853821E9558C
3A4C0CAFBF1F7702F4D3D73879FB42076B1D9B3022E7375A860BB452> |-
/N <1C60D8A8C9B6B278BF3A0F690715076309AA113E35DF263767883741BC63
99EFC5B8A932C7830D810344BEAB3D1B7656929231E206A17FAE2716618F9ED1
33D146B64BB9E18A24191C4B2EB17F4C7E8386358EE2D6FE8A274523E2166EBE
882672D5DE16119C1BECAFC62A2EFFDB0570BEC3C9DEBBF0E38FC40422B68D7F
713DBE7394C8318B6B11A33B48C899FD844DB02DB26F5A9E5F4F5D56125C39C6
4318FAF4F8EB8B9A35B7FAB93DC265A0044C5069C96FFCB1D91B355FECA0A04E
4C8465B1BC47E9D8F6EF1F6777A0AE306B4D8C9BAA76801FF5D3538822A5E694
9CD541AD1CF00C3BD553ED378CC1C714076E06C809BFEC> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IPWBRA+BookAntiqua /BookAntiqua findfont ct_VMDictPut
/IPWBRA+BookAntiqua*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 6{/.notdef}rp /N 177{/.notdef}rp]
IPWBRA+BookAntiqua nf
IPWBRA+BookAntiqua*1 [16.0001 0 0 -16.0001 0 0 ]msf
210.25 31.269 mo
(GCN)sh
1 lw
0 lc
2 lj
1 ml
[.75 .75 ] 0 dsh
178 26.207 mo
208 26.207 li
@
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBRA+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B78E05EAF340E05925B0F5DDA3D2BF7E3ADE00218341960418
DE3787C3039EF2918052D5E9865628C603AC1CA5CA13BAA2D32A7EAB4ADE8431
2F2EE5EB5C1536130E8D1475A5B07897AD349E87BA9BD6C0EF99B7C95399C050
70E48EC35738C65187A14719D62269F2FEC062D1600F9E11B35DACA92B0C6282
5968E726C9CDA533AFE6824A37F97E4A0D3747004A0E5DDE4E1885C515AD3DA5
5E36887846664D015DC35E506564F96EE08B74122C1C30EEBAF77C475C1E5319
C5BBA8A16CA47C392C6B988DD47690FE4E7519DE9FDE5F3CBA9D997269751C24
520AC36311D980A7841915B9D48844DFCD3F67B831024A2C537FE51271A7B5C4> |-
/a <1C60D8A8C9B7A73DA26D338A6EEFAF8BB2FAC63C743BFE9A5A80EA72EC22
660F3E4A4E885B4905407C31DEBC559084C6BF950BA9E868F8A4BB47279BACFC
6372A38C14C6D5F73AF5937386D62DD6E9221F0E422578172B23F5401A2EDD27
4458922B3E129B4E6760F094D6F7E148B510515C089E56F76AC0240BEAC5286B
C25179938A46897755CC1345E96A1D77F361C6E9BBAA16C1223DF11B055C9902
F7812886C2537E2837DB54626F97E68F5BED5FD22CAAC417C92B7ADB5C1A34FA
58EC3DDC0F438BD5644A08CF610B8D809EFF3FAFFDEAE45E56C23A4A6DBFCA6A
FE012169C76E636CCD336FF493> |-
/b <1C60D8A8C9B7924C07562B9AABFA135A4A009CE6256C1178ECF25246AB0F
9091B9E4B0D57032F10C16E3D4ACF6E6E588DFE8BE14692CF4DE8D6131E3EB0A
C82ACF1AEDF970DC9F24EC87DBC120071DA83E630F437B7E964FEFE900F50448
69C5FF63D746B183CA9C437C82D594D5B622BDB0A3F651B8B313C65011134FD2
2AE64A999AF9F4CBE9A999475A79BF07A7B421DEC9040FAC8BE714A8A368FB09
F032527FACFEEA326D1E4F5153CE398D69969A1C0B6F3C76600C9164BC03D843
26DEF038749769DC73FB3747608069295B01C087B910069E8BC8DB5F6517254D
B097015B6A19F76F673CF0699B33D3F91282A7E0B0D61E8BD82279E2F29D2649> |-
/l <1C60D8A8C9B849F23CF4A9C7C1B1CD74BC116025C9E90DA1E7118A563435
9E816CA947BB63EDAECBB4D36050657B6493C3D9366E3B69BB5508B5941F0BD6
4BBCB95ABB6AED81C0ECBCCF91104B847624B62EC01B8053083A1C6624617E56
F6BE3E8A9EE7A5A9AACD278ACE547E5B> |-
/n <1C60D8A8C9B7F51B1816CA1D547B9D412112B1108000BCD479B15D29278E
FF207C440633A34B346F87B40F04E5E8F9C3FD06BA69AD06F44D8C96AE9209E7
498AB8729996BB695FCE0B76D992BC29F7448E4EDD94CFE81D9BB5C9989A683A
B090A7835C786BCAAE46573AD51B72F79C70758202DE28EBE70CE7666E0009E5
8B750E17F7688635342A3A4A4867D024FAC7839AA7003B6BB16E2A4C4D307F4F
8B37258A1025AA52F5F9CA647EC474B0B3E170234ABEBE6186CD896F64E4903D
F224FF80948F28E0808441F171FD8CA35D9629D9DC842C46B11E25C3EDAB94A4
B6D8C6A956862134214DB61684C934E1AA4D366FB59218F15C370355> |-
/o <1C60D8A8C9B799EBC1FAB6A5BCCBA2E0F3E1D45B556ECD5A7EFF104D7703
44B1C6F7D9B6946DBAF6E65C04338513B8F66AB24ED97FF96A493E44241B17DB
2475C280908440A723BC3E93813D71653F3F8A5A881BF70FDE8A36C48CE9BF5C
083DE2E0C712117179A9F0FFCE4CE5E808F28DB42624C86F00B594BC68B03542
2881291EAE286936AFC4C4DBFC44A0E37875B5503D04A100C0> |-
/w <1C60D8A8C9B6B770206E71F5576446D84E0137B582D011D0119039802F32
A9324B77BEFB6E23072FF6CE0E2FCD5CF63D0497152B37D25E0B01F41CCE6AF1
49FF1F47AA1F1492304B643D928E442E0563B7DF5FDA8D259D5FCEAAA946CD94
82A653DD155648FCE56FA88636D95E0CD9B50D3C15FB9A9E3E494E1834B2F0EB
6BFEA10E52CD710ACBA0466847E102EC5DA51641129EA6F81C065AE9E971967D
5BDBC82BAF0484B65BA83366A16540DDF9D6BDCF000650DFD85BF504F7FF2CD4
760814B130C7F21D922A42F1BD58C8E2173C8DCDF94D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBRA+BookAntiqua /Encoding get
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 119 /w put
pop
%ADOEndSubsetFont
/IPWBRA+BookAntiqua*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 6{/.notdef}rp /N 4{/.notdef}rp /S 
13{/.notdef}rp /a /b 9{/.notdef}rp /l /.notdef /n /o 
7{/.notdef}rp /w 136{/.notdef}rp]
IPWBRA+BookAntiqua nf
IPWBRA+BookAntiqua*1 [16.0001 0 0 -16.0001 0 0 ]msf
210.25 51.519 mo
(Snowball)sh
[3 3 ] 0 dsh
178 46.457 mo
208 46.457 li
@
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBRA+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/K <1C60D8A8C9B60BC68914A478CD7BC29D781A5FC46A64AD449D3CE48CE6A0
D8D1E621BDD77748511BA3BEAC979377F661033527DD0104A0731B4259EA95CF
95A44546EF42A78DEC6C77954907E37BAD9A59362BAE1AD98F86F455E3ACEE47
09078615B0029C2ED1B0B8E3B9480371A00455A0679A41789E061CA8244C59CD
85E0B6CEE4C16EB6FD67CD7CDC945B4F1650DE5E18EF0FCAF98C379F5FFE20B7
96CE627616BCF7B2481CE3469180F04BAA2DC0F078CDA315CBD23136996F76C4
97210D93A78D829EF095F4FF7E3C0DF2AF2EE5A799A0660EDA02E8279E63D040
8D655B8AE3DBDC0837AC7185CA2AA3FB8361A385> |-
/T <1C60D8A8C9B7D61BC487525B76EB826DA209E599588F9271826AD29E7B1B
470F79ECCDA29092A88DC7D61A115FE211D8DAAFB2D11B3F2F839A2A0A701A0B
0BEF17A84BCC5249F6B2A2512E0DB0FE1E5B0A45260BCC3198778469683DA863
347883A81EA5761F2665FBC69EAED798D26226465F8EB3875AA46DCB2121107B
CB1A8023A1BF32082F8C018EA1D31FC89288ABAE9FA856854DC900851793E635
2092AD15A83111725E73> |-
/c <1C60D8A8C9B77FE2CEF680768ABDC36B82783C1CB263BE5484B552EB5242
6C183967149A2120762E84E5A5F6B5C649AD684D7B325F1E41BC945AF8F2DAC7
CDCB20B5E59776C0F23EBA553F9B2D8668B320EA463623ED2F4501581B079DE5
6B9766D8AA9EA20ECA2C872340A8DC0D4AE4E0A9095E6ABDAAD250B5CE6FB54B
33CD634BC3425029263C6E2EE04959225975167D82EB6C3B36220414406A1867
D3D807805A87974658B849A555> |-
/d <1C60D8A8C9B7D8BE16D35E9B07F4AA3ABC773F184EE6E3111EBEE58F30E7
4A5C093788762907EB397F545117B70EC1296402158CFCA893B8E152B3FED36E
BC67D9C422DFAFFE9752EA098BF93AACA36D5C53A4280D01E7779BF82492241F
45A36D4AC8AF6C6A73199DBE26F54AF4D2F32664041412328449449B9B052454
65D73F29B7B78A009D3DC437AB899F90B7D6DED4621A749FF3E64ED1D2D44A37
38AAA4969F7B94DE8AF8C9F8147A2815FC0785F4CBE2EE70997E006E82C0254B
9A7E6F86D0E9EAFCDC1ABC198649CF35A5DC7EBBED1C5E3BBF99F817AC072E4F
8075791A1E4D4F15CF3F8E678254E97E72C1E1> |-
/e <1C60D8A8C9B75CBB5CD8534012233D131627B1B267A3930139B0D9AA8A92
F0FCE4E7AFD311431CF43A9A551C385DD6E1190F0601E94350FECB845C0D578F
C2722E61FA69CBEAE0F028400C203AA04FEF8893BE5650D0DFFBCA997D1335B8
B2495AB693DB3A958CD3CB0FA9747B60D9A8955AC7A0BFEC37C8FF1727E2163A
214136BBCCC6F627B5031E9AA610E69502F8F74EDF1A6888C4E32F14754B5346
4DAE1272036BF9BB2B561EAF7A7AA400BAEECF1D802F90F1E3E018> |-
/r <1C60D8A8C9B730312D829ACB32CAC9B0868517203C18ED7F200FC8B47626
14F491608722BDEC68642FEEF3A308D209E98DC1910738458AE0B66D86FC6E3E
E048C4D2E5A7A6580A60283A65FA611CAF5AD8A9A819077BD620B6F2B9159736
2775A0E5A1F539B6F86C81E3735CE68ED61BDF940319D0ECD0FF998CC5FBC404
4636F5AE8659C5D7930F28ADA0487897DC17F3038C0C3AC48F30ECE6D927C22F
49EFD0A0756B4A01D3FB62E238AFFDC56D27A7E970F850F1760B32056DADA890
D9522A82A5C86A55CCC2BA28CC6D3BBE65034AE6D54B98FDFF> |-
/t <1C60D8A8C9B82424A9C27E6E9DF811EA1D553D5F4ACDACB82D3B2B7CC8F0
6EDC072CE45357C9C18F37F88428E4FE1AEE57AE61253C2D4CF5DB8D6D9C43C8
368D3E08560346F9C492D1ECBDDE132A2C001B561424A0718442FC769B95787E
D1D857BE704297D20080CCABED98B7B63124151429278CE4D7B1F664E4EACA72
8C10B5C11A88AF87F05984B7ED2C9F6B2F62BD63BFF73BD6DBB861B5A544F0> |-
/u <1C60D8A8C9B7C05416EE4959E55B08FD7B137A64C2C623C62345DAC392F7
AA285144B94C044B1E1AEFAE4BB22BB3C4E3412B9F11E4CE08A008F989AC52B5
348A037859B72491DF2EA4DB6FF87B09C5657124262D25504363D95E04BB6618
308F8962ABCDCE909D3FFAF6648AA5FB013089CF4D9FD9462E5D46CD101A3DDE
A6E74C1EB59FCB4C76400CE59B21876C3D72A1FE94A6327DF513DB5C6BB46C20
0E668840A43C7A6D04E97FF14B6F50848E3562CBF950F6DBE499536FFFB04BA5
8CA1652DF8B65E132C13A1B26CF2041D545979118068D1CAF66704CBD4B40CD1
C222703D13B7C0D5B5DEF8E05932> |-
/v <1C60D8A8C9B7E6F05C043B04D20AD453C6AF6167C604FE9CF08E8117B299
35EA238E4306655AFA49996E5A9942F663D829C7B588316E47C1C521CF1E314F
6FDAE657774D085BB35803F69D7FA0DE1B2093903004BF3E08DE5217A99EB5ED
1E44C39DB2E2DCD4D3D96209B7859470A0D5B17781B70380836DA7D5014AAEB3
4F3E8F451881BD3758B929D5DAA781EE9996505662984B50BC428503D1A001E7
A93477131E100B577650A753A628291280902F4274FF6D876B> |-
/y <1C60D8A8C9B7EF321E616E96933530A3C7C80F8F5F05B1D54A7BDD85DB23
97A86DA6E660C260348AE806AB6258A8B48350D63FC27986036F280A9B44EB09
22744F1B7626A6DCA59CFE678766220ED74C2D7F53728CB9654D3ED5D5C8F523
77189EB9E791BD7D8D7B940F0C9E245FA578B5945717E63E283D1F44F6A79401
CDF2B86E7BCA435F5802E051F0A7F39CF6100E72D8EC4EAA21F1CC8D47B43277
E3198D215E9C61D434A749BE934D4B3249605621ACA55895B44D2C38681DA59C
526DEBE51DE100627D70BBD823277C03FFF6545BF8DA88E64CE775ABBFAC23E4
C3C59AD0365D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBRA+BookAntiqua /Encoding get
dup 32 /space put
dup 75 /K put
dup 84 /T put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
pop
%ADOEndSubsetFont
/IPWBRA+BookAntiqua*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G 3{/.notdef}rp /K 
2{/.notdef}rp /N 4{/.notdef}rp /S /T 12{/.notdef}rp /a /b 
/c /d /e 6{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /.notdef /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
IPWBRA+BookAntiqua nf
IPWBRA+BookAntiqua*1 [16.0001 0 0 -16.0001 0 0 ]msf
210.25 71.769 mo
(Truncated K)sh
298.712 71.769 mo
(rylov)sh
1 lj
10 ml
[] 0 dsh
178 66.707 mo
208 66.707 li
@
.5 lw
0 lj
175 78.144 mo
175 14.769 li
339.625 14.769 li
339.625 78.144 li
175 78.144 li
cp
.639918 .563928 .533043 .294835 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IPWBRA+BookAntiqua*1 uf
/IPWBRA+BookAntiqua uf
/BookAntiqua uf
/IPWBQZ+ArialMT*1 uf
/IPWBQZ+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 22.0.2
%%For: (Harry Zhao) ()
%%Title: (fig_identity_compare.eps)
%%CreationDate: 5/15/2019 1:00 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.B7'2/cm\g@hWr=6M!5orH4iOtJH-"-KJZ#8!hmWLmb[j"r:X42*SZs%5A/<KpKgM.Q8G&)RF+PMg$P3HAj.3\^G:_^'B^&M
%4/^!To2$u[*bN9%J(X.bnNFK^(CJ*T@9>3KdEsooO2.B](_[1oUL]U"-oqd:LB8_9-U[YdCaun2ChE$]h;B%NG.#IFV@.:,37%Th
%c-L<T?f4ZI]YdLBMndOne)"IVY>\QIf:ZrK)u$5=&+GSQ4L8-`de!/,B@E%\D/PZ_l'NLZY*(Dm]7od>/M+D7DgbA8!>7Plk\aug
%SdoP*=eFdgkB&P6Shj[%kLKu^(A&Pp8'dsdndIWqZKj@j&qC:XZ"Iu:'fi;PE?GT:6rTcbp`#)\_Ve!2)Q2R<3_G)N+\6eOKEU`f
%+Z^U$LEgg.,Yh72E"ij>9JI-:3d89mZX;bCRd7)rMtriHkT%'6c?e7KFo_FVU$-R5*WG.&4'PI,CDO1:+iAm#3>7Ih:[,Jf'T`G4
%gMTGh+oCGir@;ko@XCJ.j(XqDf$3_LJ2C4R7$@>/Is&MoZ<V0/L)e$h`A')c(IN?QC.M&5VS+W("ji"rad789EF8&N#j#O,J`nK,
%@j2W&Y\NVC$`+1h84C-.5cQhp2.(ubGK6?35J_\CYPY_&:f4r3]N\aKo7oaR+ls6Rj6*[\%)?Ff#5j=AbW-\0?&?PHW@04hNflR0
%JEc<ejlV*C!mm,uaNoXt2TC=h.\MG,'F7(!6PPDe"%['q)ZrDP"@>Si7;b5P6oIZ0a7'<XFoW'grhHDO9nFO+p.68&MajXaN!dsE
%T((51>[IRi7)mX1m&b(hOb)76hsZ=4(madMG`)//7>B)t&4sh(>]8FkSAuM_fb42VH03_I?%J?HRg]B`,8'\gO2K:[<d;b@n1V\p
%[gWAr1(8V9.%ok8=sO0-73_5&,Q`lm,-Y/p;CDg1`oF9s4:]P"4Akcr*#=IQ@57NdI_oRI/1d+3_Q)9?I$;gl15,dW>:;l`W-Y-;
%$PWrX'(.UE1@>a/M;Q1M_L%"<e_qTP%,qFT@53S)J1Z3TOb040$q(GO,2<?Bi5uTap^)F9Uu3V:$53e+%?Z77#^?%I5)+;JW0jHl
%#I#%5%=Z/LK`ZWKE!^Y.;]=*tP6ucuWYg)A!:E&=*JTV90<e%sK)`Yr&4cL%S&1-&R,`BQj5:_U%,r[S)NtA,L,d%Gp^8:%jT'c#
%SVN9a-S,IAKV+X"=BmP"E=X0c5o*;["\B>/LV&@V%uXlU$+.P$@g#WkERumTgpY!V>X\>lb<Q16)2/?jl54U?)WD#e@50>!&4]D1
%>T&"-1(Z`J?'')8,[p7P(g,2iE>F3sO?:s;/2C<UKL$gO(/l=L&(;Re`l(68(DnCTLV"(T$1Ms+\,lLKs5Q2%#:c$Ub^3#+gdD2A
%_kJ]AIU!+W(IkSbc3.TJirD``0Erdo7+ESt&k9URD1U7N2di6\Eh_h38VHL=>o"RCL2g4N'%AnHU\HA=8(76uoG@O[L)p8Wro/F#
%H8pj*8Up9FBGCK4ro/D^hMB*Z,4l`P0:g+dUqc\3-A-e@J+5a"4dX'IUqc\35*(1dJ+5a$r5\,Ka@#`Zq29_1^[PTd,9=p]_M(<;
%#60JY'lq]DTb,JFA'l:o&&&Y4/,tAo9]ND2s8QH)Sg-T(/`?[()&3mdkBPFK8#UY8s3:$Y/EE0LIKH?'RL@T#`;fRNc]MA8o9=c$
%)"X?^FtU]LV:+k:n<@B)!Y>N3?$JnPKrVY2JQ)f+D';DJ1<=2-(K?`)k1cb!GsFKk;><UUGt^9o"KI.q/.W*MU]N=(J8)5Ir"&c1
%cRA$0lFa\@/;E-$7anUrNFa0K`$f*G@H\Dd;''3P+\J;iW%EC`T(/Ti3lXgW_>j)3#^;Cr&Qh;3";f%l62s86!uV[We5mN0T'iBm
%#/jlo)iPC6JtU;sR\N[iK[s"c#]><iUdbn#0]*a6iZ_i#&XlN)<Y\_m#*'reA6>M%HoPRQ6k%:TMH,Jq4,/K/'I4*HDjcPsZ-3MM
%dW#9j1.JpDj<UHC>krpo#qmVCjuVob1rO)o(^-rjE0uD$;/.*hRL&Y>N0cOb7*K46<U6Rk>QAhKU,_&pM!u*_!'u,h+Clf%]^_pu
%65AFoL'4"i'l]A8\hkrA$B'NmVSYQX2%O%!;dR:?T&+Kf+]9Y?V*`Nq86JNgH%tio`IA'@Yf`%<)t9uF6^Ln"BR2-UMGR@=+*c);
%%L?rId^3^Sq1IZE8UTU<jYTJW,qD@R2?XL!>YW!Q28S#iTja'AH+rm56p^)G>Xltk"XJajTLKK=$Df@,F]K]S,\?m\IZ2A`.[#)A
%Oi1rb6Em1,EJ!0a#.5j;dO::5&$/u[3b/pL+XH;]<*^%<@44Td_B>!\$:/d1&V7lt^g$.l6.-s/.[1C5K%)<5`G(q7.Z'@O$Y,#R
%,&,qVN/mIt<`8elE/b-88Jo=Sj$GO'(#V#:BQH!ZN['[KkW(6Z3P!h_:UWeAN@@O7Cl!e[Eh*WR@ndmX0UD?ui+qgs1aDc/_MH*A
%SN"n.^N!1V:)G4>!e,BNHCf%NAVN'2=7qpC]:#BsImnK'4VEE;k"2?IJaPu=H?"KG6Kc5f2NiqS#G:It5nTnm'Yah5&J;]KZ'-?!
%`JH+`3NTUUn6(P]V+tD-ic8;#5f*T2dL]k)8Sj&7*gVe_\4kLCjR*(V?"BJXAL%sED9.<m!m<9Lgei+h/n50A.)D*k(_8:t#'W7C
%6mUPm3/e*H`!atf(-3m)_G^,=S;8UN?C8c=hF27,,\+fg'pAiYZ?OATo+gjp7D[EiD@4Y3kok!GiQ_]]Z+rVe(4pYM9Vd8s,48-(
%Eqi'@'G6Ec,=d@+?0[NQ04@.@70U'X1AQas^5^4uYYqo+;m`@)AP+L(:^?STU2Z'uq&YYa(@aoA0gT>TkIXNFe@9!6"Tn7(,9$n+
%*m9MXBfR_%f>W$*1e5O61;ODD_\1k7L+_qbcik0IZV!paL+Zh=hJ!k9+c4\%)Fp;%U-@L$&WurIP#nV(^:]^s?__YmOeV\+@&.2j
%"N?<g<B[X@fqc99&php2$>GPNV3\sS$r<RKJ=&Z#Mquo]NR5s).bc2XKfmon"9cBf6])YL;JF'@VO/]A@ibTeNqaAnYX`_p3_(t5
%ilMa0Wbgo;UqBquCNLVXD0`&DN.e?Ih\D;+nm,#jYh\@UA0Xi4Q6^sCjp)Ni<MCde(WO&kKpg"?7F_9hOd!#(TZF-jZP])]#UkSq
%6MMX%&U^[e>j"X;X!gc#ZXrKb.QX`2.X)>@T6]X`.+%lKN$/oeeDQ;&8BJKgOHL,GL6Zg0jhR.\$U0:g'-[ao!)kLmqug9g0)"+t
%=TuZJ1ea(]cJot/W=.3M1b`Sd?7>D^eVZ\^ZjO-1NK2C9s,N+34cr0m7!^U\alB9$&X='KjW%-#)6I3NAl;r4pg9,.fbbC%^oL'S
%Z<^2',I?ho%5+\0+<trn&XjPm89m%dF3<JT'J)H-0]o:m9N2dTTVHP"<LS@b\AA%[1`qN?S_pRu+=,B$;%8hGFm,c;TIE?*+L.BX
%kE6#^#.[`^Mi87q_XP8dX=EjD@%9b\F]H!)143WKA9CL`)FC1'i1D]f832$/P_$8V7+%B0S7E3g(i5-ZaWWMcmgh=54R>2]%u>>I
%eKcUm"^$EJk,MihE?/kk`%\V.;cP6!M.79[`C3X0R!-Wj-)@[hOVc&1`Tb-bL^7<$r#:Ma>fJJJ+\9S.PIj1*hU@(iOh*%2Va>4:
%HpCj"Ugst"(!q#N,_XSimW]H5W[n98"U%-a&0Euq6^J$<AcF8I_0kEWXboQda`^(.SnL#p]W@l6`H:e/s,5D^Gqaa,]MYPl,B=MN
%\Ii?Xah/l7_E`X$,s*Il9Hf;9#^0%kZr4h/76HE_r.G*sBAp<:,m@JkV+b$f<q_K<(0neW;0q!+;+e3k[`&QGT`+I[F^!u=*c:K!
%--;?PQ@AGA#>l>'TlgNTWG2>P2N`S,QQi*.d?Rf,5mi\3P,N\X?WAc;\WK$>+2[tHr7C:E#.Makm72D>;M/1I(LR)Ekm)OdACm=4
%fcMk[Ik^ENcXsFo=6',.PWb'tJmVdO:DWA@$Ka;&igaIK=c%TG`<JQ)$Z8)I:PXArN1E_abLIG[%h<qn?S'7t!UkYn0fRb/5,[c)
%_'R:,7uPWl2]i6nK-%Lh#JW1W.;F4PI]e=rr&GK!j0mnKclW&/NP@qu&L8hUr4oN4)t7qiAEUkeC(t2kkg+Q;*O<L=f,M#7X!24n
%V#lN)0A,3%Z(A8%ebGXAa+KrAR,n=fX7P7afc'p36pe`+L?$q^i"u/#$21pKKUqjagt<cK,Sh*:#7$1K0>:.uprUh$oC3f"O4$<Z
%s7)a@SM/R1dBDYfSHh0^XV+SQ#%tUMlkU]o?rCr(h5ildbpp7&CU)RnU5]soE'<2_<rCJeCt<EA[Q16p9Fs?+%KQN+CBJ`>SkaiI
%";c-Y#3aF8[i0([W(4*0I/1,5EM*g>3pKF(0b"'?lC<a\_).;[cr:oN9Zsr6`q2u`fV]ko_/ql.jgu)JU[#ZXWXN(QbGsaEH=^?]
%N'W\>A]eJMr-B'Y+b65R3j)<"($`(3Fkin+=DtX9Y/e`MY@)c9Keh$g&8L1H/Qq2$=K@']5)^6sO;=.O!K$2>=2>p^g_92Aa_LQ(
%kapEt&!<X-"pY2i=BqE9Xg:o:ckJ"])rjh+>\Yel0c%s:J/iV=E.Np#KK^tu'c)0/Z/0Htk86Cu`7X"J)[pGUkg)`"o*`<>,@^Q`
%*hWE$!94dXE]AHqI9:>uCuW)3"R->5hF3;K59DH7<pmnOQerZ4m>uc'$I==@41ksoiV<ni!;)RRs87H&YReL7llH.<]<@J]YlS7c
%n"@=`fadNKHi`jDi:.]pgY*:RMffuf%<u%:(7Sl\rjb#c_j)8qqWrKs*NXhSr.c;afDFI`L\ok\[W7#?JK2qL^i-JOTJp2gG;NEh
%p,Mac^BJc-:Z8LFqDn7j_9Jb[nC.=5:Nj<Oar8:]bd?#ip?"O+*5)n&XH%itC%MCrUaBM9G5YsO9q[B0J1RW6<(>EP5loXh1SCaE
%26**1c[\@[CV`^f_ko[Z_nGOI0#7J2mV9!e@Fp-o\kW1g_6#VAld9ui$B3e5U]UNE;&E1O5;Rq;[Kd4#:^5+jG]9852QP7$_dY>8
%>M"*Q6B])NY@('\5b#N#rP`lkRYbG5:E"aGj2$ssrW5R;SFjWlh;#Y,a7S')JhNcd+O.$.S\9@L57:2eV$.1<r-o"[nGFD?ZsY:h
%M/`71s$A+8PCYLl#-X&=1+^oPWs=kTFkkk/:a)5ka7CJ<GB5QHZdRK2ba'qolF].B/QjoNKT]'/aY6?JOBF-LJ#=lVj**3+B)QKP
%EuT^rq;SS<qK8B[7$oV-jasnsN'6odf?Ni%$&5PNSij3/&"%MSVW72;-r)S'0ML;Y0Hi1kUSqiW&d_JKpk4NenL,-1OKhnI!`M%n
%B-\1O;`#486POc1;rL7u6:XCO1*.ZKp(C(h@j-S9U3&@/-Y\Pf:Hd><MRVqJ^Yl:7nEh/Wqs0arcYq-:hT5<I)0gFfM`qRN,1p4-
%SGdFK"Qg5Dd6df%$3-p.O8Po\O.*kUM8uT/3)#+%'G[;QAkX16Bugk$*?lS;(c'#`Yn/<P@Q`YD(__eHkm58H@gmV!n2O;8#fKU;
%#pp*p*KfWr@itSD@it_(@ilope(@V!C$b*a2"o.C)Z.m2)LF9ShZ$pKc1lVbHa3THqg+t9['(;B:]#Iss/N9s!hT-Ee+MHjr+2d=
%:je$@W"Y`:_IJng$VsA::DDF&c\Jg)cL10uUGlc9E-2IRDtHhbSbe9_7*VWZ+;`O_cSPjas,>H?Z"NsQZDsQp"d?D%K8U]d3ho7D
%&kB<;;u`KZ*&OOAWX"+DZu?Qd^Y[iW$4id<_Ooih,YsKuKccE>_(p9"!oU"uYq0)O5HjeC?Q6N=e6"81r6^:'Ge1$.(.2-#]o-s`
%hm;Pe'_(kJCMqqbXP&k829g,(^>/`^1FIbu.lS<)VaHK8o;-,lI)9[oZ2OnoX6?t70jf)'luB'6TGa26\B(^%qe'iY&IZJm/"M95
%TN:i.HuE'.TE!6$W]rsCGu80%"\8tg["`7'Jm@m+V\J..OTjlFYNlN`Vi/BE*L];m.!eLZ31^\G0d4d2HJIg^=]6Q_%!V`T1ES*#
%_.L)]b^Q<jpfCk6TB])IBc]oLFtZGeXWj39oq8VrN@n$ajsB\M@bcJDrS.2?^M>7$56(KRS+hEM0Nh,jKE")L>W?UXGgH)\7Vk$(
%npcMM<ZRdC$b9WAOSe]h5qWLH(8iR<Tk!RCfNm-h=L^TI'T,6)Ig)E;3#%1qZuG*n/i<SH&(`%)=Rmd<'hACSPZ]PrnEM[X^rNI\
%T5/hoW$rFi/,a8=%&?+WM[_UQdD<m'%R1&_^OJ[:B'd)f":j&j3YO`h1Y*]k8hhW5ZI7qK.>Tm>ap9ZHa/]A+.J^UepM-Es_!9A<
%o4;j^Ep'LnCbnM"0YU4+*+m&sW$`)LPP,eUDKn?qB-!UCkF=MSgfa9-A%1+!?'$]NVF,H!^GQoP,>sMeQ!8=Cq.eU#BbXq0GR/9b
%LGbsTA.GKPMp30)?\n6PS`n-UYd:ZVe9;[o84k?-gYg^!bPfPS5HoX@d8%G_IlnaT"Y3/5Ql%&+/B$VT^%n;6<E#@mjS:/eVASeD
%&-1g/X?l/!MltVb7qJMo3[-*1S$0lq^$3$Sl91,7,-D5E$&,)T=,4t=5d4#r_'Ua\6\.cO^)S7;Vl&3`\_+c1eltkE+d=UOV`3q\
%q0`e9aXF*@>(pUNV`D2P7Q\8jr+B;Gb,[AFg*Smm#O?688gX6LYq4B=NQ!+)d:f%?\Zm!H,I+lD/p-`q_T3"Rc&GfJC%'YjNtX3h
%#lr7ZI&o1I%tG9)'T3A<,nRMI^)$tR7A#c!i:lU1@<%@eif5i2X"d!_]r&c_!%6-@2/5dn$9^j8eee[56!Oaa@dthh/R`%6[A1`L
%3aRE##%ubAT>U<"KfES:86Jbn?ACnRiVsQ;:7V'*e)#HpC@%9kFu\@&cD:WuhmOu9'dYMhmA#6G5*rT#9F;2Z.cQb"NC4(Al<+<d
%(`T9F8q"$P!faX`P$H,N&fKV!lJ6gNR,3`f/+lH>@"$]I8?.K>UQMKP]1&,S,`N.C,V9rBlh(7(?%q-c9u@B,Tl`u;_sfX2^_SV-
%eoFO6FFXeH1;c1FQOB;I<8\^F69TRoZ9.@F+!d&Rhe.V5]$lUUT<mm+.T>>kDS*,\(3k*[]r,/?0O66>qWI%!?12;YEbeBj(ptnd
%cH`.>*n0t6.)D^U`OmIg0L>NbBc2(s-G?[/N%ue1mm;])63]m?U9!0U9O.hD_D*g]+3mPY@:R-ps1MICFdg!pf2%4fNnUcPlJg&S
%:Dt84=B#f&e9*d;0a_Ud==?T+#-mTQRXIE%+_;BZCJ>5V78!&!R/_NDi79S;QsKe2?<,Wb,/*n_P2+_n@$u?1#K!t+Ru^Vq0^RnL
%2q1ML^T9S)NNj-$;.ntnMoJI&9PWg#Z'9l!:NNLl%%;bt>)>X]"nba!VHVIp82MBb!rOeMYrL!ua5FoN]@qnM73.&macp>Z>b(A4
%aSt"+#E-,HQ=D(-7#E1`0lrnIaE2AS$=dt]Wt#ah"4>Jr-dq3\M%Uag=J3SJ[cJqVV*t;Q@j.',"<5i)V[HULYi(9&:h.kE#A]7j
%Id^RsY#eF,]*,kbrI?TX!qX@6m>8BboWn51b"E*.;jZNHGRG#i]>Eq`$K`edD0\sE>#!#[5%)5q<:JW'OOMsR:/)K;Ya;I)n8h74
%LZ`9sLRDQ5ONLc@F\jRFBV*i+Sourl/qTY>+AOaWcRA_Q>o]Xt&/`Um!$3Z4NE2afQ\!\!#q#kV^II6@]3#tJ(pJK)ptX'uH[5-2
%E3`T)[K%I!Geqt(0;,/\Ek'e&@V$f>#SK4S`_\S8`0PQcDgp]N&idC2e=]FIq0\m%#o/MSak1"pCLYXl=inX/,RtVl/'n]p5I17Z
%liITViVBOTq,hRJ]$LDPNVeJL>^VR07MJ0G*%[%'QiRHs,sWEb$j$02j1pE^V3dRp1+Ge.9knXb!,uc5?#d/qR:aPi(D*LTI<_BS
%g;Df_(R1NbQ@V9F(*"2,>^jpE!?be:E:N`AJEN[EF;>T\!Ngg3>8b9_@lEi.69Yq-0;ho(d=f+=bh91k/68NEW]u4faJ]LIV\m$-
%7`fC.ji]<D_]<P-UhI;@YBCVFM56a<XF[i'#'DdL)\cHb#4jG0AW(&gCa\;HZHtFgJ[O.T>hS*I4Qp39#G\p2lTE2g/oem1L%T#'
%QI0=,'Nj7l6%;,^CLA.Y.jG3%q)?5h3/N25GRb'J*_g4Z1uX/09'^a&fOV2^j7TKdABQZNQd^L&/0f9Bq?fsujn_5Ti,XS';pkg.
%["-`W(k?mAGksr2094-UMh\(=*J5?;F#[HGT*n*#:T'_!"IW[GUcQ0VE+WVejMHL!QsllI7VTCe@_k7C8nX0TL0>PNQS43Y!GPtd
%Ml-P$(tVgtfH&uc<Wi;,O4SFDCW,&:>dfRub"PJs\'*ua:hYsO6=Zb"e-j5JHm:QPq!BX'?#.%WmuUh7^ZIUP3a`Gjpi<b"r\5l,
%Bn@,/b]%m8CZHuD`3<"OQ@+pG%lqGf:[*]&nfu_t29cKrPi&TWe@pL*$__Ms%!7VZ'UTH1>n.I6#lrQW:/;QZZ&:edZ.@>kYc#,\
%g'&KFT_T)$BM-*9p4T:[D:J^qY"%oL>h2IC6>ma_[MZ7"n]JU+oqI+7hZ2,)*jnb$]QYZ+a,Fa>3@Lk3b0ao5/mk@'9?G:b8=d&V
%.:f*'^h/"q\0d+K!jPn5\]#ZnJ$.!gVnrG'&3E=+AWS#de<,Lmj?WeB4C'k(!Q`mT:uOIMT%m;H-gOIK'l.P<ggILNVHf=>V;XFN
%k@l5,8\GTs82@R&kq$(2bjm9@pPP5(,uhCmX9!E%H3fJg18/0,!/f'8;KBC>aj)CU<Dl3#m]EE!-/Vr_?UtR3kMnR+Itd#R4n>U<
%BS>L)E_`btKS<,/XiS<l&4)<4I)mt$)D6g)>3M>2Get/rL%\>ZePa9$f^B7X=#0qQT[D=Gb$=B)l]`8=r[Nn_)M1_JdSb-rr&6\@
%<Bo0QHFm^opEt<G&$KNmWlQ;MKgKf,924DJbIMFH17/pe!PNS2>;!t53>QoJkUf(3q+\MAPN`^NA<P%<l_XAFTkEPk1<n-LCR)H/
%&Hqi!&rofQ5*`(Ef(!b=p@Y%[]sARk*6%46T7?h`#kpiL+?WC,6+Ce`T\3GWR]l`9r<$F53lTp?.Ib<r_4M8&khF]'I'MR[%nj!k
%8[1_>,KC'*#cHBp5Aou0ksRc-++s+nr-<jBAsh5i2>gUtKcclk$2ARlI\pV!bS#;C=^^9Vkud!C'7=k._4M5<9[O_KqnN^Q/7l@F
%g*\`^I.PlromCqqH3hB[W2nl^i823M?i1Ua>KF,*&,b+45Q1D=jGs[tl%+n?3(&c'*;YMsM1`N2_DA/V+oD(YohXX/Z5i!'&#?%@
%RG4M>9_I,WA:jeMqVc'u0B=o1)UR73QLEQ@0=akkae#PLR!1qU6r.nO1$!jDD'_YnY0>\L3SR2Yr+K%'s8:nZg:1*-E\m]P4SV"a
%FIqu7JtlJs/+<[@LOTl1+U_MH4:=<9BDbU"f#@aU==oWchCa*[X+TRo!**[n*B]sQKu0,YA5U#JhN[K*%S)Z.AF>o<1$5kZTSf/_
%o6pIaGjWT5K@UV!OXoqooBsjL-WbT6ilP-C]LG(?PJkh7qWWqp15V0_X[@Ad/^$[=FA./3Zc1OnE*4U@,E^-ASK2(&'&NP'PtM![
%&#.p.[8;c8[a!a&ItElR$K4^^\L:7Mq+W'hoVL^'n^e=)Rm^nmaZtkl>t=M4T7org;>Zpf/"bZpFS8&/<;jA@.'H89I%U%JdZojc
%'CbVJS+4Pf??5.9fa4+j9N+k:1C`+9d:dLlaeZI5RIX,4DfD@OmVW$kl6>'>&0l*?:Oa//'^,4fZHdn[jptR7TDhn=Qase(WYs!$
%oH,@&rt&3ijX7.G_2PT,9A]l7HOKr6jg##/IC"Yk[I=TGHep<,]CtkaGS5!,&pDK):kTq(XuH.!>&Z'&j?Jbss4!NA\\DVCPog>n
%i?0\3[fg.4j_BI.p@\f>'T?MA<BUa\JMTS-$.nkBKlH4E$c5iQ#S>iS98;rDhqNha2?-ARqL1@8r#/oSjK*>k:oc!;0\3Xk?oG+m
%&U%F9&.tQ-SVU0LNejNL)'WAmQ&%hdGUG*J"3;hKb4-;pP0'1SES\A*,#WL)94S[,*0GZSG)<kaZOqo2:PpRRQ`iff^9eLfs!CH>
%HhK'h]CrgmL*KSCmeZ0&d4F10L_fg9,2/N)$h:Unjb`0geHgbPI;23-pUfZ?naR1a&cMEOP8HJ8D8bTk=X?OqhO9fka:^4#FFK$7
%4]!DQ#*2!eg..J\7(Ke3=I5F[M^)_S=BqW!QGo?,-8#4^rPLtYp+@m)FZT\5/E-'9N?qVH\h"YSq5Yh+ls3dm>j'.j*SiY+L%e3\
%;LU,l/_/HNh,5?OL+N)J]=FcGDEh5a,\ZC!4geD'9qlFfcN*1TM_],e[m1$Olgi<+CrFI-bhCa-==m7mAp&d07ooAos(M'a,:+kZ
%FCNh*KCN,TZeiiNq/Pq=:#1:`>B@3A]!^$5$eFV'jN?2$]aIsb^9@IcNn*O(^;ZESCTl.GXR'#0B)SSWhZ/UXI\.W`=,up>bu2=U
%ZoNQf0:V^L33nY_Q#BloB[(A`fC"\O=]lBGClWPi8kdrW]Ce@BD>1cpQ0g;f.,&![m=qa0YeJaRD_!'ejC>U&/_@slS[d<W!AJ];
%;lsg/DOdnRWn*Zo,O;_gIT^_;m2>K$BePM77eYTZQ.t/S##b/TAc6.hT2'k%_s_T`rn[NdfU&4_R=c@M64W0hGio>lAkPWBC:S:/
%)UsZi2,:a`(e6=/XuL<k-?I4[_ft3e^+8mt4`VN_I'MWHa#s)5E,>I?8#Kkik]cmVi0,tHILA+gmOhh:RE?`7/D$@YBB(jpm<fnc
%QHo6LkgoPIl$/c*C:WY8:K#e@)`j0aKIcO0Ir\!;ObE&c419=o$PuUA>G*3H&+c[9p%mA]\:urcWb\%H,Hc0d@W=Icm(aXcH5l9c
%[@22E^TR_,i_OIRD?M:RpX;k1dJ^<m.dh<I!J5=k9OhLl4nn"0"<9'q:ZO,%j1-dr-Cti[@m,$r7F0FcYj\1_[.ijRN8Ir(lUCQe
%lZRckH0NtUlb+]LqVL!4q<>$WE`;Gem1\[M=]T_7pMDJ>?!HaUjT.PHf:)6WKlYF^l!M*unuKX[=!+NF^<Tr8nI7[L]PlAn4SgZ$
%LPao,:O;ueKKnj"f7"e>Q0IJKh[[CVrf>[O>Q5sf5Ora,T#lLAo5Ye+3;V)hC:&Y%!gU4[1!m(0g&er[Wt^rXbbmbM%<EEZhr"0\
%Z(X#pb\g&A_0TS8"J8mWmm/(ViS[Ml]hc4Ekt@1R=XW9Q\5sekedX._rlRBerAu?"c2h=q??T<L(lG?(K@EoM4eg(^ns4#BU,:Du
%Z3tDRC:%^PcT"YJ=&(E>>i_f)-2ZPmT0.ZK4_1$ZqPS(N1@ACgc9t"e%ji7pBJGK[k(\/>gJZ7>od^f`4P&J>NM58klO@-*7NJ1l
%Nn4nio%;M:[UWNq<fCl1p.da9E;VG*#oBpNHajfl]>FaN(E*5BH(kn3-Z^;b;'2W*+VSZ]*q#NR8:Ton7Xj>;8(@,KMF?Lm+hGIe
%pg/6'[Zg>/3oh'Jk\:B_c#*D6G$-:HA!LjW'RNS]e7.H1l8rmcVs$+b<Z:LeUV2WDj[Y[-&(UqSIdGLLn;KGQM+#0H!;1J?9Q\q7
%1,46fJlaX2fIG@h74;@k>i]qNe\soDXa2^L]Q%8ZHfX35l*?$s;q^X0ARdPF?hRs4m`V6KkDq.nFXMO$oF0PW[GGS9eSX%j=3I'e
%POoS?>k0ArInS?BSoV.6Hj`@c\K!7Cf7&3mEh0:ODqFYn[;k"Qpi>!AZ56:?lc!6]*G(b?VTV`1L9nuW9t\58dS0+@SB_X,?g5V7
%a3XCeZT$#d0.5YFpt]PJW@UUno:@C71J;WD"^nWeRYT"^l"W!.>d&(OTD`4\B7&>@F4#;NQ+O"#!kGe\;*)2a\8CA\NoW0lM0[nP
%eglm.O$0gE_>3l>.U3*HnNr5+ZjQd.H;u4'm]0gL++#Z,h),J8pgtW'(4Wu7Y!g8[fi"uh9hJ3VI'PU#9Y\`aLJ"kBG.YN4Xd;>^
%r#IG22sq,\]1K;/mnNC^oQE$*ZcS**rj&P/4hnHV?nrE$b&b4u\mepBHI\kNGoG511[V0%g+V?mDMi,b-HDP@m6bY_hgT2jLmg:!
%26*Jtq3TfFfNP?#/mi\m^hr&)SpMjLqMSqFX8h6.c3?Gs=W?Jgf1i$PIUCtEDkEN2=CGXKX2eLh!9W^u)facIJdq;MRe`!#[q!8?
%qcU%DdgWOB<jNXUml0.imc=OZH1aA>*j..<)@9LDiG8DFDg;P(CFf!S8[P(YWOir?E%u'^hlj!Pm3m87rcI59+5N>s#_71oIsnaH
%T4<&f,PRVM5=J1_hbSBulf./EE]`K05A\_Bm]G%.]Y2[sB;.?aHqoX#f?XuA`8Z'.G?8.Mc^![i_L0&3%,^s(=816qGg4s_c`aPN
%Ab(h*$TJ-R[u4Fas44bs<o4Z'e*).W(U:^+M<E4ZER`J&#$S-V\*Ti`h8.R]qr&$M2]p^52>MKH=V#heErWOkSSCC_Sl:V\Dc:Q/
%oe5_PNIH6,DY,qbs*bN[XkNj"TXge'#)c*a2iROG^5$n7OrM^#05`[i6\a:6eT6J9AhWR:RF9F>Zi9a,q4)i0QnO2+b$Xh=U\coO
%/Vk![2np1eK!Y/a3oRSgkgb)9^2#$$`q*@K3i:es`h<7cI.be!QXAjT8_c$@:>37#FL(aLp842P]@aKsU"GdpBpP9c/t93#4'f@a
%4'cjh4R](PkCXn&[I?TelbuSTH!H=)aibu)eud+bZhq"4G_m@>jsTkb%0&GUHPVWL!\BZF]X>;Q-X'ccm@WqKPE`pf)Dg+fap-im
%?e\daA-^ng:/-;'IsdanSF?n>iQW.rL&@),9\GmDImh!%m=(-*H>ic=ld;/PhrrGK?%NYqgkjq8M[S\D@@bMg`f$%Dp&:tXq]n6p
%nLa.A\rVdUQgMa\pdX.baAlQT*/$Q$4:lrHnO@b%QNS2=lF7GA0TgM8Ki[j2(3Co_$!l.IP"[4B`5$20p3c-)-nM*R$osR/P,0e#
%ja`BXk8uMHI4Dc#5Xc[mB_p2NeBJEGPr^q1nN-(R_LZg`@O+Bc\Emi?BWV(-6`Y0o%t+g&<`^82Y@`H;Ib,rt>u)-jB:"tS#G"YD
%SY[eI)t+o2-2]^l-SW<(gjht6*.5;#g7e2N6W!SbIb\0q$HKg$LrYro\]cDh]raK\.V5>']Zj.P_,[uZT(_b?\`Z;hPV.Y':oEBW
%]q^q<7u_CU/#d<Wk.Lj]7]uAlolr9N<M$9;H7:1HMpo$p7@'A6po`i*qE=RbHNM#sFQR'(eIL]BXKS/W?Fa1L'Nm7GY,QRqB,tm\
%\SFteI.:IPSR1$&5?Z-m:+UW26Dt_b?&_D7"!pYb6!-T!j_W[<#$GoMHJi,%I:Y/NC:`J^!623OKlrl6?\%C^cp>o&%RVqS?1*\W
%?%U(+)fN#Q3$clQaMj%1f[%MqpfX-X;Bgnmb.ZWFhJ#>/7c2+?np:@e;$"[5hefd$0%@tP;RC4,]d-k<MR%:QW"9@Agn7t@(-:F%
%K"?"!DZ)Um_]r7/fu\"s%<\8`!pP7Z%o%-tKjhn8]m&)8TTY"aa.*XhLt1?qVUI#n#Rh7=K.L2u>M;o3rfjbE%m4Q(q";68iLr0"
%:)/JNMtM1JF]rblKX.4OZF7Zad5Noge\05]^e<nV2X:NC6OPd$\+e't$7Z7t!tJ,mQF.d`*r#*,[rn>Z#*HGP_Iu8AV;GZ79ForW
%B^sMRBLBJ?\5pnRK@>FpD*BA[gNEJc-:*>,\W!rdHr:2a`+j(r\I38QU!=T[GUqTcibBpDTFnM+K'fEN\n'3tWTc`lZ<sTB%^&3]
%>:gdP#h=R#6>U1#^+4H2UFG1<5`IDH:ohu;LPOUR]2VTOc0D*aU#o]0"U2'T.4EQnQ[Dm:/4[2AZ\hMZG7dQJ[iTFg$T0g+B%%Al
%RHd1j?ef0J_61/=<rB.d+mW?J6>^nL06Elh0X]N\9h#BDQRpg55/jn&<iqkR=+;(9K\ES,$OJ<DN=p32(bAGTTN9/-P"Fn']lpmB
%+$\1W:a'`uYPTAHFM$B$qG@L_CP[A=5Ie+pf'6W":Us+/JdT;ld=#4(mW>/J)ICIJ*n18E^&,@iJdT;p/G56sHV(EHRRGGNq]e-u
%@jU->7TM7nSn22,%\@HRoCrrM:q]EJ<#VcS]l:`)AmGE0MGln@nD)cCW0=_]AU,9VD(U^>da"Yh,XDTA+Q*7/qRWpu_#A1V;%4)?
%ejog,9s(krip.eKTjGA%4r&d.FJ8+j:]VF0D4S16&D>n1?BhU1+Oo>X?>NL<B[uV^TGBG#W8.1%bsP4\"XL$C6UQp6Q*ED'&Rab4
%<NRa,CjfH?q_&BaQ/&*Q/afi*XmaC4._V[Z\TE>Xo%KL)luHbRaMaU><qZ,ToBiDF>a"2MmonnV1J.7?%BK,%WB)VbJrd-KCcPT_
%6cJ`]O_DR#_7/:g\"fd-gU>r_JM,3XB`5%Ieu?Aia/J'?<;UOc6)<e,q)b.Vl\eC2`k(/d[U#Om^/_l'n4)SXUg$J<2bopQQ-VoD
%g@e0X<VE<`9F9jHp2+RsdY8SGheigN2<&<B?Lg[i[tn_J9343%q3]U0T(+qs\8b"$D9:DS7NPmDhqk4<hcF^8bnFs+5ja$m^$=an
%3cCY)B?Vhrlb&ee/Gp/>-G<DN>3E""\aT?:WkWgc6m:H:g\kgoRSfPf]dN[!ienSZX0YU0_V.n#[GQFrD^4FhfqS;nrcgA<]851K
%%ad9(WdDd^mT_C>2R*.GcBRX=))tis\+C9!m`nkORklG*<=fTfXG"c,^Ec!"X)C2)gn*#jV^K/P0&;jeEDjG;g+!snftNRq"&m!)
%(/<YiOfh1HVZ6Pshc%(Y#[d$!&[$=8$"%oO5e(.U)u-N9B?">>>j2=ik\1[KeWO!l$0Y,?-)aQFHLNgNGETeCV[](*!EK#B.71EH
%a&d[JE;_>50Gt3IPpg:=SQ?7b58gaYjMiogAXqCQ^R='V:u?F\OgMS;C<6@R&(OR&pZk-l$^jOkkmKbl!`\)7c^B]o%b/e9!Rr;*
%<^DFO9`eQNEZG`AUOX75=aqWb<rm&UWhf-R*,;EdP>h6/Fg(E@L(8u=K'L%:[V@j"_]pRN95UW$:.GI&J5HmRMq!H<VA;3h_2K&O
%/,FQgH[$I*K<D%A-?Pq*-Ueh$FAc9T</?Nca?B^)KsF(b>07'i&-O)'j-`d!%(AYj]4g$CRVC2J^EQ@9K7;OO40ct.#=Mf/:WcCB
%qIAaY\R8C:L5,d(QA(?-)::nr/jK&nnRDG<OSRI_"o?e?40M4Y["j\iKm`Xc;:TUc?0QaYnt#"#B2J(H\TA9&e2drPcNHaSc43(?
%#Rh6[UD7nS4aP4IT$2BZ(1C_c6_j^Gah1pQ!S!q+M=Y^?.EV\72]P%K.3<-$e)X6UDFYdF+r'V[A],5>ORjgr9M%]@89uHW!'8qN
%J0tgD.GB#g]-[/bA_a3AfUD<'%n':u#).8#d6p\'l=N!6dDrqJlFr6$;DqLNW^:_66hJcQar0f4\SaXeC@MjD,I,X?bKC?d1213B
%iRsiYK'M-#A$J&OO'_Yq;/@o4K&BD/2^.eRVt9(CQh2[3BjSLh<6s\Xm2A:FUfYf(H0PW121g_aPpjuacqC3h3ki..$fta%98O[:
%8<l2k,O]n-s0aD7%5?Km/6:\$ST_4ZpSbfl$cl@mOK/&kNu*)?G)L`n6o7uZU8,adLSs:O%RQ2\>u[h-aJjnA^s<:s=0!KbLt3%u
%QBXOpWQt6#anE<JSTq[c#VU%_n+`2@X21_CJSC?h!JS%Aj&$uf,hiSa,Y)2*F[BsH0X!\GdRH]nc\1Uel3*^9aDCUA-p3[Op):<(
%%D:o8!OAT`7bVW3!;lCT4TKhpWX5cski7Grh>lmW`(oM)5[WB'5BqY9KaP5(+A(lT(,K3L+1t36d;KHpkuhmQXeq27"pKURL%f>o
%Di#QQ\a@j1FQPT4UQ)-(j5Ra-_):80B#L!,CoLkOW8?MBc'2B>@7epI6q'Y9JrZ\e]h&<-;T@Z=gleehZJ1\f*0VPs)dP6'Z-i'A
%FIao.rB=X`08O%5eL*1^=*H04dI!7L*HQWI=UhHF8fGIVNCe,VUY"<]NFrA$2X:-b-?prZ#-j:(Xk1r5_1?UQbG1rQ[C%5_gGLP`
%XWV1bZF(n[J"(,`*54S_Pgo+MLo/[>q\+tH`k[KOSU'MqQ*]3X*&@=qP8<(7o7!-jkIaRT.hT1mX$%<68l2FRp:fXN^q(L3jb3T"
%iV?KJh_pnF*n0B#6<DUdfCksGUnoZMr%qmb'cSs8'/+cMOt0*k*6]ld$WQde*&iVC;>"Id51o;FQIf9nniG$X7F`'JhaOT%VDWki
%1N#pVQ$MYLbfYjRAH]2sMW&RNm\p=mE5.`0`*KqH?IMh44EVhjAN18SRa<<`"%CV8]LA]6bfuULqdcK0nE-O+e!qo_/g%#!1cu_-
%UuOi[?750ZaR,+Cc`MD:&)[QE)c:j&4FR'C256,I:p's%#E,/75*7&&WV^n-r1kkae\pKeHDq+\mRS,r>t4Gn+$hPWV[4Pd[GDhg
%eBQ"O1i@Lgl3<)qEj5!SF9"M3c+#iK@E"adce&jaU9JFuX;T+81'BONs8F/%>Une[hAF3ue3-Z5lCEJ;*ZLs.cYc9s20h:sV43HT
%Abk;a+4nsN&i$ii:WS2/,/U!mUJI@3B/X"('\f$AJMml(BIO*R84)QQ_i<cRd`np;2d7uajriltfg+G!GE/0KU/`pOf&FARA%O,s
%67sc\e#4K,3aT*)\PnHVMI[IHMS#1::>?FRK6W3^?aoB\KT]49p-M>f"-$92I/QM`m)t:/!Zn'C!+FsY1aC`@FE8UVU?2S^Ass.`
%>dqnWg_9hZH>9JC\JeTAmblA*,+t+DY&7p0Kb3R'EI5GTib$FWCas+=h!C'L_UcdAB]q"?C2.g#(a!b#0iP1g*nl]rZFScuF?*#P
%A:>qA[=WQ2iJ*A!k<Q._)a^J,p9]OP21D7HXBAOP)c]/:fUT!*;>=u-jU'&8;3+5og1ebAC^Tt>MM7h].ttRaI*e_P(2r9JWKDAq
%BP=l@Y'.^G[a4p[0LkcfDVIhAd,@s)Uk?)0C4bW3Z6d/9f:ZMeoEcKcQnm7"S3RIhp36'b,d!oDh6nSGG=..!2apc#d*V=:XejH`
%I&p8TF@3A"<fiXoD>ulCZjTcUSh2NYWhLI?hh@C&IS`#?1caetm28jiV9i5:Ap/8Z[?$nqj#p50j_<;!EDmbo="=bt7d5)^\f3-+
%1lgXs.gPdGe,7-^IoPT<F'b'QAnOImgcJBdltkm9>nsA?cslN\DMLhBM3n2I&lkil^TM<gcT!(a9($_um%[@o5!GG)rj@][es\GB
%BubJu]Vn^DC?MD>[!`(Z0d\3kKRF!**Are#H]nVl@Vs/cs$pAT\>NJV1u\D&12Dq@HiHD_EoUi;gMV4&?/=lsC?)8+9I(^@4j,Eo
%_EJkW8,8kqN$:-,.f6``VrjY3L:dW]A7QeD>I1--*P2#uNkMKkXR`1n"[SuIW>"$:'8[aDVUUj;7\Dig'/!3.dr:D,i<R_5fL0L%
%PW0f>>Wk5/>/`@h1-M%ILW++L3_i,11Q$JH[JB:U#s1u[hQ.#2<+Vp.)J6"emo;Tf;JkIO?g4".m+cLGN\_qH8%jV+pE2hM3V5]d
%o/&1n4IP$Z$U#HUg5cP=@q$NEm+>Jte9"58V.1tbX]STM([1k@e4sAb2''FV)[N0t=LsW!\QB!2DX$o;+IZPjP.#.rn_k\6Mng:Z
%2#o*9k..riiP@WNR%jlsI3\YEJ+r/K53#m3\QM!DS^2)=bD1=`MKD$&W-g4i_Qu6LS^09^mn?>Z4>*1###un7:VM^5<'$Xk0&N'@
%Fn(9053#m3AN]@9F?\_i^,&dSikal,`jpKF;T+^^I)`^EdXpPBl$UL]I*2Bh#Gq#@2aD/JE.gs'Yr"0qQ90KjH!i)G]kqerAu8e:
%:Y`)U]W8b>jgf/E96eSGg-9(*+OtFIe1mHKUs_n6n>%!bp94)B7sC0>WP<pgQW0D(ln:B,n_`3Rl7n\;kZ.;t`(H^hCHf'Am`8M`
%Q,I;N6bGkX,&dtLjaC#Z"c7Yj(08Wm?9`7<@bg=>^Sg0klO'b/QYOR]*?-BMC["ui5b$J:+r#LPn$Trd[=DSn\`5W6c")bQo]o4f
%kLl8HB4?>sSeUT`]/(+72F^8?,</!CS^IG"1GK\i-Z'8m.sB39[KLnj1/U_lcD01Q"_P/206/T(;3&MrWOk_jdBbqQ7A0@C*#J<@
%HK@#khWEKt_.[94I%ZIC3=:L&%Ent/PRDJ;<C@"+k[AI4P(NLO*6j*@KQu4bq.MEs@io3aSAO[B'b8Zu.&V$^:Nj@3@U'+c>$p1N
%oVm9mjklHkQGLjnOaS-1e69VT`,3-1Y\>0L;,=a.ftg,[HL8ksZ-%\J]3F$0:kO5;[e<')[Bala8!>kd-R.9)N1E+gVSA:7#gnmj
%D,3!Rn_trX#PDD7f%.s6B;(]4F2(>IoI1Lljfm?R@oj<)<WhWp[BJ"Rh=EnjNubfXI4ZE!K%G;+HuLS[X>?D31H<L.c?(TIP9Bst
%#+iDWSPrdMh)]*"S['V^8Uh!8=%U*0U-DN(:\urA"a3g4J#.14m\rjA^$M<HJjp%UpTkn'fiZLFR.T.5+&E0Eb*%*sVO-PDnhB`X
%NTOgco[!Nh\R"*Xh^cL9kuhI[mCRb?=:j\[B(DV)m^^s%Ip9P/Na#1)4\5b3EZRq)SA>C36)lL]LW[H9*'HJNCoU_:7;ilg;FI0c
%\!RhkCAS.$_b%6\4`;jtV<F4#H?2g:XAmRd`YMo"n!-sEDfd:bWZ3&;\<3LE,&d0M&/#>rDG3H:cMk&;fdmDjEuorR5PMhD5=%gj
%+&4b@,@Y.8+)]+?&RCX^EIjTX6uQZr>1"9hfZkIRG3q0Cc48:Uf*M`t3F\b@dZI:Apu/2CND81?]=-skEMSqdP@R3j[j^9Q(YR"u
%0Ec^.R`]?)4i9a8=kRScXq#JRDI)>ur0uMo\uZlmm$Y@\))>OajKlNur&".ZBt,.p;Z%$X0X%';_%]*I#qUDEXNFrpKh[O1g>$"[
%GjCDh[3,jK\R^g5m@B@$Q6u@IbVP]iSM2i1mI&h+c9#tpWgfEcVkb?%RCBRA[X"%k'm4-F_4+m-bKSG-igqt_n'"JjipiF^En./<
%g*nfKcMlH@A:Ac8T'"=Fd,,LLk*b5RnX4[B.u!-:Kj`8=LJg/hS$uEP:@R$NJ!GAOfrZK`&)V]4g3@VA(23*sh!8mgCbJP&Zmog%
%20h"o!L!tlVV$2Tlm<W3nd#6.=:?.sfcIEm(@.8e]Nf[D]r<U7l30I;QYq/4G&(<6WUU7]Z!U\#gtjGXTMBUO0l3jam&e`Ya(,+V
%UVB=R[&X[MI`,c$FOd'r5K.l#X_d/(loi<V%IG3t]2'<\%39d@#AusIN4L__PE%kF9mIkA`[P&'Ii,Pi$tr!:]rI/1I(%MK#1Mur
%1J+m5-VBPMrAe#D/84=%8[>NaVb*&J/7u2:G.8)HbH:4Y8[>!41J7:UB9FfZkkNq6S?[*MqX>09mV!Y`/PHLGAC@F]MSW/o3r>8.
%SrJ%Y-="9enX+:_@#!pJ]r+ZK1GEUB9Ze#rB_0?T#:8Kr%aWTNjdg/S\K`PAHg[l.`/[L5gBp/-rKa7l1\mSJI.#`<G4n4[C7+\-
%kNV^p`D<c%6??)cRJNjlUD1J\O+c9I:$6']D8<$%!u[0oD#,[D&^'sN;'tpU2@q^MK3*7Q"MYiYP7A$sgtL4X^_B#0=K&\"R,.2Q
%LPtTi4aNPpXgi<jJ;J`hHq&2'Km#6e>\C'^mes/4ooPY>fhCnt0kY'9R^m3PoAOHSiJiA+`<IaRbSHdV$U`X9[,eH26;_2p*4d`J
%6c0l@;'+/n4=NshG%YZ9)Y.R.i``m',5]g9]0bu..+o-f=@h[C7@0/&5`Jn):#p6haaP8JAA9Fc%i*qhXpZ!$7/eJOT'E+*[mA_R
%,>?:R.eD$6mG&o8X^o39#i6[beOb:4)^P;`$GCsB<3f?2Cn0`:qaIU[:bDF8QZgt<9"VDu<)Co*pCuIeT66gH9(r,V[\jB'hLNJN
%8m@)ZBVM!B[gGaYg@0Y#_DaY-E9"J9)OH(aE)@rTRV7l^n0HF/b'=YYF^?i#=J.`![?iAG!GOr5Z:8's[J0D63OaOG@CL9B.C\W7
%"!&&Xj:.a&F(O>^C3+Tl#qiO:*F8N`7G/\C=4KCD:3F7AQ=DJI7\0$p4fp59%LUs-S_CM.3E%k%gi+gc*Ts7LpC8+sm=rn,4I&k`
%mFLE*FgJ'=Mk(ZdBOeQ[+$+%DYI<+JRCQhH/E(g?d5F4,(;$^Sd+Udf=HZ#QIG2V'Gpe9H^>iZ\RYcGrZNPR+mR2n[>4F<rSp%EX
%4tYj@PQtoo,-apZ=,CB6jCo8([+<1A1f*9p.^@<9\GO@c5'9dX.OJLO4AfR[80(i6T>=:D6PK@(ep7%LPuB%'C!Eelf(2jtI9Kd%
%>H>9S-h_7cokA$>*1,<UQ.:)el\r"F'Do-rbf9l^RFnFF]3_lZEJh[uXfO_bI5V<Xp1\+2ac,kk')RV-W"UNOBf2a#=F=(Whf_r1
%DdYaOZ0t(KgZ:!S8$mm^qmMtLOlj!"@\6nkKri!E;jgs=-2)'KUjS3C.22TcZMKf?@&o8S')T$A,OU+D?"0GW5#GaGHc!]b/X3']
%W08P$l0n%(Bk!^6\``L>IC]g^VbQO4n)P`WIhhZkml;T_TiL>EXrO@RV"eg"[DVH0-*$3(UOZ]CR&.N:p6Cs#0QK/`]Z![i%FTG\
%%_fnX,GEFl_W<IA.cWU@L".SMUtY'MkfSJ)LPFF8mC]dWCnKc\iCnZO^DZR+ouX!e&scUY]!]^30[V791jB\lY+'a^P)@d0`nJSt
%?>mu^EOtN'7VO#&2E&[)!McmPbt5?ImCrVHXM:obq4F0jAg>P*>lLW5jj:O;DstK$qXVBgpI"Cpq4D!'>C$8+?9p/S/mmfF5tKIk
%s2fnTqY1"1IJKLEpOho4In/rM!FV;\QIgFn@`kus\f?ds`1<l\>Rbn)HYj37QZ*t)S8*P/<bTQR:7qLi54cCu.gKBBYa*Q_lngWW
%!42:N5(a;3VUOQJD2q3/Pu.eT\_Zkk0r'u1`b[`5$/HY8_YEN,Hn]IkT[-@(>N2,"h.kJ&h,^SRfr\::G,%!.-?`O[9#Pfn\<<S$
%"mm3h1=6mqA8D@or\35kae<A^IR"A0T4tL`-e0As\uO4i[]d^@bM_'=g2Lu47[["r!ACau\MH"UDqBpJ[RQ`Yl&cjiD/)\Uq.;bo
%VbUu%2N:T_J/@C7VYq-pe\o)COZ!k(KIL$XIf0;(1$usZ.29@_/7<7k]%dmO]8o.l!"s\"F\?@Z'/;.&a350LmA&FV0HZOc!*[cT
%D&+F7O+n.SY\\*u#\lnue?S1J6qX>%[hanHA5VQO8)TSV[SeND5J%S=9TDV!p\p_OaS.g5]mir4:?UoWK>us&]mg9tlMKK9VsUM-
%Y5ULt(l=_?Ngo$s^A%*?bQWTrac/'gqJWS(']"-9[Zuiogl;:#rB&d*pia1AjT$36kVSL85g3d9p+0L-l4h2^Z@.(crf4e2R@2g7
%+-/Thl\nWX4@Q\3Cdf`H[F^Ekf[/L.^)BjkgsGTE^9A?iZgIJ0^4.up#q=W7UC7\QNCUb'G^M7c#*\c6k`3]:b@JVO5pDT<XE?N:
%\PsmhWLd(qHc8>N^0>eHCF3]g=EX&!i'3WeD]:!#.>VSNQ>[s].H(W4k5!#<:E:Y`8D;Wrdome;;Dq##1+<u#4@W`t"XD:k/Z1<B
%fQgK..?>'J+F(K1gW\-&0N_H12t&XDfJ.;B22)Kj?J]NW?n.:epHB-:d%IeqKJ^#>4$n$jUJ+r9\Be`R\pJ>Bh1;K8%'tT1c^Dms
%Ca3.-%:_.qkk]FFV?e&XCmO+a.6C9AI(52[EmKHb6gct\V:)3]_bE$&(hBt@?j5s7D(YuZA=k>ua2ap=l!".H[C)O=BVtu>&hj*L
%H*OtL6S;2mbWP@5TJ"Cm6isL'Ra-@R/G-+(HSW_K*!UPZ6@gaOAFAN@EFk0#4BkMhou$"a5CZoUkYbb^Qgh.GW9PA5d*nq>Tp(1D
%ETuW,!AN<kK@3O%oNkkJoWR40\8j:QOn"]t$RcZ#BDUkRA7>#tTF9:IAOf*>W"9mJQo.JB]R/(^R]jC=FX`:;Fd1Pu27e!9X9E*u
%LQB1>igqi,mK.nn<Aa>O2-8)Z^u]gY=cI*5)%d'm@5Cn&;iURXUm\U6+/uum60ZI:[h$Sr3#;C-q_>b7D:]OBFYH6Ks6)u'-UfN,
%*aT!5PM$D;r%aC#Iau.O[rhKM(\1A.E=98WqA\4u2d@8bb';stId(j!D;6nf6^*fsch,ZGbY-L'`#^U2]7t@GHUCM8-qug3\+Yq]
%UHWP^!S^q?17acAcQ4e#EMKiL$n3pdSaC]a;Ju^S88kK);'"Qb'JkaC]P8>VTZHO"-f:KZhh%+Xfcp3<rY3OD!4g\p`7*T77u+qM
%UsQS5HMuSX,-BLC^G@2+i6ug[ee=o+R`epi3NI^*.JA:k@lCr';f+tfdgL:>DpM<]@st#Ul-l,cc(q0io!'q1!X>F70lOgW!B`bE
%o:R^ENPJ5T:Ut(mc`^1381<bp$mAt&0V)ih?nP0EA0EHfM60R>d'e(Gg+b$Q7S_d-E$hA3lDNMk<qe!HF0<*e>:T<\4"jHtLQ_)W
%FeHtA-(7Ct6k5G!2R`S)8;(GA!*e3'8[<(+P"/d]%=LW[4)[aJMeG1)3SK[14*-V0UWK$jBHc2l.2&$Df(;*qK9Sd11LC%X)cJ2B
%B(HW-LSq,97'l]FfG?M,-#nu*oJ%eOB(HV\A=(miOHO98+)u)Bm/^HIOcO`6T%%s\8tt!d`&%"Q?Fgh*OcO1[]P8c>d;2"@1m9gm
%8`UbrKpTr]d^uSW#X[f3mkg@Gap$KY@IL/<$=sm3hg&A`G1b)^54^t)'k3`2:T>(6<d9Af^M06*%Las?e.16(r3F3,N0W:@=lGdj
%e)68!XRJoL)eIO$C?S[DYATaje`nCr*bpV5E80>k]BsK2H)d./$P,t'C3AlsLO;kW#u7l`]^Tm$;lu(jn5.E6PFQBaIGpl>GYM\%
%rNHY?oeId;jojE)KnjD]??t;!b"1t;#F8_AG^,\'?5FY$"t*56fr<uH#.GVEm;]n=iJ!&aA"CYGGUQ2be-H+Kmbj3D*q$QVp<X0X
%NGgo.g22&\Knm[c=PBKojFrB/Q4IJHJdW(uPL9<nq9?atpr9c`.b=rL]<o-c*q$Z-qS3ILNGgmXVNU<!OSPtcrF!d>(EOL&@^r1K
%^C(QH/UAFeiM#d*]!Ld6Et5hOd!.1@hVEVLKnnDM>CP>cR;jj^q$R^-n`KTS%h0On=j4m)M`89>_F)f:EQ;@0W5qNa]'W>KlTF+B
%_h5A4IMX'jL`:iuU!arD[%X&RNLZELVsp@D$^I?-M@0s.L:82_C"*GA4>bn^H\S]$3l-N*"u-98(o@%fC<-"](ER>6]X[,l;Op=:
%7sO"OhE(&.$P,tDlGm1T-m_Au3W(Wda'Er"pD!A+$P0XL&I.8*ZY'3R6g\i\i:Y9`gZ'nKguAs=@kKl#Sp"UTF+Oc1]nX!:8lOLi
%00D(7IWTcum!I]b?Ii``,e:GEKnm_2igROLd*t44a!^Nuhf`[^8!h5LLZVP.\"i3n??iE\6A9;=`!__U\F<>4Qp5:ij`4&S(#6$'
%]ST6_a>]B/ATZn)na'S?2[<W5W7Nbf_pdt+LSpSfm^Va_/+H4Z6h5>U=6eNM\&&Z2??g.2gS%Y1m@Xgt<QnJ1hD8Z;9jN!WS>7\0
%duM$/d.k%:h&tdm(EOLIG*AMWW='5r=!iS0QUbD-.&<,C#PBqJFWPS^Ts:`8]J25ZePKYs<`DEj$0Tr7.(56DW`'WEAo.!/:_aR#
%>RTAmh]IR>jE[!T:!(P>QU@GH>VgYQ%&mt2/ejP?+QQtMP^tI;KGA*r&ZurEL@>G=[fN?E[g>L'.upB+Bu9J\h$*cNKS+Q_%B%)U
%mqPf3/iGk*M2fJ;f.XRF$W16JA(l`\iBCr>]LNUCAp]ZK:Zfp%P8u7RO_49a)k@D<?`D.;D,ar5nTaH/o[@\UbK=I=F>of"MS\%A
%]3BBh]%sI>rS7d0f4PQ]`TP\HS6C"-VT[)$N/[gF/.6V5[$.rGL&8DABRAdr>?CC92QN!.q`Mo=f80^jGq7_aFJ_7p?49.LZ9V_D
%ahkr*JLjt@26p>fNAtg'mH6C&UiYYiebTi"K$X?grh']S=0^HeA.*r$nAou=g>u@B2c_\9B/N[PcPr,;RTut9c\6JKE0\-U8/Ggr
%lP5tYT6isWLlIj0;_$9:[;8'4C*'>dO0sjH+4nb-^ufXhT,P/j`AD(C1lF<<O(S2;'R/>%]OJ#n!!Bb(ReK=QNc-$]hSRE5./O<g
%r"ar'V>%dTe2cWhb0#LeLOH0.a$Ll#&(+u7jNci<n&gK,*H`\K$TaN%bl"hH_6kZRNJIAH9V*l5^pDdbe7\*@Q7bTiC>O41lFIP9
%h%-i12qAVYQ-OKaGq@\=IR"kkH??t<)OEDGZYp2R;RoK_h\2@0EA'jK#0lala\SE85#(rs[l!`>_;:4pg3jpqADr;dJI0"n9UP.3
%-%HbX"?g[G$G3pl?o[4::B8d?$h,t276eW(^Ae3u;h"Z9D8l@u2o^#dq,-@e?Rk."Hg3,(;'e3Ko8:2Q5'$WG^-IE<p+C.LMsl&a
%(G0AM^'MeeHsM/X01ab(^TBU2?IU[V!4l.7C?^S9]s@4JpV9%AiKq;]-:mn_aBOI>NJ'l%1TD.gddSWD>OK8\HN9#O`gmp4l7XT2
%U<&m4e3,]41+mf5c<UDd)+:d7TfWl-OA?<XFnCl9GOYMsTfEN!lkI+KgZF1*^;,@3'qjBFKLhSf!!Yg%D)%3F2XPcsh#3hU+PSfb
%=9AGX[4@]"DGP6u6NEP`T!1f=*[tlc$<lDCb=cd>Jr:mYTisMR2K[o/jaM([]GPj!kk&[g?)9'4NusOHdI,7u,,"o`P8?8]\q2Qo
%,8P;\pKXS?+503I#5'\MD;(`[Dk!);2!jJ>]@Z/Zd9g>77MrV^I87U*T*$K1L@.gQ$m4$eDXJtOmDJlZP)6t1/aLg)`UI)Z&b>)=
%:F1fk?\ZhG,E[[0joQUBI%Qf2^-(Z"i3SlQP_l7Oefj#:Pen>i(tWiMJq\esc7nrdR2)C/"n@Cmd&dlE0B9Qe$1m%p]s1\"iQJWA
%Bmu%,hP5DjiN832=pF6gLKA-&mnZ)56[K+S9+XmHK'R!DOJd#,-7l`QYZWa:rfJ06<@A72e!uBLZQ!:QfVb6^\B/C@MYBo'\,*sq
%P\A'"jl!8bO]!N%"s,CgX7KkAg4">OMO!CPiR&"<rFu%K"Xh/.W7;_gn9,1,]WpB,H(&t4CGScT.l')h"G1,V_ZB\,fpX0lJJBi2
%iIDRUl1ftZ&5o&i>t_2]!k'6Y)DCnSm_=?GD5^`4BHLsrDP@H1i"sm50LT"Ml7C8G88SsKa8.^):B%1k/QO5a`@gs]-W<QO]6JIi
%/-j:9^N-GSYqTeM>@u"4c/jN[V<X:)']1WtYQIt>nd$'6`<r#l6kCR%a#XrL2kWou]K2%\9A,@tRK\j17,+ks`HtbJ^bcWB1>#-C
%P_&;"C@2<fdE%1Thke&r#Ie'6cqqK'_5&.plJ?;;(h1o7>FM04n^meq7(TDD7CE?>rFLW'"T8qG/^oSm%rOqHIheeEC7fXY6Tt^U
%dOHie;/Tu:(b&6mR)98;)7'\,`pGc5'6g73m_=nODK0nRX2/f=])_M0N%28:=Z!C<%XO'%i)Q\cV4l:4/)pf;gs9/&+H:JsCYBR+
%]dsu!J_^uJ*1*#$GkM5>-fETl)IWn!Km3)*,`:o23=CN5!lTLTDbiL(_q;:s-KDVZ1QL2Dh9epFNnhcf"NVu.M@L/"49h+UiR/PY
%H.0<"+t`m7`[d_YHYG-8!/q50'O[bH@'EE,^DKb8.XoXbB)..rCpQfr?dFstb$I@_$.H&\*\aJ8o9BVB4MqEKk_nH/*'0a:FQEZS
%O_#[6moeR.ginauQOrRC0uW/5Mt!AG1C`Krhq-p:oe!!3kcj@=Nrr>dc`0InJoQ1NJI`8i$BE#X['5@oL"CLXHXFFUGsJoK),`91
%fSBGFgAMWjX8%Ar*dams%=XF),%)V3eKdQGmUfOBmbT%K@%H8'fFLeW)ENbLF8knZK#K_?&_YOjFkZAc*if]VU3Fim@uhuj(uh$Q
%TV7Fono@bcOYYLof<h"OKR?B"TqMRRXt8(d%!U=C*Z+m@blgQU3*`"Xg:&>+l+pZ-OLt4@Dpl?gb)O]U68R<=a6d@pSrX>.H1!ic
%/pG@Q04ZQB>)n\?VQf)]-Y0P"]7W$urX^1h)A5ic@PTYb(9oKug!%ApJ'A.kcIE(;k9fHUL)<@/9)$k`YNH>TT8/^EMJ*-[C2AMi
%4ncj!FuuKL!T!u;;8#aOo'A=lEOkN.V8elprM5)1>^856!M>b%n:@?2D@G=Dq_\d*e]uNE6ZJ#C\T&01esZbj;6f4hF2d.h,lNg7
%I^BXj@!$CC9a7GE]$^n.$"l4$D(s3S:J->F`^e7BN*'/,n+_0mIV:rd!6ed1L7i6Ae"Op2J]>>gcl_LW+E7-YkcWgAeA]\nhCRV?
%eZUWh%UH+72G*LfXm?r9'Qh1-*.`:mPHjm]Y\rWCWo05gMoet:SuFYH@&=YKJ#"/=^0S;?9B6;-G$._0f7e`7."@=?/.Bj8X6[kL
%amNF;#@MXe^30]IV=Y2?H(#na?JZWD"D/227F_&F2rpn(Jc/?n?fR$C9)FC.?h(.m<fM39Mp-$aUIV+Y;kFTDM`gabYD9%SG8keS
%W2G7&g6VQ5dEP#5)MUls;Y]`jo9JrZ![4]U9UM`&bck.T5#aF%L]%f/BX7_&qst01,a`DNRsrGm^[<iCiIPj$.2rAZO4JC)8FOFK
%'Z*,jr,[@(.`VDT,cnJL*(P!PKf)\C9:N.mi0[qcG0Bt@7r*A`AfZWnp9s>bRrp8rVfu_G2erZ/1+HHX2ia:QpDsSbE>,eS9&b"&
%Vff7FR5N54G+>?O0+J>rTd+2N`P<p$8%qK).ftE>qJu<e>i)OohIfoIn4l=S_Ufgb^n4B=2u7tJ]Rp3/HY9l3r%W\lE%Y?Q_Y:C<
%'AhdQI%q'D_OkG'n7,#aDP'OSS)\mLO8*[gg"OoN/W8ngNN[:n%d-u<4SJBMKcaDL.RoV#fl=jEV:s4mT@BURFUDD]adTA^>ugu7
%6FP\4h<H&`T<3o.B+?MA,<f?q>ER[UUcBWs7,0W_I.&:E8^2a:*ru:g7rg9`(h4X433k2bLI&VsI6*ZpW87?lH@?:6Aj%(5Fj;F!
%$StPC\Fb3&95-`)TD`1WCX;`4k/aOEaE#oDVn#r^T@0h.jZlD'ojmQ/2Jgr>i)CPG7N-U1BuL"np@h;6l*WlV[W!mTkJt^c9mpO"
%DqQ(bI/XE0T-dUCF2C[shPX"d`4<;^Nu%/05=(i*)t#crG8'DuEuZ*^'`?$;_bn<94\k;hZm\pfLoSh'<8`Z71d=_0ZTu#RCC.l0
%IOBW/^"H0r-sR6JrLRClX4"[nm*3qNgFUhUmE/EH%)iGqrt25kN305+eG`7u)\](Y:"X[LC_gHd@7i%hF/I$tr=+;sT]4_7*8V+)
%+%"Tn5!A+U;AZO3DD#o._.>j7k'_nDPVa'?516ch7XBQJ]>(0%iH_H-R4`/]f9"[*G2OJV6:8LhgpD4XiKC'nY`>ODNjAhm#%7-C
%B*So%4\=*AB*Si#If0IV>%=e5o(jl*G\c*Se"oS<?6"!RaaDU>2=r\rO)=)iGXF@[O-sT;'jP*Id\Un5OF&UeS)>Ys82qBq"<=#a
%@>'m)KdR6Db.TsF#O8[IH7bIR#]uUkU2a!``PgbprYg>9$tnkT`SWhB5$:9@$ZuHh3.,t>8Ijb)6/g##i9uKW*kGmTp9bEiVsQ#0
%BCIAe/PlDRX--Xb>iV6lDiNOic`a_9Bp6'id!2"C,Q'Lj-Tkr@PF&6<>XiKQK6O3Z)"HiWG;Ah*daR'^$)<-eTl'8Rk+`h0S6ItN
%,7g6q3aLDnn_uI#k6.Mf:;_"!2j[7srOmfrgXGpr:3N0K7Gh5=e#4A<&H"H`??PiG\5+fp-g'b=F(c'u'YE[XcYNBNp&/cCS>1!^
%O!7H:&J_f*a=iQj.sl^Ib\uQ+@_I(Ro(:]RJgnI&qhXoA$iF?!,LurN^R=tTojUJb[rMGpQ,5\pO'"&KJ`"Lr`-NRfq"qR^=:^\A
%Bt050$o1V"X4@dV1RsB8BA/gt:``'5d#XE7LZkpaC9Oid!Ap&5aR]7jdBhrl_kPV]]T!@Jb5#VWeM2k[AGm3/Wl3W!'&.)9[1VsD
%dEG:O-nQ,mTIJ6as&S^HBNMja8GJt7lQ@$k`[4Hh#*,fD1-o%^<8jfI8\&)V/:eZYJ1`*(_/Zaa'<`=4i7OAe,%3a_KQICVEJFp^
%lZ97ob/%>lCDFh86GhZ0Q0$]8bPq^uE5NV.j&S>EDq_4jFq(/2ic)ol(%%8=@8&h1HG\mC!iW.Z`QiW)16orc9LQ\/@A<E$IqKe8
%TbPBXh>%>?a"4Gb*TatYDM`%&`$1R==8i58G$`,W20/A,pTHih6Ug[]LSYMr.0[:LmWUZ3kc[(1%aT/V.'B4rf8;*_,,?%n&aYk&
%LHpMh&G(XS"74E'G2P;QdEn]lL3fDXbQT28<0maa73Y!J`deXAGda!4_pqp-!ZOHM!YJVL34+>>@O'"t+*LF:f"?BCg_Gq]V72!:
%]-Yf)V-I[A"$E-p.1e7#H21aGgB(s=`]*3][:,d1jnsj=:#,WT+jY=Trckf)"ltZbOhmZ5F&47&eL5Z5a)Qp.]9RNYpDLP\D)WXe
%p&"5R^u>+B8d(1fXj?_UC#$KA\eN\f%EdiR\P.s'h*DOWT%me>j3T^DCX8-c#%h%a2;9h,&^"2J@_'?DdqqI4aAs63b.ik2]uq=/
%5gTSVbERn+gN\c#-!Duo2^gO+`7+ErA!nWe;H#bE!#ThtITr5WDR$$?ap;iPXI^5gq2ppmAq&N_\\^9OQ*Z6\\IWtrWl8I;dZ!ZF
%[TmDYO@%C(g3=/'NY;*G=3*$eg0nJ5-MEjn&jasqD3Sk9i),;pqurJiP"V6h6qWRk[9"^UR&tgBhpXZA*L@14@N2/j3mbI&2:-i^
%Wtg_0Us0OIs5iqAh[,"!L?\$EM:THXokTD<g.30&ADk30QrRTF%42p+Qt.:$7#@U/=dX4QhbeZ^74I@H#,0h[\,-:E<]7X#2>_P1
%\+6llE69g\ZbE.R=+6;U4'4h`$_5FJIKuO'\Wah-%[8q?ViStMrHP.hj+iYf"!7ldB//;hq(1YhlbQ`JcE!fI,s&(?GDiU#2!#[%
%,2d+bLVYgQBTe"_iM+1\@R@ej6,p>ik<^m/50(2-'9f:M89Ht,2sB!W%("[dI$.S+F[`oL1@QE[m[D/sYQ4CP$X!*%;tjQl=rbeU
%pD^qu!#]13iLMUM%M*(>7Ne3$iIm:0KET6]\_5lSq.+VjAQHQ%>mPPWET2@sAoaoC/sDPa?\<L-2.GZ>GJ!<e[P-LoGg'=]1sO]Z
%3n7kMd'ijoGOtb&=-)9Dqu3cTO!Lg.>/Aq\WdV>-e55?]L!j!`Da&&N=]3X>IB=P?7u_g>M:=8R/9K5q-T3#1Jh$ODQ9C=0GB?uM
%&$$jf/*o*Bf<'h@YP@&*oo[K`KC69s/D*Y%Us#=,%lV]#U<4*h3AJ)U`gf\_godm>?b5k#%6_Vre\S^!X`:%aLV(%-\pEfAgF)@1
%hYD#s(!rELEfu*@&#&\t/4&sT)Kb'Mj<AZ=K]DB:^Mbb7XgOc#I=JVE"Fo^kcasaaqdBpUY/0n^^5)5o.+f,K=8/OWkg%:+I%`m3
%[2\9]S4=JSg,Rnq@/b"*qDI$Vdd/["TA+X8"JXnt_$gumXMfOsrgo/.YoU0WnT\\g&)7V"?rO4RaOQ7FjD7`%l^koeF6;PEI8=8I
%l\&d.XLiTHfQl2D=(c6"NbsH$PL]3B,G[_2ZXY%pg0a6rdrZ<HS?aZ3O'P1YUlK!V=6Bk-SILN_S(0_V+=,gF*Igm?U?^;!3tF^#
%'iLuj\K>0!]0ZkD)ad](V2K3!ce2qa[hk.,=2a20h_:SY&'KEABZuZHk)MY&m'_1[k>NTB:^IpDN,@b6E3%;KjR?$L_Q`^V7D@b/
%,6+AF&?'bIX^Igf=S%gq7<`eNmB)j^@*._>?Qg=&+9/\9*G#b.^<)3R9R(<^HXl`L!;c?rhc*[#r:*`^a8KuBG`+E+Q:pHFf#]dk
%?qP`iF!8b_pWfAa\9RK+l1_H/b"j+Ho@NG;]K3Y"B`$cEe_^2Lm_\AOa0U(6A")]WFG@;6/ZNTW`*(dts&u`Z-iG:3VBXW\Ec#8,
%a\E,uUMG!cl_)>FjC6+P?i8?Qc1G;>?9L@LE+JJ'H<rdY)U*1iY&u-mE8i)/iUcBce`/mRHHKt+!Td*!Q8"udr9,P8q/aSfNi'SD
%Zs7ca?ja%TdX65ik[`I5@:!8(l%V-IO'COVB<K6q\:-R0[(m_>f6jmulq2T"_$*n-OdKYAYMkW+3_[Gb<.EU#EGYC)=OH.jEEcfM
%q=m:!p!hh6NHSl59T<Eg.+XE-EVZ6bUf>;O_d74F>C_Q8Y-*.uC1N`kSYo\38UpPlBB!oRjd%pmNrJY6`e7PVP*4ZcI'lmYq=r&f
%\&-uq(tM;Z]tUnZjY!,bcVMe4Z+.sn!fL:[rT':#I!k:dH2cWX#*Qr.H<ZF6F#OLtHa.1??V(ZQfUEOpDpJ1=ZF7e>]LpqfQNX79
%]QN<!oA<j`hPd^%gU'M-Zq/)Z5PSPiA4fqs#,XdN2t3s4hd,1j=fZ%`W0J2+3E/8Sp>(<;pU(AW!ou[6Pk^WJWG<=(V0j,0gPm*5
%2fs)Pp.:$8iWD0G\A0uImG'lt%*N`YPRD&u4rniZpVPKqm,g?Y"1AAW<0`M2D'gmZ7+7ZPoD[CUm5%uGY@+Orp>Ok*"Rk21o##):
%q8gt0S(GUt#(&46A^56265?c.^pdXY7uU4#:URgFqPU@Q<t"c@oC$j3!M'JGpEPT;q,.Cj#`J/M-89lbmZ"pQh*Wg_1Z]NuNN;l*
%pDd8B"BHGQH1KuQ@TZF,!q@a$Mt`L@^5[AkLYtE(le@4sLLQlB.:M&?lbEJN?A,"fICXTFc^4gQX7LgW];%l$MSA#sqTC.ch_mZ'
%@YTS/pGE7AB?uq]Iil:_&eDZ=ratVVH$SA9V/86-6cX'@@Wg5&5%aJ=3M,%f;I'L9]$)-II*Kb)c<T)"[tspiQSY]EDD_\rs.3YI
%r9(NjDA=4EY@CZ<ghI*4q'q,!^o_j"^62pLEN=<HXpqSt=#$cXDKUaCSej/`.'I4kX+4CX+2PLQ_?*I366B`U2-eK-:`i@NqO?f'
%'5hr+D"O57esj#6M\t##DFH?D3)(=-gRFuXQr?:T9+5UL`?@<140mW.a0:#d>Bl,ehU^7W7,'bDKg`:pgK]Co.?o&_65,"**"N*6
%mELNOCX8O__IY,/GP8q8V39A2WGfO,#1_;h>P>,j6,)785_!9l0F@s#DeY!%FmrW#K;kO/Vul6Lj[(QGDVT[1j2"o,V?5`_*2Eb@
%r(AUqXU`CR*#`R9J$Bd!2UMT^e_@TuQe]PmJ"4V[^dCJhr3t5Y1DMTs-%$(PODpd^>%"3/W["aO(5Q..>BI.Er+NV9AMmFYg3N0\
%m*uZs\@a(.o*F-@6)\Kg.GMDDD-igKh!\`s>!%Gt^mk&9OfNo5`pITT\j/Wn>KQ;tN)%SXs!t_11uD6bSR1*N[a)Nh44mC/798t-
%gjZf-Hp9.Wl7smcTqP*VQQ+*AZ'$cLN?:d39T%'Sk/lFP:VY[CIV@.G=0c!>Y>aTR0=?cM0l,0j=)&cuCu^<d;RZ*CGeLRqTuDj>
%F=8IiIu-/Wjg*7,Z#0.MLdMhYLtD,==_P1B+!;',>dIZ&`\"ip/"*dO=7ucCjdsm?-X4J_[]5As@s;qR]Qs>J.bh*&9TA%^3;TC%
%a=_\`);rhA91:unoj+dPG>@46ggD$]SuUos5]ne6h`<]@)j]sVg59jN'XO@3^4:#1E-1d$dr/nU)U7+<:(*Pk@%e*DY(B5BrEj5H
%\I,d;ig!8BWU=nUmIHSo?AE'pLg9]6ikSo4.Je.82(Is"Y'WJ">Z6O3;+&[pS+D$KiP4&SQX$h30DDSs9;.+9pS"i(g4(Eu-puTF
%&S`AL$MNUEN^,s5i"!#S^OOl>6YV.5i6DLMo`"f)/F_$Z3-Be4LMJ&sr3E,gmKO]1$^X[ds&=.&`T%>JWnpumV9H$3\pTBWWN.s6
%/'jo_G4udjHG81WPAE/Nj.1,5@M4/.]MW%Z@cjaSqln@a_d]L&!p3V/ma9joZ0`N/oqB-[1&Ch<XgQB]P?d#:/EY'p(FM!S'8mq#
%?DX"7T0q,VZXJ=%15%UmG*5E4^](W.9CUm"j;02H?:8Vr$=@:hWNQ?EfsN*WB4;%S5e&Cndc,*MmOH3=mK?iB"3]rungTPUk9#@&
%%J=Ag#7+..$q%\eg=,^DMg9\'fQKTnq+o$QWo`!0jkI=e#n_-PahP?5b&6&rFt'q&;()7\R;Mf'k-C4\@Mrk-"--WnRsWBi/B?'&
%[RVt'B9,i)7^Ma9D-Fj?Am[bca4u,JQ"d6OrJB+Hhp=3dY?cm.g:)%O+7,nd9&[66c0T54M<9S)VAZ^dp=tc`1<o0$QPn!Xs40K.
%(5SQiNN;s1A\s#Th_\8+9Jbpp?i,Joo#pG*G;TgK[$5,50B"%3M$A*NR;1:@55^B-RhmS[j3?l3oA<WBjA_lsIse5fHoPj*SnD="
%@F)S9*gsuS0r='2%mrT'GkL.DlB@VZM!\nBCt`-H_KZtMEU)i#p$?TVkX0D_>,A>OEqqWM>]:MZH#b;%#`(2,Z[3M!2EklX?Y9oH
%Keo9_@YR5Jkbtar2d]k%c=''-a-RmWX"0h1S0ZZS9'k;:YBJa@h`nb%:lnQ`eA'UtQ7GMPhq012D-["!V343?X8JL]&UVM4[p_R5
%G!i%;\J_R5%1$Q!:QV/n#+Y/%g0i:i'L2TKngF?7WM"A^Pabi^'sWdOIH3Ale^]qS^H_sI`iW4[*`9PiLYb_f0:X)UYY4Ye><fdW
%H1L1<+.(i,hm7;%4X<;RGT_e>0)a,>7n8TrI#O#[mSh-SL:Zg!4s(jab@m>)H]_*7`a(>#/fO1]W(<=Z\/t*@q@tQ,\j5SVgZ+lS
%RVt*n?iP(_&G.<Xc5Y*UT;?6SI,;=O7<S:Qj"98P+*YK@3<bQ*)gg&#=^qZNkI:)\06'a,@C+RXDOr(2n^H41+EPl1e*FF<4]_T&
%^3j"*<a31Yk5L>O9"=`\AXIBXP7$C+k5+P]S`5AX:Y9+n"=VZi!uuIVXLn9$DF[stj;%O\$g7"aeO2`Me()\V2[7t"$QMfe4hoLU
%['*u]IfArQ?Y8fP%)i0GA2Lpfk%qb=*uTJtkBhZ/c1d,)^A+-EGMU.i\,$$Tn^&f,93I4raH%lajnQPf9\-K1?n#]U#d]SC=A(C=
%[4RSOQAI:^>PhH!bVBcB=Zl>Y5<nTe`;oOU]CPap/`K*p3[MbH[%uqKhIarJ-Gg1+<)(R,EPlZ7\T)g;`LJo;N=OXLm3!PO4#:f&
%f"On:nX!#mCkt*9Fi!p8,&UMmh;8uhlL0@B0r9VlOF6T%D)(X:Qqp54X^&F,NT4hah1VthZe>0=rKl\QYZf&uPQ&5)>LO4;9S#'5
%RE2'11=9iUJ3g'J)D_XqR6fuR(E$bL=_$g\ah>k[+eo,U:^3?"Clk&?S(*.,`?Nlr54d9Z)H$k]e(8d1b0(%.^Q-(?BV.HaE']n&
%NbpLH>Q3dsC0&YH`O+<jIsH9Gnp>gk4S%ka8'g$s,e`G89WDHn2e>V1TLKrp2lR`tX>a]_;m8W=HbE!#:##Er&Dd9ood7q"UXBjj
%VH@at2L;=9/7aJmK'1H\VP2):KpoW\IfI"8gq.\$5Kra<K`(iqdqdO(rC*l*(=aehlr?U*2KL_fLcZQGF&cN%G]U%amH5^`E"98e
%DpI)N7rE:uG=>;KgEAC-BMeW9Cq8BjcX@']Y+!BIVgn]"i_<PYEM7Vep(_N<,Q46k2g>Vj>YX*@]ST8>Ik9HlAqNY6s&cpj?h4H\
%c,1'!P?(;*IXlZaUtJoNrASe@m"tN;R2QgMp=H6?B)V,BiuLg,Q`<nI^IO+MabdPtXJ+Al&b5!PP^P\2S5(SY0&:%s2fWl$9!3%Q
%\X(/Qp8uFXST(B3gE`d@RU!M9HMl:sZa916pWJ2?^TGbXrU&S#c_lg&q<V/EFuhIZ3;1moV^65Y@.&L=Ad@."c%!cR%`u*+=@_f@
%g:-3(?oG)bTsiYU*9[4<=hAg&cQcD1QS-eM.Qp0AYEVNA%3ih/#OALnI?EK#$lOnVRjF35WR'hVf"ANdFR.,hRfajj8+G`cEF`^#
%\;St2)K6\-h(Sc;C0*U6nj;'?IeUn&Y-]Qo6s89I\4]?LhP'7\pNhCApts1QEn6/"fq?%KYLc"/)H"5)>1N3L,i3qJcFePs\<U6_
%>f_XpM*FGtd8NEI\9*!5jjBVte^`-h[Rhh6Y6GeLIq=QN(+jWbl$YO0ekU3?qH>gM2I61Nn@'(>UR1f/hn]@/=8JCI][)$(`4!s^
%qX\]Ka1eeWl,;`(PO8,5s#^7)MBJKGU,"?Cj[]CgdW4'U+Z<]NKauAgHP.-@A?UA<(J8[*X>c]]^%fa3iK]VM\BnXFf\_9CEhS[%
%EM4-2>^&s0S"21E;-t6\-gu>o69";b@c/k_5?1;CWI?qS`Y>cQ]=U+o]baJGrUnBo3sD=*(sO$?b*V,_L@A%pnM':lPmY7"lZ?Z5
%T1D(`&:XWVo[t6j\_5Acr'WX@\NXc;m$fdV$ageVlij`hoQg5#H_qqqlAtQ!jlL68MdEoO2r"T6l\uibGi@Jt'5)2J`>("Gfl6i0
%H/`B-[7dHL8'9T+c+\N&kI'pTdXt=4q)O3Vcmn.^I_k*?=.aC)osJf4bnp2tZ]Or.>1gt^s-uN7n4,jT]o2:ob(ee7Z?##b5B?>n
%m9ahSIbE=&F<DCp#$.GT<o)04O)ApDc65s!g+QiHkOk`kB8?K4`27&S)AXn\#T][1qN#EmkLR)%d;cdJM?R^<FS#=3qrLWpVZV81
%ataVe.qgmD769.\O8mW2c$udT^n_!Z7Jb!tVq/SnP(lf.rXH%\AQ1K\`iHV<j]>&JVq3'$S0c/?e-ZMDY>A\[R)mh,?m6*]'uor3
%HX\_mNe(uR[,rAl7/$7Mqs5?<hX(PCT-Cl@mHXM4dmRj;opKQmQN#qkQ>CHp]J+<"&!3/:?>ZtmN0r'Pa^<AS>`m$Aq8sg6ET?s>
%U7KuN%!OgR`nU5qpqG<hY&0K06D3n>R.\ub(::Id[i-?!P.k@#)jn^'%<Is[',ZCoKrkE_M88?IXhB"$:>G.-5JLD2[<)2X:OL8o
%<Wq:Xj5Z+`0mjce?.%9*%RN8WkGdK$W4OF4s1IJ!7e,6H;kG7X^Kca%fUgHJrX%!."4VDZ9)>+VL3%!/`@mh_Y]2T#@O%.ZHU:qU
%msP&Pjn86RP.KOU'[thoj6rQL[@h`hSk))0;t"P(M-l(<G:kOV"$&YPpm5"Cl1W6>5<ajQb<(H.6AP-QkA'tHKf&Q\c46P?D6oB'
%6jsg_r"Dh2eAo2P&_FVi&!>XPa+[ip)?0Vdrpq0AH@e)3Vn)KQX^D+m:K.>,bBhY3D"*@6Ph4@;r2LqR*hD(kIt$PDaJ&XTC>KK&
%pt$6Ur82r%?up^,HG]B)j3%\M7T&:5=)`(EN5UE[YO?@8IWbA*^fVXA0_*6@[A2pNZ<_bMm/,a,4ac\<c[="CC=o0q2bu3H*a%!O
%Hi2`R_uAX]7I94.$N9:q).)5;:[P^lZDG6[n_D*5OiE54L5l-&%M*iJ/JRiL&(ZNNrUY"Ds7I(_0dED/8ZniG]lN*K:QN"u*.(B%
%j53'2?h<Ge,D=%f:KN#"pq>@p3Oi1UE6lhh.,Ts_!KL[pWn'Bt=H'T#*6uR%Vj5pi(QQtZSt#MY=#SG8%ZjJ9GSN1r+K@[)]R=8N
%h!+OqPM]['rq6,Kltdiur7T++O\[6\e5%"QkT[T.G;[GFU6HKNQ&4]+4T-*VeD'G0*?@/ia2h1G_U$?_C68K6`Pr:8nI(20c#`5K
%9sOca5@/[*1P0Feq&-n3j8QaMdgDq5"!?+7fCR&QJ(QV_NM4<]a8`]V)Ue@ESbnmfkj&,MOn2lgq)U2rIMb>B]>+j5por2bYc@Q=
%<JW5.([7`:M;?E,BE"p.Hn3jC;cM99OZ-=;Sc:.*cb)PIf^[49:_+=Q6#Y-MZp4"sr;,Tqf3AHB=]QG'nZC^r49,2us%@Z(gNCd"
%Y3rm=lZYP-Hi;:8J)7nbqu/9$.VW)P(G?_Kn,9<%[f:XOqX3\Lo4dg"Q_4"Y^]/ENeD^(Y5AaZ>gsqmt?iK``p#3;EL1s'gp[B'<
%!I+FO1kY+6o='23ce\'YS:/-I>P7L@7%eb9B@.+na]@V8H7&8L?2ORPrU/:p(.VCiTDAk2Il<@XXKL;cH^6!<Btt!_k`;1G7qYTr
%])>]Whc6j8e&3EZk<4%_`Po4q2m-Dqg4)6:m@Ll'f`(3!s*<q&?QN2eUqV9Nin9Y#0=puU*XVO9/BL2%2J=K(Fo1Keh4"r\I[3OE
%i-V]Ok]E31hhOsKmBKS[s0@+>rh[AZB(O/[mpE/'g9S=,k\&MN>km^C>r8GUou:`RT08fmbanY.LV7IrAcMYJ6\&K(NE]1SSJdgJ
%c.DE>P>'sb;V'Gt:d:MMhjICqpt1KAs4q%CL>bLuMg<Y#Q%+t"/-"dO0Brom_galGpmNk[Z../%d0ag3.jf7rG:tKc>sIkkN?;Md
%J$^PPER299J"c;gS$Tkh^So((:B#5.G;7@%+;Vf(p,pd\=;CIM)deW?3%9@IiD_\ibJ@=_Yt0WY,,C%MYgK\7,/iO"[oW[^M[p$$
%r-$4QqLO[NnQl&DoSZ#7>mthe$B3p)mS3],0J3cuAp>49DPPn4-s*JZ^Am?F\2Ht:ZgWA>EGM[`Go@''lkdCWh_kBD"PQ5B[b0F/
%D_pH6?DT1(N*9q:m[h15Z$l3.Gdpj+O+',&"c::arVJGm1'm/p`_X?&cAUN64c@bNpD9UR!J*/f!c5T`=V(OYGL$d!qY^,&:pm`4
%Sj+1nA`)FN]O-G*IeMt,L4$@9$QCpo.fA\?cZ`&6_IA"#H16/KoLOj.^RfoIa7p$,5'/HrfDKspa@8f!](Bn1k/>5C07UUROf9gR
%94uVIB5Vqs7mj9QnakkoERlN'iPq'Rk(>^7o^q0ipt+["[j.H%Mrp'!]QZ)#FE?L1PO6V=hn?[IkO("D[U,K:E1^qAJ?_M1ldLVY
%Vr6XlH;^f86SVU:^_l"VIB`Nej"iFVf+0dSJ+\)&j2oT;#H+0Kr9H<ud7Z"YrjbJQ[Fr7#<A!X1IWXuU\Xdq/5PTpLl]E"2[rJXJ
%o@7;FfUFlmkGuRl_>?>>l$Tn+6dl`?3aXK$i8,/>3oMX/6ChVW<KUOV)7u0;63^HGO\m(kis"+qWW$[;"JPA3JphWP`UrbbG"sQf
%J_Q<^CN$\f0ig5^3$6"fp?BRrmsb#e\aqo[[WD<?h=e9j8B_FiGP-8?`e+N*/rjGS4YH(8m$\5HrAY$d^RRIo#%6A-=Q>\QLq$RM
%TA`m)ph+#RSiJ\s7stn64_"(U+;(0$\4;WfGp7P;*RlJd=;VRJL,qtR"JNF)PC7`[XhHIU&Th]&h5#B#+X?)a)S*YL\N2:Yk/X+H
%!\g^n06/'s5JB.\_ZRR^X5he1NqOAEiZ`@/rO<+PO'Xu/M\(2>aE;1rR9bR]5DY%kk;WD>986[!p&)tX"2qtR>b>^I[GPC0Cp`Nm
%M#XNq=e*tQ(NN*fWHci$*+S*g1$/^#EC_nss-I6:'=$H&3#%gilut6F:uJB>SCH0^?]D<=p^mF^&='tON:jCQO@le'Is89D(S/f<
%gk@-q@r:>Nn$sLt6oI;d8,]_J^&bQC>MEeLdN)IP\SQf#B^0,!*;LG0JfWh@nA>7Pcej[Zk;^K5*j)hbhZ3cp-lKo:XQI5U4\.JH
%2NH14TC1CQmrkjOW4CJT,e>)S]@44n]'VY]l1.cYcUg4^]@Quc"3OEnqU1#e"il%>kp^&i;"<@Ks0nmoS@%tSCHl?Z##ouuf'V(>
%#UaKFc!S(gJ+i`YC)H!'F1"phljNuRn'+.V@Fr4/`(Bnus-k%6Mh5GY..k.*Db"W#aKph^N<</[rfJ7:XW5%D;25%(^p#n=\*onQ
%ok<Y5;FO06^9P<?r6:KkfJI-Be^C9qD_,@dn!-&<@NS+igG'OcT12iQqYT>o)cbj(=3o]K[g6l!R#o2A4T&hCBt[W6ft<5Q,-Mg6
%OMQ<K[jQdHo(dKr5O^$('.)Wm!m]cN[b"ZO))Z,:;EX[Mka&on,(J!i)U3V1V<r6hg?N?5]IIcRCJW^:dakt3]a)YEC8A]9dbj!0
%2l'l(kMGaV0R?))7X*_adJ.o1Zuk1(r!n_FJoqD@hJc\;KMX!P>/PjHQ@lqsZ\l`8]f$]IIqVUeC=1c.&C,lf@^m#Zf@aViLZ%:i
%b>8@\&*(C:I?2Ek_Ul?qm%<447^=M2pt_.^:FK/-Q<LnB@R;nor0Y*D7Ve>rg"ehj?pMoT)gpoI%!ha(fkFnqpZCI2T7;*tp#spX
%gqC<H*Fo!-o@")b[<VJrN@n*gl_K+&HoiC;qnX_"2fEVb(#3/Wam8[O"G/mJ]PjNYl9<7lr.TX2nR"HgY]Y8q$&eLj)"Q?QhYfs>
%nbQ*?rl[juUjY;XruO2rMp4J9M#P^blM*5tGaa+j(/FmnRt[I?X$37NYc^bOrgJW:U!l.Zj1hZ@^&H%3B7:/WgY9LBr,?.e[9M>@
%hR`]-(VQtuFnPUMWJ8)/Ck%/4.n!%aCMi2^0+Y(4rqFOUZ;=">ZE,e?,c&>,3qkRB2)mR*,m9!Z=H/)c/I!$7Kd0@t:W`m2Ao=`u
%d5l>orU#55MdYq!]67qSq)=']#8"/E<:Da)GDM[/r6QGR3>`11^^atNkK^5"crUILY]c(SKjIJc]2p0H3JDT\X%)\h`m/\Q>kgWf
%7t8&dD22@CJq!Fk]4^#Tp^N8;\Fe]&hO@1,^3dU(:1aPT97nU8(93YK=b8RHdA?>X521D`9):X6a$8"5IX:tWo*6VAT3ZdAk3`%]
%ci</cnRuu'r*MnmL];5g_o?kTD-bV?eG/8c&qZ0#ojP1Ip_jGge_uDt-(h;Hr9)PkgR"Phrq69d5Q>g"'`[O9okX:SD]V)b3;h#W
%qO>rhNt\ha)3NCO<nQC-%!\E7=SSKns-s&aqU#9=N.9X$s&9(Kr83.ipk]l;p>CGi?WZGuJ'cO@pL-u@^4,kIPNqY<6hJP`oMrV4
%ZuoB:g=BQaonRC"(V]A8VY?YSefH/mmb<%r%jZJ1KW)?X_R27M2jrd#h^odp4+?f.I.bA2`mh/pgWmF>UQ8\?hg3a4qX:Sd)Mas7
%c?(m=;q50+9j1Lrhpnj8D:>p'J(0GWO&^8'Vd\l51qr@*D[D5,@%,*&NdbZG'Hj]hUXS"B`qt'SoPS"[qP^Q6HeZ#lkht^BGIuEX
%lKY#[)4%*fS;"A0W25cfVXA9^!g-\hgJkWQhR^uA7&KG-Wi_d/M3_OaH>Ju5_T'k'Nur%LCM#fXPcX`p,$Xl7%R<Z/e\kIT:.MqE
%3uS?:B4%BEf]b*`("%=+o7=(3]:O2SY8q+kk_/i'W,\*!5IJd`Srnj\rD?KT(JY&aAlX-.HTK:M'kYX&/<+.f;t[:d1^>0BOOJUL
%LR"P`6as$85gfJ][p;^T)3D=ccM>1kBM-Hl'8M-6#;&BpfW`\]?dSRrCZom8[N2$m]f1[@<n.F!ZZ*i(k][K,25]mQ?1Hc]i:)#7
%\"GNHW9TD/^13lUJ)n9\GGb(lcHrJr6qQ:R7%L+AZh1$DKuL.<U9<al=k_H0!`;[YXm;IZ-?`2j8A8:f3ZK_kNi(tIf[*5jH9,Cd
%.f($RL"`nVa$ae5dP<P>Tq;qBY+_%kEG*u/rC:3RD:ccBE8@7c;a?\LU4[3:Ld&;Vr"[KcC[$Y3&k:?t2KsSi6o7\.CYLjQdQg3U
%P88s>dTBdB7/_]I-@K/qMa#o"gF_X4#\E&M#4'ddRMb%>_bCV/2>rJ_5eP`n\Eoc_'rR=n7;LnbZ?BXqqRXDEkSDSFG-ij.^BCI2
%?\B^ZFIWbfh6:*OeC*UpO01"md)4J'RMZT5&9L9pLko^P\glL?aBK'=W8r<PRt[Qh)nIb0>_8uR,=Z$1*5-DqVqs!Dg?lHu\FHFt
%on&3PO&`,oXAe$'I5-05Bi/P,!YI.ULC"nu\XG5Fh1?DCh/rMcL%"6k)EQK)/dnf\JiI@Bd;qVoY7F#<S\ECZL+[%37#j0m!)t"P
%V$TP5dGs:WY4&BF7d>=!0@TG3VZ0o.oIb<aC4#gL_p23p5"=^N6(<u(-ES@!XhW/)NrO(2S'KB?"tsZR4)&"JU>s__g^eVXfnu)k
%U?AqAk7X],_$Q0(P<O>U/jUb'$Vr-t]UF3PkrkoinDgtiIkj"BKWrGmK%#Z?69FGkKq_@JJ0U+Ve%$7l\8PR*,pM&`ln'q:D[7!3
%6L[;#@<>H&0O$p"O:F6%-!_#?j1*D9Cu#`9X4)3e1I-/8c6=pun3o2d.@obo3kDmGY"<$;Dqfht":.'<j)"q"CZmE4*]RDRlfg;=
%N:AfXZP#Lfq#Q9rH"*p%&QG>i+Q!a+2B3K9//tdoolTcoLW&ZY`Y0WW&3'd*o2U1V/M1$kI%.j[C-"kP3oYXBL"6nWf`r^^bEm+A
%UPn:!2RT*Pe(5$sFSTT)E6%I?QAuLC8<6u**VG\)['UsoH92pUVmFd$OiAc)*Wk%!H6R[iN&tP66"m9?mqA3+++)uu[!(D*UdILN
%T>#r<4\7:)@8@<TK4EH&`uY@-H2qo3j1Y'V@@"X+EgX3OLkts$6J<V17:/j"Kk*Ri3S]pXfFbQkU%="/M)`^'*c>F6'rG^//p0m8
%f[mXCFS@8GRi>t=bQ@Nk%LfHt$([[E7Tse8d^H$Bb3,)QV"`;u!q'J-Ym&c"D>`mTdIj4-;D8rKD5PM'i^*1pUI]-&</l,1C")9h
%'.//7K0V]6Zlg.=1CjWc,jBinZ;qd%DBqB45&Lp[3R(>1.LE0k$.-Bq7!=-B)rEuVV]QI+$25T:8'D)d1>Y"%@O.2s<.j'2*`%8[
%MudRY\<q8rLce((Fh\BVrYh<[2*m1oVgC]_%WQ)A#&RaeL=cg@"`)>#&KQ,m/#+@e&CD(7PT<.4916:<`4bB^`)@b79[aW4CFd&#
%9N4CSET)$I7#(Jup_Y'/jLF0!mS?g0DURjo_H`T@_A9D=Q6/d#VqXNk(gc'TM,#X^52>frA7uem_:n\PJ4R@]+R2K7&#*'h(6^qi
%C?l(U`4eXXGj&d^J-cIa3;DC@"To@m&b(dg`h<JH>mMaUJgcL$/16%*es1+ghP&mP5h1s:0ee_`807o%F:.6S&Q+XU"*!!^fVle?
%Ks)^Z6rR6;l'Hl?]bct/flEh/aeTZLB367@aVh:%&a0Gn`-4n]oX<[%d+6VI;aFsaqqSf4&U6`l<L;Lu#,3rZ5[-a0I`_u4b;1Gj
%b#:iaR)#;4V[f&KIS>em';(9kT7[\M%msI?rA\E</O2SVOCSg`Qa9qC4^2Ck2:tY[a:&aE9hI[35Eh8\j;FULQR$]W2aABiS]QLN
%cY8#5E4E!mT-d&UVe]FCMNYg:NMDiFc@rsRCIs[(>sD%?]WcKV8@3>XY(Lc&oSN:[8SFf2>+44V9:.s;FF37sdOS]D#Z#WSf[(;P
%D+Rp2l]uhU;?;FR;+Ncjnl^u[0$9978NX*t_MM(lAV^%U2^k`MV(:P9">V^2V/dKrL)ql&eX4Z8(\8P<Mb82QPZ'ZdJsj8B%ldjh
%.d8<ZZ*Ul\cCH5KLp+0*4a8;*A^^k4c;Y@PKdFMk28(\@+sE[%S*Q^^dSZeFRkC/mkC%TbVIDKKa9p.X1tghjSquhp:kE1.f)mR`
%S1.H:N<0n>P8$8]dsf]Eej6Yg,1Fu.1N[jH_1Wm""iLJrH9.EQ89F>Egd.3B#Bkc_Wf@PpWHrZ!>:+C99A(3l$K_Oc*tB%f23U!s
%"oA#*6dqhEUXU+6nk>gQgBi.p3%H#30FgM:SgCQ0o=I'^P_nV"AYA;[HcX96BDD(TUNE*G\#/jWDCr,0AQr;$''YflC36N`<?"DJ
%GSsc_0]G&K%"3gO.-OLJ"W3"</WC5CN<,%D%1h&f*CqC>nZWWf`0201!`PH[K.ack`G(E$_anX@jALq)-TF90+JPF)"62mU(.KM'
%iq=<P1j!X"8Kl&n34;6)8N?hsdF/f$RCEB]<P]C6&je//O[qCWY7X5JQ<B>^d'+^(T_O_T&Y<etNmtp\_CD-eU7c7W\QY0/X:>":
%;p[*pH8%L_(8>)^pcq3=*H0"Y<DWI[m=H0I7/U;hG8;EcgfG(Ljk#TN4@r(\c"]ljM&Q4c@iT859LN=rm@1q3CSOIp+uu3=B^<R%
%&8*.MedX*V*!q@]So,Oicn,pI]V6J-*i9`W&iucs6l$=__)W-2.!%(SLY3YX06rg0<XqJh540NO(n[V']nEbp9[m6TH%G`l8!S>0
%%0r2cQ=h+qd8O7G58!m\=I&*W<LI!:C7c[VPs2:SZrMb44LK:ipd#(L7cn8?1V2dB_-(5q,>@aP3?5hch_)1o5qUD6>uQY(m2VZ0
%.</$uMk-9W#u`?ca3VF[]1_L]4^k(C)gHWFBkfXSOL/,TYV/dHYi'JQ+rkf<R5)1mXnku&E&70(9F]3'h)X3-@,]ba<*ciS,u35.
%M`5ILdSdC#FRGUAP2"pYigb*j)_La$9p@9L6nQ([4bP*t/G6AX8d^+4eD`cf?/oRc/bP*%dOu9EHo_A_Tr5R4-Gs6*b(tiqdH:"F
%F!D9f1t$<Yp'5e8Ah7C-".1D5S/G8pfaoKg44T>>F\*/3"sRmhEhm$oM44[OOMRT^Lhu^/Kn6fp=kpQJq59s$Zt1r<9RJm)GFeK5
%]OP<-3P65?VT)52LMjg6-T)n84V0p*Jpk@IJqRn/6M/Ad0M#O\Ji3(nSp<I2<S>b%)_hhg9[^B%`_8cPSND/)S/Wck3DAB6!/nR0
%FA1)G]qA0h#B?UKd.-&@7ao0`1:i0$P0R]YM8MiW^p@%$1t3j7j^<SK3_63broljjXJ:CRNtM=V26&*HO<S_cDbepZHE^Pi\KR1b
%L2LGY(_6bh,)/Oi.kBPQV-V7\7-'"_.=ra(RCI#?,?)WN0GK`=hN*`s/>NQB*hlCXiHPMEdQ:-I.L515;N[bE0+)\^4prWojAp;g
%.d6,mX%\t]@i>kZ&_-MOJp)6jPh]%S&!C>IY"]o"?q:kj(bs,ick'>![9u%JG`HoSkjYk("=2K=]S!"5^l^'h&-G3?:9kDFKY]K%
%qB\0>7gKmPl#_*c8AlpAWGN\SKML5)<'h[CE'spQ.:';AbfS5rWU''Kdi/]uL5FhPmeLi@FCZ4hk[YNVkUI?b==;SgAd;>-^5Up@
%`q-$XB<f^iAe*5hSP[kYT>9k4aN,8[.3ZVd%>5NgG8Bli!_L8`W$p"PGbUBo:@edUOc?$>7Al:3P-Po\J=8n@JTiYOO@W1kRY+Sp
%$Ht#'=;cCRo+r=Xb&eUAa[)LDJ^q&bNu?n&(cC`Q%0obN$DV.Wc?VMaG7-X,:eVi[rCrG6p4A=^];?JtCk`2<Xe6NQ/![uVh-6rB
%"H/k?,i4'-7#MBo']#h]Qm25N42N6\.eaikYG"G7T@R;XmkbkE9uOe.LmTe51$C%5&ZSFR^lg`<lEkI16mUKElN\Up#1CX#+qH1O
%WR=KSBP_Ol,=NCO$G,?>/g/;Abb1s!JM_J(Jt<(D\"t1n<?'Jgf`d0>7;Dnt,to1=+gGrte0[B56t)bAfc\p&#sn!eW<\_sg0FhM
%3:L!CQTP5O9#RMpZ&;+e^npN57X+9OJ.cTXE[73aO9'=c8?r61M]*K9LEfNr2uP[W7`iW*VQ$oTkZMi:X.suman3;m[UT`_Ru]B2
%",anQ;3TVedBc)SAX!c"Jo+5O%7k"!?)FJ4&KX%tA*st_eDB=4iGA6rCP+6(M^`+ZUi+OF#T@$iDJe,T\N+',YQG0k#n9Au7QYjO
%W'^Q:CHJt9@`$ps%"AL=Y_K9MJHuiH,ir#\\76RXKMHQT[>@hGFpBaJFBgM?^9YTe#m7id(n"P!YT?3A(XJF0CZ4l9CReFujp-m%
%]%dNFLF<3O*^MQa$)U_h%5IKMR*bSZ<S,,pfoR2uQ8TY_T5^E[<%Rh$Ra0N9`jIkg"LGLnqt(.Ubj;`YLa$k!?AR8k_4Q(Ap7ETC
%>#1M+T[EmeKBJ(lJQ=SZCl&FkL;@=Tgel"UiG!Bf)`aLoZ^IX!1g'@(?i#e>g<;&V8AmB"@lSi]N!'>9!ujPU.e*M#Ldrl>4qU)'
%VG#X3Lc_R'UKr*;qhK;<j=9-u7Kj&pK;0s$1AIF`,*&9#s*lY]cq$VthO"nVZa4m/7Nt``P:7@OiRgde4UW]*LIY$Q1>_8O9SO#d
%\]2eNN@#RT*L.*@ZaoMI'B\g2:e,:a&BXKk'3s]Q%WjD!LqI;S4l$Wlqm),IKhX:BLc40:m.E(q=Dkdh8?a29)(fPE18#/^9U@b4
%["WE>;+(mM^Y7b;K00@ROQhFBLL-eo>EG@C2<f'O"ii_`F+E2D.Ud#u"#Wq1EH.eN80UlVa(sqGnKHn&[-[5b,,7P'&$'Fl2@u#%
%.!_O:BJr_gDV3N3?Q7R3(s/bEaa$PdH\J]CE(U/3"6W5+"ift5Hu%u+A-Xi:C#B$7ECiR#ZFFC64;G`gMWn*=0on^E(iMYb3Z(f6
%%PMKG]JmQ[(t9(>al-osKVA$Q)Q\KJ-TtBre7$D<a-C9W7,4`X_?SXg7V]@,IMPl#m^-O@;/J.4o"6Z"#dVkt7"]XS',<Mu7"&X1
%R3**js3s6rhspU-@tc]I".;h&SV7cO>6Ke>Q`PpU98"cMFMkb0N(sUTeQ+^BZ[iS?-]o)Vf"KXCM5Gnq.Ti>.0G$fYN+op;F-%Sf
%6]\I!45i,97G&DDa6R<U,pX\(MaoT:JroV`0ShT;gIEI#8:%)U5WOlS@Rit@FD08IL7[JQ"SS;X's=g%oJi.gCIdhWjA5]9*FgZE
%ld4&P6%c.F!R"7@,RDLT5r>#RitGWKCnG,`d5DYQBW5MF#"G=kV8NIpUg9oe1^Pl:Oc3lY6sa(EB@gj":Fm64>W`r[0I*<0Hji_g
%EBPg+A3-Th&Chs%9f_6i`[eY$&Xba\"Y0be,3f1GW00p#=Z@":#N7R4dks7rUojljJ)GT?A&(>K9.L./:(>N;`Y4/!RfG0ODCd)5
%3edb^H#9RRKp7[3kFb8nEOs7#^#cklltH/[`]lc==so7r2%4MIYLj\/7T?eA7`p-Mo9^`q(,nX;20EjENoj!ShJg[hAAAOe'bGnO
%2L:<tWgh37$3sQP9`u[)PQWJIK.:mP6lj"mf$%$[LpiI1%r3pkn+<pj0'=tQT]VpC+d0a%OZPFp^KoS!JW,qU0I(s8XSK[_&6Gk4
%4%mCOFR\OuP*pk;MPM0Cm7)_Ch6W3Aj9\4n\&+C5,5S2IKL0>`EMZN1-CQ8_Woaj]i&/Qj&$fQciSb'85o<cA?Y%*]+aG]O3'e5f
%lS0(o+bmj0LAC&!<ubBZ071V)V.=9bRNCu$d]PG8-ipLo^A8DU`\CK3G\Ee<_jUk$fE$BP9ooU:aCSBk&4%Wj'rhXJ,fKIl-SK'V
%N5A[_"$qQ=Srm/H&N]8XQ&&q&psb+e0np2,[g[H?pb6PM!0M1gL)#M`;H<?,'D3fQOGPNnGL$jLj%+#;1h@67K;jHJ#WQNJ_K3aB
%FZLD:p/qY6I9d#;/Yr$$n'<RO>Uk,^1sS!qhb)TK0,82k@VL'@M#8tc3e!_/EX!-:C?9.raBp7DPm6+=?JD8f0h(G0Hg9:,/Y+,F
%h;Dk<1IKSq1CuS1$9a'[5s_L_X%U;kXYU@#Qndqndedc[KZC4XJI#*]+WL_J(fGr\QQ]MoiD32lHZ"KH7@9Zra2&@,K9IXU>Z)]E
%&J,[a#O'sRYY2=%X9nUEqsh?WOm$1D&\?B86J+>Xadu_r9uLNS9a@_k8p(5qMUuFkI%06KJ5Ngi`oreeX_VduT*#dI=7"*OT1rig
%Wke_+PEFr?8OO?.2&!p.L`F"?BjAp1I$h1abe5,c+?a"e^(.u]E/<U'I1F_V*I:^m-,#H4;rs8dYUai3iNtqM%+pDmN["F\c4TAk
%a@#/HlZ*H6&qN>S'D0kANFcNqU:4hP;o3EeK[napBTX+tS2b2@Sb=,e^u:+=?k\e>MQr=/M($^*`H8MF]nA,NF"0am*`L#6ET0mG
%.Lm\;S#!d:Zl(r798*Jm/]e_3&Np:HY5gB@!W&1dKi;n$W0q>9B4iqfm&a$QE:=7sAl0CDA9%^,]^N4AR#%E-N<00;b[a<"N'/@2
%!3/'F=cnMBb*WCjoK6"m2M@2R-fmf#@*t=`<74#WeI3"#1&A4,&6Fb'%i93WT<f'5e%RL[Wq7p!p]-l$f>%V7(P2R#0XH_4Ne\!l
%]K)R?&<!Zb/8$[`lisaqLsC#\BWj$OA$>LYeP.=ofE<.96:j!=LR+VJ1gM]XQlt\X"'*jt/>e6:c4U[#2B`1W(cucRV'&,n0$h-S
%,09_71NZPK,Yb0L,r$&1ji[3LM^`,]_M^Im0hGjh/44XZ=JZQZKLnM`OYX$L>.pW-KN/ILo?5;m5HblMO+AWQa>lX#35Vn][:,oH
%AUo]*BXB(-E7JMX<9,IKW*p636INR!Bk/?$i?[RHe&Vl^i^b2O<RV(Dj*6V%0<AL.P_:<;/Edg:%H:GYUD-%ZgAL_*NYG&N*sd%)
%g?`79_\BA>/.(GY?%0l.7F(D$?numNisWnj6V]d-r*@d>0dOkRkqJ,bkj/kO*$98jdE,Z]"=]m%+1QBf3>bYIDAEL)84c.h^W8bR
%i=g!\kmrDh=[!`ndOYAQH`bSW">!GX`J$^i@;\]*`>#REeWm*h?-<r``l/k#=1(T1";0IXm#5!OT9O]O9EU+WQ:3-%_d5(87.g"1
%lXUc0_JU<8)EJAV)l%b1h1_"Ppg'HR'"L16l9Q]+9WK,Z1mJIjToj//*gq^;5\?XrbdlqGZR+ilpiD(1^i]q4:2--;-\GAgg7>FB
%EsaO?-\WTc12Wp(1tQAK"%:XL&QeRk,'LnP<FSFn=ZDPW3+.LuSPCl]:une`63*\Y7I:(2dOJs+8$Ft*^&hfr;,=Mh&n4M6k*W7.
%35M=1b^F(_+K\D8FI]=mB,&4'#77>Q*5k)UG/<f/asRJM<u/*u:.!(c&OkbOU*d<@DhI)Sf\U\`;D_T4E0>]ciG.Y7c"4jtBH7$I
%7-m<P#W,7CkDQ+B:^@2D;pmHV#9mV'@9?Q@U8_O\8a5jU(,BDZ/i+0/>WR"Q1`K.k)r_>N\(jANVO.*Z7+CD'qCJLsh*ArW9@@jj
%A`%GaOR]=[fWBrFB;-h.6+V]-;5P4&RA0/(SfSD["7:eeRR)WH_^!PFCHp?#VMH7\=EM*18VDVV*m#CV86L<J-;s$u;[F4p=sfai
%1N3=t5pHi34nuWf*!"H1n0j?!TUjlKGt8OYcQ9tF'dGK[T4:_GAIO.2jH`8jFASIV,nM5r>Id.hBRJW1+G+$*6tZL`76JHN:e"'$
%Q$J_["-!m^P9+OHQ^>KQ.KGqbX,YC?R9tKO:kh_K:\$ND]+N4pG,X2TN[$bd+;BXs4DMaL3bX4%Ou'X(onfPE)7UO*p3q8;l7opI
%?q_.odWt/#oOpCpA!=0%Q!oOqm+gD(RSKc%e!kr)<!U<.r4]UVd]EOI!t1uP;s#2kkTh0l+uJ(V#R[B^+1tYW>;2M$K#jBS#GI82
%,Z[I8YR+`-35UpWRU@#++ApW3FqI-+9[$X5#s4qM;/<&[FYsBi1("TcBVK^"AB'Gl:H!Qk:Kah):`bGq_cb#>0)'\:!fFc&B9nQR
%KL]_eGR+^EHgBXle'XJT7\4C4(gS[!U#<'B$\>6BQAK^W0p+/m#,4_FX:nGYF+QY68R*S"/IlI@S)[&-h%n0_,@Wgf,g!Ds-B_@S
%\;WmARI9!UMX-[q8jO0p<H/$)BmYL=,R4s<''kA+@EjL$gi7^&cWK@=oZ3YkR8Fe-DC6;74-(h!2u'34ZD*8iW+8*.J/saVA*som
%6R8]+3g9Z%#]1e]BM380/s!k%+G;EW1eGu`Keu'(4]`RB]u)Z94D%cZ[Igmm=\<K2eHfif>-QaIWSf$0;4[eVd%9<Xa)m,N*gJ#_
%O^OmsN+Oe5m%(R.U')3J<)SVlH`LLP&EWR]0TqTe0I*-?B^P75/?%s2J;KC8@7dem&pD_i_<#EMZp+bo=!kW*"*WZD.9b%:pulh!
%*Y<V8eAkYp&@pSH&;\9eJ4N]m)2K4(<#W[t)3mD1B-DuBpH0)N=&/tIJCHIj;3sq9JOhnA9]WV"1qQM&4^22^$C+XS,'N#/n9R!=
%=1K</1et[k7*9t;)(,SCOF1'/V*^aSh$D>+,LO>p,5*@1RZU^DB+S4!iA`hB6>jFo9j7ne&2dY3agd_C5tMn2SV:!ri/=jNO$Tcl
%npEG%[YZ4LN%&1j#N$HNj+nSH<.rIq*O%VR.@N\pb9"_KP\1q'<F/FRVQ4.^9t.[lEaeMrRE$#Hf@lJI%F2CV*\bTo'ib++>B9%F
%*Une$?#DC;%`6]\OabX[=KncYB537HRDflFP7f-G93bW'bJb!MQiU(I$:OMjX^#)K%&e<(if[:E@3V?!),/OjJdfdjU>g#npML!R
%P<N)kc>*6UC5qnNH%fK^Yfl[Sfd00^j^`HQ!N$7_dU9^e0&r\)O,8Zu)=U?g18G(1`os.1HsWTt'1?qRFif\I8.dmW=:#G%Q:%"P
%@H\tOpEJT(7'p+N,toPO9&s,_7R,l!?CSht1fjU6/7oAiJmQQH(QU+\)3-C92bL*XDOP<,7)!H#XTC<@qi'c1a%mabN+DO;RBr8)
%G/R-7.<Q1:.@p+(1A38cfNURG/7_B(agDMF8_O:?Y8-meL`2aCib'E'kXM&)4Pi15dRS4,6a%V4MIuu1P@3"4i>MHriArE^Y$$aD
%<](h@"(f_u&7K'JDWiXKKO&XC$P0+7FgckW2Bk5>CU1dic/CJKZragG+D)n49@[dsFC%#`0G<n/?$Bos;oF]((o_UrnU'f)!]tHX
%=U-V$bZ]0VeLKfi##SohQ*-4"?]E@HQpi]eA3^Q@=\4SjM8YYb.Up<r-pmr!7/tj.:^4@HP6sig`k'WM(4]sYZ8]:"Y31qI4E+jI
%;o3E_8<$,W06-62<!9XY%G7eH&ejofh@C7CYbZMMAX4r\m'FV69IEbC1!h2JC_fp%hIYI%:k"7s!3YTCfU5FV;:)'m*eX,6IN^5P
%TlLs,ai>)_&5>9k+MsP)/hA?l$M7H'(G2@,6"Cq<"6f9BK6a>hJ==c/"l:jfGedG2#bgEeaV)Ogb/.jho='u9M3k5.E=H?9693#d
%;CP)0:D9o6-SSaFP(L!%ZJlEb;LpCf8h_RX.WrhM:@;Am_@P;4'o!dul=o;uA7^#XLgcZ),D;hnbVQ]\V,UmMd#)VLIhkq8NbHEH
%Y"<`;Ftk^nPYDg?7M(t=5RAZt:m6d=@7HAJ3UR?X8n737LcV$=1UEG]G)1,%R:PKMOAcDN<gJ4=&TLWaWA&J?(kO94%Rip9KV^dV
%(s-@nSEDUqlu;fW>'VN#C/`&jOI-GkIX/J\S>iNJKr.m:*h]cWX@hM5b3(da=M(.4PK6BV%k0eG/pA#d<n4edkkYJ(h<XM2OXb/-
%3?L42#&/\JJ+T1KJQJ%8UgX.'j>_Yqp+R4<!@!r"!)2G%:ij%L<48.R*H[jAq(IdZjAD<nH%%jWEJ+dj(Wbj>7ZY%pHMLOQ#YOri
%!l(GKq8B7b;^2'sG`E4f0Qi>63+`aki%uMcCWoWGS-_i]L8'M*\^dBV+I_@V)E8^)O9$\uR,<nT[KmGP^=HGgZ^;AK86<o!K]k+X
%NAk7SLhRiGb(pOCa+3LW(+D6\.7sSr_oh:`@f,r(%DL8:2o^QsieViAX5,.G"P&KsoZ;=e??G./n]d431:e5LLpG:EC`TOt\Veo\
%VO<\)S:qZN,PSlH;RlJ>;b`TrqZ%Z0/s>OOLaJE8"3\?a4<Y'=c`\@FUm;Ia4IZkI?<INSF2DmsqcR>(AJd7bjE7=.LpC7A:").9
%QQRlFXusrpelfYjWH=\3&>c+dnZl-*k7D7lniY+[GsT.,-G+GBQm26#5'7PJ4jk.BCDb\SfO:uqTi`KN<F"WSQ&def%NY_7+k]nS
%20<5j\ZZJX-%r72(/[DYdXB6Q;_rLF;GEEl1.]!YQ$94m[0mhN)>V7O10kpb.G?I0Me556fp!2&KN-VUJ5LN\\<`BK)LZW]rM2cb
%'2``]1\SA8Ln-ni,iU0\Q[D=&<*!OG*`L";eBTuK:9h]-s0AWmd"!-./]e]XoWPn6$liM+ac?c2ZD53hqV$s(9X&`C5QRTN@B<U*
%$+gi_;s4>3b+_E8^!5@(2$u9Rma%opqM2%fHQD,$j\s,;-r]sr&h45:$eHAoL`H5ml3iHhH5,mbqU%!%L%5R\kc<mJfZ]:L,8mIZ
%&<3iAb+#<qb=(@_6(`jp@&F9)80`9'nLW]\(grh>Uj7Nil;TKXpj/dGhUbC]4^mN4'CQJE:#!>)+c=A2C0#r@+k'[7r>7P/'9/54
%Ok?('PXgdo<g9GuN"^oZJgMb68km8JMp`.rO""Q$W%XD*JYRfl-PA2:YVRtVcT^RBS"_VuT4G`t"H9,_+`i.]#GU/]Jk:m\q?>TP
%1lj(o=4L_BdO=^W>=<_7DDmKDLbBlcX@R!CN0>FffKgCO"JS(5pHFKa@eYdaaV2b'be98]0k9:'IN"YTTc_oh@(#,7]A-Unq<VL_
%-qdkNFr"#pcInbfF;[5a3k]1AY$*@P#5r$eDe4V(DN.mQU`9R34jkIu9t4Gs,t2Z_&LHL=VJ:@O>5DomN?Wo'Cpn&g8!5A#?_Lbb
%1sr%&:u9c\AlCQ"5h*8GWL[0_&N\'#M&9ca1/G/]Ggp7RP?Eb]=Q?]'`%%hdN>X+c4c&;Gej&;j@jIDQ.VCJ)lmD<^$oPf>59-o.
%DEA]:YJf[T(Pl<DS"MU:=-FL,30MPn#=69$D]PX/IT7j[NJJqGB1sQ`W0euo9a23(EJPF\Ch3fJhC3#Z$.;`9(noOEZLb_.r3sPG
%NEUCKPZLkiB-?"^e7*4!MFnTlihAgf7[b$qR`,uG=4n8=&eC(@-MPl3W9;McK5>DG'^_(KA/2,b1r9BKEe9^<"sSKYdBT^sU8_`J
%"mC^<0hMA#C?SQYgC$0.qUF^V%+](Q0JJ[=4d5)]].>iQ@B))\#XfpIWE#>+Pd"qk#W\&gYQ6i(S^FFQI@Ql'R!4+[;&U=p@V4s/
%e%o"Pr!=t,4:<H%WeC=Y9G)WlD;:::J=<TMODf@J%7b<ZTUhC<djU4bU)r8!@tY/o5dP?]R''@[/lu4Vc$8@o7HeU&4e5?:A*?Xa
%D7&LOUh`k<,].-]&nk=,&?o,,&eL2HUqH-eQkFR]p*:Z!dfs5&*j@^V\ukd)&6cbe+@>^H@X^kiA/e[O[Z'I8`f.oP[I,M*%k0h8
%r/YTIL_r5t6gTLBBMAg[1>L\:"g8=d%/X5+mX*7$o^Q>$pjK)qPt]cMaiml74Jmotla,c:'kqG`h?HBXW9K0)bbQ*hpNR>u8gZl4
%\.G0\9&4I5['^AhRYR-#X-tgcBp"C`m[68*[?7JgCH[2;Kf3GXADe>o&(5:%;CagfM6iV*'VTmIZ&LCHZ6CSnA)o7Xd"b$6XEHCU
%<-\jFL^.690:32M15R_+WpFr05M[ldL`ATNOUfF&r+)>d?K_]o)[@QaZh7Hs5ibm9EK5ik<e1=N<!O0Mje96VQm-^CH'aU,.35R<
%908WO3ZR?h+S%"2(Q"Rr"m#h2MQiVlp;'">@B=`F$+``Bnjnc\je#r?Ut8ifC''Ol5'ne?cVIZKBuW@*,MKI\,n.IS6SRd("==]j
%i-@AM(&-gT;U.g@Org2cUneh=AOV^DQQRmq)qb&5[7ppX68#-RZP-NI74.-6E8t_>s5.cS/Q%iK6rf_[!]ZRGM$B]e;:[k,L`Ob*
%849o3Er0]1do=RjJK7RP'FgS7.VaZgN%F>2X`qGg1Z@eTH$@K1kc7:oqKYU6FJ/3ql0=CI,=2h5L5r"6o,<F$(6"*4Z=^j`;S7NE
%:c=9N81(ZCcXVjb41G?F2Sj3"<"KqO=&?P!7CICRCDhrdqae"_O4mReS]jL8<*oE_SY[5>@hlXMDnpHa#>g"CB9hE&5V3T\b/ZnB
%"6Y^;P>8:d/jN[?2@DlBZfWh6"[khGo>"a.(=HVN+$H5N$`rKE1AOJKf"^B&-1!<u,QS<*emr\]`noo_-Q"Bn_L`'fBZRV'>#o:U
%5YS'Xq(P^42*-dI@W)eXORb@ooFIu)q9[O@i@Pq"@/H8/2X,Yn;;:7i)I4O-e(%_f;Pp26@uAo1OAH6d4kdo6N+Bp<4jp2+?m)K'
%I,-q52NH<N0OpXgPMs6q&>;TA1UNCjM_L2@@RmN2$npqQHGth+CUXG@]]BWZ3ftZ51H'MCD+Jn$_N*B@lf=7T9G+m*l'?G/C02jb
%YU8`@+tHSU5m.L"[XeOClF_rk@7ud&*V"]g/C9H?>aM`Pi^a;aMV*o+ls7M0eS5m#Leu]K>Z),9lW)Ut_bC9Ilkti1SOu<b!LAm?
%0N)e(T>qYN@fd5[NpbYM17o%hVLg(U@dU^-]hC\?(Pn=C"#IBRfb^l_C_hYci+A*'fB+dsf\<""Vdhu@%4cTR@X3Nqe7k3-!2?_c
%7_FK>YGAeE>OJX7"Prk$dj'kYa=(8#,d/+2cQe=g4.ST8=+8;'@%XAdRMZ7P;l)438"b34:rh-'fnpG2WeW%#b=hBO@uAnX'\>pn
%+I]kT01l,rpB$ILQG[+P^E.#54tRFj5bu8d#,59b3ge3'*LZ(F7I7Fbh2e`3<Scn@'ij"!T5Y4)[flns$BGF83hOPp%\d"D6@^K1
%W!7F'R[QN;#h-1ep.h8ERPa6Zm-%DH&^5AQlFII^d]1%AquXfjU3#(F$P#4iZN[eJ$6(:'X>B=!Bg[ro0mX^*2TlF/;:>j35,PYR
%HgO['R)KcD=6L:=Kg^aEN3.i]H`3joQgO`=N=mk:Jg:]L&Mn#koI^]SG/mrTUrr$=c8LG>HmAn`fNBb\[f#_JG:hX;k$=bp#KsR)
%"rq&,O`8;bAXQ?#La$e=aQ-Gor"Ee:N1;,U%Np'6M9rlKEZE+=qhN;6&k%iDa&^H98G`CS#Zdn/TCG*5arah]<$?0Y"=g/nPHAo#
%9Rg2;1msA>>l>V98d]H0`*HgBO`^>fI>IIY>2?)d59e^8_XC/4@bV*QkI:bqE&B0k6##+828*<_Jf`!uW1LV[`,fF_0t6H*NDb;'
%jGW0PAa*XJ84(ihFYck<]ga,JCmR82&Vm7a^>D](M1Y,pnEIVO2"itcN6Oc$OT7h,Z-]9Xe3T%0\40H'\2UMAV!s<]eKQJCG&,3!
%m8V>JHC]g5#1>Z`kJ&RN5c;el?n`tqMgP=4e_/2[+rl/IcJ4cM_!(p%'DM"I?$oBHqFpoU3!ECXnIWJ"<``PQZ0pg0G"mSu`PI*g
%aZqEB88pNskH9MAfV"66*=TGX8Hs&`2@?m>r.Lk1:EiMK\P^M4T0.?nYYj"7LTNVXmfaobNS^;kh,9tZ.8`!/&^b\]lnBpXcXX-j
%BJP?k6F70PA@`tZIBYXVlV@#8N1jL:]d_X)$.1NpPNeAH($sl6f>Ua'96RNifte!B10Bb)MMUuBhO!RO<)etiZ5e3uZ@`gbA_8BZ
%/LN%#_7?b->dc-7_8[2Ui07m]XQagq7/LB$"ZtAhK$B\r/V>pKY)$a5m&jmTIEB&rLmGlG9NOWh&,*SFh<U5HT+ET,24:V'BHQU)
%O4[$N)/%3m8q.&=P>+f:>PLK0F''9FV(p]X`Y&iMc6F/Qk416hf-T&30aW\-VWBM&N/lVM_H]R[[Q4mHaFkFSec04U^qS,ZE%KIU
%8(mE?9M(gmAD&^R%2%)(\gmu1Q@fR!7hS5(ZW_fGVi"6*Mh"f?X_LtZPS$jlJ[pJa(/m'5)!qV0S^!<I5_N1u_G8e4?g5X1&CiPp
%UupraR>&E#MRS.m2F%LSc!lR_X\S!;:!B(+JOm0m#Y2F$f!3%&1cb#M-[:Rar;qAZfrRZ3X"7'X+t#OdCf\_7ha+'\Zj4L;%Y12O
%\h>h?'q)ss$u89Y\h_0,Z1YK>$s?u`/2E,!)-@8@[7*RB1@&Y:M7gp6?">-41:EO<aGX::Kare<f0l<rUWbSmiXdS\j35,f8f^Pn
%%\YX:>bUbj^^XB/cms.SQ+9*eSX'HIcU(-:RJX>3m9Jj+/oWlg3j?f_c:.1#+t%f$]>#b5T[_e)'P:2V*)RD^;&$63)J2h\hGP&P
%;A@tc'IZluhGP%g<"oa?'NS0ITMuh1<#!VX(kbm#c;b\u<Yit\'XLjPqGnG"<tL<l'\6>&+BT=m=;J5E&suf?:,sD`=W6:&'UW#;
%%pKsl3Zeo;(g1&W%pKg(>SK;*'S]j,cs.KD>SM$](pmQ_r`p(+?5/Q/(u/F/-=7[.?BeAbQ3gBL;G`aN:mP$VPfcjjJ5MEN;4&%q
%QHE'f5Z<p@;NsFFP_rD,5Z<oT<0V2uPdXPSs&>Gp<0Sn6R,Tuq.or$Z<gG7:PbM6D=BC`]=-W&QR\ElJ)-N-K=HjY*P[[da)-N2c
%>*qc_OH<Y5g00f(>*K7sP.b(a#$dBh>abn&P^Zo&1gQ>p?'NE9RXSP(p0O8j5+D7PS3UGEp0L^8TX[P.Cq5,F\cjD1"q$8N'U<8Y
%.e6D8/u#_o6W#FrU66@i`AQf$FJ(+>W)JBeX%^rR)Td5k.!mF0UtSOqa>\D3QbjXd7Fb)SMLlPmIOVAN;Gd7eY_l+Wm?aQ14%5ET
%MJDRD'^mJ&\PlJjW2r,/I$pbHH:_[jNf'i0("IseW\.:NVlI,8<)HZ!U0:ej<P=:TK9]L1.]T@H=9G[uRTa-*[^'X_79/]3C<mVp
%Yq)i0='ESGW-2QGc+g"<JH]$Z95=bJ'l,A#Z8bpcZ*<4t=g>u0lBk!t/W6W=(=h(hXH$F_PI.QWBL,A@_Wn"02+`^@_%p$i/ZJtY
%<)pB2(2Qk@h1E5K"k@f)CA=)qh^tjO>ZRVE^=I:<e`=#Na$hk_M^h(1eX.th<aAm=\u:j<;+9oIg>57u_@,[h(KE(@We"JW9"_*1
%Hr6I/P(N3mQ01dJ`Y[1fhnPt98O<?Mb5S6Fq2>(l'Qu,Xk^u^a;5('%6:pd*P*Q\K]dJ]K=;3Zc.-`<\fVdcF7N_5m6Ag)L'Qu,Y
%k^ude=/;d/9OY,kq5,m#h.Om!`YA+2.I+-9e>oLGlVD5uSt[8tKq421H6a5K>:Ss$<7IA:UnLabB<%[I=/E$uME6>(p@0Wr#ZfS^
%XK3XK;<,.&rb2P,fSY!d'm>?_l8)MgZ*(J(>>]a^P,<Uqh>N6-"I?Lj/*X'9g'_o7X(#dm`hKVn76N2[H;G[0_m63GAn_e!ZAtVI
%I6NQML)0G'/aXBYe>]j[^M6'4f#"#^AY!"_)WV\,[4U[*>LI8qZpAS,?fIet_F8m0M`MiEp*D>+#@5p!\Y'm`@:/9)G0iZP\;PZG
%QSdYRlK2C+KY+25H;V`RU>G'%?.98ZYnqP+0Bs-VenTW9Hi:0J^!-HG&63aP-.W_?>Lt"g`%mIu?'RB&SIFR8LlAO%;e[:O`/\N2
%:9HZhls?/_/HUd)Yn,i2S!hYU6B]j02j4Ma&31HN(dh:G:"/MYgXIdOKY?]IjiP;o+e2/`^"%s1+IZE(BI(0.igDK&j%Ss_%X(`Z
%@LYBi<mG03fTG_ISP#ttBAQ7=1h7KB?k>8plb-[q*RAV2=NS4@GgTL_Nrd#>=o029LqQ/4VGO@.`i:sh45C94:.\,5aCSL*!te+O
%Cc[SEUusY0L/B4rX&`]=bicA"eEZ<R*i?UWDf9dL*C`Y07$2u+)&EGg*Hl#E`Mk$f,)&](;3Q?'B@eT7B;[D:@9mWT`:/*Hbkjpe
%[#SWr?rEQNqCZEgQ/;69H`mL%@105[9&r+3L`Ig\S),=4#W>9^65sD>6.DlNY51_KY72,LfGqCX]$+''Zd?lX#pQ+m:Cil4dlT7O
%3D9Nu#DJt-c&3)4%n6tk."+13Qk0k$b$_r]`URnuAHB]9Z%gWg.mcp2Y\Mi_Xh4hGc[q/7C9"SDXBA(#\k;S6N%3J9Tu/W=;Ue!#
%RkViW`#3]D$G=2\c9;f\j+U2F$0.eB4$;K.Qm-^+j@tcJL(s;cZ@Fj51:uIoc:X6'+t"!Z3$VbmMh%bnV!F_+[oJ3j1Nm?H6nCYG
%0'4Y^LLHuND,)4R7;N,@A]@&<AHn3WENKD4fl`2<8HPn(9FQQQEYa"Qa<Or$4J@4=IE-BZ;I`1*DjHh$,)bsH@&i7<EaRlYTEMo-
%EGcape"n#0^_)t%KJa)k?X;5e#Z`#A]G"KlH/*%]0g`%8B#I+!ZH"MnLtuY1Gm%OVB9X5;m&eJPp"ZCEdP`?eP.4D!%1sHpJ*UM6
%Ld]AfN1dks]@SU0#i.iW&l0eT7V0Bm?6I,],mP#+@c=cVB]sc4&UuRU)*>dAar26%OigVB89H!&3K#=pDl)J11H&98U]=8)'/p-?
%,VmQZ]8"8&L)?C)RVqE>E<pV!G(1(R_I=6E:VEWm%;oZB<KE:X'+)\i'/^siG9EW`8-tt4&lIF2@QJ`7i^21;hh?gM3/3mc$n!Z\
%Lb^1>7,!a_)"C)GXMBM&&J6T;U:G!+=u3b2*7@i?YQpmbrH')YK\kq:.*#3ZF9k$+%R*CLGt:3]EljGUClD)s$J0?((bo"NP/\H5
%WM^SiLm8^(*`KqY9M(VV+`WYS%RZ@[$TEga1d_H"*fk4M/U@sE*.Lbirc"9.UJmY5]pDLtVOOO8Z^;q[M#Vmd0JT??nsSFT)k\]&
%MA!3(_N%&1"qgCO9chpQO<,%:5`TP>@VRCNFUggX$L>*]mSO\-QX\ZT+NdHU7@KaHU5B7c_+8d#33*=a)G!8r^#<sO(XkL@KY3'_
%6gPd]DL"QkknlF^i.k/g'MP``^F:'O?)PT:5ua>t0B"s/%DsFs=]>Ie/<Yh!f;8\p#fH)O!=$KP*2E"Y@^r-`keI4TlTm<IBC+7`
%6n^jfgrM!-\9q5(&;X/D5[LjD9ETGt@:^&^.dQ(^Nmd<$+DNCbB*8gjk)Ee"N/]X%aMJs17!bdo'a#$V!MOs\`^4:2,fkcM*0hhj
%WUE1RAB:21gi]h&k`dEQjIe'#)8Y!":Pt^(*Y8l3Qb2::cP4D;M%7N>Yo@Q&`/MuF*P(+12EeP['!ff=ZlI=5K#^,e>+K=7=Saa?
%`i#q=L@@=&L`N02W+86m#aZ!QO]828=cZa9.9llGJ^`XDW;RcXAtN=g%^e?<"+h'VI`:/gn.Zlr1(,NtG</J;1U]&eBeL$+o>_,J
%&64\qNZD_"$!Is']LUm:/M$A</7-uHV^ed4(s12ZA]9aV9F6'd<sD-b-3ioo@'>K53@&q5*`tfB[;$Vk)(?'M7Nr`2!?-96ZQm0u
%7g/'JO;RqE493kQRE,f*?96k<?J=SG3Y<8+7BF#e34C\B5s3cI9kl`ob,ZZ/,)X2%Kp0X_-DW/^8uh7^U/njN5W!a<n9HcGb9=@$
%eVULQWhCA$pH(ibH+<Z$VMMq-=?tV\ddlUYfaC2?R6]Ts8TKlIBj(WiJB/n0?^`Wqbun,Q6m5?-AQ<I,0dZ17-%Z=UUFN=]fO727
%P<6[i,Tp*TqLl(Aku7jaN)puF'SJ'\C^L`]@sWO>IP@XT^"!;b*7@ETKmCJ:ZGo/ZFK0[STFj(MVTGZ5hrug0&EW.>(s0."&P0mA
%F=@k%5'`JKdR4<4NQr:?OnZEif_c)pPsXRNqW8s7L1)r'M`:?c>EM5_&jVRN+n@WIUC*n"O`3J:86"n\p0>m7j_;qJMV(c5$LKKK
%7VR-;k<tu^?6E-CN=NoK-VN05-C!Es(A^c!Y]T^.ZBHb:o9^/6AXC8AlDao4?0O%VdQ%mhUE/kGp#J^"ltGolqEb'R37js5KSUaF
%O":GZjd1E;dt!us2):s31UaTR`IM7E!!#l&lN'Cmm$brElsCu'A<H0J72[dYNY]hSp0OZF/a"iWm"f3h7MB<iauYZ3JO]U;6b1i3
%ndRna[:mhcU9&#2BKT8=EO&=UdWegn.,q,+O>0-?.kuUbk%l28q/1:W:pi`G,@JA,60-+*l*04[]6-dZBFr?Aet0ZB%@s[G+?I0m
%Z]GglcA3AKR'B('4#f$+n3cRup=LLLd-,_Q)Tj]Q8B1.QF3*)-6S<Rd:ZQh_Z'uTO+[]0XBX<dEFBAd=YT2&DG^II0,QmZ[.QR,S
%f(L$Alm=s]-t.i+O8P"t-GibNVH#]14$7JVkQ-JdI!-9(`9qUdKcnheWh>A&*&p$#T1Bf4]<3s2ir[Ur@]7+lKkJ4FNKTl]`O+#V
%5upedOc\+1,_G\RW^+Hm@.e=D2i3@cXS%-11JtIBO!?Y&,mg:m[kuA_6!UFYSP#[#MQSe@:jU<#IXm#qJ<RTu!sqBbnLL"Cm1UUI
%&^0=h5J#Puk[gDAN<oL#5d#6%Lma$_TXVjK#5KuI3(^`a)dU+2,T=6>\k45;;C.r#jACaiRB6I[QpgKR@CAe+9[*Wr^`0ElgKK79
%FZeEGj;B!-7+7nBB;e+>QqfSQ[`MDgTW+00N/6\i9#1Y/"p^:aT]4KiC27].R6q[>[lPZ5A#0M5K;OMQ%%WV%lOMb^m6[j^[qj$1
%,#%((\f*iaaW(P3.7kf0gg3?pN:]NhW*O:`C__a;)\LQ/0O8!o$Uf5+`n(7$.oC`^?-*GlQ0K.)LpfW87;!ilCccf]NNig51:\if
%F'`-Eol;q>$p#7A-%lKqNeicfVFIkGSuco2L..KIPd'n!ne#=tKLn,LR>*2hQ9H6c!r]Z>^GDDo]KOspK("m\&jSi<-*b8>N'UB-
%V;tF27$%*cE;N1J+Jaf5OU<9nN[H(qC'[E;;K2f\;OA,Z-sMP"8/T<5nVJ,UTRbb"4AagD"/1Ip,EeNdWAE_c/=Z`!+bCGWoI".Q
%Wn34:5bqC<H3P_LHm#`5mH@")R(kCRY64!NQ`n_dRhclT3<+[b.*G*T5U:Pb%&g.I^`,a`H(H=<&@akAV*L8*2L2:Kc4:)eRK4(D
%(Zh'P?)P3(W(rF_cO8W_#j+4;[173g;JqttHsbsu==WB,[%89?6t?RTd=/)"q,7#ZH!9A^VMH5sXF*M6S*6[ZfI[6q<8msIQ.%Z0
%6ks/RBP6#<"Go5WFpSn0@9I':_&uW/#tp_@'VRTd&o6]7-l:]n).hgE?6Fh?0hGZt]^jO%dMS6g2'L#lALmk\AF_)YPcLUdO<SeB
%[u&aOSl,()]g/CiloD#i:t@-l>T@C07tfr;'D,=-8Fd`k,#YC-@3i$TmUe1Bm)ZaW3sR[]N'cLZ$Uh!@U#Ugbb_Xu''8fCtcA)H0
%W\bC`S0>_J%\5Al8-mA(o#*)VKUm:O1b1I*[UDXi=,\T5N4mV5!'l5.Oim8$FU7ni]S(`*<>uXWWMR2C,K4;,:lo9D7I4\V1RTu=
%5Y]FLYR?JKn@M7</FNH\\Yl(NoES5>@u\>r7d5?u+c/IpM'RYOI1XIRO":jZL_9%,$,Hghls>t;^dgZtnU+=WP>'CGTMdl(s&b+4
%9[ob4[S..#721l.n5JQh&Q:DRB/&nJRqn%IZ<pMl$jI&A&AWQD(9&me-nJB_JXWY`k<,Jp*'oPZKXhi+iC)0M/-n(-UeujQ8Yju$
%3](91Kaen7Z:;mT`@o=`RtW[a+"DSrGnrN;'B6i7+G)D3%OugAR7KDG5Q[tjoY_:pi_dNYf3/DV,qJpU\;'TSPG[M2M"Gu^jruTQ
%jog45--a4K6RiMoAOV2:;krEkplYYUY#W_qIp=A2WnN\HaO"Kfb[)E,@:ZUt0nO*^%#mHe@6uYjg=;3n(`\=0p2u@$U-j#>dD,lR
%d^fg<*SgZt2<B*O&\1n-J/CqtJH^K&;_ck9Ea?rX#/lPO7MfGteNjp.i*&lE<_8jaiS7g6Iogi&TY+=A/><CiQ`V$aX5f/k'GA"o
%LmhKc.hK5=lh\knYS6^(5Z8g?LLc"agIF),Q7h3K>\795KbU5Ub!MTO9_44kgq+AY<(*g/p!a<$,)^tpVIbZ9h(&WPdDO[\[2j\]
%0YQ4gUb7R]S]);J,HiDc;-Ii1!g-/n"cXoQkMq6b!08<Qk:^ICa;2=.ff3,3Uj5333)#-C^.*CI\K7d[*cZ/"BAt<K;rd)jT*>bE
%E>ob>W/"^3m8-t>N0G'.ScKO&LL+b+f,:0?eo8!_12p4Y'"'V`<2#,2Ztlq):i[X6WI0c[oY)3/n'oh6k0[ubgmiF-'_[a1=V0]b
%:KRVPNJ]MOlN!p+.T4JC5[:6G$gIcd4G0U"fGgDM0dICpKs>;:%g-2URO'[cQ&!br&8e4K!5[Yt(USH]&Necc;A;RfJ;h!Im$tjC
%Jj,9qOQ@-`,ZP5nE@OF-faLDW/$Cs&aTIB3nO21)[sa`*2(!*,*s'/HZQkl>#bm/8''_pon\ESqq93K/[T@Ru%1IV\">LGh>bhik
%LM-\E+Y?WGL1@qm()^WC>Q\!Yd5Y&q4%CufK<dC=<0<bPL$CPCE.FSeFbFJ%]Q_[aU^0+V-,tUTPT-B`eCf5s;=[L!\&Lu25S:4s
%A;#bp[:SJn^et3c(2kGRA(J<u%<`LbKPiRZ+S#qPSK!<D`%!g]2-[$u-:._tQ!i*Em4>W<)kYt)Uk27Q)EFH.j-YT9Tt=!nZuBsi
%_`:(SLNsc4N%F0Fo8K?)PAJ2>,1Y@\JCQNP-G_NEDC_93'VT0u77]"bKduL5,Hj,g-ttHX"@r!?b&W;YR*_V$&ohPB2HqN6Q.JcG
%%ZjWe`@b$heq*A;6&Na!p199g,V[dp";/>6A7h(4#VF6B^nQaNbR">JhHphm3XEg%$?"+_a`:DE0h(GgmOmLRh!D;?c[];jE<.Ta
%14[HH$W6.Dj@k66g9H*Hb=%0c;n</,a,nqNjWa#R!2?JdhA76T3E7%5Tpa7lkXok[09F\/HLU8&`.^PQW>Et^[aI$XGbM]BnO8K4
%jCYff&(boep:7i)30$@N>o5#o]K;$#@a@ph*EP&=>g(oR7rV;REITC%Sq8:I`&Wtcbd>i6E'k;.AC!d%QTRHP(/fhBla/On#]?Ye
%EF391+L8J_Y'Lok-)$K6ADiNrSUUZ5p#k@tCfVKq(=Rf)gF>e>h)*TTC44YM(ITUrn3^\5`JdO)#Sr9eX<XB87]3!q=e;rX$Rc'8
%3j[LZV6MSmN4Wda@0Jr_HYuu`OZ_9e%k]1QK$g[NKdO;IPS@X;$81YqDY'5>G0:be8Vf*m$iH(N4_'6Z:pdD+&Mtn=.3'3AYeSY(
%$d&g>h"+4G*Xs?V("E';KLb.<XRX:mU^3N,(t'`m.-G$Cg1>go^"9Y-5r<b(MNSsJqoG-J'PP^kEhGuC?&fW,LICpM3lESF#TY'F
%d`$%.)W2%;7P\ZjHF`gJCoN;#)VMD*,^H.B&>;^-gR:#+NQ;cO[<6a1:W-PFEg^6F)Ts?Z=Se#fhkH'o1cV_->YHB92];S,*dCN#
%U9*^OCH5Hg7STT?.g[=J4)>[2`(m>'QWYhD**1^N(ct@=M0r-Tm.K-B&=N`Y&EBd_nkWf.TkMU\J&"I9<9.1U&UUGAia=IQh5UMl
%)RZLl&7hYB*O:G9SP#c_3Y(+MBr\NG?JSL'C9;B13tEc,n+ehV*S4214BS/PnFpbc-.WVO_3i;SD2CN2+EYKIF.,(EZMN]+;.kGq
%PW(X=]+6>b`&cS76q$F<f,PGIKZLZLfY2N,&rp&K8^S/n_m?A`o*Z*FMJaLC_:&QQ]1W&b3fDFH]GHCfc\V$7@3,ZNC*lA+5Qi\n
%f%P<&krb.XYiLm?7PtcHoQsk'DB;`p*m-=eo?[t;%rjM%:bZBL<Y=2o:l1]ul:D@iN2.2,V"nYG2$'aXZ3f6PPDn/!SY>?/8-`X^
%f[5"AZs(7QH0KI,4r?n>%W*\[8<8n?-<4X-O9SgX1?G/N7'EA#jtT<kU%EVNe=pNab0e%$&=k`%W>-dA/#<Y=X)!i/N2G?tdE?N-
%^Q\C42L$7e22<QRp:;J+rlf^@ki%Gj:W4am1Oqqr_;^SbfPj.#B-O/(8>@L"!^t_h092>M=n9d!VMH7(+?C)8amHr$k[=?ipdZjX
%DLT\C!YIgu[QiJsa=*r.+'I\<6>rGh5m!hl`L)I6%SVp&.B1?,7!,bh.;n>c,SbR<CO-T>k$3ZdbcX39W"prhKM<6VO^?;[fWc6K
%)VJO:7+tPX%'C1r,6E)<-/<d:#kdBuXLL7&H9UHl7Gs^h]T'aBOrm3Ob?c<+iIMq)*@@elgi%XhK[hij"M1l^1K=!:MS_LIj]Zk;
%R"lBLpUXIjjgkf96*hA`l:)KN[bSO.;]-g?gGK8+!f6E?+ijO07/Sdr6[Cdmck*GUZ33CJnh`rc_K-eCHNk[t]t]RhG<iYDm802V
%DK;-k5JI?=;F/ZE7E?dij\k*R;K3'J\1$UUq1-U1Hu')FjpARYKQ%,\HD23&4*q6]99q<Zj<=0eLa$l7)bXYE[aJRhXMH`2b[L\a
%4?h3_kOPqS/@a<CbsGM6F]t5**LqCG&UMMH)L4A:d`;V!jT>_NNk<@ThiY<aQDCkPpcMG%Z='@0e;YqE^hWpg=VTgGp[-HHINDC?
%mb-&J$=5h3Yp%P</I+#s"X9+fBW57[3^0=]1B0XnZ6j(O12CmC)!Tk\#hXrH\RebhF4JKEMV)^i]T4cq+:Cf-Ms%b(eTu)rn#lLP
%Jk-U\KX0?DNZ,rlf[V."MmufYH4Iq.0fRlcHRqD,"807T10^5Yi4f`'HrZ(52VL]C!c.@0PB7?Zd"Sh\p),V_hF)N.;oB0(*a4PE
%Om.T*9Bj<eoE>YJUgtc9#)H)s"C*3umkGG+%eRbc<_$R;EE7F:6%f;[@k\i@:imegGt8NnY@T#=V*]"l!YLt;&ibsVfJ-+WhA8#I
%[?4RhSWn:%9e3p!r,o.`6f0)MO`=1$+X)n4Q5RJI[Rf_@/q,]8-(3IU,,MCr;6;?:cS*)<:b\M7=W`8Bl[:HNYt8:\$=is>j]1@T
%O&V&4>hJfA*mVDtMP$A3opl=%JK*J@;%-oT,1<)mIjbM=Fce`sj[iQ:&o+_iZ%ai"4V<haLWV/#U?Z<P.L_""9[D;E6&q=d'VV:l
%]TF0>PqcNA+;m6"DGpWQ7[<)Yn3GE<%6Ja)XNYI1W.ftJ<(P5L&N=$]':FUiTf_)ML'L'S,sT):)BaD'AFM=k)QQd@P7!*qTrZ"X
%&H)p1\7(eN-2!B@&\W()1(Pg#7jE6=61TR_4IDK&dJ!\SWD=sE"@RP"$4n@S1e*<V:"Ca,1p@mB`(/H_^b2jmCaVTelYegPBa's,
%N$6Zk@ZDSRHYtkse16E;K1PaXRfE;q9I)`oF]L?*ZF?fKASib(&<Pl-m+W`@/Sek-TsT*hdt2AYk?JA^HM%oes&J;oR9;oi3'q*/
%<!*kFokhk9A)Nmf`+M#:>Tb"O.B7JD``V?T!0J$<\nTd0=X4SuYJ&X4ZWWb^&@JJh]O=d]Aio3'W8@!i<?ag;1JsF6Z/OH"*^[2T
%S1Mljk=uh%R`@6m8$13/e2h3^o-b"WU4E\H294'X&ERUV*1556.K#e9pfT9OLH)!ggA!(<T$*k/"#l,e@Q.P94nb>a=K'Uk%Cq;S
%K(ruJi7f1t'KOq:!g,ue,*Ges7+F7;ZPI$+6t-l97V&bV**FWKGX9if3p2Q\A=ElPat91JdK0*phu[F_H!g6t'o37Z1)U-t,KgJ^
%"X4f4#OT;H%Ug]5#]GY8,&7Rq`4;PcFs.Q"M5>J`9G$<NdcW>Rm.:KBOl+<D+/BU6Q>0mZ9E^e.VB&p!h%h,bg*<p]3*rp-(3DsZ
%j9:o:"KtU*"bRg/oqJ6k,WZc@`*VU[RTgn`<*=5Ri%'4f4<p"pCkr,u1SW]g9-uNV]W/#Kh.ufZK[thGV;VTLKb>OrG.5Qo`/@#M
%KOmZsn@1Mu=S7n]h-')M+KBG%U[&bJ;Y3;SgiIiZ1'P^C&eMHO#9V9%MV(!r7i-fS^'rQ-&3B1jAKmb[eL8Qe@pqVjqP).$#gr,o
%`CV2,D0jeq:9PKb.<;fQj;Oej\PI56+XBlsi.K+.^2lu3ooGJIJRPBO_%"`'&"Nd^hWTTK'EhR^'L[40AIpk!l&Z^tA7b88S;f(N
%"<nq[j5Kg$KbU4"mEF\56.rJd0+^F5'`3[8&Z)(lUmu8&bTp='<fGMMj9C9>jt@=&)C7e&-nC1r7$T0-_F.NM*Y;<_PC(1X!>Eij
%=6N:=\mf7f+>/o/4t-sbFe^A,bN-#fT/SE=+N__p]kD,r!Q#fqCQj;;iLUkMW$'6XDs%[#gt^L.q#PaQkX:Drm(GZ[qBk`Q2EJJX
%6k."0@Q>Mup;.ar,;\k8]of0Y,+A;%Ahca@=k"MVr9u2TW\I'3di(Z29$XY"g7->!f6H#e=W"T%bG$<O15KZJ"V3KH,145o,5-1W
%aUhJ/B*@/!8U00bW6YVT2!Os)cGs[n>+643:io<tB\Sj?)G9-YJtqqSWf!0hKF,9K:Q$G<N%&56n#fMZhR#K%;ZmBele\s(TJ]%,
%*`aet6$r#S/N9SuFI`Z!Wb0<Qpq"bt4JW7rB6BVE%a0u.LHZ<U0GQ@!0n5A2:hVHhO6/9/]"LZb+]QCW30%_6H8(23Wgoa(WrpR5
%)PG\/':TU+0AD<L"X;%B0pIN].Z:f,>.TTn"]>97@j%4HQl]-$:?A_`5ghKERWc3<>[h9K=+J@_Y76;6>,K,.)i7N,"K.#c=Y01%
%+4ggeo1iucaSa,"e@G9<Rqs9BPZPp7V%,oT<R-*9U7O([HEE08.3[G8-_JUmMV-UV/1a`@!A^J$"lnmPa,'I'H+^dn=V3P=_D9TR
%ihCTiPU5R77>k32iBclA!?Csm%tZn[cOe4H9U'\M!E%=G(S[MN52]TSqS@#.*,2o>>pMIU$0"k5I)3iOV/S\BRoWSqQPP-e\QC_-
%%MUg2OqLZfRuqBO`lVUho9UB;oqDSKj_BZZ[;h[k'VVus&Y"uf>c#>L:ufPf]0hK37r2UpR,DOK=dPYMQ:I+f>]PrbO!!?MD%Nn*
%*Og$]KCM@bLdDlNfXu]NaoDj[+j>kG2't)=K`6;!:^/,NK1q"+:A7+PCKI@olo8tg-H"g=ebhT?L%,f'JX?Z.-rJDa>7Xeo'`DkB
%!YLGUn\I,.,]JXQm$0sj&3:kB/d0T?]3b5ji9;_RrXP[8r:<%JLn1>EjY?t?8u/aJFpg;XG4>ijd3.,$<`d!;X>]ArLZoAPP*@AB
%TL$Yo*@hcJ@uAp$p`hXO>ct06+,DtGZc&9/nViL\@0#Rj^+6,0AkbqfJZ?!XkG)WPI-*.Pm%2BX.aI4s^:U'L%Z'V!Nc"+bOY14"
%,'F`%/CQ,*n0X^*_F2Okep:*g)b\/`)_fedl\p\YFI'p4&F#[:#2m'g%#DPI,oDG[@a+`_`2.3.cr*D%[4Z($(PqQSdU$&mFIS^F
%4+4d\[/-%`V<:qb=dfXi"j8U%5Z7oJjX6#ijtT<kXj5=(==0?A*Wu[HNdr%62Q*.$R\9pS1H'?VQa>bc:^-#q:P`31cB_NT2l(IO
%$W5A*&389KQ&B/c59pQ4$U,%3A^S0^9+[EsV9ncD,[%Pr]I%'dHL??^M0u3Q2'A?h!o6A7<6l:Jqj]'q9Us'Y?q3?fqIBAq$O.Bn
%filn56ePRd-"<9sORSg/?r2EJ(1hXrM>T\^Eq#1s%'r;2<05#l+bBt76QDF+_8+NtdTSBm?b,61^-Ac``PZi6kNrGIG('lI7*CZf
%VCNjZ:<2"XY(3l!]._jP$.1M1PNds\p;((%XF"6YmLu=+YU7g6&ab4a.9ZDRADJV$b@"&A.jE[PHWRN@?-0ZRLmGlG9NOWh&,*_F
%h7K[ph5<Za?qmLK,$L!Ip@NXsVI85X6q^o^V^itF#J2QjG?;*<';B'B-IW\Am=X5]XEu"`\.lP.fpiAr1@14hQ4k#"i7ur'<N&Q6
%YUS8A$.1M1PNds\p;,UOll\eA9?Clcp9nK:-Uc.^:Sq>k<3V!r?Pce;/(qbQA-`-AF`5m,99,MIh@FT)6er.n/_6cZGG]dG"1s(<
%ACuuTXFS8VBP?,[0htFN4fu-bmi>1XR2I:1I2Q$0Fn\QsXj_EeaN,JA%*$=$'9U;c1nBIokPa$A.sRol[RpdqG7\3^<d":q#^Q!S
%iOAKfCePO4'6<Dkm$/qX8Wc[fF<SjMB-MXE.6$"_o^'4h6s3EZqf_X#5akF?d9gPYSDA@d;O"*k\_3"_1UOm5cBuS6VoCeJNUr-)
%_/ut#kBeL)GpM[[+.6_MSS4b\KH8san(:.)3;D0n/2c!'\"XZk/p>RsD9\LAKURK?6sirgaCp*.i_$n*2b_\gM!!rhGC&qcH-`5r
%:ZHjIdb("c1D)e.]ia@0>N@s[Bl$MmR>;pRITYZ[=QDXXBl$MmR>=i!\`)q5GBEI_b$?0Zfi"\'&O#(.YN67gV;)e0NNHnU'@?p=
%K153A?n.A+<8OB]E@)lhpLu[ZaKU8sYA7$,Q5*)Z'qC(:[\i:_6k=OgQ5)gA=hIDcFl&$f"XbLRpLu[ZaKU8sYA7%g/M">8<cB82
%fUAZn&O#(N0WZDD3MP^@U%7V0_[=[W$LdS.g':B3Rtu/8T[%O/"_UrRR7R4jBfZpT"5^_&"bUB+-6eGOBfZpT"5]eAma36QM+D,l
%Ra+=nJG3T:Ha_"D,1>,4VDAfIi4W7R?7^,hLbuQ;ktFJUGi()n5:giILbuQ;ktFK+mspp4o'WCa",6K;87?;*c:%;TGA!"!cm./T
%:IH+*drZq2#J:;"gehA)V;,as#Ku+#6lPOCF?5Om"]o'_UgSH!7rNY(.mt:[L3NTbVoH@->n<[DnknN)nG$(@1u>.pF<\U0g,oMc
%)a"8N)a"61OiE^'6a5^PnS[h-J-Z_,=+.-l]"s;t&8A5,Zfs<$oeUn4K#Q1M/=qTa87?;*c:%;TGDi@B=?I$KOiE^+e$.o4nS[kR
%"H*q%-IUPPp]m*I2;TqaJRJ!YbX<@R(B;15VoH?f57fAAs-ZDfbOVZ?o$hon]]t.2<Bh.2Cft*;9:d'jQ</LA4P49jN@i=XI*'jZ
%HaLH)UZF'k'.IbBe!Z"5n8<N0UG?UUgn%ZX][pd?NV.9LSS#QabAV/OYe94qj\7rQBl$r/oLkbon!5n\9Oj6j`k1?k58.bD:XePr
%L(uOk#>b[Q\m%C\!Zq?eLq]lW)I([4-DCaXF%bC*n+?,,,fl@q41k[=&"JG4hP]TpU5<k'OY2?p)-.;kDT`Q\M%mD\ktFJUG^"lW
%6j)!tmh:i'ehiqSkQ1.g,55K-qa@6b2,.^-HGFm7a?<\e4qVLF:",Md*q5aQEmGN3:IH+*drZq2#J:k2gin\3-R+PPBfZpT"5XQH
%g^f=u-R+PPBfZoic?nCVEmN#RpR+Q\CS&g>oRM.(OF&%rGZ<P5@<#m'NV@-JSS5]gbHG\Z#aQ3aQ5,pG1q':G9LKD9:R2_`9?5O0
%im,1ab6h!4)Xl-s3g!hS='sRTO=_tb/1W[lBl$MmR>;pR^0=WW+7#FRhKR-M:.-#hdr[X5@0K_>f;*@&<j6Cp'qC+;[\i:_6oseU
%)-.=IIFl,-6jd/iF=*^e]R,RlK152AOiGs/SVcP2n'N?RBT`0[Up2dOB-L6!s1eQfQX=P^^\X8qoM>+Wf?=f&q*5?!L`7:WlU/g3
%FMo#%KBN="_A;jO>nDHOGN9><4o`pPLAj9qXmD1kMPlYRpqbj9o0Ad*oYG38o%kH:rf63imGN`e%f194kGq%rO#?8`SUUNO]IUJ^
%be$>$?p3c'R>>J3a">)?SLsuO1EJQi!1=G7QG,=82^6)r-QE")"!\g8@mL.fRRje)7-r^P`rEDg78Tul/'bFT#hlq%o5o3Bb4(ch
%?e=Jq9fHk[4h4f,o=E5r.7An8?oUhuQAtcJ/]FPWFeX_:dh+8RVOs?0;k?[H(q#.Z,Y"&4kSUL!LDKF^(OF?T_j@XJ47KG:`2V41
%='kPH,!S=SWmgbE%p!8sDgbuKp"0.EWcGGE9#Hg[(Or"dkR*?46-Ea^I>=n(V+&bn-!MGlb@,_'m)f"e6s;*#NQ;WIVTlaMcV;5i
%51!GkMC3WaUI'Wg!4#+V3aIR=EFO4\%uJdfT_P*khEBTQ$lBcomu!Uk6kkJKU(XHS7?fZe.R02<@!nP?80<30IgQ?LX0G]EQ6e=?
%r\Rmt5k`bkh)iQJi!b2q0:Cc)(_5#aAPY)McD'52U9P<(H$B;!.6&oX3JgT@&l2udL^JGLE)\rld9'tkN*^n+WPt=(YE,F9)Xg9$
%J*(#[6B1Lj$4\>'g$*+nduU;jibhRc(."FVCmluA^AIJiVgD_$C<7Z5o9'tLY2KZ!=gjfkT;(kI%(](V3l2&A]/QIZa+8Y(2"G_g
%R9]fC)paB"`;SJuTTWV=YF:WU2D9kQ1s9'jc:"Jr3$g_*k$:OkS9\1lB"!rg9LM+%(A&@o39T2DU+n3RH!/2@1`F92?@CSA5FufJ
%GN4:CQelZ]$qKR,Z>DV>pFn!fNG)qIF8u_>l"?mM[&iRrN4Ek9X,BhH:cAt\@aq:(Lt3qgq/p$dV<Mbn:oXc_%oe?s[Zp#M6pHC"
%%$l^(7F:0C>G&n]:\VH''q@_>js;hMDSnJ[ZYVS_h%GLiLh=(h)qT$3IVoKf.AN?MW"kgs@ap3G#q=>kLpSb,Q*8HF/&d#pmg@I\
%Q8Y:jkU05#)aDrW?An+50Z_q[@cM8?RKnb^ek&JRUUD8rHHWmsj(oXYHM:Xhd@4^nZ4+lRSf5ktP\KS*:=7B]ZY:`>ZOiC:p0!7[
%d4?GP3YRXe!L2%-R<JgL@-1`<Rb:T91D0R"Ra&m\B!]S3]OL1?[,C.S<.ed]O;"u1Bi&Zd7@g=)L^a1<E0B'/]9];O%(^;QR@,ht
%I`"2BRHZU=\7H;I#%'/X;'VMTUePJGdPcU[Qo"?*\YCWOE008an!3s-7Ps_>9K*V6N15WP$8"iMZ.+r&'f3&lngpq']!o^`93S--
%?8'4q2k6[&bD'Qados401tnNYD<sJKh.DKlBM`fW'J0epD)r>m\cF>o"Uuhuk2##neYY,7r?N<')`3^(=C>F>oa+f@F>'X[,?_k`
%f(Cfb>%8CW\^tp/9SN6.=K=$-B'*?d9Hu=Zr]e/:Jd0I\/VaOQ4,_hP9@]mq&SYH@"4s)h[fc^gU7!Tk7sW5*O/1O=][gp83La)d
%H-B;/h2AkqD&+Rif?:C6N=g^&?99==f4o)uR@,htffq_$^BW=S$ZSNY`kL]spg#AX]npD<UGAB0A2l$H8:h2Z5>!)4N<eSV1jDsL
%ktFK0M/G+;&hJ&]YLr\&RN`((%Jan+Z?a-L>MF6jhCO$@^%SX3a[)\iR540_cU@i.cR@C;:d!ro8k1rYH;Fi'CX"9DUS!WggCmb#
%-dmOtZJ.k6YFns:.072JYQ)M3<84FsiX)eMSUqmReR&!=Hq=",VmFEc;9rZs5SREpUMiPTl"gA#mWik9A#j_W>4\m0[I3O.$R')m
%h"U):Z1PB7h#>j5ah.]_qC_T7P\keifTbW4,"$&':Y\V;i]c3ko.E>@@[B\<RiVg:I@+%lleV7Z>\oMZl=)QkfXtC'7;N;VX``4,
%n[R;u]k'Wl45Y49<]]WmUANe_5I:"d\IKk;2SShe)8>OZ\O=ufJ$O\*rDAWoTm$>G;-0Rl?oeru?e(5!0.?<.qV4/ClI1'DZf<nl
%>!MY'(F3?`&mE=m5L9_@U>idE1m9T\PrRQH/cf8WR)g@:qmj#[8?kZj%,8#f)_ngn>p)JWG2cp@-dSJ+R@)dPh6),q5PpgQcC7$'
%Ea9P8';[+(`$au+^)nY-ZfUtnO*rbk#p^Ps0Wb1@1ldgb5KAma)'gZbet7o5f74[lQ(=IQ;<-2t[C!\dLc0VJ?bS>D1%L;:4Bccf
%hR_%-"DArNpH3lNcK3pHbYCBr4*<VXRR>"Hd\>)c+W1qh45C,i7?O/'@sZsobl6AQ/+#nBP93jNG%=l#8VG4[n<u-;Fo/_9!ps5L
%f*_CE>DDS=4h^9*r\M5ue"5i8J[Q'epDmnBr>oAeD57E_MP't-msn,'-IK9b(Op7C#&&H*J@9V!r`X7c?>``jA"H__O+Z2f!.9+3
%kMGU#f_?;PV^)+6MgopS3tc6dCt!e+@!(U#^PO<u4U8F/0:iT.=s_sW4MH<=O.b;t>0)o/2KoeMHV\"8C>gWSH.om;]eY_XD7L[_
%-fa#+Pa:hSefjE3qOgf3gdZ\ZoQ<Qg8EUR^U$I/(9ghD,:)bX"LVlBa-ZDW@([4#]d\4MAphqE9//8Ts+#WF^8!h-4pD-:LZuiZ>
%8FHa0g;oEl>6%skJcOg:Nn3:DN`:.&h74JA03VF$T\Vp^%K_4JSb'cj52&Oab?6:.^JpooY^\G#7AZtWd__?,,7nUZTXp)!itBa?
%8DhcpU<C_9&cLP*>OpQBoII+%_MrGgKqoZ'+<odms":pKFNQ+o?cJVM(:.LPGe`'L3?SOlDH0PjEn>&kXtA@l>HNb.Fm"@rA,5lt
%W*9T,ChUF#I$3gL@\\,&?[3o#fq"2^FqTpo;^>#-PQ2.cMEf)"pJ0G[M;mgYBseVS:&(=RPpjDe,bT&>Au4`_/,:%9"U;s(2c0u!
%!lo]"<IqG:dTsu3C&pgGJnu&BeX3%NR]`HuLNXL$[tr/8F.b4'VARAcTF[`eFRDcJ`$ib3kZ,T0L*Rm>*r_Z=Rn<$c;Qr>a_lW6D
%3lP@UG3Mrho)`]i#`c7HO6i[obbf]oVf5^G0%0X8BC3T/GMjuH%`pf=_2O]R[,FPQ`9T7BM=cZuku+JD7igh`V`u9k1oP)N='Dh4
%TqWXn=?T5JMtVP0'e83BZtDq?,V1]d'-@V<=!B8Nr$#<9YeFBb(LaJob0d!%a6[,onP)]d%lm-(XbYVO>+($0L_l]dB<82\Cf`;f
%.!10k<D7n1pHUi,:'2gZ=XpUWh+OG2>[RTQK%?oikFVA`rYSEmQIJ!nWdC?skY^eqg^1>=Y<h(g<?`-R$9KCs6PW]l!=Mps8A`0-
%E2g8KjbkUQN'bj3><?6A*VVK="<kY$^sPXB4,MM8^NRp[UiX06(,U.)ZjKF&M:g?=i=MP:FA&>YE/@h9:.42Do_Z>SNq2[l.)FaQ
%^`Z=(;HGoFAC6r91ibMqIiFr-]J-$&5Z@q=%n0*d%qE5jl3/lbgMN/=19DO%C"(>_QCdMOZ6Ss<og7CK_q"icJf^!]2JtkN>O^58
%I!?]KB;f+WLTZb]?<Hg8+;G,-0CRTiLll,V--p<T[/E*-<Zm?fCAYENBKYrmIR:WV+[2k$!s]`R3W_4rH0RmoK\hjmcNa2bUIq:c
%cG=8QNdNGWU`7F]K<8L)p%`HgQJM)>F/Stdb'VRg--R9L\fEP3+gdF.M#2='NRnTCFF^#U(4Us)RdVb)r:EJl!1?FGG*m/217Ih(
%:7CWJ]!1DnckYR6p&^V"it*PsL:c=N-n!ZYU_R=&?_D8BbsF@4#2YQR*>F.mQiMAC1QkG-"3:GU6YCb1/3A/sP@[JSI+cT)A\5jd
%fpP]pNJqKOX^sn;_>+?VX_iFkh.Za[EOOUn,\d&UT]p.)k7I(<nFKk9[bu*,.'F9(jg^<Z5&B'\n!aDKlB1B%h&j:o8<j[H:<JKQ
%QAIekA;(21&)M234ES(dat(iT:ItAGPZ8##hNPH`M*="MjnT-7;`m+%hLRQ!EM4stfYDBt#ENH-r"&.+1.g1=@"*7IM]*XmlOCqL
%K#-\:bLN"XE*psi*!/'TN;L&Gc6Kf=Vc9RPHhmF/";cC6>TO!QO0Jtdk4_2_0(?P^DsYO;W_%S!!JNh+$sEP,%\o.!Bn(I#nX4gA
%NeTKSIaL$@1K!ms!RZ1n>aO7I"ms9EJQ+d<7E8sA+-D#/(iZ9>n=HAhcZE._f*%MeA\VMHi0i0^?kq;5=ab[_'XiG./#t[r!pY`I
%k6+Kb+jga]*>APAVZ\%.TeFdK)=sK/.uf3`!?"O7<@VMs^fM^%hN`nU"&JO<k=_4B!PA[ZG@[RlaI400q:opV*S;s^;`.&b'.#We
%`;sS#7">cD6Q=*_^i[UOQoReO1f<A[*XlIr$F?OAb=WT]g_r2KqL3/1"q:]H89^&siZsLPHG@3Q5Xa35*<f4\:md(<5X`7<:RU7b
%6MlSg._i^fKZhDZR`uYn:6lj(*^*ll6pr@hs/MgHk^(%05Z5W4-b^U8NUAO2&jVWo?.?dqW=%9ENj%%7XdSMR=p=$0HJ'rA2,l/A
%Ls<3[c=9@$--+c3!tjA]]u^@#GpP-VT:U(q.Um,4[\NEpf*r>>VpHB;?Lo$!Hs4E<5qLES&aS/uUVQUf5B`sPX,J*;$$QAFQ]WUC
%1sfD-9i<[FG$:uI8,0oik`=nt?6r%?RlD*P"r8cG>H+iZl!.c1"R)j.d3Z5^E@[1Egm^-BS^;Z!'6-Nb+D>/*aa8$Pd`FQ+"$8+O
%g7re;P48oAZg!.c3glH+Vifr#EU/0(jhYIXG^7Z-,ti=Bf5o0gYeA[\#k6s9/Y)UWOG,lD=dD0-hWaIS:2KWgf\A^c=ff9b7?aRn
%UHA.i_i"WbjUuI'*PfJkI2D-^EdCV,"F?Wd0r9eoXgS@S&@r,\*U+pE,tj5?W--`RI]M3631$uic9U#2G$8PARW$t9;7skec:IX\
%SRYPuOl)<F+od.3Q0<0q#U3u&Jr!ChOVogn[:d8jn$j'F14>'jkc!Vg,3([)ic9_B0krKI3P)g>@$5'Z=-_-#^61aF'O;ope=Sb-
%M\E\+i8"E*ANH1R=q#kLi6EkRNbXH=B]u9`)hCrtqsFH.9I<k*8=_Y7+VVu`(.?N/34&#C,F25OA^PSD`RI$fC$jm\(R\nh3n'mE
%2B!u61::gl*O(e`>D2lWqN@-G3!DaZ);4YX3nU=I.h:=3gh,Jk-/&Dl4]Xs)-6e$5Ni<Han[P061aD6S"Eri^N[+f&JLe6O0cg4#
%97r.<a]%5jh?\5[meo^,+?He%R!4'c8Xg)G//g@@HC!lUBlKNiq4F7X^u$J]E.uV(1qA:*4>kt_+8)@2?h#5)>DRS!0^eIMaI0LG
%Y.O#Qd(Goo)2m*&o_cF'j035IVP.@Ub\O1GdVj1>d<;@Y`LR*eA:Ms_`0KQ^5ZAp1ih-N8`24Nd#)J[Zk(Q8mLQd1hb*`"ugTX&3
%&nmG[RkG-WAk*Yt.N^EjBW(_-+*mf(HCg_BYL>FuX-_0<hI/f>024JE3uJ%c<Q0"PGQ?bRnpuY;8),=Q)OFuM_YPPKH:>Z7:ZAVb
%IM8=G;X4tC#]L1rkkuk&(QSESed@5-oW&O#*kVO3#u>'ZQc63k"L0o68Rsu#mb7L_6b8-Pq&X#i=IMc`$)b1_OhfAXTLWkqgU[-G
%+ui#Vn?.f"QaO(CV0Y@@lNqgT&m\<c9(mjq`8ginaubRsnU;j$,#mF`Cnj8$RV/m^$Jr/E-N`HdN&X^jf2]<@WUUJm))Mq.Sa^kH
%#om^>$8!t#oJ="J>&9]b`T]pYRWWYVQ!^j+M]o]Z4*iI1PDE0E)**CgT1Tgo=!b=K_rXV$'0QFAS1p]mNLO,V]J,F7Uon3aY3m_)
%A.XGW=LUp01eB!J[b]%XO6hlq.1fY_YV+\1Fdq=fNQn.nQma+5(SHOZ'9Pb)7D,YYqon*dK\1;GDt:-kR"K"+nL'mX99pL^8@Q+!
%:[SC/PmIqb(6<+Z4^rYHX@+sGR><Dec;_eSGS"19;\Vnl%nk:)8gG\iU>%%7)A-ZhqSf#L*Q2A+i-/*9Z\:A1bE3hrTtl<_;5R-^
%j&iJY-Y/5h<8><9%+BJ=-D#[4SZJ(^R]&>_>S2NVGs.2KAKnFY>ji#ueblZ[-"A4UmZ*m%AG$L<*bA8\,:7R^\Af:hj7G(r?r7M5
%K\KpFlbTukT(CHVa6aK,lOC'GSd_Z88XXeNTm2UY%!>[/2E::r:'l_](-s:_OJHRodD_:j-mVV+aq8NN@oPh`p&&_lh4T?!Xa?fT
%NC.C"Q&<26adR#4ed8Bq4(Wpi)4nhSc;IR6*20$Lld#LhdfC/&hI*e?V29PPUPY]@>gN4ZS06:3@W6DDN?eK_o4;L,FhCADhg%kT
%)WtXKia1MeDpr*Vn#.J9<U?dV8+4CA-3Y"OLTAWX0nAIQm%8BCJ@UM#kO;,\#Q%fmd/pU*]H<q5lTQF83d89nZfJ+U:6m0-aE=6[
%:pn@m2Y.DO')i+PpsB5=jSJojIcQ/l([\0MGX'RLiQPUd2i)WTGFTf'T%H]%)XCotO]??<M*T!SBOT9C[*1SsTn?'I\0!sM`i(#>
%7,-r9N$<cfi<k[$3H=!heS?c>&0[`=qRb?A2;ZHRa*Y"%*fqLP5KF_1pOLV@*"2uSFe1:?r92S&4acVHgV)K4GNcIJq*E[G&Y2Nc
%Ph>dbTm4EA/jk"/9(GfN7!-Ac%18;MKL(cFQaO@$n0XgT5E-6L]KL/qK.?`S"9FX[F7#t73^]kF2,!:+o]L=PKhBMsU65Ne&CDLn
%H6q\8-sQ;mGfR/2hs(pei;9`4j.'\/a3R%lq*?Z&L)2gTl^89SYPAZMVWftG?"l81WF5W%#ia-bpZ37H85C(;>]7\[]YjE</GjfP
%0HOoR,8*H&^Ve^%<uenA&U8q.fMXn(\Ops/FFo-TWgq[4j2i*W0;7nUc-duH/9s:%LKbG.eMC;>OcTjh]t?B-db$t1)Mh!FDsN\j
%J/e.mWjOO<GZDfO`":<>)b;,khg?l>J[aX;0oiu*,6&n)8KRT[\]:5,r\Y%W,SE'$KQOsS-fdie2)KNl_Jl![:J"'cR]h'K&/T&'
%JgJ"'k^sEp%8:jA5$]X^*`S[4*B$Z.-<rsK_f@f"S5Zs=c'7=62u.!i'nkV3*p@/4%7WVmTaEqS6lo,(OTCH(nEK\Rl;2kj&0d(0
%Q8\f<11i?pH"suZ)9I7PH8k[`pHG8N<a-=P`nFeCG^L+mmkQLlTf+rLBstOnofk5&j?'_j81MFE45CuP7-4TBJWa6u"=*:>5L@pb
%^BF-bH:+'5PP.-p4D;j5;f=7=-7S^7D]A^&Tdk:'Dj0of"Et$;1`UEV,-n%$Bsj12C)JQf9U'8a["f6S+;Kk<dge&Arp9jJoIYAB
%d4q<'`C302pFaZ\&FHu%AMR[Z%/eB]@@e)UU,";T+B^2&4L;mmAb8nQ7<".,%hCEj(dk%>5pfrs,m.H?c>5#$H<,d:O=umXGg#IK
%F\K/.G/qVWWY$8]ibDq(iT[f@<P7DWX&bsGd.gC@laA@JGZ)d@e6ks<knT4Z)>-n)X8`!.S3A'aVgGI#DJS)0A[LNH+p.4'[lrDE
%3V#?I784+FO`M`*mh*sUSh=+^pD1ar,#(hXZ4SE-D)u>*\qrtI%b1W[DmHMX)0WhaV!s$Cn<3=I)amMGK*Vfu."i9%#),+#JamPb
%Hm2JLKRBJi0P;SH\muDh7&3O9V'>.lat=7WP"qhCKIX8*No3#H>*P1%1T9pdd$)[D?ma9#c9P:kL);DTAs.h/E!sGGVcFa,+YoSf
%Q%D4R!qbgP+r8+=73orp@@pVEm?K8PAk/jh#?dS<.;5]QbNTpL?=@4'oY&jE]4k%b[8s/elU2"[S4V(epLu[QNV]qf-M!V'`]JNf
%Y@'JR7GG$BklTW,#SrU5gXFN!Dirk2F[".p-blJie69sXMTJ_.2\M7D?W'TEX[N'PEVDu'ZfU%L!#d-+F>T=1>&KdcUFT'>EE)'6
%"`(ZL,i_;8Tal/qaK\`W>"UoF#5K(C1q4/A&1O.:+JO/Lg891NPK;9YY3`\"Li7UD"64SUq7Ka*>?(_4]PcR7YN.q_d"Tis%#HG7
%,(bhjR6VleE2D]V'E=Mgiip!cKOuj*V^s^VOd\FR't1`hfXmS")s7jK.H)'<=87StUmPc>geD:4hja_;?8L"OjN3p-;tHebk,`+=
%kTA6+Vu1.3+_,EdPUR'270G]dC+7cU>c);?b?pm*\%*3*%PL$mlNX!0^gSK(>*>,m<PCI>P`p5/L5^mJ2'!IA7pTNQ"I3XoE^qP[
%X_\:28lhI?;rN4_I2^V"G`OE,0I4D,.Jua3*D<l=@K7)nN7D]B<<9Ds`u"JTT>4!.ElZFI%NEPCLX=RN0gR@N`=R+T"lM&/P&BZ*
%%hA!Xf73k1%,&E>L!1LaCOu)">gsC_1BJ4kDR\YZa5/=dE![=4ac8&sSa@8hN_$r.KgpAKe[,e(?BMrKlSiN'f;3Aq=f([[#Zlc!
%^^Wu%LJ6H+7ZI%7>R8E5654Y9DnqJ^i@[CF19I(fUb5N?D)l81ieL4P/%U2F6U9W_1"O2[!)\gA-J57&:QX^3#\nm'XS,/q21=3G
%:u]XP&h6J_8(u#anoOjeVmnh,nT+)OhiUXEa[5.l0-:'7?FU$+h$qBM(]tG2728@457jqVUDdC0Md*Zk!n`VNIc$NcRDSpl,@H]n
%="f@>2l+548a-eq'3>:ZH3mE`h/ha0PN"j/^N8uY&P=AC*)eH(!n"a>/mp$#YD)lAb-(C_ffXrefWi,J,&ZJd%cL2#`oXq$0FeDd
%:Y[<9J5TW5&4Bf?MMX=<-rQ>@b^$/#";-5'fB,Pn`)p3O,L@a#ekr\D#;4P*)B2O7]'8"?H8$./];ai]>_(sNIeq]e3SF.!<:1-k
%BsrHUS4uVl1qZUS0.'W6[&NWM:r7(L"h.Ks>O'[3Q0u)Lq:$4mJuHlj7hqG>2=noofL:4"`eu6O-"<-O9`.*dF$UgPc-KkT(6E90
%S!o+%A:P^TJ/Hqt&:1.-a<aeeda$GOit,)C=M:Gs.g#HikP[=`'@qd:28Xl-5s#tDV1mqjP-%agLg(`dM*l/LZV5q;iTnm0%klQe
%h'O>/h=h4J2Gahr3emn%_h8k9_]H(UR$dA>Cre(AN#!)\M[_VbJj<g2ZEYS4=KlpA-p9K$*t*+N"bOgMARn1t69==q8^%*`_,^b;
%7Kim^mB/Xu'%`JnloUI[jBTiZ(D+E,Fcb2E%6&^:A`8c_%F.?DTG<8nh'Ea%BlLj5"psOanKI=kGCbU6HnH".-AfpG&UqZn!iEri
%R4.]ao]qkCf=M/#`>dPdpfd.-;tF`!\LVm\qO7X56"=5uFnJe2@5f<A;`n!gK!rL/[:?l1WOXjIM!OKl%/Y0>3O-Lt1r_Yn<e)c$
%j+MaVcaEIpSem4*:tGdne3fh"<-^-l$DQdr$83_UY!W66Xq09n;^9*TZsBqMk1_3HAtXo.JC8hQMsF5(35FhCWLBgh)f?sj/^u8)
%G2@cVF;:j.BM8=?dn/'NmP<1O9Zoj&OWa=Om9$goH:7i81?nu!(3T:86$i5[69u<iM(;muQ";#1n5('S@Y_R*4Dbk>k=>d5RMnT0
%TCIb$XLrYq=Lt-6)(Kl)]k4!e^N1r/FgrLN"O#f\?2`"(9rMT"M81sPK23/`'%&AR1tqWb4Z>Bo2g/X(eC&JKSTegCJI"ek#7(DL
%nu$OZYpnPgdilK?lhRZmG_q1#Klhhg4,0rt[S^*'1qnO&kH@cYIL/ONa7i1.%<;9-YRC/L-Y7b/hr[;:b8aY(oKXds5nsW11aQ,7
%R.5^'j`^G`/:_MTdLAl$U$PC9>%8heUEH`)H$0iFPJ^tp/l12(BLu9EMA6AHZQZmu)(#]]TF)L[aO3sI[:CDB4d6g4[+#IF6Yr8!
%F#5'D2(h-2N's"PQbe==1@jX4`_!koHPcBr;;0a?Kq.U8,K<\J6#SX&cG_#$*]M[/kQWTs<%GLLnsm8M[(rgW"%6^YrLLV42'#@9
%+;ZQUPsTSa4NJL]OuL,9m,:kY-;Q(&CCrC#q7bDgF:jAn!l=t+M4W@u90G-?4Ki1\Okq(^PZrtJ/,UPn#"5G4nI?i9%?B9k:Q9S2
%]0t<qQR@PPYnKN5Z[)8E["d9t*m*B(X,1ul*ZB#]H+GESH%s24-PF&]/g<@PGPN+pdGC`i'o's2A5>Cg<aXkk(IuQ"CG.ZoPbD3"
%rV`Xa:o'*A1XD$26e[eo]N:iQe%pf]J2<s%-PosX3DkKe0'q?dH,qNfG7?1NL>")=_$qSf-!V1)>baIe+h3hh4tP90&O./A!>GWs
%NsH,ZfW$!;,)YF816N7Y[$\*Z;X3:PHrm*$h=#C=d<)q&HNk'5L<FGRFn6P%n8ZL?[h'2NHS?5N.\MUg\:Y@N.>o*beuo`2Bc1E#
%W"U$i(+>%'dfB(J(Bd-NhHtto9GDffR3Kk'I\L3qUaPSQ?e;toq?r9rBReCk8\*>a3ZOf<LjL/`=/R.j(Ok0C"%M'lo<q@g="iS-
%^@%Z*%o/2'oalq(9Q`jDBCAk^jk3[q56"@kAKfFm.>3)d%Db!bjTci*mJ!'I`d<C7/mf@6.o%s+$tl7h]TZWp1>"XBb)!j0$K4J,
%huFmM:Y;m$(X_3R9+;%HC#FEY;rc]K+tlmu!B37W2*]N9,lq-.j[R9eU%H<Xpq3bgVufkm50Qej0T5@s!);T\miYnUeG+d@-]La-
%:?FN#nnj,UHk6`F_SIoRFXOQFm`&M'K+WgK/0tkL\kaXkJGRnA,ATi;kW7@oisN1;n5<NC5;>nK?D$cii":fH_F.D-KKE64>QFL"
%4,M"p^bStBjci["75Zrm6t??=A1@kULe'W04*7Uqo6NpgF?D(An"%#$4*4Fb8U(O_^)#^V>r'p>hGA5E1d6/9'tX#&^)e^;I7-r0
%ak/.k=#kh_0_gpJbZes,b[;X[&1fNiPk_Url!tfW$7--F[gP+TI!PojMRaBaOB":DMa.rgn8L22!;a`(?*YB)Hul7Cm_f2C)83/U
%F&tt@-H-NY1@2s;C82"^lpKV8f8n/4bNBLOP(JN7J7#Mo3_P>VQ17h>B`jA]LUoV`E#D;IUTR<%0o'efc?k8)\+TCrCRuI5W=Of*
%KF$1C[m<l6#@D,dojr[lRi`II9C`ZbIg>m+=jdDH/?q0#FJQ_\ZXfo;S@LQG67>*b#&mKnj8B\$/%:P?:?BTQ9q)WdQHQA_@Iarl
%"e.-&g]Ef&(AhVXg2dmQ$aV/:=30m&P>N&+Q(_B6M7WQo6t@.)H#KC5o=5!mV!,iB$Tf6q=S0BV@Ic4e8h(>5&(Upl=B%M9BKno-
%!t/P9CuUOAO9m7q_D1&pYBXfp".)\hhr,MA&T.g8*I"SMX'rBS0S2C7cN)/Sq"ChON-(YH*=@k-JF)fre/HY,'R(-PkGe">(h'BI
%UHj!IO_=2jB`^%Q:(U8LRM?l,j+OEpG68.%ZQTl5,$@^[7$C[DXI/IP@[r3`\/^@(J'%)8?^upu2a!8![c,',P!B]1L)0o^LuJJ?
%VL.S[NV?%uK#l[[aqL'CIZ41'5c5V7r8a]r4a7mck^d;e3B?gjkBS\*\ec5TD7;N^K"rWOodB2s_L3T9*_PXjdT'D"IbaY1c+&fU
%;s`Kq8TPLSg+H3Z4^=eD!TSjH99\;qlWe#>d9,bDrjG`0*Z.\KXWgsmJHtMfg)pL4Eun)3RnAk2D,(U@Jc1V?K4p0+8f<GHCiI-P
%!8_c7:8\]2jJhZUk\OOlg/S\c$17P!+<".d;YOfn1[Ftg'l$WAR#nr8-dMiJ\A-hW2,.q<VjoSu1Lgo]_Jg'X(PSG+)i&f9)jgX_
%A_/0ff5*UM(oO\GnE?>01$en$$m5:A5it5R7X=2u*&Yabi6afgfFKG'^`WkG9IkAK>bt^iQ[#%Q)*Wbj*G+aa'++"t:/s=Z_p51=
%eI82B2Y2cRSsQ&kWEO<2ebCt5PnHq81,tVmIu=V'pO8PRlot:B4T^&-q_g)':CLku)G/Rtn=:]k7#"''5-9?m6C9iTRRA!1B5>!J
%DQ[,WXG>2F"8l00rU93?./M5ZhHt1CCeMSJH7]`VJRd=.?="SNq=X[ZEMsSFJbH.#o(7Gb=_b%%#pE5;3?p6b@D,_dTMU_4rEf(4
%BJ@)&Ac<-.l?qDq$Rl-4S3^u5\oeF7!ms25H,WZkIEZ7F\g%RC"_Jc>'CZDfR=d,$p2@;?JLDFNhi+Y[:q7c=HQ'F2\2S+)&NN+-
%pOGB;AuW%qI_&;0l,S<P#M'nn1IR9[7KW"J#8j>E]4j;]Vp:acG*)6=7qA`6-h00%_=1M66at:e52e\TkRIi1GB<_Q1=*qs8?SHf
%2aHG3U^f2GF,uHi]sER_g32/2U.mDAqYY;k,h_XQ0\APoP.V!kWb9griRe3N1qo$0J9s>s^D=X!,(_3'N*V1Xpi@%;U2n:^/RpIf
%npbqE8aG;KH$ODGqfj!hI;hE'kRP.0#k]3](l2"<f6ndM'T%Q4kVJ]!#Fm^:K\&ar:)3o^A?]ZR%C2d[=s6_n(q)ZbJBU]NHBc(M
%!1KRBcfSD_BkDpn/(a<uJq5r5(&T5IIG_YI3`gX+=8k8<,FUlbYt-7i!LK_Qf6GD8@i_L9dbZrCi-.C^hCI")4]`0.$2OlDd`c9K
%5)?X(BMTn/_hWUm?[+_"?LH2:P,H;]Rc`GJcq(1;775\`N'.4o&!Voh"rTYO'ogY2Le,,s0_mt%cV!.]3KW=Tj3KpPVt!I4,9E?r
%.2KQK1c">g>2C_"%JR4d8.Ur4%1-T`/D:5"8*Md23>WEE=BBqXdVoF>Q8MHIY97GJ340\I#eX+;nFV0%b'2S_cX(F`m7Nl`n6Vcb
%2GTaUpA(;nGkN6D2%JKT2,B3UcRgl?*Q`-bkSON2Hrj)"l"O../d_`$K`2F<OX.LTM_ocp1\1[j"Dl9tm`%T`)X&VCNHL#tYBVlY
%\qru-I]l.D(BpVNNWI=h8&C2Uo!TN`6N(F<FI+mlNlV7":heNH:K_G6_ntUI+>DFOj?$K$%Wl<o?-kFZoQ\A@&uH=1+nsXZ<<c@g
%"*(.BOBZdJEfP<L?7(FKa/]KG<kScXb:LR0$r1lTEEXc-j1:E9goG6;4Nh<>&.lt;(FDI7V_kM7mTLm+Y\9"d%rM\Va3lLo<d;hO
%&o&J3[p&iZhm[,uMr6d&)j!SR*4#GK.I)@IaQ)D@dLh4=l7%h\OO8#<`IH*-)A"'SQ,]s;>7aNO0ao]DaOBO)WfW/:qRj/R=:.D^
%+ASo[e-+f1da:qqD--+pC3K>[JeY$&aLd=n$q*hmZ%Zs?1PfRW_T8\B=!7][i!>NCEhFj:s,K_e8AI"Q\n7qH%ZIMWk4o+-:$>&Y
%4`_n6!dWYL@XE@tD;8kk'OCgSGA(ZEfeW,`mehHs\]D3'CPEbf\@VFh3EK/XmrGr49&kh[:;U+EbZ#j^gbfTF.afC8`2&AUG'>d>
%mY'5j#]I6a5BB]B:_*aS\cNggV.[L_*^CI>52ScBjgVdaW-%Mr9*mF@+g\6`!kO,GP)?qEN3SJE..'VJ$&]O5+oi9N"nETDI`:sr
%(l<"K2.#iqmnTCpk&oUig1&BR@8t,p1l&?6A48`qQRL".!9--5m:.>S!E>d7hi*i.(RZdYPN.CTLMa!b_UiXQ&#!0N.n`Q5d$skM
%[+4n0.0Toc-DeLh-S0jQCN8TQ/-=PT[TE\4cBs^+EMimn>Ndeac^")MN+k/:>\u<.R4S,I>iSO/C.Ic5;[=H&@k\CrAeSBrc!sfC
%k'J0Nn)h7Hgf5,tF_Kp9+"FfOBO(/YG]uD!+;GL@WQM'g&aqEA[1"W9'2:/_5mMU25KCpd!Pkk,RS3i'=r+Mt/O[DBSi8Y*^'Bp0
%o@/"TOrd:.^X`;o\<pgsj*N@olb]20C^P-dL)6es+;25L^(K>OEP4^6U=e9uh7hmJnm8Le;+nlVo4$u/G\m4Jf*)@/A\`2YO^(s<
%:.4;AYk,qfW5r:-+S'$=oYCj/G6K8[nBcrOR4*k*=XNE]Ah7u80k8I8A<NpQdS^'>:j\h1#'GRO0"fX,Z_A)8-XqaMkLd*0>6f;e
%F`/_d)<68ePn'@4+`a[\]o,aud/t[J=_b$NC`(R&#IZcFs4YBL]b7%3jP?L1l?"MD7r!h#hZ;,(_bNNh&8?cmA`YMT't06ro@/"\
%_d4J_(g3))R-2-q3LM^a_$V+EE.V3)Mf7i`3OY$pqYQ9$!@31&^[kur(5S"0U07*;GXle>80!9T)g>`M]N6:&e6S1_$oZW8YerdS
%Q#N"'lk^RFKs'Fe%8kS35E5-YV[W)?!C/]UHQ(ZfS5rM\`e46YLZZpAB.D&5PnI>F2.?"n&27^c&<)r,I=2M4aT4XfC'E]N3PE4>
%NNa`mSZic@jm`ua<HAKp]b1A;Lc5nc-6"Qr12o/NVkH6t%K4_W'i7O_C#?ZfJm[=06l?A%UD`H=Qa\"L_7o%;9t[?McM6!!&lO@Z
%]5=#Nc>in5e);hefRlX-1D:gu$!GLQZ2$Dac9Y3"Sh'G,Q7$C3D5[l6B:OcA%C'UKlSQD+nd!UrhjfMGW#o]i`\aB*)Y#inSkMN_
%5&^\Yq>S>?ZtY3[1kC-/[j^j^6LA:`]jiW"L$5kiSgKOq$f!/*lt+*&ZXImCcom@JTa"Ar(iLM+JdQr+@KlN`6A:jn7npU6M&+7H
%LEX846n"Fe\!IOUe:]nu5VP?p-_H#sSqrb,/4_RsU]EC&!5Q^hY7NEafZ^$R22I!?6Nbi3&M_[d]NCsaaA<"`I/ht-#[bqW3nL<>
%jTqh-d]Hs\q_Z*C12t#1UQ]["/BF8,Le]2Ik6a*=mE6EjP8TuRR7!K>P]0hL,H]U^76\.GKTWlU4u4>F)HtVn;S#=ZAP'$i3a%[O
%,RktFLC*Ct!$$;OGs97^Bi(C:A.g-,M%)&UK"GJYE%te;TE+Cp:sOS36i02+Urj=?Kn[6m2u*_UaqERL%$\&N>^?3UJ2a_8V&3#Z
%5X_Ab[.2q"25%6H,(Q&2;G;ls#4**@_?pD+rJM[j`.Ucm5SGm1P&R8s$<)X/ohFX$7[t8.@a)PtM3O,:5Um/eMZkitKL0qk@.FmT
%PU2'@%16YMW:KXn%:EX86<U(-0Z_A-j<hrQas:3"RZUDTQmuljQ4m*U3I&RN-t7c/0`d0!TLkFT+(hSc'C*XO^P#%`JcW+YMAT_d
%N.<)VBTa$*j;E3_#q'0`!AVEIfRQOo&0Eg3&0pD[!ka2_ZiC+]UPW*G*>g6$X"%R<OV,s]#Ua'_-<VL^E-_6dhr=Tm)(<CQ\7#H]
%0L0M0lRUa&B&/8N@_b;bU8k`+&0L9GLEZ^C(5`,mjm@s,jMMHD@K?3X_M&hW7o$RUk9(igJI>V4I$ikZQG=_`?OSV1G/01cb_Hc_
%_uMo?!erfBk@d[/(75UG@#,,8A;T8R_?)H$MCd.H:?[]#L`%:bhH0hkR%ZI)+<Dp&`cIZ.'7.QLQsmkgY^gsLYqV-8)Ff+7-.9g?
%^%!'rj!2ni9>CrloYqN^j2A3INh!A-hCnqA(niks+<Do'`,ccONrVd'@3EdE&kcnq'2[[K%)bX9-'g4rAjD2!1r\2c"+%kA-t0oB
%0Hs,VYUNTa%n<W+,O32[^Z%YGG`Dmr&O_I%%YP]s@Ymg!U+&4F5kkVR_@cseN2EhtAN8'OSqA/5"AWBZL9O!C=Mce_E!fB<&3^/n
%YX1W0_^V[+),?]PkNE's:4NKP_18Fk_dupN*13E4/=6f<n:nD*CErpB,_5tf^kbRd"ug4W"AaRO4p4H]64tt>'!/;H)C3-T+Ft%H
%'!-Tdm#V>XCkII5n.\L1N_$Ck&[3JmXKW.;RJkUGpTr*#:dK$"`A\L=>H?d9<VE;1rFOsf=_@]H3rT4mp<2H?F.*!4@/hdKIU4#o
%OYZfFEP/j+IT`n)QJ"JUOT.kNrR1gnF.*!4@/hdcIpO8tO])'fJ\8PCITa&8b13+!R=D/=I8sfq03;N1]shbLV`!TYW`EIAR@C8-
%=(Uj&>5`/tq+%I8=%296C@tT[qcU'#]JBDd<]ANq)lqKuFmk(UEH<;7WMFrF*.O8^5:rE)8-S^mE8"QK]rL1+c<#_KjpGoljg:ug
%gJH"?<a\.qM*=S::"@dk3pfqXZa"E%=Fk=fjYg(l[hA&*L!q+n_-RjOgInbP`S>*Gn^F5jO&QoKWe.@l`N(3EZb#pW:%1ZQMjH<;
%k3Cr;Saoohr4FBO,LscVRUC2ZnZkpcX=es.'E"!Xiakig\[m#gVu1-UpO+t:%NA'&QaOKgWaJ2:Z)L?@=mu9#W<rPpFn)acfNMRn
%/5q#(e-(8s\p.?kCp#Bseg\@:C4\ZJ?+d6F2HL\Jl]g9X7DU(E/mahIgT$0u7ETP'Rc'5@(GBQUc.0e61?H"!j-c.r;4Ud>L[+HS
%h^]/@//0fNTe&V.jOr!+*=@&Y-3P_`FQI1Yd=JG&iR-`,Fl-,Ba\cOf8J4q=iX(Y*fU>aR=!Ba1n,DBe6A4"1om*>C@tf^o!bapj
%K.@a8Bu;T]8i0TFXEeQn"'8a;EA/6c<`e.pH_hm^HDe0g@h[&<m2@rf,b#EVmI^ptcI!SWm,jPbTceB>Sm&@?EkWcJj:IWR6biHU
%nsc)+__!6_X+2D:f-i'<h6J=b,.)P*/ZQA0L40];/7s'^P6*!S@llP@RF)t>>dpokqcEkd'dhuI,9NmG]/VonF@UG&h>=BCHFX\b
%,KK9</o:\QD(tpW($gqmi]9_Hc-OWn&g4CQ'V)2NM<$/K)ju)_rs^f@n]5djYqHUk72J)$_`WdBA5m<P6#9e7AZs$%So&`EXBB;>
%@jUQ1&LL1,Hf_qaZqlIu3C-IA53!,n!AQu!eS\Lf%!5-T:Vu:9!&04>6P(Dm-4Oo@MVWAfHf$2CEnDk!X;",5`hQ;]S]d)kH36:&
%q)_2Cl0i=.dG;CmDMm*BoVTa?Z4Km+*P`.;qT&fhLCMpdoMd67HNS^G?iL@5#EPEWXsE-$P$n)$OkKY=M1E:m>jau_A$sYFn7Zt4
%O#tD`U-,5BXf&4,/Dr(@a:?GR*+;elTN"18BdZcA?&V<;![l(\G-Da*]&Ms%oP[,qBNN&/Tc\O=JK=j%4E5o@P7=7^Ws3ES2m<,^
%&p!1d.]\9m>tAP;h?NEkapXrI.T'6&VWgcBo5noD4"S%^o9SfZ2O4%'%3IPCBtR6jksVD29N&sR+GGdD9"`@?oFK_/;OE7ShWO,[
%U5<k'OY-eO&20kVaL4DKUD@ZI5HmP.'P8PCpN\fZBO]aboKWb;l)kXC>m^gQL:d,gqLRi]pN.[O8E5,e:*Z2E2\G:PfRlHs5ZC<!
%q,.1-CluS&V!pQDV\)X^Rtr+Vi@mg]n:hIDM);Z<ktFK+mmj\QSiFf377)+QGKU4d6jiDSF?5Ou,`<B7k13E1;.n?lKD@+%B2j\!
%hNd>I,1B(@.2[.F^!0nQDRt:c8I$310GA05:Xa#G#+`4%\l/s]T[Q$:\+_/*,4lC&kVRuaiI.:m,;SJip")&Mn6L(T0bV*Wqj(OE
%,9P%`mR.V_!QUL_A>M@$jZ]!t4aVYGZ>pKW=$gNCA#)7pBJ'.10u[ibREu3X][J,I/jCCfatAJW.X2GPB85^inl,UeTKK3@1Hh;P
%&pUXSK%)$u2#'.8'h!;SFq/bXI*gY(\$4B`<C\OsfYZaDp(`HN]T1Dj\2o1-lK`N5e&cr%BoOMt8VhW5_8(C7P0O]%JOe<m5TZN<
%(C*ee(D9:;^jnK"j3BGO:iYM"7D:ags66[sU(@S(*r=tikaB@4`BGR_6qE`WS2&qNU;AW>*_'s6cUH2K'jk7V$Ae:H7(>X.ja=7"
%4$l7c#rZh47IQ.B,+3p&3EFKCL\QDdeT+;+_YYA;"&$b&X,oe;#jb`,&A`Q=60!AYA_h>FKott2qJ8;+q/X)6,A13P8JGqH1eHe1
%%fhg"mlf',.gXpFQ;g.1na-gCE!pR8f:6%G&-*a:gT)1eP*AHmeeHdr`mab3pJbGie9HaoEenX%9/Ke%ra(F$>lMtU"elS6KSbei
%erlmr6nd(8F+r=BPRmV(Y29<jU9rIY7fk0GG7"7d/6?7/-Fj/=RI,@!Caf8M@W$m7D2^UWmO"R$b5mW.\<VfF4^O1ToWO7!Q4+XG
%+G*q3d_$brBXb^=#[@PkQoV>0aZLT7/*SNiEca&X2m*n+,"rRc"epc*EusT6-phdj&kKa)ZZB;J!(MQ?G/`>`]ff6IdRk#g<uL;-
%"\rOG:$CVn9:d'jUa:6?'kKnL5@(.i,21+s,P=H8f#M#TQJ7s;<*pi(QpY=g"JW$j8Yk;/O>f3IRj(&B)/<CYXW@WHFUulAO],j(
%o8`WGQne6ipm@2(6]tu@B[,_Yf4C?O"X7@@b8bF32=EDhIpb;ROLN<QL/h;+H"su:X&RT/OsYINC[M,?pI`s2@:On!3->O-+PQR*
%L4b9ppLKT/<ab7GDMs=-:bF0^=]n_',Kbu4d.sQ,89B>mU*4(O7(pT6E:u56T7;)!&BYHo+m<Z*i`XBC#*r(./ur"t?l!e?1^PCL
%GX<MkB*;E?Z8_>r!AQj%.)+iCn]kHb]'5<sJTZkN!p^fIpfKNDJ)t@*Q?qBC&>+cH;[or"*Jfm6KI9tcTZ7P_kDlH56ajdnV8bQ%
%.Wf-8d]%l'[auO3X%:#/;3sQf")!\hp)8A:JNKsl-%Q?4X^."m3!Zb?*7O!mH$%;0j8F5AV<h)fQm%nQp$F<GHeJI-F@Y>(mkRiH
%m?#\F3&"59_MjFa16-2b_,^bRMVC9Dmt_67B<iRmc-aXYEh"h5*EcPpZ6nc?/ok4#EfPm45iF3#<]GDm:p-k."4<N(=ETkSUjdXN
%)MeB1`\-A1g9L`j">jDI)(&#)i'3&VK^`[HeU??\2tpCs[l#%Je@-X"[%d4]PXH[\IG-JW#'=,TjLD_@;8hZ9r3?i="55%'&>aUU
%3WbGA8#(_K!F&F>I!E4O&@^`"nW(P9iBj2]"D98V#SE\ZZ6tfA+p.POmrr)I4XBB@K\]:nRYL&fbV'MN+=XA?5ST?-cnKo&h);BC
%kVYI9L#K-=g`[A?Zj"A!:%@&9#b%]RW'XaDOu[A.,3*61?-T%?42h5:d'G1p'%*Xi5Z,Ea?*OipODZL%0j*SM]KmQQY_H6LP,60E
%k1Z#'U.?4cL*X!&HGBp"-cs<n6*EP,1m#mh!?t&28tm>8\cO]0HBtkm\bW3c">jZ.d&k8f?_)$QmtXM'p-6ZWY?WF>+iGLV6Y>QB
%j$j$g[02qoOOkks";(rs-uTgH+<F@"YVsc`l^*-jJ2lhfSIZ\h'-B3mK8;Fu;P[li:^AOl;<cn]gs_$:dW;!ThD<Tj?j\kKP)tfJ
%`2W/,6p!$#<oFbFXkqZpdIICBj3G@L-jL]KN%rb8`<g''F4q#mHq$n/_Y4?.-kK+`0d$h8aPf4B;dSlRs!0qFp/U:0YB,'J4DHI"
%-7ZSA;:!Sr"1`tK[;Gu78S@39dfen50gJOah^<:D-g*0Xg6(.4c0+(46so@C!2Q]L5"GM_+,rqA9X6GTi9@lJ.e=Ss_tRKa]dAMY
%)/VVoPlPWZJ3Nh/1;"dbD'UkdqpE:`K?-F+2@on>`K/!+Pt3a^!mQ7N`c@BD7c:nDaC"4E.=ihFMU-L?>Q@AZb%`8h'NpT0(gdi@
%5jP$>T>8e_8`Vrfrc&Ib#&t[sD?84/O/K/sSf7'J[A&YO=Oi$Uf-C;LmjK&r+tjjbca5/R406`;pGOH3Lf)RIV**^J)[&8.VMi5s
%kXJbGFRkID/a`FU0I/UE#*Ns2L@nl0EgO1(P2Qf]\O41:8t,!1`W](%PbjfF1fo3YmfF%'7../<]sc/$FsNX/S2faIZ$R`/T#fA>
%Of0gBU2dUM21O5G0td).=$j%nciiJ-i_8:4!n-d/lsW3-DEn&Y.Lfca5N'S6k^[8[E'th#LF'QWiOOLFDWq@X!.<.`qlL*hE0];W
%'6cMh+^lQq,,o]NFS+3#Si;EQ+iD>p^<!,RR\YK5iC""jN#[]Eb`Y<=@=^6<:rLIq$fFoj\")Y3TV7S(iBT3;1/cXAC+(<?%e,a!
%Q5](c#81WN`'_%8RIu1o\^3Q2]qPM-2oJH.'bCoS.g6Kfi8jaIe&'(2A?b0Y\_74J[N%=VX>Nd$mf;bGZCW1Zk&=DC!YhLPD<k!M
%=2lIX>Q70fJNA`F7Q)1c"X&I$>E_aUR[b:Y:>Wn!XBB;>#<;?6^c$1KLuGUh9p=n-Q1[C7BG6Xen1VDi\cmft_@I+P%\QQ^\a%*C
%Pbgb"aVFVcYZ>_28Z7X\PZeV0_8&8/;'cRd,Ba]^<H+5TJn?d8QP*tpb$>"/@A[RqopOu7:OKG#)6.CqS\PC]JJA1E6Te`4cpgDN
%oKk53c$#FiSSLnPp`T5WiaAN>"-FB2lQF>8,]q(\]E!bV%aGf:_r]NrB3,.JE]RSchMhR:iR=((T"3f4+HMlTl]Im`W&\/NAOX(i
%2jPi9Q29cLN9$`b?t@KO^=8@O8Ig#VBY$1]JQF$uh>eba/79[gI&Z_q+TY!0<7abTI(`,gqWjFJ>.,C(pT1q37Fk-.0NT6UV+sCb
%?j2^FJY^q"YeVP;m4MoZ7k^mCB_N3leH^=4H=ulR8eB*n"AFKLYj*+`(9YE1M.O>8ACgMOj-u,cGI=sV#.V^@0L/#DYQ,9co:]d'
%(M)=,b.*>Z]R50L%_Vj8W'jbZE8sZde0(Ps._FBGZ5\`b(,hu&0+JZ7<_4;b+onU"qBQoKZJo`onR&J?6mj)R$tte$Xa&.^<JM*s
%o&nENCI]>Xg]HD=8a-CZ)!ZhKR"dp[g>AHlO!9rs\:M@t=DFp-Nd>$J33K@:L&:6gY<HL"#:fFjhtrg,jPZ*5$cC(IfOQuVl;rTS
%2+:`_od.2lP+Tb'TkC^2pT^iWZCr5DWNWY-6aWiE[&I^0ZF0T:"_).CDeaJ<"rJoL5Ic,VGE2fP1(O$cL3<QfFp(M?;YVDdC/>j0
%^ol/F#SPCD5njO-l*UecW*ks%9f[E+B=&']NaH4s'1ci8Vr3QeGbAciJ:e2/,@gY]+)(5ieb(qJ8+gqYT9Ep_h'Gj(0AJ-E-^9U#
%PSM]F+DB=KL/5mpPU-5jTUW`_KI$,9$OIe^g_32=VM+iB7l1?HPitZgLc,Aoane)#d.)at#8VCZ4+Ks-7i2Y6`Y<ol%j2bm6Yd8j
%;5"p@E*\</me-]d8G7OH.#XR2RBl;Qmdi,j;>NY7@B;_9q_j&,U#1gi$<GH.dCNlQA3F>\8jI-eKqtDf%PTj#Wm.J754K<,k9Zme
%(5_n&1W2[_lbr"_Rg;&2`+N0.>!YEk%@4ijN-I6OlB4q>E"qL[PZRDOgR8O+a4YBqWuV_OgsmW(&9.q'c7#Tio`;ZYL.`*R/5.n]
%4n3$X6X^'"Xm`TX(p,bjQp!^]2MAUfW>u^N!eCeT2H*u]KTC39L=`RVVl?n%l+/"(&i_0P;/e!kNVj^,ap].74S&<_+arkZ/H[\I
%KU3j>c&%Se[+o%Joa*VZ/Fd"j_&;i(p@,-kL)SYPSg2Uj$]kYt#3=Ic?t`V\]\\d,edi!?B8ONbI&5f$@-d-/%LR;cY@mrmii)8V
%0CQ-U5VtT1bT-nZMr<pOj.np(!:%o0#,XN;_$mGI$3r,XUSTu2DZ",o)@R+/#LSh)mSm.F2mdLS@;;;gFe:s^hp=It-#?m318/p4
%BTt&:cpW"q'\6h;;E.m<'Eh?%p#BA\]:?YJir1L`!0s*\T6A?TMu`KtCc?%-[<7h&i(iX=)psI,jR/?\e%i\`Lq2(P;U6Y.8d`t3
%Z(n[>\DsdTLfjKHG3%4[6YX*9XeD]rh28+oG;Re8gP$d-l=_"U<Hf,^Dk1]#"B`L6.h95FA%+mN+m?<,StQB\ihiKU&""<jEgdno
%Y.h&1@F\nTV,51o%sl]6;eP.$?1/ej4*dHqdtkBN^MBR3-V.\!kSd@O7m+`qNPeKH`TKGH,Ob5G)NiTuHVO,t$D\T5(G;dpoRtD9
%kU$:3[Y&\(NT94Ro5Ji1,-64J;&L<I6n>KJA"P0X=8p$'U(*QqW^<6^iT=FS7KCh4J$Kj*.4DjUSp_['WA(bnf3N9[5r$GpUsVRa
%9r8M^>[(lRL.D<cb?,&N)(\oW(2.3/BJn[@1\7_BV@eem>A,&`+<(F`"JmNM2!s<5K)e@ZNULR:S]ERJ70(W:"TYK&3&0je>5:.E
%ecM4P'Y`bP1np+J$dAbSlimJ1%)a?+7-3J,>$'!+)W0"S)UZX6Kgll/?RnF<XnIkPlGp#li(Tp84\qpeXd.i8b>&'@K+\TaSjpT?
%XaV8f/$bP\8>L2g:T"dBeDTWHRL&J9F-ZiIq7F@ug?0Il),*F:ldKqodDWPO8=)[8"t?2H@/5@0Oi#[3SVcP2n%4;JK1gR&a2GnX
%)K@AoE$j"XT;L(n-H8bJ\eJ%!8-,iC;<W!W3`82H=JRV_.D4!UBg`Wp-6c_&aAZ87+cfotZk(@rNA_G!][,&@6keT-U'FT#kd6<2
%F^+<FQp8rldq0e`pLu[JaJ..L?[#,9=EGIO+c&$8ghuceB-N&3GrcV$b58pt^_t(GLkBAk%$0Z'Cj3(PK2-<17eB\,dP_?iKehr_
%J8![G,Ag3oB;3IlIifubcZWL`j=MQ0ko4OQJ[7&E=W!ce'KN#-YR>%emCG7c?T/X4dkP6:moe+qf"5<:ddO`S0Y)qX5\(FWl%2YG
%`hS7XM+Eh/Yj?su8=M566nf3eds2-@\,]GL&K,c.7&8Rb#%;Bb&SqX`^j97GA?on/DI@i=;WNKhi(IM(7+ub%,(bYBRkCI_c!;T(
%,gp$O#?`Bt)ls94!$#1$`*$_g,#hp+Lo3^q2#041X1Gt@ZuYhJ3`^.Y&_OKtiG]E-jnM&U?s%\uUJhD[S2g`&X`1r8rQ`7=R+g-#
%4]$MCoMe*KTLes\A[&J@-X+/qhnd/Xm\"'i,)a6T7L&K[]^BEGI-bi.He-PWH[q'2aLae[`ndm3fiENRYLuL($EaC?Is0po6@5=2
%"?12],0*5i-qB%41OI)b[bgl[(MN"YF6jaRGc8HLit)Ws4S5o5\R1LRdK,]j6@#],fG)k%Vme@%Y=D*)TYXkk&+J[pA+#BSRluRj
%TcI/#(Yi2\+>>4UIWKuKf@PChbRk/)(OS+J>lg<iPDRW,Ep:JuJJ#:^LSBIC.r`6U4V67cNRHG4!jiS#Y'.Q8.++l-+*o9/d&2\C
%:>G[u\1YrHGl_3T"t=(R\EFhYV4f[jP.SCLRQclA#LGph[IXdX3Ol1e,:5DpiE:8-!S.MV#Xk:!DE!'@qde7rPglNf,In'D'mKBq
%fMY)%CT)bQpW9Mu<d+U)pG`YgeOj9&Vga[,I\84:?s(YP<$J"Ef?W4C"3?DT2PdN";(UP$1'1!B6I(/gBPE"+Br;THA:@nIE+^rA
%R@aWU*.Sttm'<)I/09dNkn!#Z8@1g(MfpRYgMI&D#:Cb>i\,b*NFr5/\tMJA8j1bHf/&P8(GCo\ql*L(kC@nf@0<V]*Fh^Mmh;KA
%([hjD=!Oe0+M7>,e;\P$?X^u#mQYh/Qek.eS%,((GHDdV1.n1lXFbK="79##Y*gTC+:2=Pbj!jp;Lq>[W)6/TTX:F2jA"fmG10:I
%0s4bJ]2\7q#05aF86g2_l-jW*-$6_(m7L'\%2jB=rl2F(`g#9[!>o,+HR$`^%8^Z1#HF0;m#Ld5,LLK,iSlg$r/=4.^ns>;`9s/7
%5p68&VF0Lme/DdJ,FJM,+=eYShC%YaWYR&@gRr=/V2\q+RQ/pm%7+(qA55i^NMh[;KsbD0_Wa\8k`dh8NL(Tked7PhQ?Tte,I1,0
%Jp4U49YYFa+cZ$il.umY1ti\CcPAc2O6%OIFL!3+jUP0Y1,i[J8[t,'Ki2kn!2F\S>stni1M?K0eP>+a3nqI!BQ;Rg83L;CA@ljK
%_qp"o:0+#kZSC-sk[,)%qe!91;:L-_0O,kNj0O`'G,dodgMAH_MdCLUil"`mgYE+1gJrDF#!D0CqAqTe;ZK7G\Sp=c5:Uid'mnT)
%q0@Qkl!a>3%ir5T"a$\E?VIE@*<<k:Vq2DD]q[*,Sf_sN\95'_3L&^b5prc&Qo)Q.G:p/$Do$K&bjXN-#S:)!MrK3,S4h[$:M2U\
%k#SEsQ(>pjlLR>s]s%CY.at`Y0>64r0.0PaUXdnjqmL?!GP"F(q>ssYIp+CpfZDZ],+>&>6O+1XA"H@PqYpQTI,UY>mYIGU^2tgj
%OadGj4YD^Xa9[*#4N*'8RLOHPmJMtDBeb/fFtq#?%#c)hfdJsMk\8$2f/"VZMJ'T&HUA<i(nqS]G_RY&@Z%EAI<0=mi5keJR-+<t
%`os@00:63'L8^+Rrma3Z')Jg9;2jHNK;_h0T-(S%aLn#&.)q(%.CNa?IES;-q\ME!@-6:4Tj[BCRpnX;BTes=Tm`R_jC/JQ(rJTC
%;6:[R+1R12]pn%@`^l1?VI\G0X'j<O(Ho6?k1uCNA6;,rm)]gXdaOkR&%%%:9L0n%puu-@OCcKr>D]#0C)+p<2b0O"Yq/gQbd<Ft
%0s>fOI+NU56+-c%GsnHa[)f/Z3A8_j4>V]M9E@:DBWrf:aPM6AC5ZUqe+48VUSnkMHeRS3qH(%p`)@X^^'Hh=H4k7:]nlGS/:`3r
%@p<lS\,6P:ib/<Mm^g[kc:LY=0)6G6C*NLXM5C_n,+A4U2Vh'&0Q&'QH$ZMI:1nL2_DWpaq#_?Um/ts1IE@\eU]/6iC0I4^//s57
%btGLZ&sk`:lhZ!)^)I5m?8C!t?Cm?>bBDpTKoud'nZEJKCmd2ai<]?$[@HAOE:?daP^u=bLd:!a5'1;/io`E?"&HBV@G[Rga5m38
%K@LE=-cTE1chSOBl$a&sUq(!^`gQeH-TnD#d,lW1\11NA4`M'Vg[1,]BO4cXC7*W'jH9:4Y3p\)*k@*hh6"2Cjps<EOZo,7CYIT/
%]p;S:9jRbHqZH;D6d.qtp"C$u5O$dgOh'?jplPF)j--OS\:,Yq]_LNEJ8!dQT[uc^'m%6p+nbSNcEH3mIOooH\G]YU4rh%m.M)KC
%;];0KnI8!/`R>K%A@HP#\KXO0S!WIt\`iWnHK9tMp>dH"U^pNZ<-dDZr0L&HT?kX*;9NY`9f0Gknorq4Gj,8j('rPKA"re^r20Wm
%[mP5jH!O8>rJR7_*WafXC3&,t03sP#`58eCplO^'WU6=!ZGn>(r*sD#c+T)!M<nAX=u,^/)ij!:V^F+cDW<p$Gu(\jl]Q[nem^g:
%O'LPtSp]ViNbQT![e[m,=)KabPFnV9di@Q(p"3cS%i>'3RGF:amcaVNT75__G'?_DYCj?4J)E$:#P^#`_8YRWk6"LEP&A]7#$o6m
%USu9_B_.Ch&(6W=-XhsO]0-L2N.Nr@fk2dbjs0@DN6uLOLLCU@FT!K0@15LgjE'ENo/W3sY$+,m3GmBn6^p;@REe3r3Bicn9td!#
%F*nm20qWURHofNnPjP;ph9;)%X_Vnf^KFem3fnpTLG?I)55R,5FA@dof\'@bD9.bn,pIaQnA12+V>@7D%nn"L"*f\^`2M@XrN'<&
%l-'f>.C6!%g/MBq9)&-4[##q0Bm(!!=j1Y%S0e;Z\^u`TX5L>X`P6/:LT0@f<]k4kWqe3%O!2n`IN#nJ=m&?F&t:A"9sqmY7#K;V
%2%@):QR25^r!FqZnFUc)QudjjNQ0pk-geS0N+)5`gX-7;cPo#;1V^f47kKVi%UDTs-eAQ]',LuUJiBn2jR7QjjVR@HIsuD8N#",3
%;jA.jS&TqHcX_.(jM"Yu.2]`6;6Y11go<cP?]Zks:mlI#g_UUg6ib(/OE)cT8rcmqK]IdL$*+^cXu<(Wm`l[+3mkd7oIep2PmDp$
%EX1er-mTLD*-EIh'N&_G&u!oC(<&^';0iBYpXQlH-eeI#%;N$&7ctS[k5]@ho]c9C#6Q-X9Q("UqWgO23d'?YAlKt=GTENk81-`F
%:JkGo'CDu:S^H;-3g"Wi!L68YZ(FXALT2aUdYUSWafZ6[pBmIaruM#5Rk4<_L^LN.o/#XYF+(g8ofXFLaderp8b@DNMHs4N.M:Jt
%3Jib,3YAi)]uu:TU@JY-n>iW],snY$G<A*RBVV$Lbu&HgFdgPCi2b^1,qA+',e>>e7,^#CmJ2n*WguMA($S,YWkL',qHOgH;@8$I
%leOq$NAQsYU*PcMOe^U(_cU8p]1)A#m5r?ajgQ18$[6gc8i2jkDVJ.44I9FXpR$oVbak<QeMQRTMRh,Qc1b$KF'1I`Lr@$VhHXHK
%7[.JcB-0dsF.V1PF")!a;obQA'K8&W`Kpb8;^JTM,Ko4oF!WH-re/!%oj!B4Q;BqKpl$nW'&oVXoo)n$9un@4moneO'"<D2FdmTX
%`3%jc]<4#4,q_6M[haH&Lgd=%NG&^S=4kia\AVpP4'$[Uk"=EZ9&/4r+W3pm;&bEC:g("bQ/^fc(]bnZ;I#9FqEm3.ihGSk%ip2C
%=Gi$FDeP^V1%<<Z</S:R9^$Q==<'BK#^V7@M)$fNiK@>/<l5:>jERM^7.\saSoZ]@$9D8uh)8n"('#TSTp*o0L5Sfq`$I#+Kon0X
%iGRGu<@S"QC8Na=E<-d#)KpG7GLTb442Kf>UXJkuF&T]%.!<%=1doa?=fK9?rJ`moo3@!-oe/[`m8SeO]qU]YHP]bXW="u`S$ZI3
%,P2k_#\kg8Aue(hQt?OfU8(sOddSluDC>jV')D\'4n"Ub>jSU7Nb5H2Xa:@[\6><2ijGYq.W8U^<:uq[J#3AlX8T''SV"uj/JX=E
%42!b.CJ@ar!&Y'q7*&4GPBginTI..m7#L/MCp9faW6[kh]6bh"Y=$eOS\F=a,\)uqJ`F4U3+s&JOJ(2XT"D@\2S*\ta<f@6Ei"t[
%]@pn>")!S<o+_Y?NkuqhjX9^U9V_4>R,>OTjZd4/QiH`4%OPKA*V3rs.QZDO=Jc0trPE8&HIKX#/[D6.g>>'g<K.NC#Y#*ej&d<L
%k?ubC8/k5GdK^`8:N`aq7NH6Tkd@Z0,'C+mX_K@F'Bt-$=83B'XYSP8D4peI.6cAXmF%:sN1p0?50!A:&49-@V2d73Kc!/P4*?Kr
%$07eIs%XZrdG`I`Q9#5_D1D5Zh`1A>hu<'d?N)PKd9jS8s6[;qm16u1mcFI4s7;`SDh%A6hgYI;cQE):+27XOT<B@3QbUE+rot"Y
%r;N1h^]3GW^]24?nDf#mjVK$dNUlX)?QA;E%Y=ZRb:iG0?i9$/hu,b]SCW+)g-9-us5QfgI_;Z>O#L)8PGSs/iopXGl#0!\Hh[\%
%j$Qi@Vl8.lgl/$"g3Q-(+TSKH:',::M<N>pnGC*,/TB)"_+(.hK)tTKSM1S'P6?<<Om'VhGS\Z4K3#X.7T9V^L`R#F05l&!.Fl7(
%U.9j`""htDY$SU&?mCfmU7K.=T@oWrq5`q`BeXC*9nPU]<V'V@Y*oUEGL\gCZE*-(oNa<`VX:BtYQqdT*_b6eo3hEtRKlc7eNB55
%X.C7L_\i?TqQPsAIi99$r-2<(ro6^qr-2/N%iU4QdTf#27Hf1gPL08B2W=B#TBf;CO5k_)jj-+Mn'O\9`*T^06jZKNN&ADqQqVue
%%K4g458!kgO,E3uZY=n18Htbdf7/,BJ!#i`_Z0K4[[5m#!F0_"nZBHqaF`dUk!&,>R]:j%-I`Q0n&5//p6k0;]8XigHm%5N%.jC%
%\g,I4V#/!/mE\)08<]J'REKAJm+.<]FGTqG&&.FWm&a:Bqbu&?7%p%`U.Mcln]NT,^A?sKs4+<es5Dl8rZ?UarHEbdk50YJB)LcJ
%e,K66Dnl,Ene](;c11@opOE,/q]B-nrS9^:iO=;aq<Mu!q[\15SbA<5fAHPr_ftPs*=;HpjkkO]O!e(R:WWOtpV6SID;N#mU)s=.
%QT,]:A*<m2YCHMOJ,"eKHN0K'IeX+SE`2lur!TCG\af^rfCX]&r?hLAJ,$p"s8&47rq?5=o5Egt^\fbBr9i=SrVi;DJ,T*<0>I;<
%+2@XO^O>q?%tDAkhu4l!e][Eqs7VLqpqD1Pj8\oBJ)MdMV<\qHq9/g-TARB\ir9!.eU=h~>
%AI9_PrivateDataEnd
