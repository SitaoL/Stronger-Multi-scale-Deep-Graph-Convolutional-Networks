%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig_tanh_compare.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Harry Zhao
%%CreationDate: 5/15/2019
%%BoundingBox: 0 0 355 279
%%HiResBoundingBox: 0 0 354.6221 278.8912
%%CropBox: 0 0 354.6221 278.8912
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.2 x274 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 15875 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFFD05A8FD7AFF7DA8A87D7DA8FFFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8A87DA87DFFA8FD17FFA8FD
%45FFA8FD17FFA8FD04FFA8FFA8FDF8FFA8FD89FFA8FD80FFA8FD73FFA8FD
%0AFFA8FD0DFFA9FD0FFFA9A9FFA97FFD6AFFA97FA9FD0AFFA9A9FFA97F7F
%7F557FA9FFA9FFFFA9FD10FFA9A9FD06FFA9FD0FFFA9FD1DFFA9A9FD08FF
%A8A8A87DA87DFFCFA97F7F7FA9FD057FA97F7F2B7F7FA97FA97FFFFFA9FD
%0B7FA97F7F7FA97FA9A9FD0EFFA97FFD05FFA9A9FD0FFFA9A9FD1DFF7FFD
%05FFA8FFFFFD04A87D7DFFFF7EFD052BF92B2B55552BF92B55552B2BF955
%7FA92BF9F9FD097F557F7F7F557F7F7F55A9FFFFA9FD09FF7F7FFFA9A9FF
%FFA97FFD0FFF7FA9FD04FFA9FD17FFA97FA9FFFFFFA8FD04FFA8A87DA87D
%FD08FF7F7FFD04FF552BA97F7F7FA9FFA97F7F557F7FA92B55FD0D7F557F
%A97FA9FFFFA9A9FFFFFFA97F7F7FFF7FA9A9FF7F7FFD0AFFA9FD04FF7FA9
%A9A9FFA97FA9FD05FF7FFD10FFA97FA9FFFFA9A9A8FD10FF7F55A9FFFFFF
%7F2B55FD047FFFFD067F552BF955557F552B55FD067F552BFD047FFFFFA9
%557FFF7F55FD077F557F7FFFFFFFA9FD05FFA97FA9FFA9FF7F7F55A9A9FD
%047FA9FFFF7F7FA9FFA9A9FD0CFF7F7F7FFFA97F55A9FD09FFA8FD06FF7F
%55FD05FF552BFD0B7F5555552B7F552B2B7F7F552B7F7F7F555555FD047F
%A97F5555A955FD0C7FA97F7FA9FFA9A97F7F7FFD04A9FD0A7FA9FFFD067F
%A9FD0BFF7F7F7FFFA97F7FA9FD0AFFA8FD05FF7F55A9FFFFFFA97FF955FD
%0C7F2B55557F557F5555F92B2B552B552BFD07552BFD04557F7F7F557F7F
%7F55FD057F55A9A97F55FD067FA9557F7F7F55FD067FA955FD067FFD05FF
%A9FD05FF7F7F557F7F7F54FD0AFFA8FD06FFA92BA9FD04FF7F55F9557F7F
%7FA9FD087F5555557F7F7FF92BFD07557FFD09557F7F7F55FD057F55A9FD
%237FFD05FFA9FFA9A9FD087FA9FD0AFFA8FD05FFA9557FFD04FFA97F7F2B
%2B7F7F55FD077F55552B552B7FFD04552B55F95555552B5555552B555555
%2B55557F5555557F7F7F55557F7F55FD217FA9FFA9FFA97FFF7F55FD077F
%7EFD12FF557FFD04FFA97F7F7FF97F7F2B2BFD077FFD08552BF9552B2BFD
%0F552B557F7F5555557F555555FD207FA97F7FFFFF7FA9FD087F557FA8FF
%FFA8A87DA8A8A8FD08FFA95555FD05FF7F7F7F552B7F2B2B2BFD077F2B55
%2B552B552B552B552B2B2B552B552B552B552B552B552B552BF92B7F7F55
%2B557F552B55FD047F557F55FD1B7F55A9A97F55FD087F2B2BFFFFFFA8A8
%FF7D7D7DFFA8FD07FF5555A9FD04FFA97F7F7F2B2B557F2B2B2B55A9FD04
%7F557F7FFD0955F9552BFD05552B2BF95555FD042B7FFD0755FD067F2BF9
%FD0A7F55FD097FA9FD077FA9FD0A7FF92BA8FFFFA8A87DA87D7DFD09FF7F
%557FA9FFFFFFA97F7F7F55F9557F5555552B55FD077F5555557F2B555555
%2B2BF92BF9FD0455FD052BF9552B2BF92B2B2BF9552B55557F7F7F55552B
%552BFD047F2B557F7F55F955FD087F55FD0D7F2B2B7F7F552B2BA9FD09FF
%A8FD07FF55557FFD05FFA97F7F7F2BFD047FA92B55FD087F557F5555F955
%2B2B552BF92BF955552BF9552B2BF9FD05552BF9F92B2BFD04557F55552B
%557F2B7FA97F7FF92B7F7F2B55F9FD047FA97FA92B2B2BFD0B7F552BF97F
%7F552B2BA9FD0AFFA8FD06FF7F2B7FA9FD05FFA9FD097FF955FD087F2B2B
%2BF92BF9F9552B55FD052B552B2BF92B2B552B552B552B2B2BF92B552B55
%2B552B2B557F2B2B557F552BF97F2B557F55F97F7F7FFD042B552B55FD09
%7F2BF92B2B55A92B552AA9FD09FFA8FD07FF7F557FA9FD06FFFD097F552B
%55557F7FA97FA97F55F9FD072B55552B2B2B555555F92B2BFD09552B2B2B
%55552BF92B55557F7F2B2BFD04552B2B55A97F2B2BA9552B55557FA92B55
%FD097F2B55A95555552B7F557FFD0AFFA8FD06FFA92B7F7FFD06FFA9FD0A
%7F2B2B2B7F2B7F55552B55F97F2B55F9F9F9552BF92B55F9552B5555552B
%5555552B5555552B552B2BF955F92BF97F2B55557F552BF95555F92B7F7F
%7F552B552B55A97F7F7F552B7FF955FD067F2B7F7F7F2B2B557F7EFD12FF
%A9557F7FA9FD05FFA97F7FFFA9FD087F2B2BF9552BF9557F557F7F552B2B
%2BF92B2B55552B2B7FFD1055F92BFD0755A9552B555555FD057F552B2BFD
%067F2B55F92BA97F7F7FA9552BFD057FA97F7FA8FD11FFA92B7F55A9FD06
%FF557FA9FFFD087F552B2BF92B2B2BFD047F552B552B2B2B552B552B2B7F
%55F92B2BF92B552B552B552B552B55552B2B552B5555552B55557F7F552B
%55FD047F557F557F55FD057FFD042B55FD047F552BFD057F55A97FA9FD11
%FFA955557FA9FD06FFA97FFFFFA9FD0A7FF9FD077FFD05557FFD05557F7F
%2B2B552B2BFD0F557F55552B7F7F7F555555FD067FA97F55FD057F55F97F
%55557F7F55A92B55FD067FA9A9A8FFFF7DFD05A8FFFFA8FD07FF55557FA9
%FD0AFFA97FA9A955FD0E7F552B552B5555552B552B557F7F2B2B557F5555
%2B552B2B55552B5555552B552B557F7F2B2B557F7F552B55557F7F7F557F
%7F7F2BFD057F55F9557FF97F55F97F2B55FD057F55A97EA9FFFFA9A8FF7D
%7D7DFFA8FD08FF7F557F7FFD0DFFA9FD127F55557FFD0555A97F552B557F
%7F5555552BF9FD0A557F7F552B557F7FFD0555A97F55557F5555557F7FA9
%7F7F2B7F7F555555F97F2BA9FD067FA9A9A9FFFFA8A87DA8A8A8FFFFA8FD
%07FF55557F7FA9FD0DFFFD0D7FA9FD047F55557F7F2B552B7F7F7F552B2B
%7F7F552BA9FD052B552B552B552B557F7F552B2B7FFD04552B557F7F2B7F
%7F552B557F7FA9A95555557F552BF955F92B7FFFFD057FFF7EA9FD09FFA8
%FD08FFA92B7F7FFD0EFFA9FD0C7FA9A9FD047F557F7F5555557FA97F7F2B
%557F7F2B2B557F5555F9FD0755FD047F2B557F7F557F2B55557F5555557F
%2B55557FA9FFA97F55A97FA92B5555F955A9FFA9FD047FFFA9A9FD0AFFA8
%FD07FF7F55557F7FFFA9FD0BFFA9FD0C7FA97FA97F7F7F557F7F5555557F
%7F7F5555557F7F552BFD057F2B552B5555552B7F7F7F55552B552B7F5555
%2B7F7F7F2B55552B2B557FA9A9FF55557FA97F55557FF97FA9FFA9FD047F
%FFA8A9FD12FFA9557F7F7FFFA9A9FD0BFFFD097FA97F7FFD04A97FA9557F
%7FA9FD047FA9FD057F557F7FA955557F7FFD04557F55FD047F2B7F55557F
%7F2B557F7F7F5555552B552B7F7FA9A97F2BA97F7F55FD047FA9FFFF7F7F
%7FA9FFFFA8FD12FFA955557F7FA97FA9FFA9A9FD08FFFD077F557F7FA97F
%A97FFF7FA9A97F557FA9FF7F7F7FFFFD047F5555557F7F552B7F2BF92B55
%557F557F557F5555557F2B7F552B2B7F7F7F2B552B2B557F557F7FFF5555
%7FA9555555FD047FFFA9A955A9FFFFA9A9FD13FF5555FD047FA9FF7FA9FD
%08FFA9FFA97F7FA97FA97FA9FFA97FFFFFA9A9FF7FA9A9FFFFA97FA9FFFF
%FD047F55557FA97F7F7F2B5555557F552B7F7F55552B7F7F55557F2B5555
%A9FD04552BFD057FA97F2BA9A97F55557F7F557FA9A9A97FFD04FFA8FD12
%FFA97F2B7F7F7F55A9A97F7FFD0BFF7F7FFF7FA9A9A9FF7F7FA9FF7FA9FF
%7FA9FFFFFFA97FA9FFA97F7F7F555555FD077F2B2B557FF97F2BFD04557F
%FD04552BFD05552B5555FD047FA955557FA955552B7F5555557F7FA97FFF
%FFA9A9FFFFFFA8A8A87DA87DFFA8FD09FF7F55FD057FA97F7FFD04FFA9FD
%07FFA9FFFFFFA9FFFFA955FFFFA9A9FF7FFD04FFA955A9FFFFFD047F2B55
%FD067F5555F92B55557F2BF95555557FFD0D557F55557F7F7F2B7FA97F2B
%FD0455FD047FFFFFFF7FA9FFFFFF7DFD05A8FFFFA8FD07FFA97F2BFD057F
%557F7FFFFFFFA97F7FFD05FFA9FD07FFA97F7FFFA9A9A9FD05FF55557FFF
%FF7F7F7F55552BFD057F55552B2BF9557F7FF92B2B552B7F2B552B552B55
%2B552B552B552B552B55557F555555A955552B552B557F55557FA9FFFF55
%7EFD04FFA8A87DA87EFFA8FD09FF7F5555A9FD067FA9FFFFA97FA9FD04FF
%A9A9FD07FFA97FA9FFFFA9FD05FFA97F55A9FFA97FA9FF7F2B5555FD057F
%FD04552B7F552BFD04557FFD10557F7F7F557F7F552B552B2B2BA955557F
%FFA9FF557FFD0BFFA8FD08FFA95555FD077FA9A9FD047FFFA9FFFFA9A9FF
%7FA9A9FFFFFF7F7F7FFFFFA97FFF7FA9FFA97F7F7FA97F557FFF7F552B55
%FD047F55552B5555552B2B2B55F92B557F2B5555552B5555552B5555552B
%FD04557F55557F7FFD062B7F552B7FA9A9A95554FD14FF7F7F55FD0D7FA9
%7FA9FF7FA9FFA9557FA9FFA9FD047FFFA9A9FFA97FA9FD067F55A9A97F55
%55557F557F7FFD06552BF9552B2B2B5555552B55552BF9FD0B557F7F557F
%7F552B552B2B2B7F555555A97FA95555A8FD13FFA95555FD0E7F557FFF7F
%7FFFFD0A7FA9A97FFFFD097F557FA9557F2B552B55557F2B552B552B552B
%2B2B5555552B552B2BF92BF92B2B552B552B552B552B552BFD04557FFD04
%2BF95555552B557F7F7F552BA9FD13FFA97F55FD107FA97FA9FFFD0A7FFF
%A97FA9A9FD077FA955A9A97F7F7F557FFD0A552BFD07552B2B2B552BFD13
%552B2B2BFD04557F7F7F5555A8FD13FFA9555555FD127FFFFD0A7FA9A97F
%A9FD0B7FA9FD057F5555552B5555552B5555552B5555552B2B55552B5555
%552B5555552B5555552B5555552B5555552B5555552B5555552B55557F55
%552BA9FD09FFA8FD09FFA97F5555FD117FA9A9FD0A7FA9FD147FFD1055F9
%FD13552BFD07552BFD07552B55A9FFFFCFFFA8FFA8FFFFFFA8FD09FF7F7F
%2BFD127FA955FD1E7F55557F2B552B552B552B552B552B552B552B552B55
%2B2B2B552B552B552B55552B2B552BF92B552B552B552B552B552B552B55
%2B552AA9FFFFA8A8FF7DA87DFFA8FD0AFF7F7F557FA9FD2C7F2B7F7F7F55
%7F7FFD1155FD042B552B2BFD0555F95555552BFD1155A9FFFFA8A8A87D7D
%A8FFFFA8FD09FF7F7F2B7F2B55FD177F55FD127F552B557F7F7F557F5555
%2B5555552B5555552B5555552B55552BF955F9FD052B55552B2BFD04552B
%5555552B5555552B5555552B5555552AA9FFFFFFFD05A8FD0CFFA97F7F2B
%5555FD177F2BFD127F555555FD057FFD1155FD052B552B55F95555552B2B
%55552BFD1155A8FD14FF7F7F552B55552B55FD147F552B55FD117F2B7F2B
%FD057F2BFD04557F2B552B552B552B552B552B2BF9552B5555552B2BF92B
%F92BF9552B2B2B552B2B55552B552B552B552B552B552BA9FD14FFA97F7F
%557F55552BA9FD147F2BFD117F55557F5555A97F7F7F55557F557F7F5555
%7FFD08552B2B2BFD04552BF92BF9552B2B552B2B55552B2BFD0D55A8FD14
%FFFD067F5555FD147F552B55FD107F55557F5555FD047F557F7F552BA955
%55557F2B2B2B5555FD082B55F95555552B552B55F9555555F92B2B552B55
%55552B5555552B552BA9FD09FFA8FD0AFFA9FD067F55FD147F552BFD0C7F
%557F7F7FA955557F7F55FD067FA92B2B7FFD04552B2B555555F92B2B552B
%55F9552B2BFD04552BFD06552BF92BFD0C55A9FD0AFFA8FD09FFA9FD067F
%55557F555555FD077F55FD077F2B5555FD057F2BFD047F2B2BFD047F5555
%7F5555FD067F55552B55F955FD052B552B2BF92B5555FD052B552B552B55
%F95555552B552B2BF9552B552B2B2B552B552B552AA9FD09FFA8FD0BFFFD
%057FA9557FFD04557FA97F557FA955557F7F557F7FA97F5555FD047FA97F
%2B55A97F5555557F7F7FA9557F7F7F55FD077F55552B552B5555552B5555
%552B2B2B7F55FD042BFD06552B2B5555FD042BFD04552BF9FD0755A9FFFF
%7DA8A8A87DA8FFFFA8FD0AFFFD067FFD04557F2B7F7F7FF9557F552B7F2B
%2B557F7F7F557F55FD047F552B557F55557F55FD047F55557F7F5555FD05
%7F557F552B552B557F55552B552B55F92B5555F92BF92B55552B5555552B
%2B2B552BF9F9FD082B552B5555552AA9FFFFA87EFF7D7D7DFFA8FD0BFFFD
%067F5555557F7F7F2B7F5555557FFD06557F7F557F7F557F7F7F552B5555
%7F2B7F7F55557F2B55557F7F7F5555FD047F55557F7F557FF9FD047F552B
%55552B2B7F55FD042BFD07552B2BF955F9FD052BF9552BF92BFD0555A8FF
%FFFD04A87DA8FD0DFFA9FD067FF9FD047F552BFD05552B2B557F55552B55
%557F557F7F552B2B55552B557F7F55552BFD04557F7F7F2B5555552B5555
%7F7F7F55F955FD067F55557F7F55F95555552B552B552B55FD072B55F92B
%2BF92B55FD042BF92B2BA9FD15FFA9FD067F557F7F7FA97F552BA9FD0455
%2B7F7F552B552BA97F55557F557F7FA95555FD047F55557F552BFD057F55
%552BFD077F2BFD077F55FD047F2BFD0C552B2B2B7F2B2BF9552B2B55552B
%552B552B2BA8FD16FFFD107FFD04557F7F2B5555557F7F2B2B2B55FD087F
%552B2B7F2B55FD177F55557F7F7F2B5555552B5555552B5555552B55F92B
%55552B2B2B552B2B552B2B2BF9552BA9FD09FFA8FD0CFFA9FD0E7F555555
%FD0A7F55557F55A9FD087F2B557F5555FD177F55FD047FFD0D552B2B2BFD
%06552B2B552BF92B2B2B55A9FD0AFFA8FD0BFFFD107F2B55FD167F552B55
%7F2B55FD187F557F7F7F2B552B552B552B552B7F2B552B552B552B552B55
%2B55F92B5555F92B2B552AA9FD09FFA8FD0DFFFD0F7F5555FD177F2BFD04
%7FA9FD197FA97FFD08557F7FFD11552B555555A9FD0AFFA8FD0CFF7F7FA9
%FD0C7F2B55FD1C7FA9A955FD197F557FFD04552B55A9A92B5555552B5555
%552B5555552B5555552B5555552AA9FFFFFFA8FFFFFFA8FD0FFFA9FFFFA9
%FD0B7F5555A9FD1B7FFFA9FD187FA97F557F7F2B55557F7FFFFF552B5555
%552B7FFD0A552B555555A8FFFF7DA87DA87DA8FFFFA8FD10FF7F55FD097F
%55FD0A7FA9FD127FA9FFFD167F55A9A97F557F55552B557F7FA9FF55552B
%7F2B5555552B552B552B552B552BF92B552AA9FFFFFFA8FFA87D7DFFA8FD
%11FFFD157FA9A9FD127FFFFFA9FD167FA9FFFD047F55557F7F7FFFFF7F2B
%7F7F55557FFD0A552B555555A8FD04FFA9FFA8A8FD06FFA8FFA8FFA8FFA8
%FFA8FFA8FFCFA97E7F7E7F7E7F7E7F7E7F7E7F7E7F7E7F7E7F7E7F7EA97E
%7F7E7F7E7F7E7F7E7F7E7F7E7F7E7F7E7FA8FFA87F7EFD137F55A9A97F55
%7F7F7F557F7F7FFFFF5555557F5555557F2B552B5555552B5555552B552B
%A9FD09FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0BFFA9FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCFA9
%FD077FA97FA9FD0A7FA9FFFD087FA9FFFF7F2B7F7F55557FFD0E55A9FD0A
%FFA8FD10FFA8A8FFFFFFA8FFA8FFFFFFA8FD21FF7EFD057F55A97F7FA9FD
%077F557F7FA9FF7F55FD057F55A9FFFF7F55557F2B557F552B552B552B55
%2B552B552B552AA9FD09FFA8FFFFFFA8FD0CFF7D7DA87DA852A87D7D52FF
%A87DFD21FFA9FD067FA9A97FFFFD087FA97FA9FFFD057FA97F7FFFFFFFA9
%2B7F7F55557FFD0E55A9FD0AFFA8FFFFFFFD0BA9A852FFFFA852A8FFFFA8
%7D52FFA8FD21FF7EFD057F55A9A97FA9FD087FFF7FA9FFA955A97F7FA97F
%7FFFFFFFA9557FA955557F7F2B5555552B5555552B5555552AA9FD0DFFA9
%A97F7F7FA97FA97FA97FA9A87DFFFF527D7DFFFFFFA8A852A8FD21FFA9FD
%067FA9FF7FFF7F7FA9FD057FFFA9A9FFA97FA97F7FFFA9A9FD04FF55A9FF
%5555A97FFD0A557F5555A8FD0CFFA8FD0DFFFD047DA87D52A87D7DFF7D52
%FD21FF7E7F7F7F557F7FA9A9A9FF7FA9FF7F7F7FFFA9FF7FA9FFA955A97F
%A9FD06FFA97FA9FF5555A9FF557F2B5555552B552B5555552BA9FFFFFFA8
%FFA8FFA8FD13FFA8FD2CFFA97FA9A97F7F7FA9FFA9FFA9FFFFA97F7FFD04
%FFA9FFA97FFFA9A9FD07FF7FFFFF7F55FFFF7F7F7F557F557F5555557F55
%55A8FFFF7DA8A8A87D7DFFFFA8FFA8FD3BFFA8A9A9FF7F7F7FFD07FFA97F
%7FFFFFFFA9FFFFFF7FFF7FA9FD0AFF557FFFFF7F7F557F557F55552B557F
%552AA9FFFFFFA8FF7DA87DFFA8FFFFFFA8FD3EFFA9557FFD08FF7FA9FD07
%FFA9FFA9A9FD0AFFA9A9FFFFA9FD047FA9A95555557F5555A9FFFFA8FD07
%FFA8FD0FFF7D7DA8FD0BFF52A8FD04FF7D7D52A8FD16FFA8FFFFFFA9A97F
%FD08FFA97FFD07FF7FFFA9FD0BFF7FFFFFFFA9FD047FFFA97F55557F5554
%FD0AFFA8FFFFFFA8FD0BFFA87DA8A87DA8A8FF7DFD04A8FFA87D7DA8FFA8
%A8A87DA8A8FD2EFFA9FD12FF7F7FA9A9FFFFA97F557F55A9FD0BFFA8FFFF
%FF555555FFFFA92B557FFFA9FF7D7D7D527D7D52A852FD047DA8527D527D
%7D527DA87DA8FD16FFA8FD17FFA9FFA9FD0BFFA9FFFFFFA97F7FFFA9FFFF
%A9FD047FA8FD10FFA9FFFFFFA9A9A9FD05FFA87D52FF5252A87DA87D7D7D
%A8A87DA8527D527D7D7DA8FD41FF7FA9FD06FF7FA9FFFFA8FD0CFFA8FD0D
%FFFD047DA8FD047DFF7DFF7DFFA87DA8A87D7D527D52A8FD16FFA8FD2AFF
%A97FFD06FF7FA9FD76FFA9A9FD06FF7FFFFFFFA8FFFFA8FFA8FFA8A8FD04
%FFA8FD3BFFA8FD32FFA9A9FD05FFA8A8A87DFF7DFFA8FFFFFFA8FD24FFA8
%A8FD0BFFA8FD3BFFA9FD06FFFD04A87DA8FFFFA8FD0EFFA8525252A8FD0C
%FFA8FF7DA8FD04FF7D52FFA852FF7D7DFD05FF7D7DFFA8FFFFFFA8FFA8FD
%35FFA8FD08FFA8FD05FFA8A97F7F7FA97F7F7FA97FA9FFFF7DFF7D7D527D
%A87D7D7D52FF7D7DA87DA8767DA852A87D7D7DFFFF7D7DFFA87D7D527DA1
%7DA8A8FD057DA8FD42FFA8FFFFFFFD0B55FFFF7DFFA852FF52FF76A87D7D
%27A8FF7D527D7DA8527D52A8A87DFFFF5252A8FF52FF7D7DA8A87D7DFFFD
%047DFFA8FD35FFA8FD1CFF4BFFA852FF7D7D5252A87D5252A8527D527D7D
%7DA8A8527D52FFA852A87D7D52A8FF52FFFD057DFF52A8FD38FFA8FD0CFF
%A8FD0DFFA8A8A8FF7DFFFD05A8FFA8A87DFD0CA8FF7DFFFFA87DFFA8A8FF
%A8A8FF7DFFFFA8FFFFA8FD73FFA8A8FD41FFA8FD0EFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD40FFA8FD78FFFD04
%A87DA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8A8FFFFA8A8A87DA8A8FFA8FD17FFA8FD5BFFA8FD04FFA8A8FFA87DA8
%FD81FFA8FD15FFA8FFA8FD17FFA8FD15FFA8FFA8FD2DFFA8FFA8FD06FFA8
%7DA8FD14FFA87D7D7DFD13FFA87D7D7DA8FD13FF7DA87DA8FD13FFA8527E
%7DA8FD12FF7DA8FD047DFD06FFA87DA8FD14FFA8A87DA8FD13FFA852A87D
%A8FD13FF7D7DA8A8FD13FFA87D7DA8A8FD13FF7DA87DA87DFD06FFA8A8A8
%FD14FFFD04A8FD14FFFD04A8FD13FFA8A87EA8FD14FFA8A87DFD13FFA8FF
%FD04A8FDFCFFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-15T00:59:42-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7vqel+ZhHKtub25n/Siz&#xA;Wk63Coq2/pxchIqz2y+nyDjj6clOvpmuKq3lm38w2Gn6lLex3CXCxIYhe3H1oPcRxt6ssdJZOETv&#xA;SiVWn8oxVkipqHEcpoi3ciJgPu9Q4q3wvv8AfsX/ACLb/qpiruF9/v2L/kW3/VTFXcL7/fsX/Itv&#xA;+qmKu4X3+/Yv+Rbf9VMVWyLqIUcJIiarUGNuhIqf7zsMVXcL7/fsX/Itv+qmKu4X3+/Yv+Rbf9VM&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 7.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BookAntiqua</stFnt:fontName>
                  <stFnt:fontFamily>Book Antiqua</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.35</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BKANT.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -278.891 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 278.891 li
354.622 278.891 li
354.622 0 li
cp
clp
20.875 261.519 mo
346.375 261.519 li
346.375 4.64404 li
20.875 4.64404 li
20.875 261.519 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
346.375 119.707 mo
343.509 102.425 li
346.375 113.474 li
346.375 119.707 li
323.59 123.186 mo
320.978 111.938 li
322.284 96.2939 li
323.59 96.644 li
326.164 102.874 li
323.59 123.186 li
336.61 132.342 mo
334.285 118.237 li
336.61 105.014 li
338.748 119.329 li
336.61 132.342 li
258.536 142.037 mo
258.45 141.576 li
258.438 141.578 li
258.49 141.242 li
258.536 142.037 li
257.821 145.509 mo
258.129 143.544 li
258.619 143.452 li
258.729 145.339 li
257.821 145.509 li
229.632 150.926 mo
227.887 150.599 li
228.109 148.732 li
228.564 148.818 li
228.669 149.026 li
228.939 148.888 li
229.981 149.084 li
230.131 148.284 li
230.453 148.121 li
230.087 147.4 li
228.235 147.664 li
229.195 139.583 li
231.421 150.031 li
231.3 149.794 li
229.517 150.698 li
229.632 150.926 li
245.694 156.683 mo
245.245 156.557 li
244.938 156.168 li
245.47 155.243 li
245.694 156.683 li
289.579 192.289 mo
287.785 178.806 li
284.53 174.582 li
284.362 174.776 li
284.53 173.785 li
287.785 169.844 li
289.579 192.289 li
326.845 213.322 mo
325.587 210.41 li
326.845 202.438 li
328.296 211.695 li
326.845 213.322 li
310.57 214.373 mo
309.713 203.489 li
310.57 204.762 li
311.465 210.672 li
310.57 214.373 li
320.335 221.74 mo
318.689 215.289 li
320.335 198.716 li
322.195 212.625 li
320.335 221.74 li
333.355 222.731 mo
331.734 216.229 li
333.355 209.31 li
334.755 221.734 li
333.355 222.731 li
300.805 222.967 mo
297.55 194.682 li
294.624 201.5 li
297.55 170.188 li
300.805 210.361 li
302.219 211.457 li
300.805 222.967 li
343.12 225.601 mo
342.793 222.448 li
343.12 222.64 li
344.128 220.292 li
343.12 225.601 li
43.3271 44.814 mo
41.3472 45.1011 li
41.6162 46.9561 li
43.5962 46.6699 li
43.3271 44.814 li
43.8638 48.5249 mo
41.8848 48.812 li
42.1538 50.668 li
44.1328 50.3809 li
43.8638 48.5249 li
44.4019 52.2368 mo
42.4219 52.5229 li
42.6689 54.2271 li
42.687 54.3652 li
44.6699 54.1069 li
44.6519 53.9639 li
44.6499 53.9492 li
44.4019 52.2368 li
44.9121 55.9658 mo
42.9292 56.2241 li
43.1699 58.084 li
45.1538 57.8262 li
44.9121 55.9658 li
45.395 59.6851 mo
43.4121 59.9429 li
43.6538 61.8022 li
45.6372 61.5449 li
45.395 59.6851 li
45.8789 63.4043 mo
43.895 63.6621 li
44.1372 65.521 li
46.1201 65.2632 li
45.8789 63.4043 li
46.3618 67.123 mo
44.3789 67.3799 li
44.6201 69.2402 li
46.603 68.9819 li
46.3618 67.123 li
46.8452 70.8413 mo
44.8618 71.0991 li
45.104 72.959 li
47.0869 72.7012 li
46.8452 70.8413 li
47.3281 74.5601 mo
45.3452 74.8179 li
45.5869 76.6772 li
47.5698 76.4189 li
47.3281 74.5601 li
47.812 78.2788 mo
45.8291 78.5371 li
45.9229 79.2671 li
45.9292 79.3042 li
46.1191 80.4272 li
48.0908 80.0942 li
47.9038 78.9902 li
47.812 78.2788 li
48.4028 81.9429 mo
46.4312 82.2759 li
46.7432 84.125 li
48.7148 83.792 li
48.4028 81.9429 li
49.0278 85.6401 mo
47.0562 85.9741 li
47.3682 87.8223 li
49.3398 87.4893 li
49.0278 85.6401 li
49.6528 89.3379 mo
47.6812 89.6709 li
47.9932 91.52 li
49.9648 91.187 li
49.6528 89.3379 li
50.2769 93.0361 mo
48.3052 93.3691 li
48.6182 95.2183 li
50.5898 94.8843 li
50.2769 93.0361 li
49.1831 98.5649 mo
49.2402 98.9102 li
51.2129 98.5879 li
51.1572 98.2422 li
51.1563 98.2368 li
50.9019 96.7329 li
48.9302 97.0659 li
49.1841 98.5698 li
49.1831 98.5649 li
51.5161 100.438 mo
49.542 100.761 li
49.8452 102.611 li
51.8179 102.288 li
51.5161 100.438 li
52.1211 104.139 mo
50.147 104.462 li
50.4502 106.312 li
52.4238 105.989 li
52.1211 104.139 li
52.7261 107.84 mo
50.752 108.162 li
51.0552 110.013 li
53.0288 109.69 li
52.7261 107.84 li
53.3311 111.541 mo
51.3569 111.863 li
51.6602 113.714 li
53.6338 113.391 li
53.3311 111.541 li
53.936 115.241 mo
51.9629 115.564 li
52.2651 117.415 li
54.2388 117.092 li
53.936 115.241 li
54.5918 118.844 mo
52.6528 119.335 li
53.1138 121.153 li
55.0522 120.661 li
54.5918 118.844 li
55.5132 122.479 mo
53.5742 122.97 li
54.0352 124.788 li
55.9741 124.296 li
55.5132 122.479 li
56.4341 126.114 mo
54.4951 126.605 li
54.9561 128.423 li
56.895 127.932 li
56.4341 126.114 li
57.355 129.749 mo
55.417 130.24 li
55.7109 131.401 li
55.7222 131.441 li
55.915 132.091 li
57.832 131.519 li
57.644 130.889 li
57.355 129.749 li
185.484 132.249 mo
184.918 134.036 li
186.825 134.64 li
187.195 133.472 li
188.598 132.964 li
187.96 131.201 li
186.08 131.881 li
186.307 132.509 li
185.484 132.249 li
58.3682 133.316 mo
56.4512 133.887 li
56.9868 135.684 li
58.9038 135.113 li
58.3682 133.316 li
131.136 134.402 mo
130.549 134.454 li
130.706 136.225 li
132.698 136.047 li
132.541 134.277 li
130.557 134.214 li
130.542 134.311 li
131.136 134.402 li
63.1548 136.566 mo
63.2119 136.721 li
65.0918 136.04 li
64.4541 134.277 li
63.2148 134.726 li
61.9219 134.222 li
61.2412 135.969 li
63.105 136.695 li
63.1548 136.566 li
189.237 134.727 mo
187.356 135.408 li
187.994 137.171 li
189.875 136.49 li
189.237 134.727 li
184.352 135.824 mo
183.786 137.611 li
185.692 138.215 li
186.259 136.428 li
184.352 135.824 li
59.439 136.91 mo
57.5229 137.481 li
58.0581 139.278 li
59.9751 138.707 li
59.439 136.91 li
130.878 138.157 mo
131.038 139.96 li
133.031 139.783 li
132.865 137.915 li
132 137.992 li
132.234 136.468 li
130.257 136.164 li
129.972 138.017 li
130.878 138.157 li
60.5601 137.716 mo
59.8789 139.462 li
61.7432 140.189 li
62.4238 138.442 li
60.5601 137.716 li
65.73 137.803 mo
63.8501 138.484 li
64.4878 140.248 li
66.3691 139.566 li
65.73 137.803 li
190.513 138.253 mo
188.633 138.934 li
189.168 140.413 li
189.196 140.557 li
191.159 140.174 li
191.117 139.954 li
191.075 139.805 li
190.513 138.253 li
183.907 141.519 mo
184.578 141.732 li
185.126 140.003 li
183.219 139.399 li
182.672 141.128 li
182.63 141.332 li
182.624 141.392 li
183.907 141.519 li
69.0801 139.361 mo
67.897 140.295 li
69.1362 141.864 li
70.3198 140.931 li
69.9648 140.481 li
70.7402 140.378 li
70.6909 140.013 li
69.0801 139.361 li
60.5112 140.503 mo
58.5942 141.075 li
58.9771 142.358 li
60.8672 142.435 li
61.061 141.936 li
60.771 141.823 li
60.8931 141.786 li
60.5112 140.503 li
66.229 141.611 mo
65.126 142.01 li
65.5049 143.055 li
67.0649 143.5 li
67.6641 143.026 li
67.2021 142.44 li
67.3848 142.375 li
67.0068 141.329 li
66.4771 141.521 li
66.4248 141.457 li
66.229 141.611 li
131.22 142.003 mo
131.371 143.695 li
133.363 143.518 li
133.197 141.65 li
131.414 141.809 li
131.665 140.174 li
129.688 139.871 li
129.403 141.724 li
131.22 142.003 li
191.518 142.014 mo
189.555 142.397 li
189.914 144.238 li
191.877 143.855 li
191.518 142.014 li
70.9878 142.236 mo
69.0049 142.5 li
69.2529 144.359 li
71.2358 144.095 li
70.9878 142.236 li
182.438 143.258 mo
182.253 145.123 li
184.243 145.321 li
184.429 143.455 li
182.438 143.258 li
129.118 143.577 mo
128.834 145.43 li
130.811 145.734 li
131.095 143.881 li
129.118 143.577 li
133.529 145.386 mo
131.537 145.563 li
131.703 147.43 li
133.695 147.253 li
133.529 145.386 li
192.236 145.695 mo
190.273 146.078 li
190.631 147.918 li
192.595 147.535 li
192.236 145.695 li
71.4839 145.953 mo
69.501 146.218 li
69.749 148.076 li
71.731 147.812 li
71.4839 145.953 li
182.068 146.989 mo
181.882 148.855 li
183.872 149.053 li
184.058 147.187 li
182.068 146.989 li
128.549 147.284 mo
128.265 149.137 li
130.241 149.441 li
130.526 147.587 li
128.549 147.284 li
167.082 149.481 mo
167.516 149.848 li
167.91 149.381 li
168.456 149.315 li
168.343 148.375 li
166.586 147.849 li
165.988 148.557 li
166.391 148.898 li
166.471 149.555 li
167.082 149.481 li
133.861 149.121 mo
131.869 149.298 li
132.035 151.167 li
134.027 150.988 li
133.861 149.121 li
192.953 149.376 mo
190.99 149.759 li
191.349 151.599 li
193.313 151.216 li
192.953 149.376 li
71.979 149.67 mo
69.9971 149.935 li
70.2451 151.793 li
72.2271 151.529 li
71.979 149.67 li
81.7119 150.242 mo
79.8721 150.605 li
80.2598 152.567 li
82.0991 152.204 li
81.7119 150.242 li
164.778 149.989 mo
163.568 151.422 li
165.096 152.712 li
166.306 151.28 li
164.778 149.989 li
181.697 150.721 mo
181.511 152.587 li
183.501 152.785 li
183.687 150.919 li
181.697 150.721 li
218.556 150.607 mo
216.617 151.099 li
217.078 152.917 li
219.017 152.425 li
218.556 150.607 li
127.98 150.99 mo
127.695 152.844 li
129.672 153.147 li
129.957 151.294 li
127.98 150.99 li
168.681 151.177 mo
166.695 151.417 li
166.92 153.278 li
168.906 153.039 li
168.681 151.177 li
149.791 151.354 mo
149.308 153.166 li
151.24 153.681 li
151.443 152.919 li
152.615 152.649 li
152.194 150.822 li
150.245 151.271 li
150.295 151.488 li
149.791 151.354 li
84.0659 151.593 mo
82.249 152.43 li
83.0342 154.133 li
84.8501 153.296 li
84.0659 151.593 li
213.393 152.19 mo
212.932 154.008 li
214.871 154.5 li
215.332 152.682 li
213.393 152.19 li
77.915 152.141 mo
76.8149 153.66 li
78.4351 154.833 li
79.5352 153.314 li
77.915 152.141 li
220.174 152.466 mo
219.608 154.254 li
221.515 154.858 li
222.081 153.07 li
220.174 152.466 li
104.382 152.814 mo
104.185 154.678 li
106.174 154.888 li
106.254 154.134 li
106.988 153.985 li
106.615 152.148 li
104.655 152.545 li
104.717 152.849 li
104.382 152.814 li
134.193 152.856 mo
132.201 153.033 li
132.367 154.901 li
134.359 154.724 li
134.193 152.856 li
193.671 153.056 mo
191.708 153.439 li
192.066 155.28 li
194.03 154.897 li
193.671 153.056 li
162.319 152.694 mo
160.984 154.011 li
162.389 155.435 li
163.724 154.118 li
162.319 152.694 li
72.4751 153.387 mo
70.4932 153.652 li
70.7412 155.51 li
72.7231 155.246 li
72.4751 153.387 li
114.761 153.414 mo
113.454 154.186 li
114.473 155.908 li
115.779 155.134 li
115.461 154.596 li
116.325 154.397 li
116.245 154.049 li
114.761 153.414 li
181.326 154.452 mo
181.14 156.318 li
183.131 156.516 li
183.316 154.65 li
181.326 154.452 li
153.036 154.476 mo
151.087 154.926 li
151.508 156.753 li
153.457 156.304 li
153.036 154.476 li
127.411 154.697 mo
127.312 155.338 li
127.001 156.381 li
128.918 156.953 li
129.248 155.844 li
129.278 155.71 li
129.387 155 li
127.411 154.697 li
169.13 154.9 mo
167.145 155.139 li
167.369 157.001 li
169.355 156.761 li
169.13 154.9 li
95.7769 155.916 mo
96.4019 157.149 li
98.186 156.245 li
97.3379 154.572 li
96.377 155.059 li
96.6182 154.204 li
94.6919 153.662 li
94.1841 155.467 li
95.7769 155.916 li
148.825 154.977 mo
148.341 156.789 li
150.274 157.304 li
150.757 155.492 li
148.825 154.977 li
85.6348 155 mo
83.8179 155.836 li
84.603 157.539 li
86.4199 156.702 li
85.6348 155 li
75.7148 155.178 mo
75.3999 155.614 li
75.2778 155.837 li
74.793 157.083 li
76.6563 157.809 li
77.0952 156.683 li
77.335 156.351 li
75.7148 155.178 li
111.841 155.141 mo
111.506 155.34 li
111.052 155.929 li
110.65 157.359 li
112.575 157.901 li
112.978 156.471 li
112.558 156.353 li
111.841 155.141 li
212.472 155.825 mo
212.011 157.643 li
213.95 158.134 li
214.41 156.317 li
212.472 155.825 li
159.632 155.666 mo
158.712 157.299 li
160.455 158.28 li
161.375 156.647 li
159.632 155.666 li
219.423 158.125 mo
218.46 158.369 li
218.461 158.372 li
220.383 158.429 li
220.948 156.645 li
219.473 156.178 li
219.938 156.06 li
219.477 154.242 li
217.538 154.734 li
217.999 156.551 li
218.957 156.308 li
218.477 157.825 li
219.423 158.125 li
116.746 156.224 mo
114.797 156.673 li
115.217 158.5 li
117.167 158.051 li
116.746 156.224 li
103.988 156.543 mo
103.792 158.408 li
105.781 158.618 li
105.841 158.044 li
107.733 157.66 li
107.36 155.823 li
105.4 156.22 li
105.498 156.702 li
103.988 156.543 li
134.525 156.591 mo
132.533 156.768 li
132.699 158.636 li
134.691 158.459 li
134.525 156.591 li
194.322 156.469 mo
192.538 157.373 li
193.385 159.045 li
195.169 158.141 li
194.322 156.469 li
72.9712 157.104 mo
70.9878 157.369 li
71.2358 159.227 li
73.2188 158.963 li
72.9712 157.104 li
93.6758 157.272 mo
93.168 159.077 li
95.0928 159.619 li
95.6011 157.814 li
93.6758 157.272 li
180.955 158.184 mo
180.77 160.05 li
182.76 160.249 li
182.945 158.382 li
180.955 158.184 li
153.878 158.131 mo
151.929 158.58 li
152.35 160.407 li
154.298 159.958 li
153.878 158.131 li
99.0332 157.917 mo
97.249 158.821 li
98.0972 160.494 li
99.8809 159.59 li
99.0332 157.917 li
126.465 158.178 mo
125.93 159.975 li
127.846 160.546 li
128.382 158.75 li
126.465 158.178 li
176.533 159.724 mo
176.705 160.609 li
178.668 160.226 li
178.31 158.386 li
177.246 158.593 li
175.859 157.421 li
174.649 158.854 li
176.177 160.144 li
176.533 159.724 li
169.58 158.623 mo
167.594 158.862 li
167.819 160.724 li
169.804 160.484 li
169.58 158.623 li
143.888 160.148 mo
144.552 160.803 li
144.886 160.464 li
145.245 160.578 li
145.467 159.876 li
145.957 159.379 li
145.267 158.699 li
143.612 159.109 li
143.338 159.974 li
143.888 160.148 li
87.2349 158.162 mo
85.6152 159.334 li
86.7148 160.853 li
88.334 159.68 li
87.2349 158.162 li
147.858 158.6 mo
147.375 160.412 li
149.307 160.927 li
149.79 159.116 li
147.858 158.6 li
211.022 158.351 mo
209.55 159.513 li
210.789 161.083 li
212.26 159.921 li
211.022 158.351 li
74.1108 158.83 mo
73.4302 160.577 li
75.2939 161.303 li
75.9751 159.556 li
74.1108 158.83 li
110.142 159.164 mo
109.633 160.969 li
111.558 161.511 li
112.067 159.707 li
110.142 159.164 li
157.792 158.933 mo
156.872 160.566 li
158.614 161.548 li
159.535 159.914 li
157.792 158.933 li
108.105 159.499 mo
106.145 159.895 li
106.518 161.733 li
108.478 161.336 li
108.105 159.499 li
117.587 159.878 mo
115.638 160.327 li
116.059 162.154 li
118.008 161.705 li
117.587 159.878 li
103.595 160.272 mo
103.398 162.137 li
105.387 162.347 li
105.584 160.482 li
103.595 160.272 li
134.857 160.327 mo
132.865 160.504 li
133.031 162.371 li
135.024 162.194 li
134.857 160.327 li
196.017 159.814 mo
194.233 160.718 li
195.081 162.39 li
196.865 161.486 li
196.017 159.814 li
208.151 160.218 mo
206.407 160.906 li
207.141 162.766 li
208.885 162.078 li
208.151 160.218 li
173.439 160.286 mo
173.096 160.692 li
172.886 161.113 li
172.584 162.422 li
174.533 162.871 li
174.78 161.798 li
174.967 161.577 li
173.439 160.286 li
92.6602 160.881 mo
92.1509 162.686 li
94.0771 163.228 li
94.585 161.423 li
92.6602 160.881 li
147.291 160.696 mo
145.887 162.12 li
147.118 163.334 li
148.786 162.88 li
148.824 162.739 li
147.938 162.503 li
148.522 161.91 li
147.291 160.696 li
100.251 161.753 mo
98.272 162.039 li
98.541 163.895 li
100.52 163.608 li
100.251 161.753 li
89.4341 161.199 mo
87.814 162.373 li
88.4199 163.209 li
88.6108 163.407 li
89.271 163.929 li
90.5098 162.359 li
89.958 161.923 li
89.4341 161.199 li
180.584 161.917 mo
180.399 163.782 li
182.389 163.979 li
182.574 162.114 li
180.584 161.917 li
125.394 161.772 mo
124.858 163.569 li
126.775 164.14 li
127.31 162.343 li
125.394 161.772 li
142.772 161.761 mo
142.205 163.549 li
144.112 164.153 li
144.678 162.365 li
142.772 161.761 li
198.672 161.845 mo
196.832 162.208 li
197.219 164.17 li
199.059 163.807 li
198.672 161.845 li
179.027 162.066 mo
177.064 162.449 li
177.423 164.291 li
179.386 163.907 li
179.027 162.066 li
170.029 162.346 mo
168.043 162.585 li
168.268 164.447 li
170.254 164.207 li
170.029 162.346 li
121.883 162.782 mo
121.825 162.814 li
122.745 164.448 li
124.488 163.466 li
123.568 161.833 li
122.016 162.707 li
122.699 161.091 li
120.856 160.313 li
120.127 162.041 li
121.883 162.782 li
155.037 163.636 mo
155.847 164.457 li
157.182 163.14 li
155.777 161.716 li
154.902 162.579 li
154.719 161.785 li
152.771 162.234 li
153.191 164.061 li
155.037 163.636 li
72.5498 162.835 mo
72.0679 164.071 li
73.9312 164.797 li
74.6128 163.05 li
73.6758 162.685 li
73.7148 162.68 li
73.4668 160.822 li
71.4839 161.086 li
71.7319 162.944 li
72.5498 162.835 li
204.626 162.114 mo
203.154 163.276 li
204.393 164.846 li
205.865 163.684 li
204.626 162.114 li
201.115 162.179 mo
200.097 163.901 li
201.71 164.856 li
202.729 163.134 li
201.115 162.179 li
108.851 163.173 mo
106.89 163.571 li
107.263 165.408 li
109.223 165.011 li
109.167 164.734 li
110.542 165.121 li
111.05 163.316 li
109.125 162.774 li
108.918 163.508 li
108.851 163.173 li
91.9819 163.52 mo
90.7432 165.09 li
91.8652 165.976 li
93.4482 165.462 li
93.5679 165.033 li
92.7842 164.812 li
93.105 164.406 li
91.9819 163.52 li
103.201 164.002 mo
103.004 165.866 li
104.993 166.076 li
105.19 164.212 li
103.201 164.002 li
135.19 164.062 mo
133.197 164.239 li
133.364 166.107 li
135.356 165.929 li
135.19 164.062 li
118.711 165.392 mo
118.667 165.495 li
120.51 166.273 li
121.239 164.546 li
119.397 163.767 li
118.806 165.167 li
118.429 163.533 li
116.48 163.982 li
116.901 165.809 li
118.711 165.392 li
172.163 164.25 mo
171.742 166.076 li
173.691 166.525 li
174.112 164.698 li
172.163 164.25 li
124.198 165.781 mo
123.666 166.082 li
124.164 166.966 li
125.993 166.761 li
126.239 165.937 li
125.807 165.808 li
125.408 165.1 li
124.724 165.485 li
124.322 165.365 li
124.198 165.781 li
136.746 164.919 mo
135.899 166.591 li
137.683 167.495 li
138.152 166.57 li
138.724 167.473 li
140.413 166.403 li
139.41 164.819 li
138.138 165.625 li
136.746 164.919 li
100.789 165.464 mo
98.8101 165.751 li
99.0781 167.606 li
101.058 167.32 li
100.789 165.464 li
141.639 165.336 mo
141.073 167.125 li
142.979 167.728 li
143.546 165.94 li
141.639 165.336 li
179.745 165.748 mo
177.781 166.13 li
178.14 167.97 li
180.103 167.587 li
180.09 167.519 li
182.018 167.711 li
182.203 165.845 li
180.213 165.647 li
180.048 167.306 li
179.745 165.748 li
107.88 167.196 mo
107.635 167.246 li
107.78 167.958 li
109.723 168.031 li
110.034 166.926 li
108.109 166.383 li
107.88 167.196 li
170.478 166.069 mo
168.493 166.308 li
168.717 168.17 li
170.703 167.93 li
170.478 166.069 li
117.811 167.523 mo
117.322 167.636 li
117.55 168.626 li
119.446 168.792 li
119.78 168 li
119.424 167.849 li
119.271 167.187 li
118.355 167.398 li
117.938 167.222 li
117.811 167.523 li
102.807 167.731 mo
102.61 169.596 li
104.599 169.805 li
104.796 167.941 li
102.807 167.731 li
171.321 167.903 mo
170.9 169.731 li
172.849 170.18 li
173.27 168.352 li
171.321 167.903 li
141.417 167.986 mo
139.727 169.057 li
140.465 170.221 li
142.263 169.988 li
142.413 169.515 li
141.858 169.339 li
142.155 169.151 li
141.417 167.986 li
134.277 169.791 mo
134.203 169.936 li
135.987 170.84 li
136.835 169.168 li
135.587 168.536 li
135.522 167.797 li
133.53 167.974 li
133.696 169.842 li
134.277 169.791 li
101.326 169.175 mo
99.3472 169.462 li
99.6162 171.318 li
101.595 171.031 li
101.326 169.175 li
179.825 169.552 mo
178.499 169.811 li
178.858 171.651 li
180.508 171.329 li
181.647 171.443 li
181.833 169.577 li
180.465 169.441 li
180.462 169.428 li
180.419 169.436 li
179.842 169.379 li
179.825 169.552 li
102.413 171.46 mo
102.216 173.325 li
104.205 173.535 li
104.402 171.67 li
102.413 171.46 li
179.438 173.448 mo
179.217 173.491 li
179.388 174.373 li
181.365 174.28 li
181.462 173.308 li
181.214 173.284 li
181.18 173.109 li
180.596 173.222 li
179.471 173.111 li
179.438 173.448 li
101.864 172.887 mo
99.8848 173.173 li
100.153 175.029 li
102.133 174.742 li
101.864 172.887 li
170.881 173.574 mo
169.391 173.754 li
169.612 175.586 li
171.579 175.69 li
171.586 175.661 li
170.693 175.455 li
171.598 175.346 li
171.398 173.694 li
172.007 173.834 li
172.428 172.007 li
170.982 171.674 li
171.152 171.653 li
170.927 169.792 li
168.942 170.031 li
169.167 171.893 li
170.437 171.739 li
170.058 173.385 li
170.881 173.574 li
101.863 176.676 mo
100.422 176.884 li
100.691 178.74 li
102.67 178.453 li
102.477 177.124 li
103.812 177.264 li
104.009 175.399 li
102.02 175.189 li
101.863 176.676 li
101.456 180.524 mo
100.96 180.596 li
101.228 182.451 li
103.208 182.166 li
103.032 180.953 li
103.418 180.993 li
103.615 179.129 li
101.626 178.919 li
101.456 180.524 li
102.25 240.338 mo
98.9951 201.934 li
95.7402 195.184 li
92.4849 211.633 li
89.23 219.595 li
85.9751 209.55 li
82.7202 189.36 li
79.4648 191.021 li
76.21 196.263 li
72.9551 232.534 li
69.7002 181.916 li
66.4448 179.027 li
63.1899 177.843 li
59.9351 182.447 li
56.6802 172.266 li
53.4248 161.642 li
50.1699 136.864 li
46.915 105.654 li
43.6602 77.0151 li
40.959 42.415 li
41.0791 43.2451 li
43.0581 42.959 li
42.7891 41.103 li
40.8779 41.3799 li
40.731 39.5059 li
42.521 39.2471 li
42.252 37.3921 li
40.585 37.6333 li
40.439 35.7603 li
41.9829 35.5361 li
41.7139 33.6802 li
39.7349 33.9673 li
39.7969 34.3921 li
37.2202 30.439 li
37.3101 30.2119 li
40.4048 27.9019 li
41.9038 29.332 li
40.4048 29.332 li
39.1299 29.332 li
39.1299 30.708 li
38.625 31.9893 li
40.0381 32.5459 li
40.2549 31.9971 li
41.4458 31.8252 li
41.395 31.4722 li
41.2832 31.3311 li
43.6602 31.3311 li
43.709 31.3311 li
46.915 52.3999 li
50.1699 59.4673 li
53.4248 74.3691 li
56.6802 89.4893 li
59.9351 101.158 li
63.1899 88.9629 li
66.4448 105.966 li
69.7002 97.8003 li
72.9551 94.9951 li
76.21 115.602 li
79.4648 111.874 li
82.7202 112.278 li
85.9751 105.816 li
89.23 104.554 li
92.4849 118.023 li
95.7402 111.504 li
98.9951 117.585 li
102.25 123.579 li
105.505 103.051 li
108.76 135.946 li
112.015 111.674 li
115.27 112.171 li
118.525 114.231 li
121.78 116.228 li
125.035 117.961 li
128.29 110.587 li
131.545 89.7993 li
134.8 111.083 li
138.055 114.815 li
141.31 130.769 li
144.565 104.157 li
147.82 130.058 li
151.075 110.068 li
154.33 114.604 li
157.585 117.152 li
160.84 105.244 li
162.536 104.362 li
164.095 113.384 li
166.257 103.985 li
167.35 104.204 li
170.605 115.913 li
173.86 109.018 li
175.192 110.178 li
177.115 127.075 li
178.555 118.447 li
180.37 126.76 li
183.282 109.433 li
183.625 109.653 li
186.88 115.383 li
190.135 120.825 li
193.39 120.01 li
196.645 121.508 li
199.9 136.762 li
202.717 122.969 li
203.155 124.468 li
203.415 123.161 li
206.41 150.069 li
209.665 142.361 li
212.92 135.708 li
214.879 146.325 li
214.775 146.738 li
214.964 146.786 li
215.339 148.815 li
214.314 148.555 li
213.854 150.373 li
215.713 150.844 li
216.175 153.346 li
216.886 149.096 li
218.095 148.791 li
217.635 146.972 li
217.225 147.076 li
219.43 133.9 li
222.685 145.987 li
223.037 148.262 li
221.788 148.496 li
221.898 149.078 li
221.307 148.891 li
220.741 150.679 li
222.647 151.283 li
222.997 150.177 li
223.325 150.116 li
223.612 151.97 li
222.48 152.182 li
222.826 154.025 li
223.899 153.823 li
224.186 155.677 li
223.172 155.868 li
223.518 157.71 li
224.473 157.531 li
224.761 159.385 li
223.864 159.553 li
224.21 161.396 li
225.048 161.239 li
225.327 163.038 li
225.316 163.096 li
224.556 163.239 li
224.902 165.083 li
225.622 164.946 li
225.94 166.996 li
226.196 164.839 li
226.868 164.713 li
226.683 163.727 li
227.214 163.826 li
227.559 161.984 li
226.557 161.796 li
226.779 159.929 li
227.905 160.141 li
228.251 158.298 li
227.001 158.063 li
227.222 156.197 li
228.597 156.455 li
228.943 154.612 li
227.444 154.332 li
227.665 152.465 li
229.289 152.77 li
229.634 150.931 li
230.364 152.37 li
231.767 151.659 li
232.046 152.966 li
231.858 152.903 li
231.526 153.884 li
231.212 154.043 li
231.558 154.726 li
232.408 154.666 li
232.45 154.863 li
235.705 157.675 li
238.96 158.162 li
242.215 160.904 li
242.628 160.185 li
242.835 160.196 li
243.314 159.818 li
243.039 159.47 li
244.046 157.72 li
244.785 158.657 li
245.869 157.802 li
248.725 176.135 li
251.783 159.411 li
252.746 159.199 li
255.235 162.002 li
257.517 147.448 li
257.52 147.467 li
258.84 147.228 li
258.95 149.113 li
257.854 149.312 li
258.188 151.157 li
259.06 151 li
259.17 152.885 li
258.522 153.002 li
258.856 154.847 li
259.281 154.77 li
259.391 156.656 li
259.19 156.692 li
259.489 158.345 li
261.745 196.939 li
265 170.806 li
268.255 184.683 li
271.51 187.321 li
272.706 192.783 li
271.51 197.684 li
268.255 221.5 li
265 194.512 li
261.745 223.08 li
258.49 197.082 li
255.235 171.442 li
251.98 214.222 li
248.725 191.907 li
245.47 206.607 li
242.215 200.558 li
238.96 220.547 li
235.705 212.264 li
232.45 202.204 li
229.195 202.873 li
225.94 208.736 li
222.685 186.609 li
219.43 212.95 li
216.175 184.844 li
212.92 216.246 li
209.665 216.643 li
206.41 214.901 li
203.155 204.104 li
199.9 211.126 li
196.645 210.461 li
193.39 198.709 li
190.135 188.873 li
186.88 177.219 li
183.625 175.097 li
180.37 220.865 li
177.115 202.44 li
173.86 212.767 li
170.605 233.858 li
167.35 192.15 li
164.095 200.372 li
160.84 205.052 li
157.585 204.888 li
154.33 213.68 li
151.075 190.246 li
147.82 194.84 li
144.565 213.675 li
141.31 208.107 li
138.055 213.476 li
134.8 229.688 li
131.545 178.297 li
128.29 199.873 li
125.035 214.221 li
121.78 204.519 li
118.525 221.615 li
115.27 195.801 li
112.015 200.082 li
108.76 199.241 li
105.505 199.594 li
102.25 240.338 li
.421149 .392065 0 0 cmyk
f
342.935 162.779 mo
344.407 161.617 li
345.646 163.187 li
344.174 164.349 li
342.935 162.779 li
341.547 160.95 mo
342.881 162.266 li
341.477 163.69 li
340.142 162.375 li
341.547 160.95 li
337.382 161.381 mo
338.854 160.22 li
340.092 161.791 li
338.621 162.952 li
337.382 161.381 li
335.059 164.848 mo
335.626 163.06 li
337.532 163.664 li
336.966 165.452 li
335.059 164.848 li
333.927 168.423 mo
334.493 166.635 li
336.4 167.239 li
335.834 169.027 li
333.927 168.423 li
332.794 171.998 mo
333.361 170.21 li
335.267 170.814 li
334.701 172.602 li
332.794 171.998 li
333.69 170.916 mo
334.173 172.726 li
332.241 173.242 li
331.757 171.43 li
333.69 170.916 li
332.723 167.292 mo
333.207 169.103 li
331.274 169.619 li
330.791 167.807 li
332.723 167.292 li
331.757 163.668 mo
332.24 165.48 li
330.308 165.995 li
329.824 164.184 li
331.757 163.668 li
329.688 159.931 mo
330.609 160.477 li
331.066 161.08 li
331.273 161.856 li
329.341 162.373 li
329.239 161.99 li
328.669 161.653 li
329.688 159.931 li
327.362 158.065 mo
327.638 158.719 li
328.074 158.976 li
327.055 160.698 li
326.336 160.272 li
325.924 159.8 li
325.519 158.843 li
327.362 158.065 li
325.903 154.61 mo
326.632 156.338 li
324.79 157.116 li
324.06 155.389 li
325.903 154.61 li
322.601 151.476 mo
322.669 151.316 li
324.511 151.316 li
325.173 152.883 li
323.331 153.661 li
322.669 152.094 li
323.59 151.705 li
324.511 152.094 li
324.444 152.254 li
322.601 151.476 li
321.142 154.93 mo
321.872 153.203 li
323.714 153.981 li
322.985 155.708 li
321.142 154.93 li
319.683 158.385 mo
320.413 156.657 li
322.255 157.436 li
321.526 159.163 li
319.683 158.385 li
318.213 156.993 mo
319.826 157.948 li
318.808 159.669 li
317.194 158.714 li
318.213 156.993 li
315.325 154.825 mo
316.796 155.987 li
315.557 157.557 li
314.086 156.395 li
315.325 154.825 li
312.181 157.198 mo
312.664 155.387 li
314.597 155.902 li
314.114 157.714 li
312.181 157.198 li
311.215 160.822 mo
311.698 159.01 li
313.63 159.525 li
313.147 161.337 li
311.215 160.822 li
310.248 164.445 mo
310.731 162.633 li
312.664 163.149 li
312.18 164.96 li
310.248 164.445 li
311.417 165.758 mo
311.563 167 li
310.57 167.117 li
309.604 166.86 li
309.765 166.256 li
311.697 166.772 li
311.536 167.375 li
309.577 167.235 li
309.431 165.992 li
311.417 165.758 li
310.978 162.034 mo
311.197 163.896 li
309.211 164.13 li
308.992 162.268 li
310.978 162.034 li
310.539 158.31 mo
310.758 160.172 li
308.772 160.406 li
308.552 158.544 li
310.539 158.31 li
310.1 154.586 mo
310.319 156.448 li
308.333 156.682 li
308.113 154.82 li
310.1 154.586 li
309.661 150.861 mo
309.88 152.724 li
307.894 152.958 li
307.674 151.096 li
309.661 150.861 li
309.222 147.137 mo
309.441 149 li
307.455 149.234 li
307.236 147.371 li
309.222 147.137 li
308.783 143.413 mo
309.002 145.275 li
307.016 145.509 li
306.797 143.647 li
308.783 143.413 li
308.344 139.689 mo
308.563 141.551 li
306.577 141.785 li
306.357 139.923 li
308.344 139.689 li
305.755 142.734 mo
306.067 140.885 li
308.039 141.218 li
307.727 143.067 li
305.755 142.734 li
305.13 146.432 mo
305.443 144.583 li
307.415 144.917 li
307.102 146.765 li
305.13 146.432 li
304.506 150.129 mo
304.818 148.281 li
306.79 148.614 li
306.478 150.462 li
304.506 150.129 li
303.881 153.827 mo
304.193 151.978 li
306.165 152.311 li
305.853 154.16 li
303.881 153.827 li
303.256 157.524 mo
303.568 155.676 li
305.54 156.009 li
305.228 157.858 li
303.256 157.524 li
302.409 161.078 mo
302.892 159.267 li
304.825 159.782 li
304.341 161.594 li
302.409 161.078 li
301.442 164.701 mo
301.926 162.89 li
303.858 163.405 li
303.375 165.217 li
301.442 164.701 li
300.476 168.325 mo
300.959 166.513 li
302.892 167.029 li
302.408 168.84 li
300.476 168.325 li
301.477 169.493 mo
301.777 170.736 li
300.805 170.971 li
299.839 170.713 li
299.993 170.136 li
301.925 170.652 li
301.771 171.228 li
299.833 171.205 li
299.533 169.962 li
301.477 169.493 li
300.597 165.848 mo
301.037 167.67 li
299.093 168.14 li
298.653 166.317 li
300.597 165.848 li
299.717 162.202 mo
300.157 164.025 li
298.213 164.494 li
297.773 162.672 li
299.717 162.202 li
298.838 158.557 mo
299.277 160.38 li
297.333 160.849 li
296.893 159.026 li
298.838 158.557 li
295.042 158.19 mo
296.514 157.028 li
297.753 158.598 li
296.281 159.76 li
295.042 158.19 li
292.286 159.053 mo
294.161 159.053 li
294.161 161.053 li
292.286 161.053 li
292.286 159.053 li
291.561 157.408 mo
291.907 159.251 li
289.941 159.62 li
289.595 157.777 li
291.561 157.408 li
290.869 153.722 mo
291.215 155.565 li
289.249 155.934 li
288.903 154.091 li
290.869 153.722 li
290.177 150.037 mo
290.523 151.88 li
288.557 152.25 li
288.211 150.406 li
290.177 150.037 li
289.485 146.351 mo
289.831 148.194 li
287.866 148.563 li
287.52 146.72 li
289.485 146.351 li
288.793 142.667 mo
289.139 144.508 li
287.174 144.877 li
286.828 143.035 li
288.793 142.667 li
286.218 139.31 mo
287.428 140.742 li
285.9 142.033 li
284.69 140.6 li
286.218 139.31 li
282.445 140.284 mo
283.448 138.7 li
285.138 139.771 li
284.134 141.354 li
282.445 140.284 li
280.438 143.452 mo
281.441 141.868 li
283.131 142.938 li
282.127 144.522 li
280.438 143.452 li
280.12 140.307 mo
281.124 141.891 li
279.434 142.962 li
278.431 141.378 li
280.12 140.307 li
277.878 137.143 mo
278.784 138.216 li
278.865 138.326 li
279.117 138.724 li
277.427 139.794 li
277.212 139.454 li
276.35 138.434 li
277.878 137.143 li
273.763 134.917 mo
273.785 134.809 li
275.529 134.363 li
276.668 135.711 li
275.14 137.001 li
274.001 135.653 li
274.765 135.008 li
275.745 135.207 li
275.723 135.315 li
273.763 134.917 li
273.018 138.593 mo
273.39 136.755 li
275.351 137.153 li
274.978 138.99 li
273.018 138.593 li
272.273 142.268 mo
272.645 140.43 li
274.605 140.828 li
274.233 142.666 li
272.273 142.268 li
271.528 145.943 mo
271.9 144.106 li
273.86 144.503 li
273.488 146.341 li
271.528 145.943 li
270.783 149.618 mo
271.155 147.781 li
273.115 148.178 li
272.743 150.016 li
270.783 149.618 li
269.624 152.957 mo
270.354 151.23 li
272.196 152.008 li
271.467 153.735 li
269.624 152.957 li
268.165 156.412 mo
268.895 154.684 li
270.737 155.463 li
270.008 157.19 li
268.165 156.412 li
268.848 156.966 mo
269.227 158.534 li
268.255 158.769 li
267.334 158.38 li
267.436 158.139 li
269.278 158.917 li
269.176 159.158 li
267.283 159.004 li
266.904 157.435 li
268.848 156.966 li
267.969 153.321 mo
268.409 155.143 li
266.465 155.613 li
266.025 153.791 li
267.969 153.321 li
267.089 149.675 mo
267.529 151.498 li
265.585 151.967 li
265.145 150.144 li
267.089 149.675 li
266.209 146.03 mo
266.649 147.853 li
264.705 148.322 li
264.265 146.5 li
266.209 146.03 li
263.571 147.826 mo
263.874 145.976 li
265.847 146.298 li
265.545 148.149 li
263.571 147.826 li
262.966 151.527 mo
263.268 149.677 li
265.242 150 li
264.94 151.85 li
262.966 151.527 li
262.361 155.228 mo
262.663 153.377 li
264.637 153.7 li
264.335 155.55 li
262.361 155.228 li
261.756 158.929 mo
262.058 157.078 li
264.032 157.401 li
263.729 159.251 li
261.756 158.929 li
261.15 162.63 mo
261.453 160.779 li
263.427 161.102 li
263.124 162.952 li
261.15 162.63 li
262.494 163.716 mo
262.729 165.013 li
261.745 165.191 li
260.758 165.03 li
260.848 164.48 li
262.822 164.803 li
262.732 165.352 li
260.761 165.369 li
260.526 164.072 li
262.494 163.716 li
261.826 160.026 mo
262.16 161.871 li
260.192 162.227 li
259.858 160.382 li
261.826 160.026 li
261.158 156.336 mo
261.492 158.181 li
259.524 158.537 li
259.19 156.692 li
261.158 156.336 li
260.49 152.646 mo
260.824 154.491 li
258.856 154.847 li
258.522 153.002 li
260.49 152.646 li
259.822 148.957 mo
260.156 150.801 li
258.188 151.157 li
257.854 149.312 li
259.822 148.957 li
259.142 145.261 mo
259.473 147.025 li
259.474 147.031 li
259.488 147.111 li
257.52 147.467 li
257.506 147.388 li
257.507 147.394 li
257.176 145.63 li
259.142 145.261 li
258.45 141.576 mo
258.796 143.418 li
256.83 143.787 li
256.484 141.945 li
258.45 141.576 li
257.758 137.89 mo
258.104 139.733 li
256.138 140.102 li
255.792 138.259 li
257.758 137.89 li
257.066 134.204 mo
257.412 136.047 li
255.446 136.416 li
255.1 134.573 li
257.066 134.204 li
256.374 130.519 mo
256.72 132.362 li
254.755 132.731 li
254.409 130.888 li
256.374 130.519 li
253.93 132.649 mo
254.131 130.785 li
256.119 130.999 li
255.918 132.864 li
253.93 132.649 li
253.527 136.378 mo
253.728 134.513 li
255.717 134.728 li
255.516 136.592 li
253.527 136.378 li
253.125 140.106 mo
253.327 138.242 li
255.315 138.457 li
255.114 140.32 li
253.125 140.106 li
252.723 143.834 mo
252.924 141.97 li
254.913 142.185 li
254.712 144.049 li
252.723 143.834 li
252.321 147.563 mo
252.522 145.699 li
254.511 145.914 li
254.31 147.777 li
252.321 147.563 li
251.919 151.292 mo
252.12 149.427 li
254.109 149.641 li
253.908 151.506 li
251.919 151.292 li
251.517 155.02 mo
251.718 153.155 li
253.707 153.37 li
253.506 155.234 li
251.517 155.02 li
251.115 158.749 mo
251.316 156.884 li
253.304 157.098 li
253.103 158.962 li
251.115 158.749 li
252.409 157.353 mo
252.813 159.184 li
250.859 159.614 li
250.456 157.783 li
252.409 157.353 li
251.602 153.691 mo
252.005 155.522 li
250.052 155.952 li
249.649 154.121 li
251.602 153.691 li
250.795 150.029 mo
251.198 151.86 li
249.245 152.291 li
248.842 150.459 li
250.795 150.029 li
249.988 146.367 mo
250.391 148.198 li
248.438 148.628 li
248.035 146.797 li
249.988 146.367 li
247.106 147.341 mo
247.615 145.537 li
249.54 146.079 li
249.032 147.884 li
247.106 147.341 li
246.09 150.951 mo
246.598 149.146 li
248.523 149.688 li
248.015 151.493 li
246.09 150.951 li
245.074 154.561 mo
245.582 152.756 li
247.507 153.298 li
246.999 155.103 li
245.074 154.561 li
243.546 157.087 mo
244.85 156.057 li
245.47 156.842 li
244.507 156.571 li
244.565 156.365 li
246.491 156.908 li
246.433 157.113 li
246.09 157.627 li
244.785 158.657 li
243.546 157.087 li
242.017 157.811 mo
242.917 158.699 li
242.215 159.411 li
241.595 158.626 li
242.075 158.248 li
243.314 159.818 li
242.835 160.196 li
241.513 160.123 li
240.612 159.235 li
242.017 157.811 li
239.803 155.503 mo
239.851 155.674 li
240.682 156.494 li
239.278 157.918 li
238.258 156.912 li
237.997 156.471 li
237.877 156.045 li
239.803 155.503 li
238.786 151.894 mo
239.294 153.699 li
237.369 154.241 li
236.861 152.436 li
238.786 151.894 li
237.77 148.284 mo
238.278 150.089 li
236.353 150.631 li
235.845 148.826 li
237.77 148.284 li
236.753 144.674 mo
237.262 146.479 li
235.336 147.021 li
234.828 145.217 li
236.753 144.674 li
233.658 147.574 mo
234.259 145.797 li
236.153 146.437 li
235.553 148.214 li
233.658 147.574 li
232.458 151.126 mo
233.058 149.35 li
234.953 149.99 li
234.353 151.766 li
232.458 151.126 li
232.996 153.139 mo
233.342 153.822 li
232.45 154.274 li
231.503 153.954 li
231.858 152.903 li
233.753 153.543 li
233.397 154.594 li
231.558 154.726 li
231.212 154.043 li
232.996 153.139 li
231.3 149.794 mo
232.148 151.466 li
230.364 152.37 li
229.517 150.698 li
231.3 149.794 li
228.016 148.715 mo
228.212 147.667 li
230.087 147.4 li
230.453 148.121 li
228.669 149.026 li
228.303 148.304 li
229.195 147.852 li
230.178 148.036 li
229.981 149.084 li
228.016 148.715 li
227.324 152.401 mo
227.67 150.558 li
229.635 150.927 li
229.289 152.77 li
227.324 152.401 li
226.632 156.086 mo
226.978 154.243 li
228.943 154.612 li
228.597 156.455 li
226.632 156.086 li
225.94 159.772 mo
226.286 157.929 li
228.251 158.298 li
227.905 160.141 li
225.94 159.772 li
225.248 163.457 mo
225.594 161.615 li
227.559 161.984 li
227.214 163.826 li
225.248 163.457 li
226.522 162.87 mo
226.868 164.713 li
224.902 165.083 li
224.556 163.239 li
226.522 162.87 li
225.83 159.184 mo
226.176 161.027 li
224.21 161.396 li
223.864 159.553 li
225.83 159.184 li
225.138 155.498 mo
225.484 157.341 li
223.518 157.71 li
223.172 155.868 li
225.138 155.498 li
224.446 151.813 mo
224.792 153.656 li
222.826 154.025 li
222.48 152.182 li
224.446 151.813 li
223.754 148.127 mo
224.1 149.97 li
222.134 150.339 li
221.788 148.496 li
223.754 148.127 li
220.741 150.679 mo
221.307 148.891 li
223.213 149.495 li
222.647 151.283 li
220.741 150.679 li
219.608 154.254 mo
220.174 152.466 li
222.081 153.07 li
221.515 154.858 li
219.608 154.254 li
220.398 157.877 mo
220.399 157.881 li
219.43 158.127 li
218.477 157.825 li
219.042 156.042 li
220.948 156.645 li
220.383 158.429 li
218.461 158.372 li
218.46 158.369 li
220.398 157.877 li
219.477 154.242 mo
219.938 156.06 li
217.999 156.551 li
217.538 154.734 li
219.477 154.242 li
218.556 150.607 mo
219.017 152.425 li
217.078 152.917 li
216.617 151.099 li
218.556 150.607 li
217.635 146.972 mo
218.095 148.791 li
216.157 149.281 li
215.696 147.463 li
217.635 146.972 li
214.775 146.738 mo
215.206 145.037 li
217.144 145.037 li
217.174 145.155 li
215.235 145.646 li
215.206 145.529 li
216.175 145.283 li
217.144 145.529 li
216.713 147.229 li
214.775 146.738 li
213.854 150.373 mo
214.314 148.555 li
216.253 149.047 li
215.792 150.864 li
213.854 150.373 li
212.932 154.008 mo
213.393 152.19 li
215.332 152.682 li
214.871 154.5 li
212.932 154.008 li
212.011 157.643 mo
212.472 155.825 li
214.41 156.317 li
213.95 158.134 li
212.011 157.643 li
209.55 159.513 mo
211.022 158.351 li
212.26 159.921 li
210.789 161.083 li
209.55 159.513 li
206.407 160.906 mo
208.151 160.218 li
208.885 162.078 li
207.141 162.766 li
206.407 160.906 li
203.154 163.276 mo
204.626 162.114 li
205.865 163.684 li
204.393 164.846 li
203.154 163.276 li
201.115 162.179 mo
202.729 163.134 li
201.71 164.856 li
200.097 163.901 li
201.115 162.179 li
196.832 162.208 mo
198.672 161.845 li
199.059 163.807 li
197.219 164.17 li
196.832 162.208 li
196.017 159.814 mo
196.865 161.486 li
195.081 162.39 li
194.233 160.718 li
196.017 159.814 li
194.322 156.469 mo
195.169 158.141 li
193.385 159.045 li
192.538 157.373 li
194.322 156.469 li
193.671 153.056 mo
194.03 154.897 li
192.066 155.28 li
191.708 153.439 li
193.671 153.056 li
192.953 149.376 mo
193.313 151.216 li
191.349 151.599 li
190.99 149.759 li
192.953 149.376 li
192.236 145.695 mo
192.595 147.535 li
190.631 147.918 li
190.273 146.078 li
192.236 145.695 li
191.518 142.014 mo
191.877 143.855 li
189.914 144.238 li
189.555 142.397 li
191.518 142.014 li
190.513 138.253 mo
191.075 139.805 li
191.117 139.954 li
191.159 140.174 li
189.196 140.557 li
189.168 140.413 li
188.633 138.934 li
190.513 138.253 li
189.237 134.727 mo
189.875 136.49 li
187.994 137.171 li
187.356 135.408 li
189.237 134.727 li
187.96 131.201 mo
188.598 132.964 li
186.718 133.645 li
186.08 131.881 li
187.96 131.201 li
184.918 134.036 mo
185.484 132.249 li
187.391 132.853 li
186.825 134.64 li
184.918 134.036 li
183.786 137.611 mo
184.352 135.824 li
186.259 136.428 li
185.692 138.215 li
183.786 137.611 li
182.624 141.392 mo
182.63 141.332 li
182.672 141.128 li
183.219 139.399 li
185.126 140.003 li
184.578 141.732 li
183.625 141.43 li
184.62 141.529 li
184.614 141.59 li
182.624 141.392 li
182.253 145.123 mo
182.438 143.258 li
184.429 143.455 li
184.243 145.321 li
182.253 145.123 li
181.882 148.855 mo
182.068 146.989 li
184.058 147.187 li
183.872 149.053 li
181.882 148.855 li
181.511 152.587 mo
181.697 150.721 li
183.687 150.919 li
183.501 152.785 li
181.511 152.587 li
181.14 156.318 mo
181.326 154.452 li
183.316 154.65 li
183.131 156.516 li
181.14 156.318 li
180.77 160.05 mo
180.955 158.184 li
182.945 158.382 li
182.76 160.249 li
180.77 160.05 li
180.399 163.782 mo
180.584 161.917 li
182.574 162.114 li
182.389 163.979 li
180.399 163.782 li
180.028 167.513 mo
180.213 165.647 li
182.203 165.845 li
182.018 167.711 li
180.028 167.513 li
179.657 171.245 mo
179.842 169.379 li
181.833 169.577 li
181.647 171.443 li
179.657 171.245 li
181.18 173.109 mo
181.352 173.99 li
180.37 174.182 li
179.375 174.083 li
179.471 173.111 li
181.462 173.308 li
181.365 174.28 li
179.388 174.373 li
179.217 173.491 li
181.18 173.109 li
180.462 169.428 mo
180.821 171.268 li
178.858 171.651 li
178.499 169.811 li
180.462 169.428 li
179.745 165.748 mo
180.103 167.587 li
178.14 167.97 li
177.781 166.13 li
179.745 165.748 li
179.027 162.066 mo
179.386 163.907 li
177.423 164.291 li
177.064 162.449 li
179.027 162.066 li
178.31 158.386 mo
178.668 160.226 li
176.705 160.609 li
176.346 158.768 li
178.31 158.386 li
174.649 158.854 mo
175.859 157.421 li
177.387 158.712 li
176.177 160.144 li
174.649 158.854 li
172.584 162.422 mo
172.886 161.113 li
173.096 160.692 li
173.439 160.286 li
174.967 161.577 li
174.78 161.798 li
174.533 162.871 li
172.584 162.422 li
171.742 166.076 mo
172.163 164.25 li
174.112 164.698 li
173.691 166.525 li
171.742 166.076 li
170.9 169.731 mo
171.321 167.903 li
173.27 168.352 li
172.849 170.18 li
170.9 169.731 li
170.058 173.385 mo
170.479 171.558 li
172.428 172.007 li
172.007 173.834 li
170.058 173.385 li
171.377 173.515 mo
171.598 175.346 li
170.605 175.466 li
169.631 175.241 li
169.637 175.212 li
171.586 175.661 li
171.579 175.69 li
169.612 175.586 li
169.391 173.754 li
171.377 173.515 li
170.927 169.792 mo
171.152 171.653 li
169.167 171.893 li
168.942 170.031 li
170.927 169.792 li
170.478 166.069 mo
170.703 167.93 li
168.717 168.17 li
168.493 166.308 li
170.478 166.069 li
170.029 162.346 mo
170.254 164.207 li
168.268 164.447 li
168.043 162.585 li
170.029 162.346 li
169.58 158.623 mo
169.804 160.484 li
167.819 160.724 li
167.594 158.862 li
169.58 158.623 li
169.13 154.9 mo
169.355 156.761 li
167.369 157.001 li
167.145 155.139 li
169.13 154.9 li
168.681 151.177 mo
168.906 153.039 li
166.92 153.278 li
166.695 151.417 li
168.681 151.177 li
165.988 148.557 mo
166.586 147.849 li
168.343 148.375 li
168.456 149.315 li
166.471 149.555 li
166.357 148.614 li
167.35 148.494 li
168.114 149.139 li
167.516 149.848 li
165.988 148.557 li
163.568 151.422 mo
164.778 149.989 li
166.306 151.28 li
165.096 152.712 li
163.568 151.422 li
160.984 154.011 mo
162.319 152.694 li
163.724 154.118 li
162.389 155.435 li
160.984 154.011 li
158.712 157.299 mo
159.632 155.666 li
161.375 156.647 li
160.455 158.28 li
158.712 157.299 li
156.872 160.566 mo
157.792 158.933 li
159.535 159.914 li
158.614 161.548 li
156.872 160.566 li
154.442 163.033 mo
155.777 161.716 li
157.182 163.14 li
155.847 164.457 li
154.442 163.033 li
154.719 161.785 mo
155.14 163.612 li
153.191 164.061 li
152.771 162.234 li
154.719 161.785 li
153.878 158.131 mo
154.298 159.958 li
152.35 160.407 li
151.929 158.58 li
153.878 158.131 li
153.036 154.476 mo
153.457 156.304 li
151.508 156.753 li
151.087 154.926 li
153.036 154.476 li
152.194 150.822 mo
152.615 152.649 li
150.666 153.098 li
150.245 151.271 li
152.194 150.822 li
149.308 153.166 mo
149.791 151.354 li
151.724 151.869 li
151.24 153.681 li
149.308 153.166 li
148.341 156.789 mo
148.825 154.977 li
150.757 155.492 li
150.274 157.304 li
148.341 156.789 li
147.375 160.412 mo
147.858 158.6 li
149.79 159.116 li
149.307 160.927 li
147.375 160.412 li
147.291 160.696 mo
148.522 161.91 li
147.82 162.622 li
146.854 162.364 li
146.891 162.223 li
148.824 162.739 li
148.786 162.88 li
147.118 163.334 li
145.887 162.12 li
147.291 160.696 li
143.338 159.974 mo
143.612 159.109 li
145.267 158.699 li
145.957 159.379 li
144.552 160.803 li
143.863 160.123 li
144.565 159.411 li
145.518 159.713 li
145.245 160.578 li
143.338 159.974 li
142.205 163.549 mo
142.772 161.761 li
144.678 162.365 li
144.112 164.153 li
142.205 163.549 li
141.073 167.125 mo
141.639 165.336 li
143.546 165.94 li
142.979 167.728 li
141.073 167.125 li
141.417 167.986 mo
142.155 169.151 li
141.31 169.686 li
140.357 169.384 li
140.507 168.911 li
142.413 169.515 li
142.263 169.988 li
140.465 170.221 li
139.727 169.057 li
141.417 167.986 li
139.41 164.819 mo
140.413 166.403 li
138.724 167.473 li
137.72 165.889 li
139.41 164.819 li
135.899 166.591 mo
136.746 164.919 li
138.53 165.823 li
137.683 167.495 li
135.899 166.591 li
134.203 169.936 mo
135.051 168.264 li
136.835 169.168 li
135.987 170.84 li
134.203 169.936 li
135.522 167.797 mo
135.688 169.666 li
133.696 169.842 li
133.53 167.974 li
135.522 167.797 li
135.19 164.062 mo
135.356 165.929 li
133.364 166.107 li
133.197 164.239 li
135.19 164.062 li
134.857 160.327 mo
135.024 162.194 li
133.031 162.371 li
132.865 160.504 li
134.857 160.327 li
134.525 156.591 mo
134.691 158.459 li
132.699 158.636 li
132.533 156.768 li
134.525 156.591 li
134.193 152.856 mo
134.359 154.724 li
132.367 154.901 li
132.201 153.033 li
134.193 152.856 li
133.861 149.121 mo
134.027 150.988 li
132.035 151.167 li
131.869 149.298 li
133.861 149.121 li
133.529 145.386 mo
133.695 147.253 li
131.703 147.43 li
131.537 145.563 li
133.529 145.386 li
133.197 141.65 mo
133.363 143.518 li
131.371 143.695 li
131.205 141.827 li
133.197 141.65 li
132.865 137.915 mo
133.031 139.783 li
131.038 139.96 li
130.872 138.092 li
132.865 137.915 li
130.542 134.311 mo
130.557 134.214 li
132.541 134.277 li
132.698 136.047 li
130.706 136.225 li
130.549 134.454 li
131.545 134.366 li
132.533 134.518 li
132.518 134.614 li
130.542 134.311 li
129.972 138.017 mo
130.257 136.164 li
132.234 136.468 li
131.949 138.321 li
129.972 138.017 li
129.403 141.724 mo
129.688 139.871 li
131.665 140.174 li
131.38 142.028 li
129.403 141.724 li
128.834 145.43 mo
129.118 143.577 li
131.095 143.881 li
130.811 145.734 li
128.834 145.43 li
128.265 149.137 mo
128.549 147.284 li
130.526 147.587 li
130.241 149.441 li
128.265 149.137 li
127.695 152.844 mo
127.98 150.99 li
129.957 151.294 li
129.672 153.147 li
127.695 152.844 li
127.001 156.381 mo
127.312 155.338 li
127.411 154.697 li
129.387 155 li
129.278 155.71 li
129.248 155.844 li
128.918 156.953 li
127.001 156.381 li
125.93 159.975 mo
126.465 158.178 li
128.382 158.75 li
127.846 160.546 li
125.93 159.975 li
124.858 163.569 mo
125.394 161.772 li
127.31 162.343 li
126.775 164.14 li
124.858 163.569 li
125.408 165.1 mo
125.906 165.985 li
125.035 166.475 li
124.077 166.189 li
124.322 165.365 li
126.239 165.937 li
125.993 166.761 li
124.164 166.966 li
123.666 166.082 li
125.408 165.1 li
123.568 161.833 mo
124.488 163.466 li
122.745 164.448 li
121.825 162.814 li
123.568 161.833 li
120.127 162.041 mo
120.856 160.313 li
122.699 161.091 li
121.969 162.818 li
120.127 162.041 li
118.667 165.495 mo
119.397 163.767 li
121.239 164.546 li
120.51 166.273 li
118.667 165.495 li
119.271 167.187 mo
119.5 168.177 li
118.525 168.402 li
117.604 168.013 li
117.938 167.222 li
119.78 168 li
119.446 168.792 li
117.55 168.626 li
117.322 167.636 li
119.271 167.187 li
118.429 163.533 mo
118.85 165.36 li
116.901 165.809 li
116.48 163.982 li
118.429 163.533 li
117.587 159.878 mo
118.008 161.705 li
116.059 162.154 li
115.638 160.327 li
117.587 159.878 li
116.746 156.224 mo
117.167 158.051 li
115.217 158.5 li
114.797 156.673 li
116.746 156.224 li
113.454 154.186 mo
114.761 153.414 li
116.245 154.049 li
116.325 154.397 li
114.376 154.846 li
114.296 154.498 li
115.27 154.274 li
115.779 155.134 li
114.473 155.908 li
113.454 154.186 li
110.65 157.359 mo
111.052 155.929 li
111.506 155.34 li
111.841 155.141 li
112.859 156.863 li
112.524 157.061 li
112.015 156.2 li
112.978 156.471 li
112.575 157.901 li
110.65 157.359 li
109.633 160.969 mo
110.142 159.164 li
112.067 159.707 li
111.558 161.511 li
109.633 160.969 li
108.617 164.579 mo
109.125 162.774 li
111.05 163.316 li
110.542 165.121 li
108.617 164.579 li
109.596 166.848 mo
109.74 167.561 li
108.76 167.76 li
107.797 167.489 li
108.109 166.383 li
110.034 166.926 li
109.723 168.031 li
107.78 167.958 li
107.635 167.246 li
109.596 166.848 li
108.851 163.173 mo
109.223 165.011 li
107.263 165.408 li
106.89 163.571 li
108.851 163.173 li
108.105 159.499 mo
108.478 161.336 li
106.518 161.733 li
106.145 159.895 li
108.105 159.499 li
107.36 155.823 mo
107.733 157.66 li
105.773 158.058 li
105.4 156.22 li
107.36 155.823 li
106.615 152.148 mo
106.988 153.985 li
105.028 154.383 li
104.655 152.545 li
106.615 152.148 li
104.185 154.678 mo
104.382 152.814 li
106.371 153.024 li
106.174 154.888 li
104.185 154.678 li
103.792 158.408 mo
103.988 156.543 li
105.978 156.753 li
105.781 158.618 li
103.792 158.408 li
103.398 162.137 mo
103.595 160.272 li
105.584 160.482 li
105.387 162.347 li
103.398 162.137 li
103.004 165.866 mo
103.201 164.002 li
105.19 164.212 li
104.993 166.076 li
103.004 165.866 li
102.61 169.596 mo
102.807 167.731 li
104.796 167.941 li
104.599 169.805 li
102.61 169.596 li
102.216 173.325 mo
102.413 171.46 li
104.402 171.67 li
104.205 173.535 li
102.216 173.325 li
101.823 177.054 mo
102.02 175.189 li
104.009 175.399 li
103.812 177.264 li
101.823 177.054 li
101.429 180.783 mo
101.626 178.919 li
103.615 179.129 li
103.418 180.993 li
101.429 180.783 li
102.939 180.309 mo
103.208 182.166 li
101.228 182.451 li
100.96 180.596 li
102.939 180.309 li
102.401 176.598 mo
102.67 178.453 li
100.691 178.74 li
100.422 176.884 li
102.401 176.598 li
101.864 172.887 mo
102.133 174.742 li
100.153 175.029 li
99.8848 173.173 li
101.864 172.887 li
101.326 169.175 mo
101.595 171.031 li
99.6162 171.318 li
99.3472 169.462 li
101.326 169.175 li
100.789 165.464 mo
101.058 167.32 li
99.0781 167.606 li
98.8101 165.751 li
100.789 165.464 li
100.251 161.753 mo
100.52 163.608 li
98.541 163.895 li
98.272 162.039 li
100.251 161.753 li
99.0332 157.917 mo
99.8809 159.59 li
98.0972 160.494 li
97.249 158.821 li
99.0332 157.917 li
97.3379 154.572 mo
98.186 156.245 li
96.4019 157.149 li
95.5542 155.476 li
97.3379 154.572 li
94.1841 155.467 mo
94.6919 153.662 li
96.6182 154.204 li
96.1089 156.009 li
94.1841 155.467 li
93.168 159.077 mo
93.6758 157.272 li
95.6011 157.814 li
95.0928 159.619 li
93.168 159.077 li
92.1509 162.686 mo
92.6602 160.881 li
94.585 161.423 li
94.0771 163.228 li
92.1509 162.686 li
91.9819 163.52 mo
93.105 164.406 li
92.4849 165.191 li
91.522 164.92 li
91.6431 164.491 li
93.5679 165.033 li
93.4482 165.462 li
91.8652 165.976 li
90.7432 165.09 li
91.9819 163.52 li
89.4341 161.199 mo
89.958 161.923 li
90.5098 162.359 li
89.271 163.929 li
88.6108 163.407 li
88.4199 163.209 li
87.814 162.373 li
89.4341 161.199 li
87.2349 158.162 mo
88.334 159.68 li
86.7148 160.853 li
85.6152 159.334 li
87.2349 158.162 li
85.6348 155 mo
86.4199 156.702 li
84.603 157.539 li
83.8179 155.836 li
85.6348 155 li
84.0659 151.593 mo
84.8501 153.296 li
83.0342 154.133 li
82.249 152.43 li
84.0659 151.593 li
79.8721 150.605 mo
81.7119 150.242 li
82.0991 152.204 li
80.2598 152.567 li
79.8721 150.605 li
76.8149 153.66 mo
77.915 152.141 li
79.5352 153.314 li
78.4351 154.833 li
76.8149 153.66 li
74.793 157.083 mo
75.2778 155.837 li
75.3999 155.614 li
75.7148 155.178 li
77.335 156.351 li
77.0952 156.683 li
76.6563 157.809 li
74.793 157.083 li
73.4302 160.577 mo
74.1108 158.83 li
75.9751 159.556 li
75.2939 161.303 li
73.4302 160.577 li
72.0679 164.071 mo
72.749 162.324 li
74.6128 163.05 li
73.9312 164.797 li
72.0679 164.071 li
73.4668 160.822 mo
73.7148 162.68 li
71.7319 162.944 li
71.4839 161.086 li
73.4668 160.822 li
72.9712 157.104 mo
73.2188 158.963 li
71.2358 159.227 li
70.9878 157.369 li
72.9712 157.104 li
72.4751 153.387 mo
72.7231 155.246 li
70.7412 155.51 li
70.4932 153.652 li
72.4751 153.387 li
71.979 149.67 mo
72.2271 151.529 li
70.2451 151.793 li
69.9971 149.935 li
71.979 149.67 li
71.4839 145.953 mo
71.731 147.812 li
69.749 148.076 li
69.501 146.218 li
71.4839 145.953 li
70.9878 142.236 mo
71.2358 144.095 li
69.2529 144.359 li
69.0049 142.5 li
70.9878 142.236 li
67.897 140.295 mo
69.0801 139.361 li
70.6909 140.013 li
70.7402 140.378 li
68.7568 140.642 li
68.709 140.278 li
69.7002 140.146 li
70.3198 140.931 li
69.1362 141.864 li
67.897 140.295 li
67.0068 141.329 mo
67.3848 142.375 li
66.4448 142.714 li
65.8252 141.929 li
66.4248 141.457 li
67.6641 143.026 li
67.0649 143.5 li
65.5049 143.055 li
65.126 142.01 li
67.0068 141.329 li
65.73 137.803 mo
66.3691 139.566 li
64.4878 140.248 li
63.8501 138.484 li
65.73 137.803 li
64.4541 134.277 mo
65.0918 136.04 li
63.2119 136.721 li
62.5732 134.958 li
64.4541 134.277 li
61.2412 135.969 mo
61.9219 134.222 li
63.7861 134.948 li
63.105 136.695 li
61.2412 135.969 li
59.8789 139.462 mo
60.5601 137.716 li
62.4238 138.442 li
61.7432 140.189 li
59.8789 139.462 li
60.5112 140.503 mo
60.8931 141.786 li
59.9351 142.072 li
59.0029 141.709 li
59.1982 141.209 li
61.061 141.936 li
60.8672 142.435 li
58.9771 142.358 li
58.5942 141.075 li
60.5112 140.503 li
59.439 136.91 mo
59.9751 138.707 li
58.0581 139.278 li
57.5229 137.481 li
59.439 136.91 li
58.3682 133.316 mo
58.9038 135.113 li
56.9868 135.684 li
56.4512 133.887 li
58.3682 133.316 li
57.355 129.749 mo
57.644 130.889 li
57.832 131.519 li
55.915 132.091 li
55.7222 131.441 li
55.7109 131.401 li
55.417 130.24 li
57.355 129.749 li
56.4341 126.114 mo
56.895 127.932 li
54.9561 128.423 li
54.4951 126.605 li
56.4341 126.114 li
55.5132 122.479 mo
55.9741 124.296 li
54.0352 124.788 li
53.5742 122.97 li
55.5132 122.479 li
54.5918 118.844 mo
55.0522 120.661 li
53.1138 121.153 li
52.6528 119.335 li
54.5918 118.844 li
53.936 115.241 mo
54.2388 117.092 li
52.2651 117.415 li
51.9629 115.564 li
53.936 115.241 li
53.3311 111.541 mo
53.6338 113.391 li
51.6602 113.714 li
51.3569 111.863 li
53.3311 111.541 li
52.7261 107.84 mo
53.0288 109.69 li
51.0552 110.013 li
50.752 108.162 li
52.7261 107.84 li
52.1211 104.139 mo
52.4238 105.989 li
50.4502 106.312 li
50.147 104.462 li
52.1211 104.139 li
51.5161 100.438 mo
51.8179 102.288 li
49.8452 102.611 li
49.542 100.761 li
51.5161 100.438 li
50.9019 96.7329 mo
51.1563 98.2368 li
51.1572 98.2422 li
51.2129 98.5879 li
49.2402 98.9102 li
49.1831 98.5649 li
49.1841 98.5698 li
48.9302 97.0659 li
50.9019 96.7329 li
50.2769 93.0361 mo
50.5898 94.8843 li
48.6182 95.2183 li
48.3052 93.3691 li
50.2769 93.0361 li
49.6528 89.3379 mo
49.9648 91.187 li
47.9932 91.52 li
47.6812 89.6709 li
49.6528 89.3379 li
49.0278 85.6401 mo
49.3398 87.4893 li
47.3682 87.8223 li
47.0562 85.9741 li
49.0278 85.6401 li
48.4028 81.9429 mo
48.7148 83.792 li
46.7432 84.125 li
46.4312 82.2759 li
48.4028 81.9429 li
47.812 78.2788 mo
47.9038 78.9902 li
48.0908 80.0942 li
46.1191 80.4272 li
45.9292 79.3042 li
45.9229 79.2671 li
45.8291 78.5371 li
47.812 78.2788 li
47.3281 74.5601 mo
47.5698 76.4189 li
45.5869 76.6772 li
45.3452 74.8179 li
47.3281 74.5601 li
46.8452 70.8413 mo
47.0869 72.7012 li
45.104 72.959 li
44.8618 71.0991 li
46.8452 70.8413 li
46.3618 67.123 mo
46.603 68.9819 li
44.6201 69.2402 li
44.3789 67.3799 li
46.3618 67.123 li
45.8789 63.4043 mo
46.1201 65.2632 li
44.1372 65.521 li
43.895 63.6621 li
45.8789 63.4043 li
45.395 59.6851 mo
45.6372 61.5449 li
43.6538 61.8022 li
43.4121 59.9429 li
45.395 59.6851 li
44.9121 55.9658 mo
45.1538 57.8262 li
43.1699 58.084 li
42.9292 56.2241 li
44.9121 55.9658 li
44.4019 52.2368 mo
44.6499 53.9492 li
44.6519 53.9639 li
44.6699 54.1069 li
42.687 54.3652 li
42.6689 54.2271 li
42.4219 52.5229 li
44.4019 52.2368 li
43.8638 48.5249 mo
44.1328 50.3809 li
42.1538 50.668 li
41.8848 48.812 li
43.8638 48.5249 li
43.3271 44.814 mo
43.5962 46.6699 li
41.6162 46.9561 li
41.3472 45.1011 li
43.3271 44.814 li
42.7891 41.103 mo
43.0581 42.959 li
41.0791 43.2451 li
40.8101 41.3892 li
42.7891 41.103 li
42.252 37.3921 mo
42.521 39.2471 li
40.541 39.5342 li
40.2729 37.6782 li
42.252 37.3921 li
41.7139 33.6802 mo
41.9829 35.5361 li
40.0039 35.8232 li
39.7349 33.9673 li
41.7139 33.6802 li
39.3589 30.1279 mo
40.772 30.686 li
41.395 31.4722 li
41.4458 31.8252 li
39.4658 32.1108 li
39.415 31.7593 li
40.4048 31.6162 li
40.0381 32.5459 li
38.625 31.9893 li
39.3589 30.1279 li
35.3799 29.332 mo
37.1499 29.332 li
37.5171 29.4009 li
37.6152 29.4399 li
36.8809 31.3003 li
36.7832 31.2622 li
37.1499 30.332 li
37.1499 31.3311 li
35.3799 31.3311 li
35.3799 29.332 li
31.6299 29.332 mo
33.5049 29.332 li
33.5049 31.3311 li
31.6299 31.3311 li
31.6299 29.332 li
27.8799 29.332 mo
29.7549 29.332 li
29.7549 31.3311 li
27.8799 31.3311 li
27.8799 29.332 li
24.1299 29.332 mo
26.0049 29.332 li
26.0049 31.3311 li
24.1299 31.3311 li
24.1299 29.332 li
.883848 .768521 0 0 cmyk
f
251.98 104.898 mo
248.725 97.937 li
246.701 103.104 li
248.725 79.1118 li
251.98 101.151 li
252.715 101.022 li
251.98 104.898 li
261.745 106.169 mo
258.49 96.5093 li
257.309 93.3242 li
258.49 89.1909 li
260.471 84.1519 li
261.745 86.2041 li
263.946 86.7993 li
265 89.6191 li
267.395 94.853 li
265 95.249 li
261.745 106.169 li
220.794 98.2949 mo
220.407 100.257 li
221.806 100.534 li
222.538 105.153 li
224.514 104.84 li
223.673 99.5313 li
222.879 98.707 li
220.794 98.2949 li
226.409 116.805 mo
225.687 112.248 li
223.724 112.559 li
222.685 108.597 li
219.43 102.293 li
216.687 104.746 li
216.213 104.561 li
216.085 104.208 li
216.175 104.233 li
219.43 89.7129 li
222.685 97.5449 li
225.94 85.1421 li
229.195 73.4722 li
232.45 79.585 li
234.561 86.0669 li
232.45 105.575 li
229.195 91.8198 li
227.641 105.757 li
227.232 105.692 li
226.058 113.1 li
226.809 113.218 li
226.409 116.805 li
242.215 117.697 mo
239.328 93.5371 li
242.149 91.7222 li
242.215 92.0332 li
242.253 91.979 li
244.475 109.748 li
242.215 117.697 li
297.028 119.412 mo
294.295 117.242 li
291.04 116.214 li
287.785 106.192 li
284.53 102.72 li
281.275 109.255 li
278.02 96.311 li
277.413 94.1782 li
278.02 92.6011 li
281.275 96.937 li
283.853 92.9663 li
284.53 95.7358 li
287.785 88.0723 li
291.04 98.229 li
294.295 105.271 li
294.73 102.229 li
297.028 119.412 li
304.06 120.586 mo
300.805 118.059 li
297.868 119.653 li
300.165 93.2061 li
300.805 95.8232 li
304.06 112.816 li
305.148 106.817 li
306.069 111.32 li
304.06 120.586 li
225.94 121.008 mo
225.636 119.849 li
226.077 119.78 li
225.94 121.008 li
199.952 93.0762 mo
197.984 93.4321 li
198.916 98.582 li
200.869 98.6489 li
201.426 96.4521 li
200.521 96.2222 li
199.952 93.0762 li
203.415 123.161 mo
203.155 120.824 li
202.717 122.969 li
199.9 113.327 li
196.645 115.319 li
193.39 114.39 li
190.135 90.6309 li
190.106 90.5752 li
190.945 90.6411 li
192.219 88.8823 li
190.599 87.709 li
190.286 88.1411 li
188.618 84.8511 li
187.433 85.4521 li
186.88 84.3931 li
183.625 107.389 li
183.282 109.433 li
180.37 107.57 li
178.555 118.447 li
177.115 111.853 li
175.192 110.178 li
173.86 98.478 li
170.605 90.8491 li
167.35 99.2349 li
166.257 103.985 li
164.095 103.552 li
162.536 104.362 li
160.84 94.5439 li
157.585 94.646 li
156.752 92.2349 li
157.585 89.6543 li
160.84 92.9541 li
164.095 87.4419 li
167.35 70.7402 li
170.605 75.75 li
173.86 97.394 li
176.103 90.0801 li
176.131 90.2329 li
178.092 90.27 li
179.421 84.2349 li
178.444 84.02 li
180.37 80.0171 li
181.961 76.6182 li
182.91 76.8052 li
183.769 78.8379 li
185.15 78.2539 li
186.88 84.1421 li
190.135 84.231 li
193.39 81.939 li
196.645 91.7671 li
199.9 87.7651 li
201.344 88.6343 li
201.33 88.6899 li
201.518 88.7378 li
203.155 89.7222 li
206.41 94.8311 li
207.769 96.6992 li
207.016 97.2939 li
206.829 96.521 li
204.885 96.9902 li
205.438 99.2798 li
207.029 99.8311 li
208.946 98.3179 li
209.665 99.3071 li
211.278 101.304 li
209.665 103.693 li
206.41 108.116 li
203.415 123.161 li
333.355 123.527 mo
330.1 112.218 li
326.845 104.523 li
326.164 102.874 li
326.845 97.5 li
330.1 98.1753 li
333.355 112.593 li
334.285 118.237 li
333.355 123.527 li
339.865 126.806 mo
338.748 119.329 li
339.865 112.533 li
343.12 100.077 li
343.509 102.425 li
343.12 100.924 li
339.865 126.806 li
278.02 203.048 mo
274.765 202.188 li
272.706 192.783 li
274.765 184.342 li
278.02 180.83 li
281.275 178.353 li
284.362 174.776 li
281.275 193.03 li
278.02 203.048 li
291.04 210.564 mo
289.579 192.289 li
291.04 203.267 li
294.295 202.268 li
294.624 201.5 li
294.295 205.026 li
291.04 210.564 li
304.06 212.883 mo
302.219 211.457 li
304.06 196.476 li
307.315 173.061 li
309.713 203.489 li
307.315 199.93 li
304.06 212.883 li
344.128 220.292 mo
346.375 208.457 li
346.375 215.057 li
344.128 220.292 li
323.59 223.061 mo
322.195 212.625 li
323.59 205.787 li
325.587 210.41 li
323.59 223.061 li
330.1 223.208 mo
328.296 211.695 li
330.1 209.672 li
331.734 216.229 li
330.1 223.208 li
317.08 231.492 mo
313.825 226.247 li
311.465 210.672 li
313.825 200.919 li
317.08 208.978 li
318.689 215.289 li
317.08 231.492 li
336.61 238.198 mo
334.755 221.734 li
336.61 220.414 li
339.865 194.21 li
342.793 222.448 li
339.865 220.731 li
336.61 238.198 li
.421149 .392065 0 0 cmyk
f
164.095 113.384 mo
162.536 104.362 li
164.095 103.552 li
166.257 103.985 li
164.095 113.384 li
177.115 127.075 mo
175.192 110.178 li
177.115 111.853 li
178.555 118.447 li
177.115 127.075 li
199.9 136.762 mo
196.645 121.508 li
193.39 120.01 li
190.135 120.825 li
186.88 115.383 li
183.625 109.653 li
183.282 109.433 li
183.625 107.389 li
186.88 84.3931 li
187.433 85.4521 li
186.834 85.7549 li
189.243 90.5068 li
190.106 90.5752 li
190.135 90.6309 li
193.39 114.39 li
196.645 115.319 li
199.9 113.327 li
202.717 122.969 li
199.9 136.762 li
216.087 149.005 mo
215.339 148.815 li
214.964 146.786 li
216.667 147.217 li
215.696 147.463 li
216.087 149.005 li
216.175 153.346 mo
215.713 150.844 li
215.792 150.864 li
216.196 149.271 li
216.886 149.096 li
216.175 153.346 li
320.307 159.047 mo
320.388 158.682 li
320.981 158.933 li
320.307 159.047 li
225.327 163.038 mo
225.048 161.239 li
226.176 161.027 li
225.94 159.772 li
226.779 159.929 li
226.557 161.796 li
225.594 161.615 li
225.327 163.038 li
225.94 166.996 mo
225.622 164.946 li
226.196 164.839 li
225.94 166.996 li
230.434 100.717 mo
228.477 101.13 li
230.027 108.468 li
231.984 108.055 li
230.434 100.717 li
235.003 111.177 mo
232.111 114.03 li
233.515 115.454 li
235.476 113.52 li
236.521 115.376 li
238.263 114.394 li
236.576 111.399 li
235.003 111.177 li
254.978 117.291 mo
253.162 118.128 li
254.327 120.656 li
256.175 120.578 li
257.781 116.144 li
255.9 115.463 li
255.124 117.607 li
254.978 117.291 li
259.763 113.782 mo
257.774 113.992 li
258.562 121.45 li
260.551 121.24 li
259.763 113.782 li
250.23 115.228 mo
247.829 122.333 li
249.724 122.973 li
252.125 115.868 li
250.23 115.228 li
241.366 121.376 mo
239.485 122.057 li
241.275 127 li
243.06 127.195 li
244.26 125.3 li
242.571 124.23 li
242.461 124.402 li
241.366 121.376 li
298.543 126.54 mo
296.556 126.548 li
295.946 131.964 li
297.934 132.188 li
298.334 128.629 li
298.788 128.575 li
298.543 126.54 li
254.131 130.785 mo
253.93 132.649 li
255.918 132.864 li
255.957 132.505 li
256.72 132.362 li
256.374 130.519 li
254.655 130.842 li
254.131 130.785 li
286.914 128.738 mo
283.728 134.395 li
283.454 134.665 li
284.858 136.089 li
285.232 135.72 li
285.401 135.499 li
288.656 129.719 li
288.284 129.509 li
288.82 129.441 li
288.777 129.103 li
286.914 128.738 li
261.338 128.699 mo
259.349 128.909 li
260.137 136.368 li
262.126 136.157 li
261.338 128.699 li
253.728 134.513 mo
253.527 136.378 li
255.516 136.592 li
255.537 136.399 li
257.412 136.047 li
257.066 134.204 li
255.1 134.573 li
255.117 134.663 li
253.728 134.513 li
274.658 135.099 mo
274.001 135.653 li
275.14 137.001 li
276.668 135.711 li
275.529 134.363 li
273.785 134.809 li
273.763 134.917 li
274.658 135.099 li
269.242 129.687 mo
267.317 130.229 li
269.35 137.448 li
271.275 136.906 li
269.242 129.687 li
273.39 136.755 mo
273.018 138.593 li
274.978 138.99 li
275.351 137.153 li
273.39 136.755 li
257.758 137.89 mo
255.792 138.259 li
256.138 140.102 li
258.104 139.733 li
257.758 137.89 li
253.327 138.242 mo
253.125 140.106 li
255.114 140.32 li
255.315 138.457 li
253.327 138.242 li
263.026 132.949 mo
261.183 140.219 li
263.122 140.711 li
264.964 133.44 li
263.026 132.949 li
283.448 138.7 mo
282.445 140.284 li
284.134 141.354 li
285.138 139.771 li
283.448 138.7 li
286.218 139.31 mo
284.69 140.6 li
285.9 142.033 li
287.428 140.742 li
286.218 139.31 li
272.645 140.43 mo
272.273 142.268 li
274.233 142.666 li
274.605 140.828 li
272.645 140.43 li
280.12 140.307 mo
278.431 141.378 li
279.434 142.962 li
281.124 141.891 li
280.12 140.307 li
306.067 140.885 mo
305.755 142.734 li
307.727 143.067 li
307.971 141.621 li
308.563 141.551 li
308.344 139.689 li
306.357 139.923 li
306.479 140.955 li
306.067 140.885 li
299.688 136.021 mo
297.701 136.26 li
298.6 143.707 li
300.585 143.467 li
299.688 136.021 li
252.924 141.97 mo
252.723 143.834 li
254.712 144.049 li
254.913 142.185 li
252.924 141.97 li
281.441 141.868 mo
280.438 143.452 li
282.127 144.522 li
283.131 142.938 li
281.441 141.868 li
288.487 142.723 mo
286.828 143.035 li
287.174 144.877 li
288.932 144.547 li
290.706 144.322 li
289.763 136.882 li
287.779 137.133 li
288.487 142.723 li
271.9 144.106 mo
271.528 145.943 li
273.488 146.341 li
273.851 144.551 li
274.145 144.784 li
275.636 144.489 li
278.754 138.953 li
279.117 138.724 li
278.865 138.326 li
278.784 138.216 li
277.878 137.143 li
276.35 138.434 li
276.591 138.719 li
274.138 143.074 li
273.31 144.125 li
273.765 144.484 li
271.9 144.106 li
305.443 144.583 mo
305.13 146.432 li
307.102 146.765 li
307.321 145.473 li
309.002 145.275 li
308.783 143.413 li
306.797 143.647 li
306.937 144.835 li
305.443 144.583 li
295.107 139.417 mo
294.267 146.87 li
296.255 147.093 li
297.094 139.641 li
295.107 139.417 li
252.522 145.699 mo
252.321 147.563 li
254.31 147.777 li
254.511 145.914 li
252.522 145.699 li
234.259 145.797 mo
233.658 147.574 li
235.553 148.214 li
236.021 146.829 li
237.262 146.479 li
236.753 144.674 li
234.828 145.217 li
235.069 146.071 li
234.259 145.797 li
264.627 148 mo
264.705 148.322 li
265.471 148.137 li
265.545 148.149 li
265.55 148.118 li
266.649 147.853 li
266.209 146.03 li
265.4 146.225 li
263.874 145.976 li
263.571 147.826 li
264.627 148 li
289.485 146.351 mo
287.52 146.72 li
287.866 148.563 li
289.831 148.194 li
289.485 146.351 li
248.224 147.656 mo
248.438 148.628 li
250.391 148.198 li
249.988 146.367 li
249.424 146.491 li
249.54 146.079 li
247.615 145.537 li
247.106 147.341 li
248.224 147.656 li
271.155 147.781 mo
270.783 149.618 li
272.743 150.016 li
273.115 148.178 li
271.155 147.781 li
304.818 148.281 mo
304.506 150.129 li
306.478 150.462 li
306.79 148.614 li
304.818 148.281 li
237.77 148.284 mo
235.845 148.826 li
236.353 150.631 li
238.278 150.089 li
237.77 148.284 li
246.598 149.146 mo
246.09 150.951 li
248.015 151.493 li
248.523 149.688 li
246.598 149.146 li
252.12 149.427 mo
251.919 151.292 li
253.908 151.506 li
254.109 149.641 li
252.12 149.427 li
233.058 149.35 mo
232.458 151.126 li
234.353 151.766 li
234.953 149.99 li
233.058 149.35 li
265.189 150.327 mo
265.585 151.967 li
267.529 151.498 li
267.089 149.675 li
265.222 150.126 li
265.242 150 li
263.268 149.677 li
262.966 151.527 li
264.94 151.85 li
265.189 150.327 li
250.795 150.029 mo
248.842 150.459 li
249.245 152.291 li
251.198 151.86 li
250.795 150.029 li
309.767 148.387 mo
310.591 152.941 li
312.559 152.585 li
311.554 147.031 li
310.376 146.229 li
308.555 146.588 li
308.677 147.201 li
307.236 147.371 li
307.455 149.234 li
309.441 149 li
309.378 148.464 li
309.767 148.387 li
309.661 150.861 mo
307.674 151.096 li
307.894 152.958 li
309.88 152.724 li
309.661 150.861 li
323.367 151.799 mo
322.669 152.094 li
323.331 153.661 li
325.173 152.883 li
324.511 151.316 li
322.669 151.316 li
322.601 151.476 li
323.367 151.799 li
270.354 151.23 mo
269.624 152.957 li
271.467 153.735 li
272.196 152.008 li
270.354 151.23 li
238.786 151.894 mo
236.861 152.436 li
237.369 154.241 li
239.294 153.699 li
238.786 151.894 li
245.582 152.756 mo
245.074 154.561 li
246.999 155.103 li
247.507 153.298 li
245.582 152.756 li
262.663 153.377 mo
262.361 155.228 li
264.335 155.55 li
264.637 153.7 li
262.663 153.377 li
267.969 153.321 mo
266.025 153.791 li
266.465 155.613 li
268.409 155.143 li
267.969 153.321 li
321.872 153.203 mo
321.142 154.93 li
322.985 155.708 li
323.714 153.981 li
321.872 153.203 li
251.602 153.691 mo
249.649 154.121 li
250.052 155.952 li
252.005 155.522 li
251.904 155.061 li
253.506 155.234 li
253.707 153.37 li
251.718 153.155 li
251.641 153.869 li
251.602 153.691 li
290.638 155.673 mo
290.846 155.897 li
294.101 156.539 li
295.289 155.67 li
295.415 154.546 li
293.428 154.322 li
293.423 154.367 li
291.941 154.075 li
291.648 151.763 li
290.097 151.96 li
290.523 151.88 li
290.177 150.037 li
288.211 150.406 li
288.557 152.25 li
289.668 152.041 li
289.904 153.904 li
288.903 154.091 li
289.249 155.934 li
290.638 155.673 li
310.1 154.586 mo
308.113 154.82 li
308.333 156.682 li
310.319 156.448 li
310.1 154.586 li
268.895 154.684 mo
268.165 156.412 li
270.008 157.19 li
270.737 155.463 li
268.895 154.684 li
312.664 155.387 mo
312.181 157.198 li
314.114 157.714 li
314.399 156.643 li
315.557 157.557 li
316.796 155.987 li
315.325 154.825 li
314.496 155.875 li
312.664 155.387 li
239.803 155.503 mo
237.877 156.045 li
237.997 156.471 li
238.258 156.912 li
239.278 157.918 li
240.682 156.494 li
239.851 155.674 li
239.803 155.503 li
301.484 150.913 mo
299.499 151.152 li
299.812 153.751 li
299.858 153.952 li
301.42 158.577 li
303.315 157.937 li
301.785 153.409 li
301.484 150.913 li
268.848 156.966 mo
266.904 157.435 li
267.283 159.004 li
269.176 159.158 li
269.278 158.917 li
268.683 158.667 li
269.227 158.534 li
268.848 156.966 li
262.058 157.078 mo
261.756 158.929 li
263.729 159.251 li
264.032 157.401 li
262.058 157.078 li
291.561 157.408 mo
289.595 157.777 li
289.941 159.62 li
291.907 159.251 li
291.561 157.408 li
310.539 158.31 mo
308.552 158.544 li
308.772 160.406 li
310.758 160.172 li
310.539 158.31 li
326.132 158.585 mo
325.519 158.843 li
325.924 159.8 li
326.336 160.272 li
327.055 160.698 li
328.074 158.976 li
327.638 158.719 li
327.362 158.065 li
326.742 158.327 li
327.74 151.237 li
325.759 150.958 li
325.204 154.906 li
324.06 155.389 li
324.79 157.116 li
324.899 157.07 li
324.714 158.385 li
326.132 158.585 li
296.944 159.237 mo
297.333 160.849 li
299.277 160.38 li
298.838 158.557 li
297.35 158.917 li
297.753 158.598 li
296.514 157.028 li
295.042 158.19 li
296.281 159.76 li
296.944 159.237 li
292.286 159.053 mo
292.286 161.053 li
294.161 161.053 li
294.161 159.053 li
292.286 159.053 li
302.892 159.267 mo
302.409 161.078 li
304.341 161.594 li
304.476 161.089 li
305.496 161.305 li
307.046 153.966 li
305.926 153.73 li
306.165 152.311 li
304.193 151.978 li
303.881 153.827 li
304.991 154.015 li
304.604 155.851 li
303.568 155.676 li
303.256 157.524 li
304.216 157.687 li
303.829 159.517 li
302.892 159.267 li
328.989 161.111 mo
328.669 161.653 li
329.239 161.99 li
329.341 162.373 li
329.934 162.214 li
330.1 162.338 li
333.024 162.338 li
333.024 160.338 li
330.845 160.338 li
329.751 156.667 li
327.834 157.238 li
328.989 161.111 li
338.854 160.22 mo
337.382 161.381 li
338.621 162.952 li
340.092 161.791 li
338.854 160.22 li
261.248 162.036 mo
261.15 162.63 li
263.124 162.952 li
263.427 161.102 li
261.978 160.865 li
261.826 160.026 li
259.858 160.382 li
260.192 162.227 li
261.248 162.036 li
341.547 160.95 mo
340.142 162.375 li
341.477 163.69 li
342.881 162.266 li
341.547 160.95 li
299.717 162.202 mo
297.773 162.672 li
298.213 164.494 li
300.157 164.025 li
299.717 162.202 li
301.926 162.89 mo
301.442 164.701 li
303.375 165.217 li
303.858 163.405 li
301.926 162.89 li
262.494 163.716 mo
260.526 164.072 li
260.761 165.369 li
262.732 165.352 li
262.822 164.803 li
262.687 164.781 li
262.494 163.716 li
335.626 163.06 mo
335.059 164.848 li
336.966 165.452 li
337.532 163.664 li
335.626 163.06 li
331.757 163.668 mo
329.824 164.184 li
330.308 165.995 li
332.24 165.48 li
331.757 163.668 li
320.205 159.509 mo
321.382 166.472 li
323.354 166.138 li
322.104 158.743 li
321.672 158.816 li
322.255 157.436 li
320.413 156.657 li
320.22 157.114 li
318.756 156.792 li
318.654 157.254 li
318.213 156.993 li
317.194 158.714 li
318.201 159.31 li
317.142 164.115 li
319.095 164.546 li
320.205 159.509 li
311.417 165.758 mo
309.431 165.992 li
309.577 167.235 li
311.536 167.375 li
311.697 166.772 li
311.531 166.728 li
311.417 165.758 li
312.53 163.65 mo
312.841 165.369 li
313.061 165.836 li
314.591 167.647 li
316.119 166.356 li
314.761 164.75 li
313.895 159.965 li
313.494 160.038 li
313.63 159.525 li
311.698 159.01 li
311.215 160.822 li
312.059 161.047 li
312.428 163.086 li
311.059 162.72 li
310.978 162.034 li
308.992 162.268 li
309.211 164.13 li
310.368 163.994 li
310.248 164.445 li
312.18 164.96 li
312.53 163.65 li
300.624 167.77 mo
300.476 168.325 li
302.408 168.84 li
302.892 167.029 li
300.959 166.513 li
300.853 166.909 li
300.597 165.848 li
298.653 166.317 li
299.093 168.14 li
300.624 167.77 li
332.723 167.292 mo
330.791 167.807 li
331.274 169.619 li
333.207 169.103 li
332.723 167.292 li
301.477 169.493 mo
299.533 169.962 li
299.833 171.205 li
301.771 171.228 li
301.925 170.652 li
301.745 170.604 li
301.477 169.493 li
323.668 165.812 mo
322.623 173.238 li
324.603 173.517 li
325.649 166.091 li
323.668 165.812 li
339.633 165.616 mo
339.02 166.583 li
338.88 166.945 li
337.786 173.207 li
339.756 173.55 li
340.816 167.485 li
341.322 166.686 li
339.633 165.616 li
333.876 172.806 mo
334.303 176.01 li
336.286 175.746 li
335.37 168.88 li
335.834 169.027 li
336.4 167.239 li
334.493 166.635 li
333.927 168.423 li
334.085 168.473 li
333.313 168.576 li
333.537 170.266 li
333.361 170.21 li
333.086 171.076 li
331.757 171.43 li
332.241 173.242 li
333.876 172.806 li
336.013 183.349 mo
335.295 183.444 li
335.619 185.873 li
337.595 185.913 li
338.465 180.939 li
336.494 180.594 li
336.013 183.349 li
343.12 222.64 mo
342.793 222.448 li
339.865 194.21 li
336.61 220.414 li
334.755 221.734 li
333.355 209.31 li
331.734 216.229 li
330.1 209.672 li
328.296 211.695 li
326.845 202.438 li
325.587 210.41 li
323.59 205.787 li
322.195 212.625 li
320.335 198.716 li
318.689 215.289 li
317.08 208.978 li
313.825 200.919 li
311.465 210.672 li
310.57 204.762 li
309.713 203.489 li
307.315 173.061 li
304.06 196.476 li
302.219 211.457 li
300.805 210.361 li
297.55 170.188 li
294.624 201.5 li
294.295 202.268 li
291.04 203.267 li
289.579 192.289 li
287.785 169.844 li
284.53 173.785 li
284.362 174.776 li
281.275 178.353 li
278.02 180.83 li
274.765 184.342 li
272.706 192.783 li
271.51 187.321 li
268.255 184.683 li
265 170.806 li
261.745 196.939 li
259.489 158.345 li
259.524 158.537 li
261.492 158.181 li
261.158 156.336 li
259.391 156.656 li
259.281 154.77 li
260.824 154.491 li
260.49 152.646 li
259.17 152.885 li
259.06 151 li
260.156 150.801 li
259.822 148.957 li
258.95 149.113 li
258.84 147.228 li
259.488 147.111 li
259.474 147.031 li
259.473 147.025 li
259.142 145.261 li
258.729 145.339 li
258.619 143.452 li
258.796 143.418 li
258.536 142.037 li
258.49 141.242 li
258.438 141.578 li
256.484 141.945 li
256.83 143.787 li
258.129 143.544 li
257.821 145.509 li
257.176 145.63 li
257.507 147.394 li
257.506 147.388 li
257.517 147.448 li
255.235 162.002 li
252.746 159.199 li
252.813 159.184 li
252.755 158.925 li
253.103 158.962 li
253.304 157.098 li
251.316 156.884 li
251.238 157.611 li
250.456 157.783 li
250.859 159.614 li
251.783 159.411 li
248.725 176.135 li
245.869 157.802 li
246.09 157.627 li
246.433 157.113 li
246.491 156.908 li
245.694 156.683 li
245.47 155.243 li
244.938 156.168 li
244.85 156.057 li
243.546 157.087 li
244.046 157.72 li
243.039 159.47 li
242.647 158.973 li
242.917 158.699 li
242.017 157.811 li
240.612 159.235 li
241.513 160.123 li
242.628 160.185 li
242.215 160.904 li
238.96 158.162 li
235.705 157.675 li
232.45 154.863 li
232.408 154.666 li
233.397 154.594 li
233.753 153.543 li
233.087 153.318 li
232.996 153.139 li
232.82 153.228 li
232.046 152.966 li
231.767 151.659 li
232.148 151.466 li
231.421 150.031 li
229.195 139.583 li
228.235 147.664 li
228.212 147.667 li
228.016 148.715 li
228.109 148.732 li
227.887 150.599 li
227.67 150.558 li
227.324 152.401 li
227.665 152.465 li
227.444 154.332 li
226.978 154.243 li
226.632 156.086 li
227.222 156.197 li
227.001 158.063 li
226.286 157.929 li
225.94 159.771 li
225.83 159.184 li
224.761 159.385 li
224.473 157.531 li
225.484 157.341 li
225.138 155.498 li
224.186 155.677 li
223.899 153.823 li
224.792 153.656 li
224.446 151.813 li
223.612 151.97 li
223.325 150.116 li
224.1 149.97 li
223.754 148.127 li
223.037 148.262 li
222.685 145.987 li
219.43 133.9 li
217.225 147.076 li
216.72 147.204 li
217.144 145.529 li
216.421 145.345 li
217.174 145.155 li
217.144 145.037 li
215.206 145.037 li
214.879 146.325 li
212.92 135.708 li
209.665 142.361 li
206.41 150.069 li
203.415 123.161 li
206.41 108.116 li
209.665 103.693 li
211.278 101.304 li
212.92 103.338 li
213.723 103.559 li
215.235 107.734 li
217.107 107.757 li
218.071 105.285 li
216.687 104.746 li
219.43 102.293 li
222.685 108.597 li
223.724 112.559 li
223.711 112.561 li
224.885 119.968 li
225.636 119.849 li
225.94 121.008 li
226.077 119.78 li
226.86 119.655 li
226.409 116.805 li
226.809 113.218 li
228.034 113.412 li
229.207 106.005 li
227.641 105.757 li
229.195 91.8198 li
232.45 105.575 li
234.561 86.0669 li
235.705 89.582 li
238.96 93.7729 li
239.328 93.5371 li
242.215 117.697 li
244.475 109.748 li
245.47 117.705 li
246.701 103.104 li
248.725 97.937 li
251.98 104.898 li
252.715 101.022 li
255.235 100.579 li
257.309 93.3242 li
258.49 96.5093 li
261.745 106.169 li
265 95.249 li
267.395 94.853 li
268.255 96.7339 li
271.51 103.976 li
274.765 101.053 li
277.413 94.1782 li
278.02 96.311 li
281.275 109.255 li
284.53 102.72 li
287.785 106.192 li
291.04 116.214 li
294.295 117.242 li
297.028 119.412 li
297.55 123.311 li
297.868 119.653 li
300.805 118.059 li
304.06 120.586 li
306.069 111.32 li
307.315 117.413 li
310.57 120.947 li
313.825 115.326 li
317.08 130.86 li
320.335 119.634 li
320.978 111.938 li
323.59 123.186 li
326.164 102.874 li
326.845 104.523 li
330.1 112.218 li
333.355 123.527 li
334.285 118.237 li
336.61 132.342 li
338.748 119.329 li
339.865 126.806 li
343.12 100.924 li
343.509 102.425 li
346.375 119.707 li
346.375 165.722 li
345.249 163.722 li
344.269 164.273 li
345.646 163.187 li
344.407 161.617 li
342.935 162.779 li
344.162 164.334 li
343.506 164.703 li
345.504 168.25 li
346.375 167.76 li
346.375 208.457 li
344.128 220.292 li
343.12 222.64 li
.729335 .669886 0 0 cmyk
f
255.918 132.864 mo
253.93 132.649 li
254.131 130.785 li
254.655 130.842 li
256.374 130.519 li
256.72 132.362 li
255.957 132.505 li
255.918 132.864 li
255.516 136.592 mo
253.527 136.378 li
253.728 134.513 li
255.117 134.663 li
255.1 134.573 li
257.066 134.204 li
257.412 136.047 li
255.537 136.399 li
255.516 136.592 li
275.14 137.001 mo
274.001 135.653 li
274.658 135.099 li
273.763 134.917 li
273.785 134.809 li
275.529 134.363 li
276.668 135.711 li
275.14 137.001 li
278.754 138.953 mo
278.794 138.882 li
277.052 137.901 li
276.591 138.719 li
276.35 138.434 li
277.878 137.143 li
278.784 138.216 li
278.865 138.326 li
279.117 138.724 li
278.754 138.953 li
274.978 138.99 mo
273.018 138.593 li
273.39 136.755 li
275.351 137.153 li
274.978 138.99 li
256.138 140.102 mo
255.792 138.259 li
257.758 137.89 li
258.104 139.733 li
256.138 140.102 li
255.114 140.32 mo
253.125 140.106 li
253.327 138.242 li
255.315 138.457 li
255.114 140.32 li
284.134 141.354 mo
282.445 140.284 li
283.448 138.7 li
285.138 139.771 li
284.134 141.354 li
285.9 142.033 mo
284.69 140.6 li
286.218 139.31 li
287.428 140.742 li
285.9 142.033 li
274.233 142.666 mo
272.273 142.268 li
272.645 140.43 li
274.605 140.828 li
274.233 142.666 li
279.434 142.962 mo
278.431 141.378 li
280.12 140.307 li
281.124 141.891 li
279.434 142.962 li
307.727 143.067 mo
305.755 142.734 li
306.067 140.885 li
306.479 140.955 li
306.357 139.923 li
308.344 139.689 li
308.563 141.551 li
307.971 141.621 li
307.727 143.067 li
258.619 143.452 mo
258.536 142.037 li
258.796 143.418 li
258.619 143.452 li
256.83 143.787 mo
256.484 141.945 li
258.438 141.578 li
258.129 143.544 li
256.83 143.787 li
254.712 144.049 mo
252.723 143.834 li
252.924 141.97 li
254.913 142.185 li
254.712 144.049 li
282.127 144.522 mo
280.438 143.452 li
281.441 141.868 li
283.131 142.938 li
282.127 144.522 li
287.174 144.877 mo
286.828 143.035 li
288.487 142.723 li
288.722 144.574 li
288.932 144.547 li
287.174 144.877 li
273.488 146.341 mo
271.528 145.943 li
271.9 144.106 li
273.765 144.484 li
273.851 144.551 li
273.488 146.341 li
307.102 146.765 mo
305.13 146.432 li
305.443 144.583 li
306.937 144.835 li
306.797 143.647 li
308.783 143.413 li
309.002 145.275 li
307.321 145.473 li
307.102 146.765 li
258.84 147.228 mo
258.729 145.339 li
259.142 145.261 li
259.473 147.025 li
259.474 147.031 li
259.488 147.111 li
258.84 147.228 li
257.517 147.448 mo
257.506 147.388 li
257.507 147.394 li
257.176 145.63 li
257.821 145.509 li
257.517 147.448 li
254.31 147.777 mo
252.321 147.563 li
252.522 145.699 li
254.511 145.914 li
254.31 147.777 li
235.553 148.214 mo
233.658 147.574 li
234.259 145.797 li
235.069 146.071 li
234.828 145.217 li
236.753 144.674 li
237.262 146.479 li
236.021 146.829 li
235.553 148.214 li
264.705 148.322 mo
264.627 148 li
263.571 147.826 li
263.874 145.976 li
265.4 146.225 li
266.209 146.03 li
266.649 147.853 li
265.55 148.118 li
265.545 148.149 li
265.471 148.137 li
264.705 148.322 li
287.866 148.563 mo
287.52 146.72 li
289.485 146.351 li
289.831 148.194 li
287.866 148.563 li
248.438 148.628 mo
248.224 147.656 li
247.106 147.341 li
247.615 145.537 li
249.54 146.079 li
249.424 146.491 li
249.988 146.367 li
250.391 148.198 li
248.438 148.628 li
228.109 148.732 mo
228.016 148.715 li
228.212 147.667 li
228.235 147.664 li
228.109 148.732 li
307.455 149.234 mo
307.236 147.371 li
308.677 147.201 li
308.943 148.55 li
309.378 148.464 li
309.441 149 li
307.455 149.234 li
272.743 150.016 mo
270.783 149.618 li
271.155 147.781 li
273.115 148.178 li
272.743 150.016 li
223.325 150.116 mo
223.037 148.262 li
223.754 148.127 li
224.1 149.97 li
223.325 150.116 li
306.478 150.462 mo
304.506 150.129 li
304.818 148.281 li
306.79 148.614 li
306.478 150.462 li
236.353 150.631 mo
235.845 148.826 li
237.77 148.284 li
238.278 150.089 li
236.353 150.631 li
215.792 150.864 mo
215.713 150.844 li
215.339 148.815 li
216.087 149.005 li
215.696 147.463 li
216.667 147.217 li
214.964 146.786 li
214.879 146.325 li
215.206 145.037 li
217.144 145.037 li
217.174 145.155 li
216.421 145.345 li
217.144 145.529 li
216.72 147.204 li
217.225 147.076 li
216.886 149.096 li
216.196 149.271 li
215.792 150.864 li
259.06 151 mo
258.95 149.113 li
259.822 148.957 li
260.156 150.801 li
259.06 151 li
248.015 151.493 mo
246.09 150.951 li
246.598 149.146 li
248.523 149.688 li
248.015 151.493 li
253.908 151.506 mo
251.919 151.292 li
252.12 149.427 li
254.109 149.641 li
253.908 151.506 li
231.767 151.659 mo
231.421 150.031 li
232.148 151.466 li
231.767 151.659 li
234.353 151.766 mo
232.458 151.126 li
233.058 149.35 li
234.953 149.99 li
234.353 151.766 li
265.585 151.967 mo
265.189 150.327 li
264.94 151.85 li
262.966 151.527 li
263.268 149.677 li
265.242 150 li
265.222 150.126 li
267.089 149.675 li
267.529 151.498 li
265.585 151.967 li
288.557 152.25 mo
288.211 150.406 li
290.177 150.037 li
290.523 151.88 li
290.097 151.96 li
289.664 152.014 li
289.668 152.041 li
288.557 152.25 li
249.245 152.291 mo
248.842 150.459 li
250.795 150.029 li
251.198 151.86 li
249.245 152.291 li
227.665 152.465 mo
227.324 152.401 li
227.67 150.558 li
227.887 150.599 li
227.665 152.465 li
307.894 152.958 mo
307.674 151.096 li
309.661 150.861 li
309.88 152.724 li
307.894 152.958 li
323.331 153.661 mo
322.669 152.094 li
323.367 151.799 li
322.601 151.476 li
322.669 151.316 li
324.511 151.316 li
325.173 152.883 li
323.331 153.661 li
271.467 153.735 mo
269.624 152.957 li
270.354 151.23 li
272.196 152.008 li
271.467 153.735 li
223.899 153.823 mo
223.612 151.97 li
224.446 151.813 li
224.792 153.656 li
223.899 153.823 li
304.991 154.015 mo
303.881 153.827 li
304.193 151.978 li
306.165 152.311 li
305.926 153.73 li
305.089 153.553 li
304.991 154.015 li
237.369 154.241 mo
236.861 152.436 li
238.786 151.894 li
239.294 153.699 li
237.369 154.241 li
232.408 154.666 mo
232.046 152.966 li
232.82 153.228 li
232.996 153.139 li
233.087 153.318 li
233.753 153.543 li
233.397 154.594 li
232.408 154.666 li
259.281 154.77 mo
259.17 152.885 li
260.49 152.646 li
260.824 154.491 li
259.281 154.77 li
246.999 155.103 mo
245.074 154.561 li
245.582 152.756 li
247.507 153.298 li
246.999 155.103 li
264.335 155.55 mo
262.361 155.228 li
262.663 153.377 li
264.637 153.7 li
264.335 155.55 li
266.465 155.613 mo
266.025 153.791 li
267.969 153.321 li
268.409 155.143 li
266.465 155.613 li
322.985 155.708 mo
321.142 154.93 li
321.872 153.203 li
323.714 153.981 li
322.985 155.708 li
289.249 155.934 mo
288.903 154.091 li
289.904 153.904 li
290.048 155.042 li
290.638 155.673 li
289.249 155.934 li
250.052 155.952 mo
249.649 154.121 li
251.602 153.691 li
251.641 153.869 li
251.718 153.155 li
253.707 153.37 li
253.506 155.234 li
251.904 155.061 li
252.005 155.522 li
250.052 155.952 li
227.222 156.197 mo
226.632 156.086 li
226.978 154.243 li
227.444 154.332 li
227.222 156.197 li
308.333 156.682 mo
308.113 154.82 li
310.1 154.586 li
310.319 156.448 li
308.333 156.682 li
324.79 157.116 mo
324.06 155.389 li
325.204 154.906 li
324.899 157.07 li
324.79 157.116 li
270.008 157.19 mo
268.165 156.412 li
268.895 154.684 li
270.737 155.463 li
270.008 157.19 li
224.473 157.531 mo
224.186 155.677 li
225.138 155.498 li
225.484 157.341 li
224.473 157.531 li
304.216 157.687 mo
303.256 157.524 li
303.568 155.676 li
304.604 155.851 li
304.216 157.687 li
314.114 157.714 mo
312.181 157.198 li
312.664 155.387 li
314.496 155.875 li
315.325 154.825 li
316.796 155.987 li
315.557 157.557 li
314.399 156.643 li
314.114 157.714 li
244.046 157.72 mo
243.546 157.087 li
244.85 156.057 li
244.938 156.168 li
244.046 157.72 li
245.869 157.802 mo
245.694 156.683 li
246.491 156.908 li
246.433 157.113 li
246.09 157.627 li
245.869 157.802 li
239.278 157.918 mo
238.258 156.912 li
237.997 156.471 li
237.877 156.045 li
239.803 155.503 li
239.851 155.674 li
240.682 156.494 li
239.278 157.918 li
259.524 158.537 mo
259.489 158.345 li
259.391 156.656 li
261.158 156.336 li
261.492 158.181 li
259.524 158.537 li
320.981 158.933 mo
320.388 158.682 li
320.709 157.222 li
320.22 157.114 li
320.413 156.657 li
322.255 157.436 li
321.672 158.816 li
320.981 158.933 li
269.176 159.158 mo
267.283 159.004 li
266.904 157.435 li
268.848 156.966 li
269.227 158.534 li
268.683 158.667 li
269.278 158.917 li
269.176 159.158 li
263.729 159.251 mo
261.756 158.929 li
262.058 157.078 li
264.032 157.401 li
263.729 159.251 li
318.201 159.31 mo
317.194 158.714 li
318.213 156.993 li
318.654 157.254 li
318.201 159.31 li
250.859 159.614 mo
250.456 157.783 li
251.238 157.611 li
251.316 156.884 li
253.304 157.098 li
253.103 158.962 li
252.755 158.925 li
252.813 159.184 li
252.746 159.199 li
251.98 158.335 li
251.783 159.411 li
250.859 159.614 li
289.941 159.62 mo
289.595 157.777 li
291.561 157.408 li
291.907 159.251 li
289.941 159.62 li
242.628 160.185 mo
241.513 160.123 li
240.612 159.235 li
242.017 157.811 li
242.917 158.699 li
242.647 158.973 li
243.039 159.47 li
242.628 160.185 li
308.772 160.406 mo
308.552 158.544 li
310.539 158.31 li
310.758 160.172 li
308.772 160.406 li
327.055 160.698 mo
326.336 160.272 li
325.924 159.8 li
325.519 158.843 li
326.132 158.585 li
326.694 158.664 li
326.742 158.327 li
327.362 158.065 li
327.638 158.719 li
328.074 158.976 li
327.055 160.698 li
297.333 160.849 mo
296.944 159.237 li
296.281 159.76 li
295.042 158.19 li
296.514 157.028 li
297.753 158.598 li
297.35 158.917 li
298.838 158.557 li
299.277 160.38 li
297.333 160.849 li
312.059 161.047 mo
311.215 160.822 li
311.698 159.01 li
313.63 159.525 li
313.494 160.038 li
311.927 160.321 li
312.059 161.047 li
294.161 161.053 mo
292.286 161.053 li
292.286 159.053 li
294.161 159.053 li
294.161 161.053 li
225.048 161.239 mo
224.761 159.385 li
225.83 159.184 li
225.94 159.771 li
226.286 157.929 li
227.001 158.063 li
226.779 159.929 li
225.94 159.772 li
226.176 161.027 li
225.048 161.239 li
304.341 161.594 mo
302.409 161.078 li
302.892 159.267 li
303.829 159.517 li
303.539 160.891 li
304.476 161.089 li
304.341 161.594 li
329.341 162.373 mo
329.239 161.99 li
328.669 161.653 li
328.989 161.111 li
329.142 161.623 li
329.934 162.214 li
329.341 162.373 li
338.621 162.952 mo
337.382 161.381 li
338.854 160.22 li
340.092 161.791 li
338.621 162.952 li
263.124 162.952 mo
261.15 162.63 li
261.248 162.036 li
260.192 162.227 li
259.858 160.382 li
261.826 160.026 li
261.978 160.865 li
263.427 161.102 li
263.124 162.952 li
341.477 163.69 mo
340.142 162.375 li
341.547 160.95 li
342.881 162.266 li
341.477 163.69 li
344.162 164.334 mo
342.935 162.779 li
344.407 161.617 li
345.646 163.187 li
344.269 164.273 li
344.162 164.334 li
298.213 164.494 mo
297.773 162.672 li
299.717 162.202 li
300.157 164.025 li
298.213 164.494 li
225.622 164.946 mo
225.327 163.038 li
225.594 161.615 li
226.557 161.796 li
226.196 164.839 li
225.622 164.946 li
312.18 164.96 mo
310.248 164.445 li
310.368 163.994 li
309.211 164.13 li
308.992 162.268 li
310.978 162.034 li
311.059 162.72 li
312.428 163.086 li
312.53 163.65 li
312.18 164.96 li
303.375 165.217 mo
301.442 164.701 li
301.926 162.89 li
303.858 163.405 li
303.375 165.217 li
260.761 165.369 mo
260.526 164.072 li
262.494 163.716 li
262.687 164.781 li
262.822 164.803 li
262.732 165.352 li
260.761 165.369 li
336.966 165.452 mo
335.059 164.848 li
335.626 163.06 li
337.532 163.664 li
336.966 165.452 li
330.308 165.995 mo
329.824 164.184 li
331.757 163.668 li
332.24 165.48 li
330.308 165.995 li
311.536 167.375 mo
309.577 167.235 li
309.431 165.992 li
311.417 165.758 li
311.531 166.728 li
311.697 166.772 li
311.536 167.375 li
302.408 168.84 mo
300.476 168.325 li
300.624 167.77 li
299.093 168.14 li
298.653 166.317 li
300.597 165.848 li
300.853 166.909 li
300.959 166.513 li
302.892 167.029 li
302.408 168.84 li
335.834 169.027 mo
335.37 168.88 li
335.294 168.312 li
334.085 168.473 li
333.927 168.423 li
334.493 166.635 li
336.4 167.239 li
335.834 169.027 li
331.274 169.619 mo
330.791 167.807 li
332.723 167.292 li
333.207 169.103 li
331.274 169.619 li
301.771 171.228 mo
299.833 171.205 li
299.533 169.962 li
301.477 169.493 li
301.745 170.604 li
301.925 170.652 li
301.771 171.228 li
332.241 173.242 mo
331.757 171.43 li
333.086 171.076 li
333.361 170.21 li
333.537 170.266 li
333.876 172.806 li
332.241 173.242 li
.883848 .768521 0 0 cmyk
f
68.2598 29.4209 mo
66.4448 29.27 li
65.6318 28.7891 li
66.4448 28.2749 li
68.2598 29.4209 li
84.4639 32.1201 mo
83.9502 31.5942 li
85.5259 31.9043 li
84.4639 32.1201 li
76.21 33.6699 mo
74.1851 31.5933 li
76.0161 31.9551 li
76.4038 31.9551 li
76.6309 31.9102 li
76.2441 29.9482 li
76.21 29.9541 li
74.1841 29.5552 li
76.21 28.2749 li
79.4248 30.3071 li
79.3989 30.3989 li
76.21 33.6699 li
102.25 40.3809 mo
101.633 38.751 li
102.25 39.0381 li
103.107 39.0381 li
102.25 40.3809 li
114.65 36.6108 mo
111.585 39.0298 li
110.257 39.292 li
110.644 41.2539 li
112.209 40.9448 li
112.635 40.749 li
114.859 38.9941 li
115.033 39.4048 li
116.876 38.626 li
116.191 37.0073 li
114.65 36.6108 li
115.27 52.2451 mo
112.015 41.5181 li
108.76 45.7051 li
105.505 35.2832 li
103.874 37.8369 li
103.874 37.0381 li
102.714 37.0381 li
99.7588 33.5391 li
99.6289 33.4629 li
98.9951 31.79 li
95.7402 37.4399 li
92.4849 36.4653 li
90.2959 32.2031 li
91.083 32.3589 li
91.4702 30.396 li
89.4238 29.9932 li
89.23 29.9741 li
86.0732 29.9741 li
84.0508 29.5752 li
83.7031 31.3389 li
82.7202 30.332 li
85.9751 28.2749 li
89.23 28.2749 li
92.4849 26.1973 li
95.7402 26.8931 li
98.9951 28.5181 li
102.25 26.6621 li
105.505 22.0132 li
108.76 25.5923 li
112.015 23.2573 li
115.27 21.8149 li
118.525 29.2222 li
121.78 26.0332 li
125.035 27.2031 li
128.29 29.4849 li
131.545 25.603 li
134.8 29.9082 li
138.055 29.437 li
141.31 28.7559 li
144.565 34.1841 li
147.82 34.3413 li
151.075 31.3853 li
153.246 40.2412 li
151.075 42.75 li
147.82 40.1362 li
144.565 46.5049 li
141.31 32.438 li
138.055 33.9521 li
134.8 38.6699 li
131.545 41.02 li
128.29 38.9458 li
125.035 36.5259 li
122.525 42.0278 li
121.4 43.3599 li
118.525 41.083 li
115.27 52.2451 li
184.292 75.3311 mo
183.819 74.9458 li
182.834 74.752 li
183.625 73.061 li
184.292 75.3311 li
.421149 .392065 0 0 cmyk
f
345.249 163.722 mo
347.246 167.269 li
345.504 168.25 li
343.506 164.703 li
345.249 163.722 li
337.786 173.207 mo
338.88 166.945 li
339.02 166.583 li
339.633 165.616 li
341.322 166.686 li
340.816 167.485 li
339.756 173.55 li
337.786 173.207 li
337.277 183.18 mo
337.601 185.609 li
336.61 185.741 li
335.625 185.569 li
336.494 180.594 li
338.465 180.939 li
337.595 185.913 li
335.619 185.873 li
335.295 183.444 li
337.277 183.18 li
335.294 168.312 mo
336.286 175.746 li
334.303 176.01 li
333.313 168.576 li
335.294 168.312 li
329.751 156.667 mo
330.845 160.338 li
333.024 160.338 li
333.024 162.338 li
330.1 162.338 li
329.142 161.623 li
327.834 157.238 li
329.751 156.667 li
324.714 158.385 mo
325.759 150.958 li
327.74 151.237 li
326.694 158.664 li
324.714 158.385 li
322.623 173.238 mo
323.668 165.812 li
325.649 166.091 li
324.603 173.517 li
322.623 173.238 li
322.104 158.743 mo
323.354 166.138 li
321.382 166.472 li
320.132 159.076 li
322.104 158.743 li
317.142 164.115 mo
318.756 156.792 li
320.709 157.222 li
319.095 164.546 li
317.142 164.115 li
313.895 159.965 mo
314.761 164.75 li
316.119 166.356 li
314.591 167.647 li
313.061 165.836 li
312.841 165.369 li
311.927 160.321 li
313.895 159.965 li
308.555 146.588 mo
310.376 146.229 li
311.554 147.031 li
312.559 152.585 li
310.591 152.941 li
309.767 148.387 li
308.943 148.55 li
308.555 146.588 li
303.539 160.891 mo
305.089 153.553 li
307.046 153.966 li
305.496 161.305 li
303.539 160.891 li
301.484 150.913 mo
301.785 153.409 li
303.315 157.937 li
301.42 158.577 li
299.858 153.952 li
299.812 153.751 li
299.499 151.152 li
301.484 150.913 li
299.688 136.021 mo
300.585 143.467 li
298.6 143.707 li
297.701 136.26 li
299.688 136.021 li
295.946 131.964 mo
296.556 126.548 li
298.543 126.54 li
298.788 128.575 li
296.803 128.814 li
296.557 126.779 li
297.55 126.66 li
298.544 126.772 li
297.934 132.188 li
295.946 131.964 li
294.267 146.87 mo
295.107 139.417 li
297.094 139.641 li
296.255 147.093 li
294.267 146.87 li
291.648 151.763 mo
291.941 154.075 li
293.423 154.367 li
293.428 154.322 li
295.415 154.546 li
295.289 155.67 li
294.101 156.539 li
290.846 155.897 li
290.048 155.042 li
289.664 152.014 li
291.648 151.763 li
289.763 136.882 mo
290.706 144.322 li
288.722 144.574 li
287.779 137.133 li
289.763 136.882 li
283.454 134.665 mo
283.728 134.395 li
286.914 128.738 li
288.777 129.103 li
288.82 129.441 li
286.836 129.693 li
286.793 129.354 li
287.785 129.228 li
288.656 129.719 li
285.401 135.499 li
285.232 135.72 li
284.858 136.089 li
283.454 134.665 li
274.549 142.554 mo
275.384 143.214 li
274.765 144 li
273.894 143.508 li
277.052 137.901 li
278.794 138.882 li
275.636 144.489 li
274.145 144.784 li
273.31 144.125 li
274.549 142.554 li
269.242 129.687 mo
271.275 136.906 li
269.35 137.448 li
267.317 130.229 li
269.242 129.687 li
261.183 140.219 mo
263.026 132.949 li
264.964 133.44 li
263.122 140.711 li
261.183 140.219 li
261.338 128.699 mo
262.126 136.157 li
260.137 136.368 li
259.349 128.909 li
261.338 128.699 li
259.763 113.782 mo
260.551 121.24 li
258.562 121.45 li
257.774 113.992 li
259.763 113.782 li
254.978 117.291 mo
255.124 117.607 li
255.9 115.463 li
257.781 116.144 li
256.175 120.578 li
254.327 120.656 li
253.162 118.128 li
254.978 117.291 li
247.829 122.333 mo
250.23 115.228 li
252.125 115.868 li
249.724 122.973 li
247.829 122.333 li
241.366 121.376 mo
242.461 124.402 li
242.571 124.23 li
244.26 125.3 li
243.06 127.195 li
241.275 127 li
239.485 122.057 li
241.366 121.376 li
232.111 114.03 mo
235.003 111.177 li
236.576 111.399 li
238.263 114.394 li
236.521 115.376 li
235.476 113.52 li
233.515 115.454 li
232.111 114.03 li
230.434 100.717 mo
231.984 108.055 li
230.027 108.468 li
228.477 101.13 li
230.434 100.717 li
226.058 113.1 mo
227.232 105.692 li
229.207 106.005 li
228.034 113.412 li
226.058 113.1 li
225.687 112.248 mo
226.86 119.655 li
224.885 119.968 li
223.711 112.561 li
225.687 112.248 li
220.794 98.2949 mo
222.879 98.707 li
223.673 99.5313 li
224.514 104.84 li
222.538 105.153 li
221.806 100.534 li
220.407 100.257 li
220.794 98.2949 li
215.465 102.496 mo
217.115 107.054 li
216.175 107.394 li
215.243 107.031 li
216.207 104.559 li
218.071 105.285 li
217.107 107.757 li
215.235 107.734 li
213.585 103.177 li
215.465 102.496 li
206.829 96.521 mo
207.016 97.2939 li
209.046 95.6919 li
210.174 95.6162 li
211.033 96.124 li
210.014 97.8452 li
209.746 97.687 li
207.029 99.8311 li
205.438 99.2798 li
204.885 96.9902 li
206.829 96.521 li
201.33 88.6899 mo
202.186 85.314 li
204.127 85.3252 li
205.07 89.23 li
203.125 89.6992 li
202.183 85.7939 li
203.155 85.5601 li
204.124 85.8052 li
203.269 89.1821 li
201.33 88.6899 li
199.952 93.0762 mo
200.884 98.2251 li
199.9 98.4028 li
198.931 98.1582 li
199.488 95.96 li
201.426 96.4521 li
200.869 98.6489 li
198.916 98.582 li
197.984 93.4321 li
199.952 93.0762 li
194.752 81.542 mo
195.8 79.8872 li
197.629 80.2441 li
198.616 85.6963 li
196.648 86.0522 li
195.661 80.6001 li
196.645 80.4219 li
197.49 80.957 li
196.441 82.6128 li
194.752 81.542 li
188.618 84.8511 mo
190.286 88.1411 li
190.599 87.709 li
192.219 88.8823 li
190.945 90.6411 li
189.243 90.5068 li
186.834 85.7549 li
188.618 84.8511 li
179.083 76.48 mo
179.393 75.0688 li
180.564 74.3042 li
183.819 74.9458 li
184.546 75.5381 li
185.611 78.0591 li
183.769 78.8379 li
182.91 76.8052 li
181.136 76.4551 li
181.036 76.9111 li
179.083 76.48 li
177.864 88.5781 mo
178.099 89.877 li
177.115 90.0552 li
176.138 89.8403 li
177.468 83.8052 li
179.421 84.2349 li
178.092 90.27 li
176.131 90.2329 li
175.896 88.9341 li
177.864 88.5781 li
175.192 73.8179 mo
176.528 81.1982 li
174.56 81.5542 li
173.224 74.1738 li
175.192 73.8179 li
167.973 68.3662 mo
169.673 64.0039 li
171.526 63.978 li
172.623 66.5752 li
170.781 67.353 li
170.642 67.0249 li
169.836 69.0923 li
167.973 68.3662 li
161.85 68.002 mo
164.987 74.1899 li
164.095 74.6421 li
163.586 73.7822 li
164.069 73.4961 li
165.088 75.2173 li
164.604 75.5029 li
163.203 75.0942 li
160.066 68.9063 li
161.85 68.002 li
153.419 58.0859 mo
155.221 64.4839 li
155.451 64.7109 li
154.047 66.1353 li
153.628 65.7222 li
153.367 65.2813 li
151.494 58.6279 li
153.419 58.0859 li
147.556 62.7603 mo
149.49 55.5142 li
151.422 56.0288 li
149.489 63.2759 li
147.556 62.7603 li
142.485 54.4893 mo
145.267 57.2339 li
145.486 57.5562 li
146.884 60.8652 li
145.041 61.6431 li
143.721 58.5181 li
141.08 55.9121 li
142.485 54.4893 li
134.326 46.5962 mo
135.61 48.3682 li
135.721 48.5659 li
137.788 53.459 li
135.945 54.2368 li
133.923 49.4492 li
132.707 47.769 li
134.326 46.5962 li
128.145 47.5381 mo
128.491 48.6982 li
128.905 47.8003 li
130.721 48.6372 li
129.198 51.9419 li
127.332 51.8091 li
126.229 48.1099 li
128.145 47.5381 li
119.208 43.9482 mo
121.242 43.5459 li
124.271 39.9609 li
125.993 40.3213 li
126.002 40.3511 li
124.086 40.9219 li
124.077 40.8921 li
125.035 40.6069 li
125.799 41.252 li
122.544 45.105 li
121.974 45.4409 li
119.595 45.9102 li
119.208 43.9482 li
110.257 39.292 mo
111.585 39.0298 li
114.65 36.6108 li
116.191 37.0073 li
116.876 38.626 li
115.033 39.4048 li
114.859 38.9941 li
112.635 40.749 li
112.209 40.9448 li
110.644 41.2539 li
110.257 39.292 li
98.373 33.043 mo
99.189 33.2041 li
99.7588 33.5391 li
102.714 37.0381 li
103.874 37.0381 li
103.874 39.0381 li
102.25 39.0381 li
101.486 38.6831 li
98.457 35.0981 li
97.9858 35.0049 li
98.373 33.043 li
84.0508 29.5752 mo
86.0732 29.9741 li
89.23 29.9741 li
89.4238 29.9932 li
91.4702 30.396 li
91.083 32.3589 li
89.1318 31.9741 li
85.9751 31.9741 li
85.7813 31.9551 li
83.6641 31.5371 li
84.0508 29.5752 li
68.8242 29.4849 mo
69.5059 29.3501 li
69.7002 29.332 li
72.9551 29.332 li
73.1489 29.3501 li
76.21 29.9541 li
76.2441 29.9482 li
76.6309 31.9102 li
76.4038 31.9551 li
76.0161 31.9551 li
72.8569 31.3311 li
69.7979 31.3311 li
69.2109 31.4473 li
68.8242 29.4849 li
54.1299 29.332 mo
56.6802 29.332 li
59.9351 29.332 li
61.6299 29.332 li
61.6299 31.3311 li
59.9351 31.3311 li
56.6802 31.3311 li
54.1299 31.3311 li
54.1299 29.332 li
39.1299 29.332 mo
40.4048 29.332 li
43.6602 29.332 li
46.6299 29.332 li
46.6299 31.3311 li
43.6602 31.3311 li
40.4048 31.3311 li
39.1299 31.3311 li
39.1299 29.332 li
24.1299 29.332 mo
27.3848 29.332 li
30.6401 29.332 li
31.6299 29.332 li
31.6299 31.3311 li
30.6401 31.3311 li
27.3848 31.3311 li
24.1299 31.3311 li
24.1299 29.332 li
.883848 .768521 0 0 cmyk
f
141.31 112.493 mo
138.055 86.8599 li
134.8 100.046 li
131.545 81.168 li
128.29 103.591 li
125.035 89.4229 li
121.78 106.598 li
118.525 98.9502 li
115.27 104.532 li
112.015 98.5229 li
108.76 104.593 li
105.505 100.824 li
102.25 97.0942 li
98.9951 100.432 li
95.7402 92.3452 li
92.4849 76.7319 li
89.23 81.7031 li
85.9751 81.3198 li
82.7202 71.7378 li
79.4648 68.9121 li
76.21 79.2583 li
72.9551 78.1079 li
69.7002 65.6992 li
66.4448 60.8569 li
63.1899 60.208 li
59.9351 49.4351 li
56.6802 36.6709 li
53.4248 30.332 li
54.1299 29.792 li
54.1299 31.3311 li
56.6802 31.3311 li
59.9351 31.3311 li
61.6299 31.3311 li
61.6299 29.332 li
59.9351 29.332 li
56.6802 29.332 li
54.731 29.332 li
56.6802 27.8389 li
59.9351 22.7329 li
63.1899 27.3442 li
65.6318 28.7891 li
63.1899 30.332 li
66.4448 33.6699 li
69.1099 30.936 li
69.2109 31.4473 li
69.7979 31.3311 li
72.8569 31.3311 li
73.3799 31.4351 li
76.21 41.6621 li
79.3989 30.3989 li
79.4648 30.332 li
79.4248 30.3071 li
79.4648 30.167 li
82.7202 32.4741 li
84.4639 32.1201 li
85.9751 33.6699 li
89.23 33.6699 li
92.4849 37.0259 li
95.7402 40.1782 li
98.9951 39.8408 li
102.25 49.375 li
105.505 53.9849 li
108.76 55.5522 li
112.015 56.5859 li
115.27 52.9019 li
118.525 60.9038 li
121.78 62.7822 li
125.035 53.9551 li
128.29 73.4141 li
131.545 63.208 li
134.8 67.8911 li
138.055 83.6582 li
141.31 80.5073 li
144.565 81.5332 li
147.82 96.6611 li
151.075 75.3662 li
154.33 85.2271 li
156.752 92.2349 li
154.33 99.7358 li
151.075 98.585 li
147.82 108.781 li
144.565 84.686 li
141.31 112.493 li
.421149 .392065 0 0 cmyk
f
305.148 106.817 mo
304.06 101.495 li
300.805 85.8423 li
300.165 93.2061 li
297.55 82.5103 li
294.73 102.229 li
294.295 98.9761 li
291.04 83.104 li
287.785 85.3403 li
284.53 91.9229 li
283.853 92.9663 li
281.275 82.4121 li
278.02 71.9912 li
274.765 84.6812 li
271.51 94.8408 li
268.255 74.0669 li
265 87.084 li
263.946 86.7993 li
261.745 80.9121 li
260.471 84.1519 li
258.49 80.9619 li
255.235 77.9048 li
251.98 67.3491 li
248.725 68.5449 li
245.47 87.4312 li
242.253 91.979 li
242.215 91.6792 li
242.149 91.7222 li
238.96 76.6421 li
235.705 65.4219 li
232.45 74.8232 li
229.195 59.2822 li
225.94 72.7642 li
222.685 52.6973 li
219.43 63.8013 li
216.175 60.7583 li
212.92 60.6519 li
209.665 49.916 li
206.41 47.1821 li
203.155 49.8989 li
199.9 59.5723 li
196.645 38.7993 li
193.39 50.731 li
190.135 58.9829 li
186.88 51.563 li
183.625 41.8413 li
180.37 42.6699 li
177.115 52.5972 li
173.86 45.4502 li
170.605 37.666 li
167.35 45.9751 li
164.095 35.4263 li
160.84 41.6802 li
157.585 41.5762 li
154.33 44.665 li
153.246 40.2412 li
154.33 38.9868 li
157.585 40.1763 li
160.84 32.9331 li
164.095 34.6553 li
167.35 39.9409 li
170.605 34.874 li
173.86 33.5933 li
177.115 32.7349 li
180.37 24.0732 li
183.625 37.5952 li
186.88 30.2402 li
190.135 34.0342 li
193.39 35.0669 li
196.645 34.1411 li
199.9 25.2549 li
203.155 38.811 li
206.41 40.0923 li
209.665 36.8301 li
212.92 36.6089 li
216.175 44.7749 li
219.43 40.1152 li
222.685 39.9219 li
225.94 38.2852 li
229.195 37.1802 li
232.45 32.2798 li
235.705 42.8359 li
238.96 35.9858 li
242.215 47.1763 li
245.47 25.7832 li
248.725 36.6401 li
251.98 32.353 li
255.235 39.4243 li
258.49 34.1719 li
261.745 32.228 li
265 35.0322 li
268.255 35.563 li
271.51 37.2549 li
274.765 44.126 li
278.02 37.1792 li
281.275 31.4648 li
284.53 39.1641 li
287.785 38.084 li
291.04 36.4722 li
294.295 38.4639 li
297.55 43.4541 li
300.805 50.502 li
304.06 47.563 li
307.315 48.1919 li
310.57 57.561 li
313.825 41.2349 li
317.08 52.6191 li
320.335 44.6211 li
323.59 45.4253 li
326.845 42.1118 li
330.1 23.3569 li
333.355 31.5049 li
336.61 43.0869 li
339.865 38.3643 li
343.12 32.541 li
346.375 35.1899 li
346.375 99.644 li
343.12 70.396 li
339.865 93.9839 li
336.61 94.4331 li
333.355 105.791 li
330.1 92.168 li
326.845 86.4702 li
323.59 80.644 li
322.284 96.2939 li
320.335 95.772 li
317.08 105.101 li
316.979 105.197 li
313.825 102.873 li
310.57 88.5513 li
307.315 94.8691 li
305.148 106.817 li
f
320.978 111.938 mo
320.335 109.171 li
317.08 105.272 li
316.979 105.197 li
317.08 105.101 li
320.335 95.772 li
322.284 96.2939 li
320.978 111.938 li
.729335 .669886 0 0 cmyk
f
68.8901 29.8198 mo
68.2598 29.4209 li
68.8828 29.4741 li
68.8242 29.4849 li
68.8901 29.8198 li
.421149 .392065 0 0 cmyk
f
310.57 119.11 mo
307.315 105.575 li
306.069 111.32 li
305.148 106.817 li
307.315 94.8691 li
310.57 88.5513 li
313.825 102.873 li
316.979 105.197 li
313.825 108.205 li
310.57 119.11 li
.729335 .669886 0 0 cmyk
f
317.08 130.86 mo
313.825 115.326 li
310.57 120.947 li
307.315 117.413 li
306.069 111.32 li
307.315 105.575 li
310.57 119.11 li
313.825 108.205 li
316.979 105.197 li
317.08 105.272 li
320.335 109.171 li
320.978 111.938 li
320.335 119.634 li
317.08 130.86 li
.816922 .734707 0 0 cmyk
f
297.55 119.826 mo
297.028 119.412 li
294.73 102.229 li
297.55 82.5103 li
300.165 93.2061 li
297.868 119.653 li
297.55 119.826 li
.729335 .669886 0 0 cmyk
f
297.55 123.311 mo
297.028 119.412 li
297.55 119.826 li
297.868 119.653 li
297.55 123.311 li
.816922 .734707 0 0 cmyk
f
244.475 109.748 mo
242.253 91.979 li
245.47 87.4312 li
248.725 68.5449 li
251.98 67.3491 li
255.235 77.9048 li
258.49 80.9619 li
260.471 84.1519 li
258.49 89.1909 li
257.309 93.3242 li
255.235 87.7319 li
252.715 101.022 li
251.98 101.151 li
248.725 79.1118 li
246.701 103.104 li
245.47 106.248 li
244.475 109.748 li
.729335 .669886 0 0 cmyk
f
252.715 101.022 mo
255.235 87.7319 li
257.309 93.3242 li
255.235 100.579 li
252.715 101.022 li
245.47 117.705 mo
244.475 109.748 li
245.47 106.248 li
246.701 103.104 li
245.47 117.705 li
.816922 .734707 0 0 cmyk
f
128.145 47.5381 mo
126.229 48.1099 li
127.332 51.8091 li
129.198 51.9419 li
130.721 48.6372 li
128.905 47.8003 li
128.491 48.6982 li
128.145 47.5381 li
134.326 46.5962 mo
132.707 47.769 li
133.923 49.4492 li
135.945 54.2368 li
137.788 53.459 li
135.721 48.5659 li
135.61 48.3682 li
134.326 46.5962 li
142.485 54.4893 mo
141.08 55.9121 li
143.721 58.5181 li
145.041 61.6431 li
146.884 60.8652 li
145.486 57.5562 li
145.267 57.2339 li
142.485 54.4893 li
149.49 55.5142 mo
147.556 62.7603 li
149.489 63.2759 li
151.422 56.0288 li
149.49 55.5142 li
153.419 58.0859 mo
151.494 58.6279 li
153.367 65.2813 li
153.628 65.7222 li
154.047 66.1353 li
155.451 64.7109 li
155.221 64.4839 li
153.419 58.0859 li
171.526 63.978 mo
169.673 64.0039 li
167.973 68.3662 li
169.836 69.0923 li
170.642 67.0249 li
170.781 67.353 li
172.623 66.5752 li
171.526 63.978 li
161.85 68.002 mo
160.066 68.9063 li
163.203 75.0942 li
164.604 75.5029 li
165.088 75.2173 li
164.597 74.3882 li
164.987 74.1899 li
161.85 68.002 li
175.192 73.8179 mo
173.224 74.1738 li
174.56 81.5542 li
176.528 81.1982 li
175.192 73.8179 li
195.971 82.3149 mo
196.648 86.0522 li
198.616 85.6963 li
197.629 80.2441 li
195.8 79.8872 li
194.752 81.542 li
195.971 82.3149 li
216.175 104.233 mo
216.085 104.208 li
215.465 102.496 li
214.89 102.705 li
212.92 98.8721 li
211.278 101.304 li
209.665 99.3071 li
208.946 98.3179 li
209.746 97.687 li
210.014 97.8452 li
211.033 96.124 li
210.174 95.6162 li
209.046 95.6919 li
207.769 96.6992 li
206.41 94.8311 li
203.155 89.7222 li
201.518 88.7378 li
202.983 89.1089 li
203.125 89.6992 li
205.07 89.23 li
204.127 85.3252 li
202.186 85.314 li
201.344 88.6343 li
199.9 87.7651 li
196.645 91.7671 li
193.39 81.939 li
190.135 84.231 li
186.88 84.1421 li
185.15 78.2539 li
185.611 78.0591 li
184.546 75.5381 li
184.292 75.3311 li
183.625 73.061 li
182.834 74.752 li
180.564 74.3042 li
179.393 75.0688 li
179.083 76.48 li
181.036 76.9111 li
181.136 76.4551 li
181.961 76.6182 li
180.37 80.0171 li
178.444 84.02 li
177.468 83.8052 li
176.356 88.8511 li
175.896 88.9341 li
176.103 90.0801 li
173.86 97.394 li
170.605 75.75 li
167.35 70.7402 li
164.095 87.4419 li
160.84 92.9541 li
157.585 89.6543 li
156.752 92.2349 li
154.33 85.2271 li
151.075 75.3662 li
147.82 96.6611 li
144.565 81.5332 li
141.31 80.5073 li
138.055 83.6582 li
134.8 67.8911 li
131.545 63.208 li
128.29 73.4141 li
125.035 53.9551 li
121.78 62.7822 li
118.525 60.9038 li
115.27 52.9019 li
112.015 56.5859 li
108.76 55.5522 li
105.505 53.9849 li
102.25 49.375 li
98.9951 39.8408 li
95.7402 40.1782 li
92.4849 37.0259 li
89.23 33.6699 li
85.9751 33.6699 li
84.4639 32.1201 li
85.5259 31.9043 li
85.7813 31.9551 li
85.9751 31.9741 li
89.1318 31.9741 li
90.2959 32.2031 li
92.4849 36.4653 li
95.7402 37.4399 li
98.9951 31.79 li
99.6289 33.4629 li
99.189 33.2041 li
98.373 33.043 li
97.9858 35.0049 li
98.457 35.0981 li
101.486 38.6831 li
101.633 38.751 li
102.25 40.3809 li
103.107 39.0381 li
103.874 39.0381 li
103.874 37.8369 li
105.505 35.2832 li
108.76 45.7051 li
112.015 41.5181 li
115.27 52.2451 li
118.525 41.083 li
121.4 43.3599 li
121.242 43.5459 li
119.208 43.9482 li
119.595 45.9102 li
121.974 45.4409 li
122.544 45.105 li
125.799 41.252 li
125.064 40.6309 li
126.002 40.3511 li
125.993 40.3213 li
124.271 39.9609 li
122.525 42.0278 li
125.035 36.5259 li
128.29 38.9458 li
131.545 41.02 li
134.8 38.6699 li
138.055 33.9521 li
141.31 32.438 li
144.565 46.5049 li
147.82 40.1362 li
151.075 42.75 li
153.246 40.2412 li
154.33 44.665 li
157.585 41.5762 li
160.84 41.6802 li
164.095 35.4263 li
167.35 45.9751 li
170.605 37.666 li
173.86 45.4502 li
177.115 52.5972 li
180.37 42.6699 li
183.625 41.8413 li
186.88 51.563 li
190.135 58.9829 li
193.39 50.731 li
196.645 38.7993 li
199.9 59.5723 li
203.155 49.8989 li
206.41 47.1821 li
209.665 49.916 li
212.92 60.6519 li
216.175 60.7583 li
219.43 63.8013 li
222.685 52.6973 li
225.94 72.7642 li
229.195 59.2822 li
232.45 74.8232 li
235.705 65.4219 li
238.96 76.6421 li
242.149 91.7222 li
239.328 93.5371 li
238.96 90.459 li
235.705 75.4878 li
234.561 86.0669 li
232.45 79.585 li
229.195 73.4722 li
225.94 85.1421 li
222.685 97.5449 li
219.43 89.7129 li
216.175 104.233 li
.729335 .669886 0 0 cmyk
f
238.96 93.7729 mo
235.705 89.582 li
234.561 86.0669 li
235.705 75.4878 li
238.96 90.459 li
239.328 93.5371 li
238.96 93.7729 li
213.723 103.559 mo
212.92 103.338 li
211.278 101.304 li
212.92 98.8721 li
214.89 102.705 li
213.585 103.177 li
213.723 103.559 li
.816922 .734707 0 0 cmyk
f
271.51 103.717 mo
268.255 94.7109 li
267.395 94.853 li
265 89.6191 li
263.946 86.7993 li
265 87.084 li
268.255 74.0669 li
271.51 94.8408 li
274.765 84.6812 li
278.02 71.9912 li
281.275 82.4121 li
283.853 92.9663 li
281.275 96.937 li
278.02 92.6011 li
277.413 94.1782 li
274.765 84.8701 li
271.51 103.717 li
.729335 .669886 0 0 cmyk
f
271.51 103.976 mo
268.255 96.7339 li
267.395 94.853 li
268.255 94.7109 li
271.51 103.717 li
274.765 84.8701 li
277.413 94.1782 li
274.765 101.053 li
271.51 103.976 li
.816922 .734707 0 0 cmyk
f
79.3989 30.3989 mo
79.4248 30.3071 li
79.4648 30.332 li
79.3989 30.3989 li
66.4448 33.6699 mo
63.1899 30.332 li
65.6318 28.7891 li
66.4448 29.27 li
68.2598 29.4209 li
68.8901 29.8198 li
69.1099 30.936 li
66.4448 33.6699 li
.729335 .669886 0 0 cmyk
f
61.6299 31.3311 mo
59.9351 31.3311 li
56.6802 31.3311 li
54.1299 31.3311 li
54.1299 29.792 li
54.731 29.332 li
56.6802 29.332 li
59.9351 29.332 li
61.6299 29.332 li
61.6299 31.3311 li
69.2109 31.4473 mo
69.1099 30.936 li
68.8901 29.8198 li
68.8242 29.4849 li
68.8828 29.4741 li
69.7002 29.542 li
72.9551 29.8979 li
73.3799 31.4351 li
72.8569 31.3311 li
69.7979 31.3311 li
69.2109 31.4473 li
90.2959 32.2031 mo
89.1318 31.9741 li
85.9751 31.9741 li
85.7813 31.9551 li
85.5259 31.9043 li
85.9751 31.813 li
89.23 30.1289 li
90.2959 32.2031 li
101.633 38.751 mo
101.486 38.6831 li
98.457 35.0981 li
97.9858 35.0049 li
98.373 33.043 li
99.189 33.2041 li
99.6289 33.4629 li
101.633 38.751 li
103.874 39.0381 mo
103.107 39.0381 li
103.874 37.8369 li
103.874 39.0381 li
119.595 45.9102 mo
119.208 43.9482 li
121.242 43.5459 li
121.4 43.3599 li
121.78 43.6611 li
122.525 42.0278 li
124.271 39.9609 li
125.993 40.3213 li
126.002 40.3511 li
125.064 40.6309 li
125.799 41.252 li
122.544 45.105 li
121.974 45.4409 li
119.595 45.9102 li
129.198 51.9419 mo
127.332 51.8091 li
126.229 48.1099 li
128.145 47.5381 li
128.491 48.6982 li
128.905 47.8003 li
130.721 48.6372 li
129.198 51.9419 li
135.945 54.2368 mo
133.923 49.4492 li
132.707 47.769 li
134.326 46.5962 li
135.61 48.3682 li
135.721 48.5659 li
137.788 53.459 li
135.945 54.2368 li
145.041 61.6431 mo
143.721 58.5181 li
141.08 55.9121 li
142.485 54.4893 li
145.267 57.2339 li
145.486 57.5562 li
146.884 60.8652 li
145.041 61.6431 li
149.489 63.2759 mo
147.556 62.7603 li
149.49 55.5142 li
151.422 56.0288 li
149.489 63.2759 li
154.047 66.1353 mo
153.628 65.7222 li
153.367 65.2813 li
151.494 58.6279 li
153.419 58.0859 li
155.221 64.4839 li
155.451 64.7109 li
154.047 66.1353 li
169.836 69.0923 mo
167.973 68.3662 li
169.673 64.0039 li
171.526 63.978 li
172.623 66.5752 li
170.781 67.353 li
170.642 67.0249 li
169.836 69.0923 li
164.604 75.5029 mo
163.203 75.0942 li
160.066 68.9063 li
161.85 68.002 li
164.987 74.1899 li
164.597 74.3882 li
165.088 75.2173 li
164.604 75.5029 li
181.036 76.9111 mo
179.083 76.48 li
179.393 75.0688 li
180.564 74.3042 li
182.834 74.752 li
181.961 76.6182 li
181.136 76.4551 li
181.036 76.9111 li
185.15 78.2539 mo
184.292 75.3311 li
184.546 75.5381 li
185.611 78.0591 li
185.15 78.2539 li
174.56 81.5542 mo
173.224 74.1738 li
175.192 73.8179 li
176.528 81.1982 li
174.56 81.5542 li
196.648 86.0522 mo
195.971 82.3149 li
194.752 81.542 li
195.8 79.8872 li
197.629 80.2441 li
198.616 85.6963 li
196.648 86.0522 li
203.125 89.6992 mo
202.983 89.1089 li
201.518 88.7378 li
201.344 88.6343 li
202.186 85.314 li
204.127 85.3252 li
205.07 89.23 li
203.125 89.6992 li
176.103 90.0801 mo
175.896 88.9341 li
176.356 88.8511 li
177.468 83.8052 li
178.444 84.02 li
177.115 86.7832 li
176.103 90.0801 li
208.946 98.3179 mo
207.769 96.6992 li
209.046 95.6919 li
210.174 95.6162 li
211.033 96.124 li
210.014 97.8452 li
209.746 97.687 li
208.946 98.3179 li
216.085 104.208 mo
213.723 103.559 li
213.585 103.177 li
214.89 102.705 li
215.465 102.496 li
216.085 104.208 li
.883848 .768521 0 0 cmyk
f
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
24.1299 30.332 mo
27.3848 30.332 li
30.6401 30.332 li
33.895 30.332 li
37.1499 30.332 li
40.4048 30.332 li
43.6602 30.332 li
46.915 30.332 li
50.1699 30.332 li
53.4248 30.332 li
56.6802 32.2583 li
59.9351 36.1108 li
63.1899 43.8169 li
66.4448 45.1021 li
69.7002 47.6709 li
72.9551 54.0923 li
76.21 60.5142 li
79.4648 49.5972 li
82.7202 52.166 li
85.9751 56.6611 li
89.23 56.019 li
92.4849 56.6611 li
95.7402 65.0103 li
98.9951 66.2939 li
102.25 68.8628 li
105.505 68.2212 li
108.76 75.2852 li
112.015 70.147 li
115.27 78.4961 li
118.525 70.147 li
121.78 75.2852 li
125.035 63.083 li
128.29 71.4312 li
131.545 61.1572 li
134.8 69.5049 li
138.055 60.5142 li
141.31 72.7163 li
144.565 65.6519 li
147.82 74.6421 li
151.075 70.7891 li
154.33 69.5049 li
157.585 65.0103 li
160.84 63.083 li
164.095 61.1572 li
167.35 55.377 li
170.605 55.377 li
173.86 65.6519 li
177.115 59.8721 li
180.37 52.166 li
183.625 55.377 li
186.88 57.3032 li
190.135 59.23 li
193.39 58.5879 li
196.645 63.083 li
199.9 56.6611 li
203.155 64.3672 li
206.41 67.5781 li
209.665 68.2212 li
212.92 70.147 li
216.175 74.6421 li
219.43 65.0103 li
222.685 68.8628 li
225.94 61.7988 li
229.195 55.377 li
232.45 56.019 li
235.705 66.2939 li
238.96 65.0103 li
242.215 69.5049 li
245.47 72.0742 li
248.725 57.9463 li
251.98 66.936 li
255.235 70.147 li
258.49 61.7988 li
261.745 56.6611 li
265 62.4409 li
268.255 66.2939 li
271.51 70.7891 li
274.765 72.7163 li
278.02 65.0103 li
281.275 64.3672 li
284.53 65.6519 li
287.785 61.7988 li
291.04 59.8721 li
294.295 68.8628 li
297.55 83.6333 li
300.805 68.2212 li
304.06 74.6421 li
307.315 82.9912 li
310.57 89.4131 li
313.825 78.4961 li
317.08 91.9819 li
320.335 82.3491 li
323.59 63.083 li
326.845 64.3672 li
330.1 57.9463 li
333.355 68.8628 li
336.61 68.8628 li
339.865 66.2939 li
343.12 51.5239 li
346.375 67.5781 li
@
.5 lw
2 lc
346.375 4.64404 mo
346.375 7.89893 li
281.275 4.64404 mo
281.275 7.89893 li
216.175 4.64404 mo
216.175 7.89893 li
151.075 4.64404 mo
151.075 7.89893 li
85.9751 4.64404 mo
85.9751 7.89893 li
20.875 4.64404 mo
20.875 7.89893 li
346.375 261.519 mo
346.375 258.264 li
281.275 261.519 mo
281.275 258.264 li
216.175 261.519 mo
216.175 258.264 li
151.075 261.519 mo
151.075 258.264 li
85.9751 261.519 mo
85.9751 258.264 li
20.875 261.519 mo
20.875 258.264 li
20.875 4.64404 mo
346.375 4.64404 li
20.875 261.519 mo
346.375 261.519 li
.639918 .563928 .533043 .294835 cmyk
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
def
/FontBBox {-665 -325 2000 1040} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3A
BC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A1
0425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E3
1D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC
60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A
5B546505C954A88> |-
/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-
/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-
/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE
023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-
/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-
/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C
071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D
17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63
B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F6
03BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A
7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219
571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A
1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A
55977C35> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IPWBQT+ArialMT /ArialMT findfont ct_VMDictPut
/IPWBQT+ArialMT*1 
[48{/.notdef}rp /zero /one /two /.notdef /four /.notdef /six 
/.notdef /eight 199{/.notdef}rp]
IPWBQT+ArialMT nf
IPWBQT+ArialMT*1 [10.0001 0 0 -10.0001 0 0 ]msf
18.0625 275.644 mo
(02)
[62.292 0 ]xsh
85.9141 275.644 mo
(04)
[59.542 0 ]xsh
151.016 275.644 mo
(06)
[59.542 0 ]xsh
216.109 275.644 mo
(08)
[59.542 0 ]xsh
281.211 275.644 mo
(0)sh
337.938 275.644 mo
(100)sh
346.375 4.64404 mo
343.12 4.64404 li
346.375 30.332 mo
343.12 30.332 li
346.375 56.019 mo
343.12 56.019 li
346.375 81.707 mo
343.12 81.707 li
346.375 107.394 mo
343.12 107.394 li
346.375 133.082 mo
343.12 133.082 li
346.375 158.769 mo
343.12 158.769 li
346.375 184.457 mo
343.12 184.457 li
346.375 210.144 mo
343.12 210.144 li
346.375 235.832 mo
343.12 235.832 li
346.375 261.519 mo
343.12 261.519 li
20.875 4.64404 mo
24.1299 4.64404 li
20.875 30.332 mo
24.1299 30.332 li
20.875 56.019 mo
24.1299 56.019 li
20.875 81.707 mo
24.1299 81.707 li
20.875 107.394 mo
24.1299 107.394 li
20.875 133.082 mo
24.1299 133.082 li
20.875 158.769 mo
24.1299 158.769 li
20.875 184.457 mo
24.1299 184.457 li
20.875 210.144 mo
24.1299 210.144 li
20.875 235.832 mo
24.1299 235.832 li
20.875 261.519 mo
24.1299 261.519 li
346.375 261.519 mo
346.375 4.64404 li
20.875 261.519 mo
20.875 4.64404 li
@
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBQT+ArialMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368A
FE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD1
0C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA76
98FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA
14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C0
2C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608
AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBQT+ArialMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/IPWBQT+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /.notdef /six 
/.notdef /eight 199{/.notdef}rp]
IPWBQT+ArialMT nf
IPWBQT+ArialMT*1 [10.0001 0 0 -10.0001 0 0 ]msf
0 265.457 mo
(110)sh
0 239.769 mo
(112)sh
0 214.082 mo
(114)sh
0 188.394 mo
(116)sh
0 162.707 mo
(118)sh
0 137.019 mo
(120)sh
0 111.332 mo
(122)sh
0 85.644 mo
(124)sh
0 59.9565 mo
(126)sh
0 34.269 mo
(128)sh
0 8.58154 mo
(130)sh
195.25 253.644 mo
195.25 190.269 li
30.625 190.269 li
30.625 253.644 li
195.25 253.644 li
cp
0 0 0 0 cmyk
f
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BookAntiqua def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 71 /G put
dup 78 /N put
def
/FontBBox {-136 -311 1154 1036} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/C <1C60D8A8C9B63818B1A6B2F842B10BC16CC92EA605298D74509D61F24455
84D5E2E370CBA3DBE8085067E5828F80ADBA27A3A7E50104662815AF695E07F7
332C34B49AEF08F999065E8DD920FC474D56808B8728913E9A694B052BC0B505
5ECAAAA076445BAAF41747CF437E4F995F39B330D760FEED31693C6C1B44BEE9
8D979426A15499EFED0B96E2E4A9EED5DCF34C6B842AAF6D1B021B83BED63FBD
743CA6D07E5DBCD33413> |-
/G <1C60D8A8C9B6EEDBB255DFB0DDB0085B69F92628A3EA4C0BD90268945DCF
46D6AAAFD0ADE0314913DCB03F32A3075B7460CCB2BA7CED7E419C7F7BC48EAB
38C556923B1C663FBF77ACA05A8F7E1441229773C576C560215A4DBB5ADC1A51
4798F3AE1D1BD78B7B4E715213ADBC0D44369AB589E59DB390DFE45A206FA1E9
CEE23A51C2CADA76D7AC9D3C909381278F95CFDE9E3C57E7BF77C6A0B24D3C7B
62DD53CF4D20601661AD37CA33E6BA74E319371805CCB57EED82853821E9558C
3A4C0CAFBF1F7702F4D3D73879FB42076B1D9B3022E7375A860BB452> |-
/N <1C60D8A8C9B6B278BF3A0F690715076309AA113E35DF263767883741BC63
99EFC5B8A932C7830D810344BEAB3D1B7656929231E206A17FAE2716618F9ED1
33D146B64BB9E18A24191C4B2EB17F4C7E8386358EE2D6FE8A274523E2166EBE
882672D5DE16119C1BECAFC62A2EFFDB0570BEC3C9DEBBF0E38FC40422B68D7F
713DBE7394C8318B6B11A33B48C899FD844DB02DB26F5A9E5F4F5D56125C39C6
4318FAF4F8EB8B9A35B7FAB93DC265A0044C5069C96FFCB1D91B355FECA0A04E
4C8465B1BC47E9D8F6EF1F6777A0AE306B4D8C9BAA76801FF5D3538822A5E694
9CD541AD1CF00C3BD553ED378CC1C714076E06C809BFEC> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IPWBQU+BookAntiqua /BookAntiqua findfont ct_VMDictPut
/IPWBQU+BookAntiqua*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 6{/.notdef}rp /N 177{/.notdef}rp]
IPWBQU+BookAntiqua nf
IPWBQU+BookAntiqua*1 [16.0001 0 0 -16.0001 0 0 ]msf
65.875 206.769 mo
(GCN)sh
2 lw
0 lc
2 lj
1 ml
[1.875 1.875 ] 0 dsh
33.625 201.707 mo
63.625 201.707 li
.883848 .768521 0 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBQU+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B78E05EAF340E05925B0F5DDA3D2BF7E3ADE00218341960418
DE3787C3039EF2918052D5E9865628C603AC1CA5CA13BAA2D32A7EAB4ADE8431
2F2EE5EB5C1536130E8D1475A5B07897AD349E87BA9BD6C0EF99B7C95399C050
70E48EC35738C65187A14719D62269F2FEC062D1600F9E11B35DACA92B0C6282
5968E726C9CDA533AFE6824A37F97E4A0D3747004A0E5DDE4E1885C515AD3DA5
5E36887846664D015DC35E506564F96EE08B74122C1C30EEBAF77C475C1E5319
C5BBA8A16CA47C392C6B988DD47690FE4E7519DE9FDE5F3CBA9D997269751C24
520AC36311D980A7841915B9D48844DFCD3F67B831024A2C537FE51271A7B5C4> |-
/a <1C60D8A8C9B7A73DA26D338A6EEFAF8BB2FAC63C743BFE9A5A80EA72EC22
660F3E4A4E885B4905407C31DEBC559084C6BF950BA9E868F8A4BB47279BACFC
6372A38C14C6D5F73AF5937386D62DD6E9221F0E422578172B23F5401A2EDD27
4458922B3E129B4E6760F094D6F7E148B510515C089E56F76AC0240BEAC5286B
C25179938A46897755CC1345E96A1D77F361C6E9BBAA16C1223DF11B055C9902
F7812886C2537E2837DB54626F97E68F5BED5FD22CAAC417C92B7ADB5C1A34FA
58EC3DDC0F438BD5644A08CF610B8D809EFF3FAFFDEAE45E56C23A4A6DBFCA6A
FE012169C76E636CCD336FF493> |-
/b <1C60D8A8C9B7924C07562B9AABFA135A4A009CE6256C1178ECF25246AB0F
9091B9E4B0D57032F10C16E3D4ACF6E6E588DFE8BE14692CF4DE8D6131E3EB0A
C82ACF1AEDF970DC9F24EC87DBC120071DA83E630F437B7E964FEFE900F50448
69C5FF63D746B183CA9C437C82D594D5B622BDB0A3F651B8B313C65011134FD2
2AE64A999AF9F4CBE9A999475A79BF07A7B421DEC9040FAC8BE714A8A368FB09
F032527FACFEEA326D1E4F5153CE398D69969A1C0B6F3C76600C9164BC03D843
26DEF038749769DC73FB3747608069295B01C087B910069E8BC8DB5F6517254D
B097015B6A19F76F673CF0699B33D3F91282A7E0B0D61E8BD82279E2F29D2649> |-
/l <1C60D8A8C9B849F23CF4A9C7C1B1CD74BC116025C9E90DA1E7118A563435
9E816CA947BB63EDAECBB4D36050657B6493C3D9366E3B69BB5508B5941F0BD6
4BBCB95ABB6AED81C0ECBCCF91104B847624B62EC01B8053083A1C6624617E56
F6BE3E8A9EE7A5A9AACD278ACE547E5B> |-
/n <1C60D8A8C9B7F51B1816CA1D547B9D412112B1108000BCD479B15D29278E
FF207C440633A34B346F87B40F04E5E8F9C3FD06BA69AD06F44D8C96AE9209E7
498AB8729996BB695FCE0B76D992BC29F7448E4EDD94CFE81D9BB5C9989A683A
B090A7835C786BCAAE46573AD51B72F79C70758202DE28EBE70CE7666E0009E5
8B750E17F7688635342A3A4A4867D024FAC7839AA7003B6BB16E2A4C4D307F4F
8B37258A1025AA52F5F9CA647EC474B0B3E170234ABEBE6186CD896F64E4903D
F224FF80948F28E0808441F171FD8CA35D9629D9DC842C46B11E25C3EDAB94A4
B6D8C6A956862134214DB61684C934E1AA4D366FB59218F15C370355> |-
/o <1C60D8A8C9B799EBC1FAB6A5BCCBA2E0F3E1D45B556ECD5A7EFF104D7703
44B1C6F7D9B6946DBAF6E65C04338513B8F66AB24ED97FF96A493E44241B17DB
2475C280908440A723BC3E93813D71653F3F8A5A881BF70FDE8A36C48CE9BF5C
083DE2E0C712117179A9F0FFCE4CE5E808F28DB42624C86F00B594BC68B03542
2881291EAE286936AFC4C4DBFC44A0E37875B5503D04A100C0> |-
/w <1C60D8A8C9B6B770206E71F5576446D84E0137B582D011D0119039802F32
A9324B77BEFB6E23072FF6CE0E2FCD5CF63D0497152B37D25E0B01F41CCE6AF1
49FF1F47AA1F1492304B643D928E442E0563B7DF5FDA8D259D5FCEAAA946CD94
82A653DD155648FCE56FA88636D95E0CD9B50D3C15FB9A9E3E494E1834B2F0EB
6BFEA10E52CD710ACBA0466847E102EC5DA51641129EA6F81C065AE9E971967D
5BDBC82BAF0484B65BA83366A16540DDF9D6BDCF000650DFD85BF504F7FF2CD4
760814B130C7F21D922A42F1BD58C8E2173C8DCDF94D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBQU+BookAntiqua /Encoding get
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 119 /w put
pop
%ADOEndSubsetFont
/IPWBQU+BookAntiqua*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 6{/.notdef}rp /N 4{/.notdef}rp /S 
13{/.notdef}rp /a /b 9{/.notdef}rp /l /.notdef /n /o 
7{/.notdef}rp /w 136{/.notdef}rp]
IPWBQU+BookAntiqua nf
IPWBQU+BookAntiqua*1 [16.0001 0 0 -16.0001 0 0 ]msf
65.875 227.019 mo
(Snowb)sh
114.516 227.019 mo
(all)sh
[7.5 7.5 ] 0 dsh
33.625 221.957 mo
63.625 221.957 li
.883848 .768521 0 0 cmyk
@
.67953 .634058 .618097 .562646 cmyk
%ADOBeginSubsetFont: BookAntiqua AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
systemdict begin
IPWBQU+BookAntiqua dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
/K <1C60D8A8C9B60BC68914A478CD7BC29D781A5FC46A64AD449D3CE48CE6A0
D8D1E621BDD77748511BA3BEAC979377F661033527DD0104A0731B4259EA95CF
95A44546EF42A78DEC6C77954907E37BAD9A59362BAE1AD98F86F455E3ACEE47
09078615B0029C2ED1B0B8E3B9480371A00455A0679A41789E061CA8244C59CD
85E0B6CEE4C16EB6FD67CD7CDC945B4F1650DE5E18EF0FCAF98C379F5FFE20B7
96CE627616BCF7B2481CE3469180F04BAA2DC0F078CDA315CBD23136996F76C4
97210D93A78D829EF095F4FF7E3C0DF2AF2EE5A799A0660EDA02E8279E63D040
8D655B8AE3DBDC0837AC7185CA2AA3FB8361A385> |-
/T <1C60D8A8C9B7D61BC487525B76EB826DA209E599588F9271826AD29E7B1B
470F79ECCDA29092A88DC7D61A115FE211D8DAAFB2D11B3F2F839A2A0A701A0B
0BEF17A84BCC5249F6B2A2512E0DB0FE1E5B0A45260BCC3198778469683DA863
347883A81EA5761F2665FBC69EAED798D26226465F8EB3875AA46DCB2121107B
CB1A8023A1BF32082F8C018EA1D31FC89288ABAE9FA856854DC900851793E635
2092AD15A83111725E73> |-
/c <1C60D8A8C9B77FE2CEF680768ABDC36B82783C1CB263BE5484B552EB5242
6C183967149A2120762E84E5A5F6B5C649AD684D7B325F1E41BC945AF8F2DAC7
CDCB20B5E59776C0F23EBA553F9B2D8668B320EA463623ED2F4501581B079DE5
6B9766D8AA9EA20ECA2C872340A8DC0D4AE4E0A9095E6ABDAAD250B5CE6FB54B
33CD634BC3425029263C6E2EE04959225975167D82EB6C3B36220414406A1867
D3D807805A87974658B849A555> |-
/d <1C60D8A8C9B7D8BE16D35E9B07F4AA3ABC773F184EE6E3111EBEE58F30E7
4A5C093788762907EB397F545117B70EC1296402158CFCA893B8E152B3FED36E
BC67D9C422DFAFFE9752EA098BF93AACA36D5C53A4280D01E7779BF82492241F
45A36D4AC8AF6C6A73199DBE26F54AF4D2F32664041412328449449B9B052454
65D73F29B7B78A009D3DC437AB899F90B7D6DED4621A749FF3E64ED1D2D44A37
38AAA4969F7B94DE8AF8C9F8147A2815FC0785F4CBE2EE70997E006E82C0254B
9A7E6F86D0E9EAFCDC1ABC198649CF35A5DC7EBBED1C5E3BBF99F817AC072E4F
8075791A1E4D4F15CF3F8E678254E97E72C1E1> |-
/e <1C60D8A8C9B75CBB5CD8534012233D131627B1B267A3930139B0D9AA8A92
F0FCE4E7AFD311431CF43A9A551C385DD6E1190F0601E94350FECB845C0D578F
C2722E61FA69CBEAE0F028400C203AA04FEF8893BE5650D0DFFBCA997D1335B8
B2495AB693DB3A958CD3CB0FA9747B60D9A8955AC7A0BFEC37C8FF1727E2163A
214136BBCCC6F627B5031E9AA610E69502F8F74EDF1A6888C4E32F14754B5346
4DAE1272036BF9BB2B561EAF7A7AA400BAEECF1D802F90F1E3E018> |-
/r <1C60D8A8C9B730312D829ACB32CAC9B0868517203C18ED7F200FC8B47626
14F491608722BDEC68642FEEF3A308D209E98DC1910738458AE0B66D86FC6E3E
E048C4D2E5A7A6580A60283A65FA611CAF5AD8A9A819077BD620B6F2B9159736
2775A0E5A1F539B6F86C81E3735CE68ED61BDF940319D0ECD0FF998CC5FBC404
4636F5AE8659C5D7930F28ADA0487897DC17F3038C0C3AC48F30ECE6D927C22F
49EFD0A0756B4A01D3FB62E238AFFDC56D27A7E970F850F1760B32056DADA890
D9522A82A5C86A55CCC2BA28CC6D3BBE65034AE6D54B98FDFF> |-
/t <1C60D8A8C9B82424A9C27E6E9DF811EA1D553D5F4ACDACB82D3B2B7CC8F0
6EDC072CE45357C9C18F37F88428E4FE1AEE57AE61253C2D4CF5DB8D6D9C43C8
368D3E08560346F9C492D1ECBDDE132A2C001B561424A0718442FC769B95787E
D1D857BE704297D20080CCABED98B7B63124151429278CE4D7B1F664E4EACA72
8C10B5C11A88AF87F05984B7ED2C9F6B2F62BD63BFF73BD6DBB861B5A544F0> |-
/u <1C60D8A8C9B7C05416EE4959E55B08FD7B137A64C2C623C62345DAC392F7
AA285144B94C044B1E1AEFAE4BB22BB3C4E3412B9F11E4CE08A008F989AC52B5
348A037859B72491DF2EA4DB6FF87B09C5657124262D25504363D95E04BB6618
308F8962ABCDCE909D3FFAF6648AA5FB013089CF4D9FD9462E5D46CD101A3DDE
A6E74C1EB59FCB4C76400CE59B21876C3D72A1FE94A6327DF513DB5C6BB46C20
0E668840A43C7A6D04E97FF14B6F50848E3562CBF950F6DBE499536FFFB04BA5
8CA1652DF8B65E132C13A1B26CF2041D545979118068D1CAF66704CBD4B40CD1
C222703D13B7C0D5B5DEF8E05932> |-
/v <1C60D8A8C9B7E6F05C043B04D20AD453C6AF6167C604FE9CF08E8117B299
35EA238E4306655AFA49996E5A9942F663D829C7B588316E47C1C521CF1E314F
6FDAE657774D085BB35803F69D7FA0DE1B2093903004BF3E08DE5217A99EB5ED
1E44C39DB2E2DCD4D3D96209B7859470A0D5B17781B70380836DA7D5014AAEB3
4F3E8F451881BD3758B929D5DAA781EE9996505662984B50BC428503D1A001E7
A93477131E100B577650A753A628291280902F4274FF6D876B> |-
/y <1C60D8A8C9B7EF321E616E96933530A3C7C80F8F5F05B1D54A7BDD85DB23
97A86DA6E660C260348AE806AB6258A8B48350D63FC27986036F280A9B44EB09
22744F1B7626A6DCA59CFE678766220ED74C2D7F53728CB9654D3ED5D5C8F523
77189EB9E791BD7D8D7B940F0C9E245FA578B5945717E63E283D1F44F6A79401
CDF2B86E7BCA435F5802E051F0A7F39CF6100E72D8EC4EAA21F1CC8D47B43277
E3198D215E9C61D434A749BE934D4B3249605621ACA55895B44D2C38681DA59C
526DEBE51DE100627D70BBD823277C03FFF6545BF8DA88E64CE775ABBFAC23E4
C3C59AD0365D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IPWBQU+BookAntiqua /Encoding get
dup 32 /space put
dup 75 /K put
dup 84 /T put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
pop
%ADOEndSubsetFont
/IPWBQU+BookAntiqua*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G 3{/.notdef}rp /K 
2{/.notdef}rp /N 4{/.notdef}rp /S /T 12{/.notdef}rp /a /b 
/c /d /e 6{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /.notdef /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
IPWBQU+BookAntiqua nf
IPWBQU+BookAntiqua*1 [16.0001 0 0 -16.0001 0 0 ]msf
65.875 247.269 mo
(Trunc)sh
108.063 247.269 mo
(ated Krylo)sh
182.946 247.269 mo
(v)sh
1 lj
10 ml
[] 0 dsh
33.625 242.207 mo
63.625 242.207 li
.883848 .768521 0 0 cmyk
@
.5 lw
0 lj
30.625 253.644 mo
30.625 190.269 li
195.25 190.269 li
195.25 253.644 li
30.625 253.644 li
cp
.639918 .563928 .533043 .294835 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IPWBQU+BookAntiqua*1 uf
/IPWBQU+BookAntiqua uf
/BookAntiqua uf
/IPWBQT+ArialMT*1 uf
/IPWBQT+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 22.0.2
%%For: (Harry Zhao) ()
%%Title: (fig_tanh_compare.eps)
%%CreationDate: 5/15/2019 12:59 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.B7'3ZegPo0n*A,GLk/A)fVXj%2%W;$+h\JF'*pH"B(),umr*\U/6b$@0kER^c853"6bo"qMO%;,Q?@;6Rk?)%_;m[:rD39O
%j-,7G/9Vk)7Ls!kfYP=_NlluYENX3o8g\#O@>NqW.6\K%5GQ=k.%3c4#r]Zj1%9EE`,[:bMJpD8$IeE`/5?riC"a<boDE\eQ0.>K
%r1EAuiDoaogh@ioMke\lhhSa>]/ug\&Z1`qBUb7kmEsH)]G!9K9rGnqA23jb[cs[6j_QgnLqWJBA1OpN0GoY`<#W4^LKl+CU8o9k
%at3jnhXtpE&Z,+CT896-OVYh0IL_GCGf0"6HD4CWK1epYYlIH!0OZn1q5`[.9e*Xm8cT@k>Vlri7T8go\.VT5\5\\gE3XX%Z5m7[
%_7b)XO!R`0GR@\IZ!9,O!6gCAOZ:B%H=(U0n%jAp[24J[jP<=fPGY[+>8fg2^jg?a56R`+hn0WCZVc&mU*5K"Yu'd@P)@.QofHjp
%=G!!Dp7`%jpr>YtGP\Np[X4_oo.hgJRY/?TCUe&BAau[GlZP9$V>J@7NX5&(Kpd3Dm>3(WK\D,6C4FDPJ3MIY\]%iYqA'l4.&Wgd
%,X6^E<1naBX0qsATiBt\\O7qQ=>^,`-4>?JC[fmN"5F.-[D!Gk/g7\s[H]PfE]8D36j9?be6t+p"E5T5"T1irO[D<m:e@Mo\HJs@
%a/P[6@!8mgV$UNe!P3I\`C[9+J>j*,)CR<C"i;C083g$g!9pRX"2K^L@:Z*4Op4'LA/"lL&q;$9LB(935E8D,/=>F?YGBO[7%B/]
%\L;CZMTd(pl3fk312qUkImm'[2K[K6n\4=ABfTl<7Ta#;D"KCfM*qGOBJ8)tH44PaZM:'0gn+so%dlYG,8'\gO2K:C$@_./jD#qA
%s$e4%DBo;P7O%W1+J?dFA+;Np(6?@?nMk>#O2GT"\0-l.;^p?GQ%EiqU$2#G$8tPR?o.QeI_o^m4D^>0_aj<DGUK,=D$0mr'ngfO
%4Y@#EJKWm+0[^eLN"Lf$n%qT:rC@&R%fa=VO=p;7RmFUk[J1dg$@]iMO=9m\BIE/^%n!qd-i=.)JtK7tbUhO,,RSuEg>Nim):A\^
%@\.$;?o(=lr.Jni!F@"GKTO6E`k96kJtMg89Ka^&UQ;[tn.G5%W(7U"%lT%s_GAf!*_8sb^*aF2quW?R)TbN[f&2<,NURV\JcoOC
%J=eUfn.PYPboi#8'+ZE*(X--C!JF$T!?k5aM$tCo&b@&%_os@<_:2rr&FpYq$lSe6L(-'bs'Qd:+H]Ml+F5#+Nc.9'i?rGrAKB3T
%q19]CT<JbM&3N^`SBN8&4q%Nd3Y?!K1dpaCnlTG,:ln78`YNV;j+ho@+_0XXjN51KqCqcM)1dj\`uX+8pn*L-Su>bsn^q=Ui@Y9*
%%u[_SqscK#EADmkGt+0tc3#W^A.GQ$L`TWoM9L?iZjEqdd==1gG,!#WQ4S-EaojKf(dH/_7#rQ[MSJ/#4HFE[J+5a:g#50g0E)1t
%O2^T7oe6<28DrCj?i2Q+>ENGoJY&,+A[D/tqA91Tjm[3]0E)1t0,3n%oe6;G/E5RP?i5sbrlKI-NZn>=j,8DN?hc:MOcSY"1%;ll
%`j/10ON7bqU6&)]PDKA=$_+t.U]7#&1V%)[s1eHk"Z?_f6;G>rnMMqMs+897gZV;?3W:YPJ!2>W08oiW,0Jq^<dkJNS-"0`Vc-an
%5RR-cLhH6:F>$;E90hPO!Y@a#?UBAJRW5FaXMDj?:;NKQEei":;jNdIQ(an3i@dBMYMoKf(l3Pl5s:ARI2<4\CeTCMa?hl%Hgl%!
%3W[?.'[%EmOXS(:q4*Q+F*nJC2>eJEKAU/n7!gfqIgE:Y']oPr:]7?bKM;d:)IXc:.Pd.u,&S*[fp#<X0$'3ZP61M=iZ[S#h1V_(
%m$%6sEQKEci?7/2ORl*E(a8f/+X8GBP'!<2'`?l0oJhDQLC3VeO$)5QP"\oL\057bOV*Ht0_aT6!HT,m2Y8$G-eCp_$lq7BI=`CE
%67!e,N4UR+A2K+p6j\`#Zd<3-HmKs-!hkR-%ZN_Y^bUtD`WUlq%Q;8"JW[q2MLXZ)n/iuCjug;<9qdJj,/OJDKJKKNcH3R??D,=^
%9J*!goLtFq;#-*h$iu!fk:uE[QSBgTcLLprV1e#8Od>/lSsl%=o'\QV5]*T/_;?qA"SnE-BVn@c66.K`.*+g1+EeH@X?-\`AKIWQ
%dKl!ONu/a(n2MLeQ%H#l<ge_7+nH:]+S^1Vkr"#H^^S+TAW]\!=j[.:Nt\[sW0;/(;k?nk(@*sq(o/0#-&rcE4_g(-N$@Bc\sjt/
%$"&DH0$btH+B?8==X&KMWf*%GC/5IR,qC)4+4`U.PUtE@,)qs/&153sJs:!$r_H1WdJn/^EL67VPZ!;Md01N3kp.u4F$`otfd&m*
%C3F&J!O;4ne$9Qq7*m=U'cTYR$Zd%\XVq;#Pq34J,5(FH<n(7i3MJ,>7-:`C'*!]"GCZZ/0P"Ie=3tJUW%t6m,US)*3m:6-UnW+D
%.+(T-K9[XTWlcWNGua[?_Llt;((b:\BUpMHhA#Ks'Rm*(O74*4X;Ii\XcX=YM(i=$e#8HbJ/27Q\1$T,7NVF:Z>@\sKr6ANNT&'A
%kD0jNFIb`oQ8SfS;altEJQ95^T0^QAHqu1YUr^8Nj-'4gI14Ab;+6Yl!/MWj,uDU54:8?U/M)I)3Qu+negqsMMXuSD,#4*@3oW.F
%A5e:dQ;F+p,%CuK;rkOf\EYkIl7#>]b,4[9/1#QY:HW3!.^P!r9b>RI1DM\D`7)rQZt#6ZF/kr]N'e(Z9#XSkI>W3M"t*=P%k)9[
%Q2*(CU509X?_+Dl3M]X)T[c%j\K_bZ3)<<d5uGeiF<rt5SU$+BWPaDF1)Y51S?`jB`'C>7,#4LnH]pkX.BX$Ml8ZY1=]NJ(VH)-2
%4J+K77TS?G('&N14fafj,1-?'dF$ZK69T>4']YiI!+^DSn5[L/1Rd?7LR\VoOXN*B^rficY_kbGS.gJol<R4$Oj48l.hbOp6.RqD
%/W)lR-\r9Bbq_*_0dRO2e7t:O)<1;2N`V@/6rfK%q+,JSBH-:"UeBDr6o$F]o9a9_KG:,?BKqpF73t'H!=Y2RauCc*>!h#0K2R^W
%XqKlA2F[+3AfT2XO:O1BE_"8>=q<0R;NRd\$)*;h5TYIjD4m!r,cD<^1(^bL'Thr'85,q-H,O"<9N^ifcZd(HX%d:]P@.'uRtO$r
%?E9O!@`"NJjAQgo/"f:mPTDF!d[jO7l):UlLqG/hnZ"/!.730c8cl+OnR'Eb-8$s>OSCk)?Zq7en5%%PX!03$0bOJLi(,.[9b:up
%:cM8:&BlEePbB*A@Ya"n6Zfi<RRl581.i<d2&IWJ+HiW:<r6XuUsPJR#$KOW-laL0Q5U*!eQ`EC!JMJM4%.)?@&!k_Zt`Km'781r
%s-(LRJ=/ZhVZ7ljFr9F"O$JE_fp!*N$OS.'!JCR?UesX:\2/s4Wd^jO?97j.K1P&9G:X7E@?R(0^_;JqLD76(DQ_EJ)%GbU;N9('
%#udTWP#3C.5c7#ScmgM2FbT'oX3-nM,2s@`JrXRT1)qcDed+Y521["U_)Nl8-WR0<_Eh"=$3Y?(+q!`0\-j4D2>/Vql3"+YM&a[F
%e'SiR@DWUC3N](jJs%ieF(5!9.#s[NV,=.MROq2='`.S\(8D+n1fn]FMA!hJa45PD)&>Nc\5;?%M'Tu2`^c_n8=U<+$YHh1Ro2t\
%U1rjGO:"2b[$rJi]U0=S@FihPN$o+bZR#Vbd/pZa15t+)>ttT`=<^bE$TNT*#us$;=k!p!nK?B+TpcN=a[UtV.]F>]noW#;10G=B
%&ZJ]NHk[)-FGmQ(6$5kX4N^R"Ug8#@S"c]C'""W;7>mTiauC%D-`@q[SO,^\$48C(FeP6L4A8ia<TUL^=.u0?OatW.'4d\e>>`1q
%-qVSok=(g-"AREGCCIL0>]DeBU\M2GA3,1kU+<inPe3TFUp+/QdRM^hdV9A/,`4&RdGnmEB8N0V6X4(jBi3H=\)P`7P"jq]Zcn[a
%==@s\WWq2*@QtAJNHrdRWWA6W$oL8QArBVgXTlWte-$dd_9V/T%@n.UF'm*G"J=<;8P(\d^4ihFW=l30QD(L/`9=BK2JNk]W!Qqj
%@'$5E-7_T);)QKb1=&C&er[X7X66aR,tgIe-BaotbS2$cECJRaYPVZB)tV/$33q(Mg8l33i,ql8`b!]U3M`1ke&GYdBd&C*7T'O`
%@ruT,[nqY6UnbR<WFZ>i#&mR7(0I/g3E.Y*n`S.dQNSQZc;AP=atmppLh)>\Q&R(nYL*It"ALY)7)j3Z5j!s@D3Z2bc3gm)8Lm2/
%]!8=ch`8OqXD)1O]43tCFK/>@.e)tm<]/<HCA!'-on7Y1-!"s+4Q,FbQZgpCE!WL:H-q-`&fN,9,LiGQ\:dO$jW%u;`6oK9UIf95
%'f2O%"c/([J@#DJlX4;^kb]9[5o)-6ZM:FKTKM==d?0W]I*i/T"GdClc<4j-=g`>gMX9/0Bk8WQjZJegC(alMQ;38*W_%FmM^At)
%gaK<d$$)J3A%"p03c1YRYUZ.n8kb^97_pNW5UVk^8:?f0YGs0M;!OOGh.:^pDU>.D`)P)8[*e`#Z>h-Z<B780)l86kOOKhB+@]6h
%eG^(;8-2r"N0:[`43))\-G'Ld"\=B%G(J2El>2*JTI_RlP\KA]L+Gd^4<X93<^mX+8I^:do)\f+c-hq6E,dJ]l$s-tO`lWr)EfK]
%&+m-+Wa#*PbB[$S43E6,%9u5b5[kqe/3Pn!b$(S`DqE?P>`!7TO;Lp>>Uk(cnce*?-9R0cSC'p!,+L*.hPo,j@Dk2<YF<OY?<MEd
%FJm1]',RFo'HIaHeSm#&V!9tB2HLmWW-Va/p=/1dfgI=D7Q)&Z<N.Jr[-h!"N[P..qU)#LeF4s*#eNW2:aS%KlT3J'l;&8g=o294
%*>'7@(t"8.)?lCmR9:eE9s)<B[]%@uWc@#HIUEORllhfQ=tbme@o8[X8,+5@(oQ@Qj^M+.hc7:+lo)r=L/nWc8f=Ot"e$8Zb"B+(
%,<MicX]Jds_J9T8H'80CXNN*sjOGO\N^Ts@AfBM\<7E7iX8$cTB:OjR1%_!)-/`ehdE<h9HUDQlS9E7E=5tTp;L(ifA<9au5W1.O
%:m!:YO[+OHE>k_]F]JB,11n[nd7Uk@ImIA,<HpcPTui3#E0Uk^#86UKd2L"OY!e7HH7IlI"1>X(a,:<',Vpdg)`ltn:k\k8F4Bu7
%Zo&B<-@>d1[M\k0VD?,8rA11k*mhG819+m]Wg:[rZk2WSjNpQPWl4"te=^8^lo_lM2m3L(64*#C?!KrYPti8qW3"&K,b2pPl&p/W
%1t"KV[OPb+ag-\#SZ58SZ_GD:ThRK5Ki$LCd.L<TQH,R#SiiYX'&/edKFQsAKH@g_-Dq`ERWO=RW>1ZnDT3G,"#s\-q%1Dq=!;th
%%Jb/9Z4V_Rd7D^-2jJN#ejrWd?)fcg:gpXG,3Nf6DsI?^Jd2A$P<Gdf?kMB*Ve!hAc:&+O4Rp9/SSD)%]n3ok;bf5[,tV^\Rdr`K
%;)Jt`4E+i`i)%G?l@@)6HKM2B!V@:i2D%I4NT+\"<`[n*5"hl(=6CR*D/b4:1+#dXe*_$Pc%DNhN%0*V/8&_;R&EBBkbfHp"Jnj)
%lVsWE1*Y5L.n!5!='ZWYHbG)4Yn:N&b"fOLS37X@($KoA@3_U'"'!]=R<+K7O\.oG-c\VQZmueY=a;1l(VMT*VLI%8A[<n*[mpc;
%$RaY_=hqn+I6If^Ot@C/HoPO@]b4!.7EHEG.=p]6Z?8I:Ng$7=J>C#cf2#)9@\fql"^YNLL22r?GQe8JiqMO?\-'BT"aNe?)'0>l
%^'g<G69S-qo$i6Bi;^*k;1&Yd*dJ""aouq@8Y&'1L=g0+eb1GW\&o=R'!&AVO!cKU?d@78"\]KHGXOP\4Q>WmP?&>FOd%uf;61&m
%s!mb_a-tC/n6%&-9gL0Qiee/aWKGe4DdZt1e4&FEPmFQU*#"R<,f)s8%6geN]/#PZ'6PC$<#=($Z&ug1KKN)<%A=fC5hld/4N9a.
%`WV/)aL[14G/9=k%?*-?rDb@ueI%^6o"Yk%U?uV<:0UZ-(nj476P_OSa^$%<JB+/2)Fmrb'aR)29O(0\nd.uO()\;[K]>JKjMqV-
%,R=J)5;.A^KF8c]Wb@E)*t_QO=-ZPbH$kHNDahPdR$]S%JKfcdH$)nsJVXT/;NR5@AJ.7,jc2S?BiZfG;/[$Y_%e\8lDR%ErVtf*
%Z<!n8-.P&$'1Gk9)eBe%!*e+^]fl4AMoWqid=rf;'gK[YqJ9-m&T!6(9Mup7/uJ3,4@ii>$gMpU(<JlnkM42?Phd$Rlb_PD/Vmfn
%`h<sX`2ad]M.rJ&8@mA://S2^]p"kf_H)/enLWpnN'$<1[\):BZJ:)"9nS)XK96=ZG[$8F*bF)K<1NSgH+<c0597X#)8P6N>WU`'
%VPECbHrp8tmPVu&Ed$rUf7SQA;W6NpF<Sp7POFWYR#6[6V=kuT/4C'cQdYMfMm-0=:4"UJ^ID.90Yph;*ILR$N<Z`b!.YUSg>Ce^
%,l[o>_qfmn?&lZhid\g$;-NUibB\H_$TG\7BfZQM0*``OpIP3cK^6TE/fMWU_[E,%oN`A_pD40-e<KmH[lR0$FV,B:^%T)\(<>Xb
%@PI)(iJ#eLM==4PTX20=."6CjL3qCg8=\!2LKlAFIdRY5#uE`K%*rSR/mq13)X]4(8Xso&"@(o)N\hc6P>5=Cp_O`BL.V8]G<5V"
%mSiD!M;uE_0EI4^pb:Y+T\CM^VMfEncWOVFKI-9A$h.OW4Do?d>(E__OM\?OEXn[GcGPQi:ZkBd[)#]K0D^h[._j]nj['B:Q\Sg$
%&k:K!>ql8V\$"@&N(-&f_UFA<"@-YUSp-MGKMaK2DuMBD&pOV0mC,Sm(l!EXI`SA\E#-OtkUMK6AuX2%@fBsSlEcS&E4-V/b:&%%
%kj`U(4UcWc;NDWZk:3uA"bWaMD(8/Iih@O/7K>_5Fo4KF5>\7!W+2@_b&cV)BJGm6rX@EA,:F6"KV3\in3-I6^%0Z/^3S>&8jHQJ
%Bac8q1Ra*R(iYtke#&^SA'f(hP;Zl?>7>]^4%0"VLjKrgLI#"9o%X5S)W4Wu$H,2D,6E$^0Yf,T4s`0_W<];@'BQd]i/[oOJ=3[\
%O"N/_V$<Qgo$!a$p&Zu/:NH9h?[#>UAh1.=Aa=6J*/j(!CEQ.Qpt[Djd1dta.=BT>qQM9\\41mtc"i\O$^5r4,p@Ic#H.m#\&e/r
%GLBC%qf=*%!0DLeNqPn%!&4(-9Xh?dJG^<$!5/EQG_)aZoaKYL[Mkne\64ulb?8EI2*L`$2qsgF`5;hb])\;k0<o_'n,.\X^-aQ"
%dgkR]aO0&fr)VO)g4Pf39o$Ta/W#8X/pJ01,_,2D?P'uLdTGl:?S,%P&4b1eeM1rSVoQfU4_[QEk_@MoD#au:UCI!oFpT+FM^M_W
%!`_&ZCdGb-2S/l>)Gmp0J>tocW9XLj!t+SU;eZLBC]otYHr\Qn$AncpfCdc9MMl@ZhktjElWtOt7K5&#!lf,\Duou<3=NHYYM#U3
%hZa9)."bZPcooTEbBa-WDE8de]c5a.+OTr1/bl+^TZo^AS`sfA+"La_.h0:c6$FS4rrbg>T(KjCmRWQ<"S68k$Ft_ZJ?6,ncYS:5
%s"$"g.3hCAk5S(NJEI.t@g#/G97\<prYn0IK++7f0R6A,P\$?H^Y;!ke-;I$',@hKCG=uR]UR*\6<*.1F?G1oZo`*tgG9Gd*7D-l
%Fr<[9fqL#u0Y#]"V=6YC,.,=],P^E#E-3r7pB:FU9LC.#VLWaHlh4FC49i9aKCK@D=`U,tXFh&Y<k'!=9#[PS5*Cl@2f$AW;)Xa$
%\3r(nO)]/aKhJ_N"IG(Ra^cq4hlHuFj3^tdj1,:3jhM%kMoCm"4qWdZW?_jY0#t;TA2M.l&pu7!@X3SV:Mkmk-X6;B5N/e=nEgHc
%qtD8S*aTl$^9`U."*!iI2gsrl6En-a3V_37(mmP_`JF0(8GjQ(IGu>CIF8>mO]73jRqn`)Nf.t7Z:KjK`+*Ttcjknn73ZP)&kTqt
%Hkt1nMC'Rq7#I%HO]4(;Y!cfh\5XHrBRBui#5!pXoj=U\ohVGKb5S08kPilYoD`Lh,QDHBU]5#mA,g6-mJ)#-H`=L7li$:KrZCOn
%7K:cL?L/d$lc&kN^0^.JmH_ajdCrrRTBbaUK'VgcB^rg&Id4??S;\!^[ASX#ABM1sdE.g*M)(O=8WV#,Y"t!7g*:S<f2X!d7VCW.
%kmtNogjJr+Ne770N(+W]T2T`10\\.:>6CF2#'lIg\B1%.@ueMenQHFhlMlt3TJQOH1C,bajFe"gVb8O6/jL;-56kK8T!n8=^;(eE
%/)[9@JE%-)[V3G!@BD]g?GbgT`cMD@n&MA^VlSPEZmV=7GB2pGcZh8I%>*ud65js3$ZSo_bt:l<DYHBEc(:S)mCN84W$dE8\J6d(
%O5,I3Ma-0p!kRcA:ZecDg=#m%BSPXNDK!n1rM)MZ.ZNDH\Oj[F:b-QJ)4S21kPt.Tl3u#W6_#/l!L<d!]gb,h_(N=p5)"6.@Y)'H
%6X<(CB\FJa4^1=;VY_'bh&4%31W&!N&)*S:BPV54);Y>YK+F56G<'#(a8\T9n@,'21Y%ik_`j?im7*9<?PUu\]FCDpBQSg"YqN*V
%'CuDNoQS49J(IYkJ,T95Dr1L(dptW\FT;*6EH2Oupf;3lXG5QfOT/&)[dI,8Fi=5mMmu"O0#T'OOJOpsMss;_8EDntqBF^_DMpp2
%oP[$.,Sgj.H(LPF\W4m`%sj/J/LokJIg[HO50?Tt<ciJ]$fGOF`30>.r6Q49Wt5/Gg^KuCS("4`("%l>Ih+aGR(pB>*b03;mK!Q/
%&'1Pi7`O,F;^o.cNbXP+Ysbrr<efBl*6b>M#hQs(gnft<^[#+%%VP0s-lpS<j5gR._;mNE==b(`;EZJ=PI`Pe9>/4q4G<Bh4-YuV
%EGa0C8R*.AeV8*s(a%k'k.U;8(kl`feSZP<-hCI[(D)!fK-$]M0@?4Q_[-U"Voo6W5?78SCWW7]=Gn_)qV&q=90!Hq%8!(JdN@K-
%SbSf\g>goT$q>jQZ'&?SP)Le0PFPml4o(j9D]1E_4oE1[Vh2/Y$pYP#$dcN1VXjtmcC,]ZN`3(7PJuIa4W:[B]k<F#`(ttcUeu`&
%C2Z!9&c37i2JLb1&LKs.G(>"(So=5RFG6$#HTkE,:ptD3>qW"0[r#4jVVr0Q'crC*Q,Ih]eM\9?c_eW[k#ltCS)R!*/lma-D'A(u
%WDle?R>`47&h070`cQaVl>7Pfd@&&o,=@PE%-Flnqp2=O6n%[?!/E6mG!?jdJJ',`Kn@;V`\t-3A--`J+\MjN'h<Js>7;;md[8;b
%OE>T6=)\18T`)p@(#;J97Q`Sr#db`"aHW(k+\FPXfUf9lU,s:;^eBAXpO<Z]@Gk+AQoLC(C=CL"82c'LTTZ"d:4(K^F;9f6H6r7h
%bOM9PZLn#DViA"CK$llPfS`+C3+=EV&?$eU`-G^P:o'[3E+EjjRRcYd`=-Fe2%S),N[j"=7m+7uTjrDL#d&uH@DhrCh,RHPKMTN"
%<rJ=4KudFTbc+c()Df82H<ikL.qW4,/SUb472VV;%>G&1Q3BF74<J$"4Crbmfo!!RNQAWO7q[Id3kM0Us%YHIju=UNoLMJGER'K;
%&Z*E+dsb`C4Rhni]k?+s(epo+rTe5O0%LLeEbfNQ0^;f+S@)(j1$6`#.)U)=l(guX9Mg14HA3hHd[NoV3K'1[$?;Yq=u<'Ef,S#=
%>n+td8N%h9)U!1VCV_FuB;'>2%']h*Atc.bDT,B7Rl@rrF`t]d#r<b;l84bt%VYKF1s3!,Z"PYVI5@lHB/N'r"bt/D-+F[Brb"-S
%(,.P3SHBb$=2dB=IKa44],"OWRG.-8UA(?E)9htcg=*Q9C*ln_q(S0HYS.44(MSUM;DoAhp2i6ad@fmu>jW_j6;UB0nH?&S53g^"
%O+n'7UgdS"55mX3iZj6##a\ZJ*unL<+Oj,o,b&go.[-J!T;L83:<6[87O&7;*1KLQ6UGA5elW1[Btj!Q,YSuJ@J65.UKo0<l"Fj`
%;L2H1VaQ,8`]oTEg6<u;TqOH:^dl"8W@.BJ-N.BJHFhbq^3A-#$EIm-nB\HT,2j;n'>ITNF+*@Wqcfk#P2Xm!P=4>Zc:*PH[&,:.
%;b!hYTPl\0%V?_8#X_%s)n/10DgO=Hfo/a'XV/^[-/?CZ3UOU#a@"&1Ps?@s.Q3`NFhO]DM!:C:V_a9)ljn.UIsKiUncf5=`utFY
%<9;,ud=5c%q/QZAK)*1YK7u:U=`>2ds#fq]S9-^\icX1X>`>of+XhTOecHZ7dra/FY%oc$Or+<nS3URT"e"#kY0nm,*cj)gCM"$%
%W'-PBoeN3[,8,rXa+"RNE2?`5(O]l+Gje#Ed,CbP3Qt:8o]R=0H(0lf`gcGd&)J3heD^%80XB[LiaI%G9u.Z3Y\4(6!+lMXrrOQ3
%X>iA\I&=EDi!m4?og6I!"ic?n],A$s8KfD("fe7h0mOKtl5-fK[:c0tlo+3724T)ULERdJ@W2,9'nU?.Z9T0_7L?1l>FJd5#BMfq
%mjT94R((PGQ5IK0LF2#)S''9K[-A'm$F4CK^hMs!RTVCQN9']==`;P=&h08D(\9LY.?QG#T*=^"PbbIUA:mACDKiDG]W@'Z7.#Y4
%f+sgp!O*@*#FAWlJZh$N9Yg#_r-;D+^aMe*>_UL&H8]4pQm6!e7i(lK9btN(FQQU2%$"[*BAq>@Zn^^90cZr#Kr#53KPGAd!FV*S
%mgKul[ZrG^UH9E;Q"1bJ3mm+E"Jk^Aai'GqXf&0*Pd#Zse/2T_#4T;f+hTd(,o/(:95>k7*7!DS-@JTGq*(!ce-rW=S<3'21sr*g
%/VO?m?tV0-)eJ*I-k/9/.\493[+*g^^3ltk*`<et=2kr9"S;JY$+jeu_T)Z5Mnt!'^K.,ATOl<H+_>-BVC9@6c-;qJU4pTVEto)-
%/po0."8M7-nm/HN:Yq[&++-l8RWL5CJE+!8<;Oe<)<;*-fWm<]rH0ntlR0\Gn=%I%q@2KcRm4#"[a'q9XOf:M\5RjiVU>8FAhJbV
%eZdChoIR3i;!T)F&.&?g!/;j>R97KO>-*]?&]@Z"7-gKJ"Z0BB'ob2/A=IZU0igH1iOn(9_7.mqnWn`B.g]u)YP_VQ01qVi"pRfb
%;4I2+HWS]XB#7*[5tgTCN_+G6q%Bf9W_QTJ2/+So+pKM&Ct;[V)\0,B+I7)R0^\#\caeJge/2R4@]*qD9bM!Y1N](9:'0p?fns>N
%J6n^4NU-.]E`9<9C_DtJf$n*=_.k,f]-[tk_`&,JB!p[@RNZdNb0ULDH+9$)QWFf<2(OMeW,RUH!9eb"&/`T%6I#K0PasPijD$cG
%aD3lfE^MY<.p4$UhHVh(WXH1hK*b_2L#tfgo4gO(aRX8G5\gk8Y_f'=,l$e'n3hWOP8?_@QUC:AkQQV.h.lF.["i,P.4m)ErPlYB
%@s4LW*j$ug9PBLEUeQ@8n+*,a+Qtqg/i>Qlrt.cZd4_c:=Dc`-ruk_-f=$Q>?"Pe-7AKJtX'O^ib9=83)9r[^68.*;=";<o6%kg2
%]#ud$ELCQHk$$"#q0AbIY*W'76Mj;7b;I&;S@-G[28_tG/E;bVD_pX(As!u;=)WR7ld*bgi%EPlJ,T$V_tZD'%-.(A(rgpe!8Su3
%[:9(focF1On/:Jf_LX?m$3%T\-JlL-i60LWpi%KO\VsY-(qKOJ5qMWsrp'Yn4<F.$pt;cS_Oi4>B.f?0\UZp1\FJBJ2[t7[dEcY"
%-8G[1]FNTiBf=Z>q#]H$BCP()!)rHAZH(mY+1?4FQB$^O&b,2_)EqKO&*A(Ep_0>>.themF7:KsTt<WtP^_T;Hh]C!r&k#P_Cocq
%Oc&8qIRc^h0f:D1><FfE)[Q8CpTqWo0C`2[fXYK4_J*GH%7P"Jr^\X]Ch3!`k=7inkN;l\^$iq#/,`ZHns#1BeRdeDE=MFO*jLVm
%+HU_$ID/O7>k&!LCRY3Li,8Skb<9o<R<\XMn/]7O5/6SU-C>28a6*IY-K&n=#7WL0_YZ!3#lVXWI$)#+OoT]r%`ms$$XJFHKBnkS
%<)</h>TXGH@n.FI;8!/$<,P]h'1ceW2pI7kjR#"HQ#b2(\(TNmKf`?E4/3'+Ds7)m,>^?ASe^)1-\!T>(B;Sfe%Oecn+.Yl8X.qG
%*Qf>fR:8J.4oEQbVr(/+<2e=,nS7eA5<(0k"3%;ZQhe>Y-3D/TE#k"LQJK=T$4eej9]1:A-"JW&0%8M9EFt@UI.uR)8RhU@*\*!;
%Ma[*s9?:\mf0@/lod^SJN*j,B*BmOPQ$KoHm'+ORD"ZKW"ig-]O:.q'?43$)`<3]pNA@8"DA51t,SK)3=!T;=.pQJLHA<0QEH;Fo
%f;@6`P3E3l7K0?PjeQ9,PP91)a^E1ep^4`($G!4<F8`ns,Pi2hk._b2Nsd_gE-KMcHK?6'.6L(Nn4It\\[Ym09HE\Sq>B[k`cqCR
%bP9O858&-%\tFmBHbJn;QW*BKPO)ZHa5AA-RJX^^n5^)-3TF]kme8Qu4>'kp/j@WjNY5_8]?fd3>T:\HAkS*W@e@h<MTmU1YF^E7
%^l9SZ*'\g50Yt6X%hn42I8'E_E5o-B`XTi1'-\*0/mM(\Gop[.maFfUIdHu?&mS(=P*r?VP7jU$-@O3f0IP[/*%'glrKq!<cS+V.
%`P^@fPF6@j-C=EBR/F"k`>%-kM\-lB)5_d<HXePuR?OTSQW^3:5&)h((BGW,E5sKQ9d`#1R['p%F3d&+1CqYN#P0c8/i#)^ZT\N`
%p2lp75&Ni.bi`9uR-?`g2OWFNbf+u&c>-+'g0QI#2d9n6l/uDc=q?mchsTMXZT.*j%]7Z\3h3P3Q,B/6\fKZ,e%Huf^L/(uq9c*m
%]kX0!,2C]cJ8rMVd[-!T[E%Sm8Pe1_kFVCH,9oAO3qE7(VF1-W7NIcgb/dG,/(Yg7hGr'F41^h>mM?CXNb9,LoTgLX*3CR:Ecf;$
%o[cZgG7<n*#@lr`h(`[j.hKqAF!#TeRZbkYNaD@K^-Ur0)/R=9:+l+-FN3*uJ293'c^gu+-XY0CmE^]sE.(l5QCFu6X?@'>S;k"I
%W:TH?/EhJ)qE3'teBHlf2qjEnr,.Oc5CE,/J8n>%o6ofWSc*^ll5*e[cZ/s=(&03M?0k/U`t`+Pa0*orldp8cSM@9pJb-CoO_iBe
%'mP\JDNEsnY/aAMjE_1u1gKFTo@<MV<UIDQTC\mp[O?iiR$6VL!-@4M\um%WQCbQ1m^bPAMD)8dUXO#Qq,*1NC*&Z:2uTMPlC%+>
%R0[AaSfN`eUQ<glpSdgBL`cT&4r["uYO:&fo\*0OB@sh9LYUpX4.:,Y\C1oTeX[Rg]`=#''S!'mYF^I^pRV3Vbl)Q\lF>U8+R8qA
%A$>;liA'D"#(;ORp\Zc0$&[[h:\<U/j>jb2H1U*se#90BDtZ;Q\+:!Rj1mbJHn>.rT!.p1^b`,n>+W\eEri\BkPU;/L;$P]hKUNA
%p7D4.(Z(m*o&RIc3mr@6BtCurDsa^:G<)^L7l`Kq?0&!qT-l"0IGoRHiCh[8kIuk8H,s(`/^/X&d'2\[]$*D85,V*)2`SR)@!o_a
%AB]O&p^R!cmT6;Nra,Bm?^.<QIlZL$rAX.Yg]'AN5Q%'Lqoq>F]YF:Ze(/<MkPK]=nB#ApE)Lk$!ejGD.r]oA(^1taStnX+0g?$C
%>U;agL#Wr?n9"#63HN6R:q8bR%8L8kMfW<G>jot/a3X46aDpr1;EQ"EL6"X@jDGeC*h<OfM0(Ejb[1<5#-4N&C%*;>((#H(4^J;I
%U"b$8q>J0b!kHp`:u'kEKeiTE";@e!GTT9`[8U/*?+hnH7[K<9fPqch%0pfi45j_r)%5Vojc=@D]nh>KmOpfA5TF:mho80Aom3sB
%CujG5A1qD/J\>;FSF".;iK<N_6t5Kc!9T:khV%um(%Kuok0BF05$)I)=5<a2_/gVL5NO6R`WL__437!jR4#eB:Q$I3Rf@WpTDYAq
%h\2IcrjV%^7!s^N,SH174sTmUkC'.gaB_9l;m&gTVtQ[?3ZdT<!##epnq$#XBu1n(Hk&-1:O^n>.R(K,d<WYfNs1:;74e,!E5YBE
%r))fE>kc4K_/D7*HgFPHrVkS@4NW#;j$GBRN8NGL>Og"[4,X'8T%s_Q>;VpBq0M8gYgQ&7.IhB&%hh*?l;,WNd+DUR+-WVangmqg
%kG$(bo98M$TUP[J3U7PH`J`89.d)8JV/D1he't;Z!]*&dHCX[>So<%k_8--EF\taqMu?e)E-DN4&34`18(3Z8^*K3_$D.(8?/`J?
%dX/Y!S1NC\j!j;:`_J>cT>>6:hlWEWPAe1ahliBmZf&fDrp8Fto:90rqq\U0K<';V]8T2(O%WL;r2e7j5JOAt/*F%$.jtJ^Zbak6
%&IdfW(['DuqaGp6CL"6#j2-L,CSrrHH7>B+-6f$TdsK#DHK3s8bC$r5Z]XtI+C"1qIqKk<+2>*GSp!?]3?A+[;E)d=Xu^'hgdeO.
%bfur$!.`1HY5OK1QEQkBRu>6sri8tD.(Gk7]gAHB4YL'k6_VBo@m=1bI9ndh@JBSjQqR:(`VVS@>9*FYc[t?MB.f^-q^LK-*8V'o
%qI3c?d_<%c/=?>`<IEC09^2MSHWBnOpnT[7WohKYL,:GGoo&"pZ%)CO3PMPc=0b$I:Z_S`S$2ac9%'PSa^8DHMpB+Lo</+BfmaRZ
%X5<^=]R';BnPBD*:^SVs_4p'd9$aoO(-8M%f(<MO[Jn)0c]sQ$*j3cn\bt"6rIDZZadk-;J])d43ZB`d?9cH"f@T'3[mE6"-(NHm
%+"UcKFY&U>^VunE_=u^07ciWHfk;s$(,sJ7fCC7;9H?(bPkPH6\bQTNICJ'PK>"sSr$6/%P2V>Rnb)il1G$-+S#,UkVtj3ac0cFh
%>Mq,ZGB%r\8:0ZHhi"\`]taI&][+8le+YN?bg!hCG;=Q%I@P9f=8h`kLG*lAkL#W3_Gc=5Zeo-aO"\U"a.r9L?@7Wshg_6_!Un.Z
%p[G3[*;FV%SdY#]S`f`K55E(&#@B.KIdQ.VmPm@X)&I_/=70klJ#u2S5@/[YSb"et=dOEW*t;Q5hE&"7GNM'L#%6:`Y1&s9qjV3b
%I<mhEHpl_/k=;(gq>(pRr:d>?rI(qNnT'IepSf80oL1:RchrG8IX\p^\ntNFo@CXs4?U&Z16#mm=_ZZ5:2V#1c9q&od?4?tgMZS.
%nGp@HRre#*40;Q;^%h-l:[b1(9"jc4X&"[\Z8&V(p6$(Zq30R:8GTal<I]C"ILX%IOm`PtWI3<emah,O5%XSQS&n7:&KX1/7mfid
%7,NA>K:Dc1lX4a=K9#1l][<kZ1uAApT@nGMCm]7(HGbM)2DLa%bhAi@i_=Ic]]@#9j(Wm)cC?f5it#J+S9V[qc_Td`hBq&4HT"#^
%KGN%[Eo_5on!p#qGdd%124CYnfegKL!\hC2ch#fXA#8RSQq0c4184FIWT?p?k.[UoeGj`qVR6gVgB+AZP#G_g>?%O;h!!U`!eZ"#
%3Y`M$PFM&8(N>#@A/m$'c=<K'^r8Ygb_?4$_8&Kh&V8j7kikf&U>37U^7cJnOc-h?Y4.]+%Em&OZZb;cI6La#nq".%Gb=N;?G4R&
%s5sTsb-QFR'?ir6R%TpoB*+K"L(0b<q[gO[PP<m$kPY5bTMl[s0C#1mO^'Z)"OZ<*jYZ`]9G<I![\qtnb:PG%!?KiB53Bf<9R,NO
%ME(:^$t_f+b;"g<SdS0RFc7*1Jb?R:/B9qIq6(FX=S7`eHf;=Kr?2m+k*![/a%UGmdp[c4cSC%fDh&.K4\s:aaAjB@JSlm^"><\L
%+MJb#JfluU^7<H.T_5l^:h;1B0/"H'PC`>8hcUMegp.d,W]_,t'rFRj(5AOP4B@K%3lU!nM\%CObHWnR.><[Fs#'Orbr6<dbQUi7
%JSl#4=8m=<"1d[/aB$dW9I+tUid"mcX[KIIRo1@No\\BA"G/?nk%+;d&1ol\j%<0pPEOU>I+g]ni#\$bB5^p(>kkA)PF(Rbkk$;$
%S*0_&oMcl!#Sk8?CN3@%TVQ9I#g3M7S82-Gi"2F&n"dFZisH`c2SCpj@,U3>@I_-_9L1YdF)r";KHV2bYOp,c:I40cA`15>\5goX
%`$J((jR:2$pfSNW;F3a!PMWM"DN(9T&g+B#jWaoDkQ#+k+0Opu.Fe-c=unEnHHLK/3Hlb5TL(=LE.`Lq3r$)>#jU2dHkeJh)XDb)
%T')h&eEHK;/$OJinh;?@+nXcs`3&L^#V%@[4Vg_a`goVZAi?]BMSR;`5M;4kjk^hh.@BX)3h[og%_qtLj"f,=a.q[6jCC"1@@^F;
%!MSio[6sgB^%7TB&?9YkBLAuNZ`AHR5`JP3:u=K4"W^PN7KshOeK##RW,:e:IIpnK<TqFMSp80bl9+qRP@8(aQD;p\kG^2c;hoSb
%8[p&kW7(7#47[YM?Jeb]cm,HC2H;juJJraDRLdi'1">FY4"It1D[gE'#]j[tNeZMJV@g@Tl$.Jj$IpAMBBghN11=l\CUbKd5Cs6A
%TpU3Ppb*6tjpF@Jbk+_IM;5EGof;6d6&dg=_ZpUXpbigC[(^(D5hB>#0blB:DY\LJ(clTpL/>)Od_HQ3B%Y7=<N)/I7"AWmCbmZg
%NM0C*Dq1G(]J,#mCgEQu63Uc"ho_9G'67IOm"=IMBahE3>W0>Y]qch$LDi*OTu+(^!kp=A9-Z6k<VBi:ad>?,n3).]IV+S4_QeC!
%kkIloD7-[-7h_h>;>.\Pk;.j=?2snL.\->I;ufB`me\2M@g[A6#e6MNTF,N$k4d@2.KD8Ke2';Q2*9,'1:d/nN13(,QC5d/[YCKa
%*K-)(nm"`/a4D_m)F0I_dnk2MM=4q7D?6\KOrinds4/J`*N&`qbN!3<Y%%_emlC-.<N#m+"<<Tehj7(D34Pt=C*D`a)&E;&b^;i4
%^.hNCl@l]lXQ)!u($ZhC'nG9#([4R%PC<1VPOdBQKGn1IMt^I1;02a;W5;FC<>o-;A>na^O9u_;B]q2,kDn>q#]Ska^/i]:g%d[i
%F^?!u._ERVl]g/o[(*(8W;MOUQEm('IGcMoMHp^E#.^Pmq7cQGBm=jTAkq%%>@:l[f5o6Fk7+>8=0"A&JoJpRj]huA^d,k]-LlcI
%io&Y.lJ;GufX@'W8>+->.8bRJa%RO]/<\fa9>^IA`Q_rYO2W'%]8MkfjjH/URC:hBb.cI/J_8E3DS1+_3F@)+mT.(@l,5qc]rSIu
%f.S*uYPdpjem_ou5iLO!_6:i6p[-Sl\^=^$[+_MR+b0?U0mPnEIrn87SB9UXE@W-GHS`B_PnebnHkE!p[+,B4\,DqEWu*P$qt)\)
%beq*8h=9qj3#%SA?(IcS^Gk/]m@_S]n,?BWaB.i=INOAX1hKqgM*H&$-NrJM`M[K[iM_[SGJDf)^?;ER0YDc)Ggh$/1=m<h9Tu9Y
%ekIE2j7U:$U"-c&Y#<$V_.]*@d77*C24cVmSq;8i__e$jdU)t$.J%9Kq""%#kKc9egZmVdRI>6p"N<0mXj0jVf+6;?+9ZNA;=K="
%F=go:rlY>V^O!aOa+`8<\DGbHNa'1Y`r#%*_J]l#)1rd:g&h9$dkH=p4$T2E!BSI6;4T3/n5XMg@Dc_R9,%m;<Vpp=5]qedB,r(5
%r>\6;%#))]<-%K"ZURb$L0R[231`2V*pfn6Nc@22ESV+)m7fs-qVKGi3eWQe.9'?h`Tp]7!!4KDJ^Z`<S?tt_5(?["/MSt#<+si^
%^nm4dX?_bYTI.k-htZc%5V7u&*.FfZ7[l$!_`*ufXY8%B]:CG$^rbg>g&u/l%qTWj$oRnZXFgkqBUJ_BRR0H:KaC]iEIt]p@g9?#
%_^H1=*@3U\$5GQMVGNtMEj%f`e7b4sC]RP7\910^*<QNL_+3DD_73hF<^jg6C#(5ll-`En@r/N)IbM(b4JGd[,[?O/.L[d)d;pCV
%@92Y3:BBr:%irOpiXK>!4SR0#V>;cOo@5Q2kc84MF2:c-*]]i,4hdb*<Po8fV<9]h,LO6MU#a\ubhKbYlR2`t([d38,P^4c?t9Ol
%UT>]UkdA5%F$B_B&tq(88-,<S(QYL*TI*Z7>g@\q=Us)uiVk.*A=?Mofur$q&c."jTnu.D),!4^+`Q:pPURY?es#_.5l/1qY..o;
%B^%HE9>P=[NDk)[9HU#?`)6^BV0@%77*PG[E]rI1a"8=CY>U1@%9K[rLg6VbIC,URemfQ-Gdt@@)FHoP3fM*\ZJ=B"acO@Qs5mf^
%<9MCXQC=#^pgl&iV2$L'&6paZ2IrEXo)(\>Z5t;8mE=+GCV)^jFYd]rot&dSk'hP^1T8fk.g!Bf^N<ZCq08Xc6H-G39H=U'V&J$%
%6p?K5nU4_A3f"XEYZ-<,FiMOPN)>!h$ciZ98C\g"O&nAB]>D9+@[ac.2::H=e'i8E#8%blSQ'Ao`9F-HT[/M*2l@sALt?N,QaE,V
%Wq3",MXB!n>.T*!7$k1&59J4Y<[4=p"L^lOKJ_\kbX[Z&ZXP0?<ZQIff*OqTJ9h%JOuF(b^=(jS'aYl;:q$6j&K]JA#:t2ELL/6\
%!3.R'8-^[m@#(B>-Xb\+ZU$I?IId"eRt,?A6,I.6*Z'n-LHJmfTgCCO8CBO2LRh:r+0nL,fl$rnBfiIWUTT]5"qAHJC#EeB\+Hl/
%giiI"5515O1a_fRkEW_9igRt_ZPo-<Ei'cknG'\-Br:N+#YUV[+t>n8#UYj0p*M@r8SWp*E(dW?bH>"uH\2a+?CI<38<&1-Aa34q
%oK/!h^EA5=*DS"jf;"UOR%gFO@h5KOe&$ECeG6`5R$?/^HEF$a3[2oZUT(G0@gm'dcnJ(Lp"EOm,VTb_7F[U.[^JPAlbX:]$W8l@
%HeUjU=.-MBiS/lV<UK4,Bj0o43Rd&+%'mD5\YnV`2S(KX.8sIfZiIR<p=$**kJb!B'%-Tf`foAn%!A"Un!hT*enL;S!W+Luo=N5]
%06>YQ_Wg:6<72Nu7lrNJ86Zr,C"<\B29'eA06:mRkGj9hHDj(CW5D#k2jVPK0Nk:a<\[bI3m0$[V`hKP0[]`&]T-\qnREs+1UL;q
%VcM<M]I6uRnEQs8*iF3XV9snl/Y*LJ()@jCVf6sNA3_Uu&2)Y_,XrG9K2^/`.3!V2ZT1c]WW6s4>'fP7JtL2OWkcEV!CXNn7,^T2
%7`jHRaS<V]SbE+JYe<nef>Q/$hrfE*(CFk.!(O3b4PM,[A/;cV<7ikLnZ3*\[c`upZCB-]-.-;CYLj?_;KNfhJ[<><AEPS32Suus
%\Yr.H!ntc1H-u`gcn9*Ud)(Z's$#F7_i2IDd+L+8]4)$up&=nj`-HLDWFKG'$diIY\(#1,+YkoYYod>YidCO2,>"4pe]Q%`dlagH
%RO!d#;SQ'JEekQbk)DB>>*@]`M,eG+$jG?7]jmiP1ara5Rgh<BZW]<"MVN#WV!UH%EO151GHRJqlU@jh[B([$ajtWt8j^h'>17./
%(+*@nQFM@eS#U3<m>AN<O\Xdf>(a>E\6n#579#GW,-VYNH5gOo$L%.%Xg$-O3X`HW.KGF$o4_7<=mP3:"srUB1hE+,gg$I1T\U:`
%k^%"/j'2\dATr+\$5$+VG#pV]`.I&2@GX1]9t4L##J1>tS2]c?['2K4%iRJ>\=-RgR)VW@f,3gS$FfCn)f2\N!aQ:?*SI'B7_PI#
%6b&n^f/ZY\`eG%>JIQH>l:kSuZti]bb!q^o0/Y,':D@-iI!J'OD"R<2oX5k5"1pn6J7dbRrCWb42t'GN\M?(MDec-)r!(mBhGh*q
%8_[d*"dgO(CU_ijDs20*<RTIPD*GnC,di<7obnP2NSf?j"\Zk(N]h',qot[Z"%g*`eSZn#[_AMR[%!pBJonB3G.Z@?2`]J]/`!Yj
%i]\p:P-KM0*OHL21sT-g+*C]rNUJ&aKKL\G+A=unlh6;%p/78-;*-kNSfW%b[dbE;kLk=8KQ1&t)V6AJD+EhScV-8s(hju?<S("4
%09?(IdX5(3h[0CRb%>K\CYV!?frXRSMd7(/?I30O>@EL`[Rlh]$rU'&Q+sKfD8SIZm##sHFS>7W^cjs9nG\E+UX>MectU+:s0ASD
%%W6,[B\P_&hBFj(c%^WL^$RY9A:'LF"!tO%<WA,W`c4APp1VA@[q4,3GP;#-0=5`+fPS+3UR(0<'YSKC?7)E0A(u"BgTZai`fXU"
%Jm"nhZ-GP9m&AZQUS7$>4^$H.H>AhX[DS5XJCoW@A>PV:1^mAsVFbY-"qk^!9slKoNPKY-VnKNNVWB()dLW"[R#Ts=-um&0M*=&2
%>/dlXR@\6+_oaks';qQN=lm:TgAL^;KH2I^Dq9XVW\[Qs"#KU$moA8^;Q\C)R@BWom+ec1NjE94Z[N;^qFQG8EgV\WmV->T4PAQE
%$U#HUgTM&b@q-TF6u6;!C>(#&nn]feX]\XX([00"ekTS_2\WqN*t"d&=JhKj=tIN?>37eIA<Z=UdalZ!3F/G,&U5P3!C4nfH#?mo
%pgTgAXO2YRI:IlN?u+qG53lB9g8s[@c53^dj[3OaO)dDtW,aJ^`j=?pSBnd4mm&I1go[*-Jne-*8$Cq?<6f,^bBKU.?/2-DcaoE<
%Rnqe4SBnd4mm'sc\90g(FY05s'X;..T62`X\feOn3M1FGT6@ub<on__%FE*A*)Y1(cYNa)[)6N_#F7+"gI@Yi4(ppMUicicB-"2$
%F#Vm?n6/r'J&Z@mWo7:LF#N>eAQGVbcSjA@?^J6_Y%O$?I/gc,Wsi(^?OM2?^UgJrDmLK=TYnmk8te[la*&n:;mEX2LsI]-G`1QQ
%BG\\;3,+_2'V*[,(&NqK:Rg%)2k/Ce)7e7o6EAk;qKsj]RO9X)kugWOD/D!NNB`:>/b!1#@$Y\Z%bdppZ6g(Xoes8MX=_&jZ+gDH
%Kknj!lsuQe8KqpQHRQM4g0\lneDdXmNQ#YOg*gN$TP$.j`Je:Jm053TeWp9XXe<!?_Re+MVP7`cSua\D)[4:!7RaMdL,RdKgD6k+
%`pG/-A=#ZfghC.DdAC3*$g9>q=@;gTl\ZDCQfApsG_"l(2Q]Jr?!-t@)q>Y*^0P.t4c=%^fD9#Z;`2U,J^`W<dKHKEX]g3a%kW^1
%pWDtCN1nYqbqS6_B818aTq(eOQ-Gb+[,BQIRN*]G9Ng9-RMRiK,IXm"\n"d:ZTX_^M:iQkel;!Pa>ELRP\lebeSZ=hWQc5,d!JT-
%F_5K1^@kh\G21mAZEARI#=^fB:&A$o7(L`sIVnJa]N4d^EVO%'Y$P@0PFQlg>K2:G).A_JrkRMf(4>Q'iO5-e0^7Mp'j;R9Wl&\j
%QLuPNA<b;^&:^&>$S1@jRX*SY%5"fU,N^MAX0JQO7lIYsAd]Mg1u/\n][+T3f>H\,kFI\mEE,llb6,(C0:dl4?>DC&;kSX0YI3-X
%]u>sD*/:%2p="I?HccKmS.(;\Q$(E4k5P7pCNnWE5++t\5g-JiX)J4]9EaUgN,1!LlY?(Q"L0Pc2TsrjE7/9i+BjmjZ"iq@0\`pK
%9mPSfU.^-)2LBM]?-[TGRtrRPZed49ceb$])HY`T_/ZGdDj7N[\3Pj,*adXBhAlIZaNeB`5b)I'ioJb`Eq9>UUO"oKm#=>k]m@1G
%HULP!U@SGQqoIWQ09*7r]!S"khQ5II\lp+bZEFos.)*Sg's/^O=j#2l;];.>@Ff;EZ/\C$WdC_,]X[.+X'M[FJJ\HpW2@.uf:HCq
%4f`J-;:gK21S6+9ErF7/6(M#"H0q$*;&KkVd@8H?0(CaQQY#)qX=NhqB#D8FN.N@)2@<R1MHR@96;<qQ$adU\o'k-NO)@6!>k:j]
%&*'4Bp6I$aW6DT*f(N46LN[mF(?]NPMOIT.D(',Q<p$N#L2H@TG"#c+\+O@cbpr>/6eo@UjrN)'?/3+KO&heu^$VRMn).OlUs-<O
%bVS%"&+JCrAY-$/ftB/eHDT!F\e%QHXAMRpG3d]^lN5Biq,c;9bceZGH2F_1\r@M1COuABS9si:QOhP.]NQ'C1*8\`Mh''4F<S(q
%%D.U[G'jGn?7^gOR;@r:G`27.;81h-kImuLf(oP9\X%,UO`k;?K!"hS#%P!F/DAro9;)"NQ=JRt"1,7-1S'TG[qG:qg9t:0_"/Ru
%D8fM1Q@0kH&b`M6(U.n8M`P$++4n8="F%6=.lhQ%A29V9Chu03\2Wd_E=C]eFmq&BhR!T+87=cMnq,KE]%J4m5-Rs2qm`OJfsfkP
%(!2'1p/iU;p:Hq@=jCHRl=Z(ad<8b8n"iPjFC[mu*iprV"Wcu:gPRL^Y&(lN`"F*.(L<5tcpf=PDPC7G$J&bfP1Htecc<EeG\'(9
%]k[hip=A+!(Zeee[=&hP&Kf_Una0@GH)B&3^I<GFMETQ*jfQOo-;&*`U:cc`_pa+3..;[Mdn?ilgW.T'BMg@^^,LH:4Y6-Pm("h*
%e9IX9eZi,2htF7,>8`pn]q)V5]-8n=gtf=$bdFWN2IDHLTpPAEY`0[9VOJaieL4OAB^s*E%;c8"n^EALDEEp8mB1K@kQ[ZSB.2<!
%"4mR@`7O<VU@9?h1c+)ZY#^cNc<=k)Kcuf/KeFMU:@YVm\-Oq[cDI4b3;?NhJ9INsnFS("GgEpqJ;k5b&lX)>#J(BSDt$8>8/HAF
%R',f$q=*14ZX'#0jj)?Nf4VE7oU`.ArSWNdS1.EZ(qBt&\.bH%rbc'/pM="!2iF%jKdW"P6A6eLIoFfp?PMY/.(a95GRCIZ%LnuS
%X[$/@p5AV&$)/Z.!]Zf@Z(FBsLJ4DI6M7^*?s;n5G902V$_M$BG:fl$4',Ylog!k!iJmHJ"DY5i<$,AQc(NosE;7$@5k4u2j;*[J
%Jp(g5pk9(9Rp6Z;oUgi>gHdO'BdD$Yk`Yo:VmA;8"k(jg;)P4QTV&!*03)-W1<@W!Xg\'Fn*dZ)D?4N_54'gu@GNpK-72tZ2KBte
%R>lDfgH,Ls\B&i;FI<p]jk&j(eaM_UfC=/VN\O[rg>h^L7RsUtQ*snBCYRS&9[a,a_`_S_]J!R&GL5>c2tYtCI7]^SDJe',[p/,X
%?$jqU0nh.TTaNdPC>6_Lc5A-U)8C'M[f(J-?$AD]d10p9OrP+ur>,+S8<Bjch/YE.KmcEf!hHdS;dl:qISA"amB*V=Lq!QSM_t0*
%fOqRl7'dPI5D=MTCZ5SRDs,fQYg73uHcNueI9/*Q7^!NoWN]1W%TV%lYnM04_EO`;*k>`kT7q\_d5>JupJojY<7SI`MS"4DT2AU\
%@E$B,KmcEjI0])pdC"7.T@!qfH%CAZp)38#f.BGXUTi(CWm?'bc.7Ss7TFl$Oks/JT9TMda21$8Y)F0TG:Mr`m:uS+bZbeTm>5QC
%SAia?[WQ$9C0*=9Ho<YEULfimoc;\bo\-7Jcc@K!CHV;nfOn16V_nT-I;Dj7B>bWu&(LRcqi(6*Oq;huKmcE9WN/mC/*o(Lh7_FW
%5$P;TmY-(d$i0ZOm+^mO8S7rO`+e6K&c'ebnf_p;dN;Bb56"sLGN]Cabebdd=#+s0Dd@d&Uc5A[N\+&s1NJ,l?&l$_nM;TWF5(Xo
%m'4_0$t-@ZAW'Q(]a[n#d/),YGe:@rp=dKB<XK*.2u),>:C8J=eqbl\>+r@L/$OR<@N%?8E8=+!G$-+0:1IdFF))OH)8'6uI&XLb
%"rj$[?be..G.EsA<pS*3Zg4fa*r\Ycc#0D(Mo5Q'Z5a)3s)":9d3&@sm=+7.&-"FYGAGP)gF0%tXlYK/+UMl[n38r?Bn$'=cA2F6
%G!D@cs0qS0&ca8!E?B/f=I:kEm]XXj,(3t%+P4CL?X6k<`21./';sUB@?_\9<RYTpJ^=>`mcp+Y%]gB:Oe'MC)dq5<gLmd"aEDhK
%jNT:\\J08WT%a_#)m_#.C5c4eRaC;=2N6O>b6R@q6KY%WInP01Y?S,tqqGl9[(Fk'c#30nfZ#No>D8HY/QYhl]qAXu3u7[eNi[*U
%_8#>\A905(V&rN(Roe=5ihUomU8dFb=m^"oqIOX59Q.FB<hjII]RUrHle36!mopS?^ts<?,s@JI>NM_C2F!qniiSE!_5:3="n:N!
%C=o_AR1BDc*,.LV6<JiIlITrO)"TH;]S+.DP6L;i?\^_;FSF(!0RsR=F552ph*T=!s"7.Mffm"D)Wn/:(-jO-X3HNtD:$ZG#F;K.
%)*o9WM`NaYN(?$DJX+2`4&m!Wo+Cb.rfn*'cgU_I(n:-EcFJE02X3I"E:0?e[PKr?Dl`]DEphgcY57;DrY`?5eBrb-9d=5u`bls&
%m;r:;ll7.XT@t^:U]36P:,+p+DcPKCXPMOqgqSIN?f)@f^21VQ".a%F(PnVshmT<Ad(MkfLMG_TUU);PE+%jNm)PZ(X`Ya&@d^#F
%(\V=$r7YgS([PhqC0uUp3pp\UC1#VOjh'n<X1j(jg^-Phg!M.&Xla-??p6d-9nTGBCeX#%g2"$(`hJQP12AJ`7P0nM6E2D=FK\ig
%hfS/okfm^]O&bA3!<:/AIbUla9#EJi;8/$aV6i1WMt=&\:D4rV=ScF.VN!]-Uhm-ZZ7-Q)4@TrQ_+\oh`G*POefL)ob@AHq#k"na
%2YY^6//D8EXh2i5f#1:oY-9''X1QW3C_a7ZhZj2d)YCJ1P\,AU7u6DEPcY#j2`V;qFO)O"4)eP^@6Pq-F'u<ogWEQqe!LRPXe<e]
%'N4HJjsB8D42M/RG8H,!_Mdo2=*Q/dR;=m4GF?d2](p_+>_W&DRknN0N^d4=jBRqXHjbIEhTnZp`[-26bc?##?LfH!TERqdR27jI
%eu<s\,gb8?l&JN,WS'"R:KI.=]s&qb.+#h:mY9#GCMW"pC,J0(:TMD5JgkQ297Jd(3\XX.l>,IT:]9"(8JRu;CK_qf^duXEcFbDV
%E-a8t5DIMDaMI'r26Lt+5[0%(2D9PjL$@Ea.9(Lcm.ZI36>?L.dAeJ]k/eTXnbTY(b$fCp,@tfcjPHsH/XW:gI.U,KpU&1g-NK+-
%VU;lA]lq*oDC6CK>24AG#arWJEhkXk#5Mh11DuTF<e#pXer^EC^*Ko@So1k$a7<?AF^&\SaV=@CUL,$:RSo:X]Ej%Oh$p"I16G"R
%eYX:p9Q>Xlq>8jT"l'+L%;r3c0!/8f]l@hoo!jZ;DHYJ_WCrceB'"%+V.saT&"'J)6NuehTf+;u!tU4=-8K=ie&i`9e^Z)&FbuUS
%!OJ@V-JQ=t'#Wq7`^*eA'q->[V$j&iO(\?G1d6f.A^IP7\!t/.m_J`7XQ&(P_*<hS==+*f^$Qu8p/0U*%>KMPj4V`DhprZZc-H3o
%-&Gj@?'hjgYU%V&h:gS]#'Qir"/aDtXRAlm'rAfDol[oa7nlePQHH)B0D?5RX(gX#F3"CeA%j[9Z\/@,M43C]]#Ye@SMZs^bmqM'
%6F.o1AGTmDHB#^`SXkJF[.PaRWr4W^fNUYrb59Y2.=ndFl41ls+fVQ83Ei0AWu136l82[*otS3nd<#dsh/DRDfrn&U;j<(X-p,?A
%&DT\u1_BcTD=&Lg[cNFm\e5Ic6Z6a99&>A<CCWAYOD/KGPO+JNfdkOGVMJpnR-!2K4\(En7(X&7H2W`)P!lqTM!!18<_9%AH:7*-
%CgE465ot?=P!lqTL^2GgoimY+g9!kMflOdE.+tOh4Aana[oH"oh0R!AqitKb*3iA%BX,3bV^0Z-4e`id>F-VX"11C]cD`Q\XH4\N
%9a>T$LDA5=D-aBTdp[r0i:5\eXDg%6B=ja\PJ[a4:,?P5Sdm85^usV1mm@R9%P'A2g[4sD_UXO/s2nc(#<(HD\)UnN#?5Q)'jA$/
%S!dW3DtC)3HTCTB=B*CVLV)r^]A2RRX_]#&B_/?,],l2Ff/2pSX]C_m*cCIJX'H2tUrR7(Dm_>anBa50B!B.dh1:>n'p<Q`!c@\I
%6bPF^4mc'YUc6I!dg$q3?fn]BJVTQ5#uja0Y<9&.Bnlp4SF:0;i1]OCkACMG;?_RT8RU'hh!r1t%6)1BHf1UjBno0imC#(Fd!?V2
%>829DnBfn[@;>LTi1X^:>#6<uCgE!<IG1B<NF9FmCO4ptVVA8_4Rg_oZpS[ZabChhY6m0`VJLM8TiEb341[=3nBfa\fBrkb>484J
%=FG&3FpB'la)_%4h-1tG\2q%^dgcniCN8_`G\Cl/G!GKCdZLDI2O7R[`O,plg+JH@mD)(`7G>muLW3Z`('bmuXT^UEnBaSYjO4UH
%mbkMoXaT*JJ^&6C[jnr8q.]^cn1\6qg*$s$p2Jr`ocDfhF?J(p%Qq,>.=fO=`](ILf:*h+BINJpSe"hDmP#aAJVP31[-\>c[-am^
%G2T&t*,4L';dac1n8RD!GImqfNI)h4EK+,-J)I#?\r:n4P]OIkJVP2W"DF,(&$<`eXDITLi*jFlZpQ^hh=89JCZi`[pVWj5*h$)G
%`qE;gWuQAoCFu^6!tT7>;n.0OYOuUbp31Tr*-c/3<.?d+^?'p$VCPX0ZpVJK\VC7t%?1+H_,2hs'OJTb44]n"a?mVC_CMYh&$;UR
%UTrM;^dBorCedd<#9N:`p0;[sTi'd68VQ7)$Es*"*Nl1[[QX-,qQrVbI+hU+*pNr2[sQG]Og]DjTllJMmAK>ni1]gXLSdYa9b0@n
%YjF>3)d<Og>-CV]%@9-uGY#tLNK\[Cq`;2HnBflii3BOD(U[pi`E(K_('WmR9PCks&Cmc'#Y/.!@9Aj.[Tj2GZelk$mH?T'rMF+B
%b0-na!8]H$+%'dH3=?!*-]gBjUc-Vs$WphK)WQ8=/X^#!EtsS^;D-Cn2O>\<Sn7iWdS2]GP]fP<Y@?0e4>?5*_UE)N;\kQGs2D&)
%`PGLhn25&V<k&T#Sj24K=7]jh4W7(a236C^"lmk]D_!R/e\3iWcg-$[Co1+^Drol3-9%uS2>]=bd=!Hk[<uYQI,7mS+7T4ka+!=6
%7c<?C(3mqPUnag=,=rI`"2Hmni\Z&$])!egQWj,,O:#6<c[T6\)V[?B'I;oeh-g0LV(7;HeOP1SDD]6<m):t8gcZ!\aZ7%H9D.Vb
%,RlAXd^"AjR<sst4-4PRY5CE^72oX[P1QmV=;Y"f`tfa0/SY34l"%\Sd88B:@tX&Pcf^5'Mib%IBA'VoH9`f@?I=u6]g^.seEH]c
%ihF]s^$AbB9]F[Jj)m4e:@%I,jRTpDSf4cmaXDA_BU186T?YM]2!)H/#F&Cl!!\D5>;;MD\UT-S"GF<QW!!uPn/d<!V747ie0XL`
%b1"i'o4Xpka$Lk8:=83'iXY24GA1Yo,Wof8P`HS%F2&6RnA8N<UnXE!Y/lqci7c^mk3N$73a7Vo?3aB5ZO7r<]'\V:0:cZB/"_.u
%'X;>ho)WiGkg9c>BY8o5n^18(Q7E]QplRbb&)(G%%a_$(*WDqgnC')4\&uBo2Ve9@6G)]<Rk00\=^XSBVSgKo]d&1GH\e8;HH>Ml
%2B7YOckX@'bS9tK#LH7#Z#>-.cV+oMI%Q>;kZbuJHMT(tI'6QDlQc"l3N4_G^q<;"H-B#IPoIdU;"sNN*Tc-4IH-pb.5sTcNUO2,
%jT\B6#eDL6EoS&o%?SbuC6#`C3C'u*I>#2SN?EXZQ=f*`Y\YIlf.8JA)KY"bNJB`DgiMZ=W"$P(5&LG3<G0=f2i?An(#@mO,3+BT
%j4o<,PAWJn41\kJ$hCiG\W2-]rH;OS3>BB8iFa;F^1n-&fGD%Z7LaTL4K\,8/qh'F5$*p/8'RggEQ\$<3FO"7ZrdD.M7"jk6<?NZ
%eI[6`_gC__p;^)0EFC6ME-WA35EXsgpX/;Cik=No'?g-uA7REDIc[orBl0HD5!FFq6H8ng]ceQtOcgNp:d0LaiZf4Z^@5%ZA09OE
%(V9:,r,$Q%bMSVh+)'C"7:3YQJ)e:RY`BXhU\0e$?+ttgM%&8[JI!>\gKNHSptM_8WDAAd$Vt4'H.)ReDF=TGLSlo'VF+5Pq8hWj
%ME-5@@_U*H6JqcYU\e%A<%CX@:$]%Qm?D.@5fr?&WFR/LcFM$DZ6Bp[mpS?=h>D[8i>Zd/]Z0#NL%[cG(QmH8N3i'n!KBr>J+kQ0
%7ZMB[p?p1(li],*d*S@N`=g1A:O"UP$Ut%EBu?Yq0/bnQ4oD=?M(Y'Ic=oJ'+6Aj)XGBXUB5^qs^R&i1ddQk.(Fdb%D^<.tRH*C6
%OU^-;][S:kV:!30)c3V0-NIMU5j_@bDccENl@E,5U'5HWRGs4*9ZY[:J;6&WoJ(!r6UrOeE&?@cmhmc\ef1($!ZDGl5a1@R8IZin
%M:Ar53]URec9^XT@qG;i^dAW/]9L],e-t,#'10eoW/k>DYT,Q(Sgh"c,&iJ5mJ5c>=/Tf<3WU^R-6mr16!E"nX7PpTR#Q6g(HN9=
%F#M(F4Bo<XS[+ngSPuEF#9G#S^m34CKL2>6i?0?WKS0K5:.<kGW7.uP:(n0"r9#aa!m0]#D:dap/_)j8:!Ab02_oi!id7P\r;[Ii
%]]/FORX9C#q\;^4F_W:dm,MA7E5@=)Of[H*Pli?.ptr$e=5A4c*T9:seqiD(_780aC!EmfQ`Sh"9CSS*?ZikG4pe==4A55nQX_;"
%S3PUU?j3aY=bX%W7tjJdjj%&#Im`U@EViOIiPG,H!;0W\/)APC.'SF9qRqjGflM4'6_g:!8-$Hr]blGg#3?1.r,EEY=Xe@H,C_i8
%5!?Trd193I@(b@%LdDpmhTui[b3QJ]#DDaW`4aL#"s0gZm.":*kIrB7gt2!R3tId"k*D/B+JW<o])?GZ(Kb4cV)9gtZ6>`+gn4&n
%j"sa>O+3BQJd&sBON/)<Om83p2R=VI#`OUbXNH9ejh9PjZh`9.c56HL&mr-X7W#q%^b;-2(I`+A>j(uJa+*Y%T@WUlUq:J;0m\:'
%Sg'P/]aC!QShC42$J)GG4S3NqHn!E8e8NJnFi@kX9X\J=N%ag.,u^(;Y]k$k=BmlHaVh'E1,bV;6SnFU>`#Lek_A@&]iTVtc"dC(
%S`!]e='=(*fX'7-&XmFM(\TA-RtlZeYZ:/X)>knEeBjLRf+\usJ?C)f_1dg@R<fY*hM`^\9%A%P*0CB:N;:Hm!16ZuQ:/ST`b'!B
%9QC-K;\@/-k>i5r#Oou0(Z1)AHfHRZSC'<DmFQ&)pNc/=7R,AiBd$c$MT6IiaGRHpY<1#=mda'qjc#b2fmo:Jp\Ae]'U9^>_>]VK
%Q1Z3V&hN6hL0_#i*(Q>@5Ok-MSB"p<9Y1#rQB(#6XmB?mj/lF$%(ON"2Ol?u`e-;@la`OUr/)6oT\nK-9S6Wo01"$&M'mi*6?US3
%J\auDHh["XSVS_/Qu+IDIc@ha>:[/:Sl"sRkNJ]%'*+5$P#m2h8(72pbWpm4V1;9+5OsM)kk%_c/`+%^alW"m7kapQ7<?T`3+'67
%h;$%t@t=[i+RtS$<<X&'b59p;\RZs'GG]/bJDoJfJB886hO=u,%7"9jS@^]]9u[B'5H24$DhV*RCm_md7"4MY?K!rkkFT5A&_I&@
%P.'k5U?*@p[%tWtBKM4+3"&!r+N#kH$,8/`9.2N0-9i's;WbgeoUD87V.ZKE>]s`Fhkr?IKW(s@FYgd$PB+s]HO;0ZLo4n^B'8-]
%AiKd#c?'$[*3,a6#u"*!BU.4^Ur2iB-IbtiD^'($FkWbM#3h8O`"^`!.uLi:=5>:HCo('+:P4SS_QmII!M.rGA\s@`C:5*l,bR^:
%9pBru'pIJ6U@aTI!+>#460sl]K]f[*U/2M9DE.$+Euok:1[TD734!uR.3$UoXUn*Ljr7%lm?NY[brb5O@\g,?[S&:c\![Uu.%F/G
%Du#=V`j+nGr&Uj/@LGq_8c0X.mAHN23=!@dXQ=;dFf<bI[d9KQFX.%g"]o:DZaPiDUZ8aGb@-anRh-"H%=g_WV\(jt_KV]"eZ9W_
%YoP.X&a%QD*BF!H#3DQ5^EK@;'lSW=*/l\fl^&;!k_:k^,KCeq_DV>WoB1?Fpf;4JA`F[B3$22;NM+30?Tg97@p]Et3G*lbi!89]
%N6[jLjQ6n8bJM78#O(QM.2VqPd'G/pm.2:rb#J30W)jY"6Om!%-LAB!ajh>uGG,S+I:hqCI_:BWC]"g(Lt@bL]b!M&^AO=6M+?S;
%mN5.KphmR*SoFS"+2lAjorJ3!iJo@9`p8'6?iVnHI#PBJkI+4_DTeY4H0_r$#i'l$q6.+ra-L??U$=auohH57JK8#g)ql=9inC^$
%>8VGB<36q#D9R(5%,\6kgW4piQ?A8X!LWgF("T%?Uhq#>Cp%USWrY<Brts"BZ:/19^[UZ"oW;56A8__\"TF]fNm8B4<Es;i__9g;
%N;I`i3l]&Wl8-,oE-:U]b]4[>DL#ncJ8KT%!`Ln4$I!LjG6rc)bjk/g&K2-upVq1S/P;T(I=<K1j+i[>C_pN3Q`90JR_@BB(&\*u
%]k;EB\C*#+rD`#GfJ=RQEJX\3,R7K"EXjnNj.++t3K3>dkP]FNqsC9^OPSiX8B^S'IB*!hld#$d>%A:[1cdfpYF259J(gepFRR<J
%k%A&GP4j"\rV;L]<hC!4\*b>cgT%=Je+3Opqe#>to251SDuPk0-=q8]`-)d'l1NpRH/ODbgq5lo'LMTBpYXbTIId!u0Wq%s,.r0;
%T?d2UR-jl5b6iUf_cQ8e97#p]*(ee!hcGRWo$JD+a@!u/4?mf1%f*s<kd6tD[$`"`J>CFPB8>)Q5BP0\H,pJW[$g+DE/1Ns)X>?T
%AC]&Xjs78pG;nttgK=HFS_n[3o@iX+qGM<IA,4U-WU0r&h]?e%jn[MXI6P@9n"]'t:Tp6L24#.sY:o=ZJE!gc?+fY4K8#l(LMQ:5
%"8/uo*\L)Fg5*aWK.010R=fM_)cIN,(ecrS4*sLoqIh&kZT]C1kCMU0UN(=aQK(g#b9)'1@-%%..0F-s+#]_aK7_DqnbZGb8!oR3
%mG\V#)S\+Lg\7m``m`.-`7*jE4IdO;FrgVS`kfC5/4[]=`XJG`F6_;bXad?@Y=;hZ?hc)*6Ep+,h>Qb_"BX/@9@",1[d1C<s5*P:
%p:J?MlT&9.?>`ei^&qk^a#g`h^AGaiIq/5pq[\Us)]tZb)s9]\^O3Z3nb#t-6CI#C0A-lXSC[fnG,OK3hB%0V0_V#`8]/;D(/J7!
%m>Jh9fl*1^kA0IOmQPRf>W[)u=7(GQ9_kNscWfj4NaK?o]_/pN^NB3qlfYi&Fh_VaH0Z!-.K#=an$Kk`h0n.+gc)ukpNc)XnMmQ)
%s3*!e")WPXQ-^9rT0)pQmZN?6$&^^F^1$S($C!U*^/%8mY0<>;gc\392u*BgoA\an=a\p<n)Bu<[^GX0S#a,q7a567l9hRY(Z[B<
%hsMc9=P>g@^=-5_G.tMZGMg2#qsCk6lPH9#qe8oVIrKCWgYES[DYEA)@PrGN]mD[rg1S'h(EK5$K%u=)%0enDT3afrM'5aP?:Ob*
%Dde@MM'&MS@H)e7kj+G&rqu5g^00N%n`3p>62<Ntp<Cj*d,(Nm2L%h?g>.4q0CJH&af;%5m3hk=GlI-j1S.P?n+W_mD0NQ-k1:\=
%,$*NRFBE#iTuVNOrHQp;H/*grGZ#O-"cU'0ILdEH\:%'YeG\Ki@F6tL/hb20`4\[)hqm2Oo7\M\oLI^3e?\[3(&/G\(RDp!Ck)Di
%?&-2V3dcF%]j6D(qW<rCKSTTicf64NR;NW#2%*V!?9XD80Nh9=^k3A6Y<uQJ`=l\mf!iB7;h_rH[aZe>30"U4D&HXbhgEXdc)^1!
%_]mb%AsP.GgG?o<]+1m4I,@$bBm%J"_nV]8+*Qs(s89g;^\8=pKmBqbJ"/OueCWLL"R<d8/0rOYnUT-($0ZLroScpl>KO/>HSbA+
%/1_m+$'C2SPLb6C6RM]%Df9cYq2j.!@DZ@S$e`j`Q9"^@#^6eB@sMM$3Bu_h0/(Hra!%'p"Nk>%H(S`.'oV1=R.302)2a:C)3YY:
%R\.>T5OUHdT(-Xq\phXpM&%/ZaV>TYE6g3_<jOk1F8_NGoF)\2;?#FCZ`h,L\@e[%<YmhY9_?"QEuHd\/WGt$K>),DMuoa**;GJX
%T+q%MM3PBbSc.*d;US-?mhsg)IY^fcoU<[GM#AJD]VMBOjMT#Uc^hb\[H*bNpKWi]#M;uVM+`0]@bBcaB-P$bmE^ZUS]h_)r[!!>
%Nn?'5%kFnQK8E7TAn/e9@=k%*EkK\IbuTb/b6f6Mf%]#qf%1rc#l3rLab,Sdo%MsOZT"6-_94Itk(DFS!Qh(gReZS_h=<(gG4s$P
%F7RLqf6Q.C"8SIY:_s#bkb412id8AbhOjQ0i&cF,0Y585C^:"3F!/#t[Xb8\"eQNX>eRH>p;ZbG[!op-iEl!:X$2Ju,4nI#$DbWL
%Bb<LST-R?:?i6s]PNC)dM5i@Yp"YhcV$h1T_tM/IXNdpLO!#+?*\U;aVV185lOski\:&O;CZG-1diTfn_k3Q(8r=/*?_6&%Y^<!.
%:)d7V2p]4ppcZG7BKNMK-TCJZ0"ee2ZSsnP[rcM5DqQbE\-K<4.Q3];5]kClgcHgq[7,6H1iC++7$-[kHuF#R<qfm80-@:Q&)HTu
%^>.6VG'!3'BcrVbbN8HrHRh1On+Q,F9!i8YVXM3*iHR_;5=[QueB&Xbqt/>@+,%<$[J.;Pb8Ys9>fcqiH0UPqT"hSTLVd:M]BAOE
%(V:`qaTKOg4*Q,oXkX_Fo\I9oBO4qK$0=Q!b2GW(Q5EF@Y2KGc+Z@'P2S&!\=#"72J$p:+PXc,YGBrlK\_C<sP@9c\gch@&gtB?[
%Os](8cXT/@hk&.=Cg[dZJW@O*Je#c%Fh@/%nYUhbi4nbSqJH3qH6k.k^E8R*qsnX^>I+\R:L1t&W6-_do*]0`]Y&nEm(t<e5>U#h
%IkLmOItrJbe]<duflLceO/C#pk4tk(IpUIQ^k\m\8me1/nK]".$:peCR?'Xh4^,5MD_BHGcWhgjcRmRp/hPI3I)[$-Q3%;T_VtGE
%,hRm,e1]r0Wn"1mFLH8QF7tC$[XGJL%N;#Er%DBJ>Wp3&QFXF?QZR1C:=ii)HE<!&BE)4I3/\KBiPOtd["eT3QLmDNQD7p&o>U`F
%`YjaRp3gp@H9*pR]fLg2G/"+]fe*hGh[1cmQ-_Kqr;G.uS1ef"ct>!)8Rkt,G\IOlD8sK%E2gS)e/*9eDJhUJ//3ETffco:c9C,l
%?i'AtmIg:A&+&bWFrmV?e:9C!Ha#QuPA*VJ\\,B8!=UWoq7<-h_X=J4TfcS='A?5oEU2Qc!4P(X'cdu]jfurl0DX1(TgWeR(CFIh
%cQ-&HIecrEm_eD>%<FElq<nDLSf41Ci).`s5bsq6>0Ze0noaQTSZ=qRX+/O`h>[see;Xl/JP1>C4o8jmR$[H/hlG#q%U`8!hcQdf
%YIE@*hSWBlrS?(opD[fSE5[tnh5/Im'TbQIA\\!>Z<.E[aYGMElh3)^s7'Cdr:@No]c+j,([f\cDER_-7ZEL3c3_^A?>eKXp]%DW
%S#_UQ[c(PRrPa9IgNu_dhRQ$(H#\HNgU!s6jnV+JXfY.?bb&1M:QM^GZF5@jRAI,#1_BMY1ZnM";c`uJ:tm?6O7-V_mi6QIaYW6!
%84n(bZHHhd`nK9sLDb_8qh,\B"IaH+.O1ImHaAf&^p3uH-%E0qJa2ch93V\!KKs\$.9M^^Saf2_8+-[:G-GWr2SYLKTJtJZi#3I9
%pKoK"OZe=>i3hY`eOLg<rtUTcLAY91*s"joUcI=!DjMq+BT7<,<b.Q"rs`5*-]F6FJZ.(S6rrgsp>uG[fD><lmGZkP^>1d=MI(A_
%d=^WN2F#^+f6GR/LugigamNO.T,/#uT=jnL7qhp,'!Df4qbOrP[mnnGe6?QEGW'8K=ig`4c$&#?"B@!"VrDogcT#__)#?b$\GfCN
%\*!ST:+7?2:S2gD]_Uj23WI?-CK/oWXe-%GF5;*@HL(/L.kI@C(C-F2,$@%__E&V,MGk)l=]e1(?HmV6fVO:e]mfls*>[5_IcaXQ
%TQt+j=Inm6Kpu/pq*=h'JQWc>6><o1^0Vt:of*%AcSdLtnU/&ro$k6Rrj&h(s*A[KK]YT2e)2b`fr5@\!;#kFf.JFq6@:nldVDD<
%4p8UK4#9oGNR1_.!HiX@j[Npap*08<Kf)2$FX88f='-]S<A:(p8mr0E.iZX6InF./crN?15$DAHbYhOf[$?+MN"D!J[(LPM1`6F7
%YEM%bepbU\A8T<+o9]<+;F;P:5F?+7BS!n7C48]^mA$d/TGVHXXfsF*St70$2Vmu5dnGI\2t5n+Q[m>kVR=qmBr9Y>j:?^rm2S`G
%9f18sb$NBN]'mI.?[[?P9%^PP7CCe8NEJI<cbaqMb%p2C?jt=E\bX_R@#"i,o`!d#MV6e\1+,BNNm&Smnh"h^I6?o;]tcE7%e]r;
%(Qbi.K=sO)Qi9i8:p#cR*(8^]?6Hp.)i9:c??>16@,_7aK$0qZ!b!fQ0/.AHk;l#mK>#&>.sBl[[YL::X$1L?&0aA2!YDUYq[hPm
%r:8+_IpQ3Gq8SVBB37[>NG=HAm*bjt/?-/Mb._jC`0`/fQe+E.V$20O.Q;7qk't&=\d)d"ZQ+2SJkg\*r2R8jRNX[Ime$/>F=#[%
%IDbIl.0#th\Nc[@$'ZMC-0OhL'd\pWq]??5miNjJ&K@?@?m`eMnYO79n!lH7U"D=tg&^1&V'J2&j0<S6@a'Pj$=h!6D/=Tr(E5TF
%F,=.P>N]Y<`oha8ifBKp5AgkRL&!YlA.HkgKbb3-Kk+/2IrgDcWp)s$@6`K<&G'Nu*:IS][>*Q!&./NtNb6a(H'f=p2[T_.(T*87
%?@TH%^l56mZo?*NB_e7e->m'&JaCq!=47FQlk\[Q'mkkpnn"lbgjCH1F@V+uqcJono^V)6PO@GQd0,KBWW$tAfM"MgX(bd&9P1%0
%l\`sV_c@H>Mm^?]4(-Y^ej&5Dc(P;V^]F&E7"-IfZlC;e5OO&Ub//.C\Gm(C2LZ*bcEc+]X)BXR]RUgP&2U$9KRhjOO1XuqcH%3c
%BM6*Mr?!A%khW1LMr`go-3ajZAXAuq,cBkWk&hc_=^J_M7c)t_ldCb*J>TA-IJ)YPfgfV-9IX[2q>r4:-"Z]C%-#giRpV[dCU6n8
%VU_9prB**M%UcA`1D^6!r*o7%MtRg,!+X7m^8-68qp4DaIJi@.ag't;gM'%.s.;5g=OOpc>rnL$Ze@3R,bjlKNqU&OLj>hbV*CVT
%Y%^%CPLg?t-PQFd<.+-d`H/8tbNFCXr-O.D6*018@;,.HM0XC+'92b[q]<+F,@/]Vl6A,Q(iU+72X\$*RU;"X.q`JK;\rakgR\8r
%%1)Smi^Q5[/9-qg%/'Ps21[#bbN90:B,n\a-aZMQF(F)Z*l#^>nS;Ys^"Hm_8*9:E-McLu;KfPDfWlYhp$b'`YOfgSOGj#)Ac1QU
%[Jpf]`r+Go3C:odr"$/N-9l(pSGdUBqYoV73pG6Ts(g:-CtYHkjPmrO=uQ3Q2%D4aY\\(OjMAIqm.0l?/,NF,b9_RdIP&2(rio0L
%S)lTXF7cg3X8aW7NEpb*ri]mS<0kdVF8s1.Sn1:HGNI!+//rZ'AQ*-CD@d3U<Ak(4)d8G\htC,0bm!seh9BW(87c:;PgadGV64b)
%Ved>:GUl`@-HbJn3t/p<EooSUfmJ:Y[J!s=F%"15LFT8&mjT2hNA@;>1#YQ7JK)A[mu0MS^?dVE;Y]!Ffm]\fbd)M=/pi"ZnObLc
%DuF-PMB*4W*e'q=2'\7`PJ1!SbElu0Tum$hB=H2/hjr_!fmI:LA]MH^nnK7R.bc2-[rjm'7adVi8q/AP4YQbC?V8nImGgj1]fu7+
%?YYVUI#ak-k?qYs/a)r;^=6DT<dH`4C33=HW/(A;^6C:\]R%_q0HA6J=b,'c-(h5M8`^n(:2TqrAJ8t<s+clabELKuUhm?g\#8Qf
%`m3\HW3.S6Z<:k^G+juO5B*s=H'/$/HPanaoo"f12L3#V\(U@Q6]2c\'9l5b?Y+;3b/XF9.N:T-oPhqWqI"bZA]$n+fRVsAH/8gr
%WC1XL:5mNCQu?3#&ZZEEkLRRsR-E>/EP4CdNd[Yq*_i83l>"KB-P?VRT3B!MNr(A3V_AEg]fWWGDPd[5HKuW_Qod5[c_t7.%T24)
%pHOAGMpUmGJ[Jr)(ET1%1`*UW>kG.+9CI'`nr:+Scf",mXo@p<Z=OhYgj@a%_<(0uf5'h5bjs?P*NuU=WoKT%Ab0knCS'LerUF@.
%a\VeVQ$n$B_sd<"m!F3)SG]s-J#9k3"Gl5j=hE:K0"_*Om9ZL!0@iB/ZH:9PqPtT7hWG!Z,Fc?148D8*IA55+@Hm9T@KpArIs`R9
%k1;M:q7:t?c-\IqoqFD;RNHG<)N<N`+.&0f0pffd'.)O&e]^K>;+1&R66F+U?7iG9!oI4.i?.](WTXdER^mY)(\a5=WJCY'9:t)>
%])"4VijlK0o-^$d&!#L;ebN.gn-;I%K'GI7$TpptZAX2cI60E71WNeYUKcXe)ncig:?(<Aq/,N'd2Vr:V1#*tCtZJ9\7T(FEU(uU
%F/XK^W(_sG&r133F$*DWr5]kX@^U9UG]0sGo'6&=>(6%rc!)tDW`V^"DtIX]ELV'risWY+5M%npIaRTHdJaJQ4%J[7alBqh4D3VL
%Q%sI[k'Z(?;79]REiA+;2Ff+3Iu-NMf6-0S7$H0hm=?1j3=fWh,>D3oEN"I.eLf.IXulL#*@ejV0$SF8]]sl?Qg3&5bJ2?8R;;\q
%J#R]LGM!u11$/pk)ih7M"%c-#`pr3fl9Co@m2>%\M<NRq/tL\9]K'-3]\FZaE_RgWk'Z4(bq<qJTiGrY^[Xt@S$k%`N-TL5G]q.D
%L0/3`Mp7a%(*EC>RQ!E5r,W-.ADW\lq&dSb;u<"BS0RepKV(W!2uOd.3f9+WLGj(Z-7cFHRl8iCH2cc*r+GnnQoA7PV*`2:`4QE$
%(MU#/d?llbL=74(a6ua+eh=Z-mG;";i`:6!Dr.!88@LfGgP0)3k0<Go_Won8qF5,SpoXlE1:D@Q8k)NZ\oWPe9p[(AA_t'[5/6[\
%d>sbU?+&KaR5_=9nrmu6>h`??KE1Pd^8]"aS:Dt^k2i"+j2=@bd:f%uX,=f1IQ,I4h@?*U03NJOI(_odBBPM-HL:-(G<#r:e$!mF
%\qg/bVoKsrQ/!]egn/l'Qfg!6qKD'4:&<V?g(1Bt]_:o$8EE$aF7s6maS0P?ipak`mQ%WOjjYo<N(Fj-=o7j8[9Hhp^o4fXDP,e!
%gNX\#q3@9_l(hTK4ed"4/rXiHiC7kX<^WLjCDS<FXp>e)[Ia=&6%CpZZ1c5+,Z@-erPT34`0/?6YIg_dfOHjtbVi?0YLhXm.&jjG
%9%;4K+5D1j"c[0n/K[d#?l<q(52CZXHh6=nVHI5P[S(g0F/a*<S08>iDJLc[\GFhX^LD?YmIPOgdH0Wd%3!QsCm=A@-YRnqlSf;u
%?7<P6h`/CID/jpgdI,&9qjKY;p)Mhsq'.64KM9<C(U0^TgB%DP'(WQ6DXgB?V3B:rKL`P(4tmmT<fG`$,t0kN6WnWIA?TlE:1i2W
%A<jn1<s#$(rgLq*DY<b-B9mG-rcdbSa&BHkcg8/;*YRP`kM%AF0E:Y3YN%"=X)H$S^8N[is2N3k2/Z%!L;[bGf']'"3a>7'J?`JP
%WbC9,1'SrIMBR=fE,:m96M=>K((<R$KTXUIOjSL$TXOhD`\cKL)$Qi5#[/6je-]l,-Bc@5:FdQT'c68Sq8F@dOj-1gKC$J3DN-hP
%P1J)Th]W&680:RWQdusJT@1i_MF;#k';[[Rh4>V$SA!cC?BVTC0@PM[>drI7B1p7snYtt5=1r&d$%?j?T;1H6`iZpnCXA]3^HGCB
%nO5-,0-*M2XWRSWF*GejVUpoM>2:F:[!?4mY:S!Q28pXPrU0UTX[e^9DXDnaoBl9>7\>15G#7D&K+sTqZoRn[q5uE$B(]OkMkJOJ
%0]0:Gp\1H]"4&c^,SoTrm%j"@'mK@!OXq9l:N])WbU?G.Fjuh"PQ)s&k/d,Y=9&,lZjYF,76D(]W@*mWoAnY16.odS/1@I'J+CcK
%k-VC6?ud8<4?6Y,:LJ/3)LS`"]=me1/@eGi$X-8FL)hc>I7)0;go:54_Y&f;[AH%,Sj(7b(*E<6<1c/d7&1nTemJ5EHb2j27>6Tp
%,q&"lNHXC$RV<Tia)8)EB*_0=Ep2AA[lW?HfqE1+;#C5PGnA`kh*&>,j3Q1r]NfE!ki.2@&NDTYL)82Hf$4M!^7DJ'-4,gG]6Bst
%g)K.JH$3Zn2tKKhGJEVbp))j*i2+#@k*-;Q_O."b=q"a?*C8;QYN=^>OajYo!Q+TfV#AKe%PTJA^[l_,+CLC/gTp[3<c3@<raK`L
%qh<^K]QPXQEmX:#06b1sl9+8H]+a^m8)GD\O2&2fFha%,-U$dR$cK)!S6tPjS[=")gZ`po/);jl%<)8>5J+3>[J'8%#B2+Vd7hYn
%\o?E0Fsg;ZXU,L\pDkO&?'OBh`KdBX^Fof!IcJS(WIf85j&Tb6I=6"s5;2Okn+l.pdJc,qHan$(ZJ_k+eb^/L]focX18h`Q;ss#:
%=-"/(DuEW&?4YH[c<+VR+,r_g:FC5UPZt3c4sdHp#9ItKS)IX;h>4%\r-@>+NK89DE+LsM/jB""]("_9>Lkc?df.BnJU/e)o_FbI
%2P((JrqS-hm#aZm?L[u@p=l,Qr`<<2ZHTn@NAZlh1DdT4K`4KobNEdN4sQJf$hjSn"R`a5,9JH'A\LKdD!PnFkP[3kZL_<f^V>9Y
%f\5k&o:Td3juFlqh7]cF+09:^5!*hk[JA_):7XLQ3#Va;'(ER.[TiA%$qoIt-C"%Y^HGg*Q]SD17K5#/[JdiCkMP.Wr3PV"89W,\
%e%H:HYQ+CofD.5gpKYoJ4RrO4$TGaLQCiR%a2p7<Z5N%^G-%4c$tT&-_aE2FXeKIC?!?``E$-;/M<oj$eC/e=89t`qlBD:W5ir@0
%JFoJ?T=OlVhaNV(ds9R1p"K>1(i;@L_R&';XZ[dGj3GD:<3%g&)m\">HgP8"U\t^Ym9W"@s*%;,m=.*F7#!.lq9'.4m4L?T&CS8)
%e8gM!,Su<VF'C0""q!lurT8mm513I&\9d8?=8F.^I&]8T>>O-p]M):k2A&Xh[,%=WgH_7[a6(5XkP(j`2Xs#b4)o^lqpLm.)/ChT
%Jbb/OD`6Um>LiCgl(aTA:]K=_\c5[[Fa:&@lMB/uXm[?<rHnM#[r:,P4@\V.*1PK<MoOQOq!uo%^TUuBp$2R)g]$j)qt/FZDo^Fh
%X`"'IFn&pHCqk;dl/esUiP'P?[IP:hg7U_%rR.&sh73Ep\aY(:pKM:&D84BaT1`TJ(\58Ga&c;;iKD/beMDY8lgd8Yl$#p1:Q@)V
%?i(Km=gsHqA65m/E_3H93XK+]4Xd3=cE'.arD_UtZ^6OI4GT>0AD:uQJ%g*jr8m),\U*_gh9#)_#O]m_^OJJh3't-%G2qqI?p@qH
%FaNB.rC<0TTNbX-b/LB/H@50BV!!d!U^_ZoBq?3):[c8%Vq+UlZ>Sjnk*J.L>$5Uqo@;)+]6BiqG4j;Zf=1dk`m_`FXZ=#-gRPeH
%P2)M`pWe1I0tf=u8o](3QfiLc/2"j+Y<I]97)l3SZM/CMbMeO:s2,c+bF=<jH5/mKRc?"]o9&(irgY/@bSDf1ceso33VEFDdFVHI
%[@PH9S2p2jRojb@hm=b"o!t9=Hn+QBbDYq8>CSbRs(GR7ijO-craI($n`K1RE?Ml#XIQfqO*JpWKlGtQr:V\i?X"08jL`*=J$C2I
%nTbQUNbbcMFY2X\%DX$I&\Q[)"#eIIs3X%.k)uWgrn5(O\@L%ZQ4lH[9gA5*/'Wum$P0h:n]3bucLCl+cS[?s4>bH;fS'@5HM,VY
%(g-B2W2EoLf@mW0OX^1dcTcT=Rt\m;1qm>q@S_pY=q'k[rO$r.O)1GTFjG]9[ILToghh7PUO)QQhB/hQ#Cdd*@XS2aG?[<!KF@m:
%p[Q`$$@+oW"Es4h8W+)Z'J4e7[U38M#57bGgG\uqqnpJ2dFq`Jp*BRZ^+&Q1_CtME#NtWu#8;8biU:=VDkDElAR]u85$b\m:ZU_j
%'c]A"rUO7k$R`$5mVAEN4hfIc_Da\QhCNR"Gk(V;qrsYI4sue(fe#GAreJB-\%9@Brl=bkm="Y@eXq),aBYqO:-U;H^UBcJD<^W$
%B_fb3duBTelW\j%g>2btgP_%qJ,Oe1kP<8G2@7\pYs`s9gZMII>iWV;0rag1aWIG]k*40%nrKpAUp+4^g]%05pRSEV(N/&5HZ]58
%4=eh(Kb+2-E*_mKmUVNr:-Z8Zn_Ag/GOGE(MY6c9kh!l<qAHT6ZXi-T4XL:2rGRnM\%g`Yl#"a_Ie#@b//-OoggBSuj$'a5oG16'
%3g#7YkC'Vd4Mk(GbWB@BS*0%H?RBSC66AA[r`KXAr6anNE9a_H,&f(-Y2@NQku=e:Z`Hnm`I8:jPIouE)m@Q5?!PX3kEjd^'hb_:
%>5%Pg(6"Dtf1kFAV5<).$a9B+)fK#&:lKNHCH#.hX$N9\isD+G_1B1:90A`IVW6RUWB.fX].0O+I9t?#R:P_CM'/dJR_M"\RSk$T
%T:2+9%*O?9o./tb-Gsl7@.G,Xb>!`QqRnocH+AdD1`*&:*q?nuA6:J0c**M$RgdJOL\hn3b=s=m`K4b<LSL<)RgdK:fDLeW\VW"n
%.)h=pb>"dHDT#B#_p$<S%nMGD*o4Kari!qG1,$+b5Vgj]M!*kHkBh+(;3O4'0/q@tEp!omC3!uoDXr=gR6s\uIU6p_J@QaD2*#DX
%mXVT'Wd2.s"6TIOTT<Vimf&t.O*"]Gnpi_\&,HRpjj'A$IJ!,Oa%=u\cc[>r4FU9$EYBn\d*OG5Qb3:YnKXTkRu$rT8c->L\HrpU
%dZ/c_DSefSDiT-MY("0D^8-g-?LEm!K0Jq?h"Cd%i@jF-o5^%'\Zu'RT6[u6VV9"\2bWV?;[DGJNiqTrO0+W?Ue;ITS\+F.Vh6s^
%jS.ec#lUrUS"D7RnqP780t.84O:],@R0?"Kl'$LN'%O%ScgYSZX!5fp-R4DiVuCtiHHf$eTFL?qQEe?h.naaGn?Run[crATlWf^i
%qn1G_8<"$;DLR.k^*WrW(N.R.J^J6g0RD];CP.,g=EPf"N%BRA:78e\?(BJ]-DVI/DrH3&PRi9CAdOBB1ZTffS>b"j>I8e.(]Tp?
%.q`iGDQ\#uP)G7L0>\I:)4p`bk&#QbNWPp33D7;5:a$4Xih46i&o48sP\*Cs@T6W']Db?1+^MG_KiD\S"ON=pKrUbn*dRA"fmY_W
%rFY*9mjHu[4Eu,RBC@M&M6Y9Bhg_.dQh`;4o)3`Y]kU!umY[&ZDVs6$._*)/oDNkh<$f=h]PCtil7Q-sI_rkjp0Z*0@-@0h%!g%c
%a<rWcpE-cYlN^Si0-d6Up2M&OH]ZEXCqi1H_F<qN(%H&\PY"a/fW]>hT/8+s84<,J?@m<JPg+J!$M\_(9`$In8[#i/p@]^iK:SLD
%:[d)rg0UcqG'A/5hPil<lJ&\e?9MXG3=E^o<s6*^$'Mu"V.JndlWBd-=c"U92=+1O[Dd39M"\<!?Vj7M)\D+QFIZ/na8_A&F8s]7
%UfbnaIhXXe>9'*BZ-;J$e[P:e9mj>:mIJsDlYdj>i0fC7#P`fIn'H:/V><QnJ,\Qs&26(F/Vn]_Y=-^-?&D<_%SC1*[[D@Lf&f(,
%)A780\LUf%5"sIomP"':M!4'[)_lNW3"behB>6V*NW/*0:P+ZXmMhdF,u&!a-L2`0WA?akM.?qG:_[spkP8ZOj%Gg/U`]V&5Pk!%
%\*r*1GHlCuq<H5ZO&qqOcR[Gkk*Z1`N;a@fXdWb>f#MT(d/PN`djnr3cSP5KZZ,7<)(O=E%@E;S<]C$V[f,p=\$qtn55Y)(Nihit
%mTmMHqr7=S[:B2ST$ZAb4uQ3,AP\,PI^Qrtf-fMN#sSgt\bEl7T<IDVf6@/Q3rY<HVXT*0T&D%Dr9W;?i.#%,J%_VLrU45C4*L;L
%_aiCbQZMfB>P(puR8cV@RDK_^<B%s7ALFWpR^-q@Fk.TYL$ksM@Lja\0S?=.bp9J"r3#d[K75cFiOeWT(\-#hB8pnR;\u9Q\]KnD
%PJ"/'=kL;:o.ht>s7qkAs*qd32E):ZMds3;-Y8jrj)&,Wg>E(8XX80^mjsEs9O/a`F$%KYiki4"aJp.@=R.<1+\iEsjJI#e<);dA
%,r1[sbio'W9pQUh=DmLOYD]81F*a89:U[-lR#M$KW,,Jpc*?%`qBhOHA+Rp0N@/b1RbhXN?IDUWH4ggTFji>1Z8+Vc9T#^gLn1Pc
%%DC%!P6DQGIr(Di-HbUFSmt4\S/0`gOe"='7I+%<:$nGu.d2fTI:[!\\ub,].b^5PG\Tj/^LABS?VDPSlJ,nqq)SDhd5ofH?C7J2
%Gse'I;H0gT^gj_[ptRFDS&i'QMFh^M5o"g527*F=,F7O@/oP"Rq)/\!6:i8#<V4:chH#jS;\`$kntHE57(Y=Mh5&@G$<h&qQ%G<t
%,,R.d$Xs070ql@T(R.osd@TNtToZNSP?$2"7HoYBVm(6Lf^opl!YWGAhJJdVAI(\(1Vn^5g<`k[ii/n(L)sXO[NsPrYG7jX$f*YH
%je^)jA'WL4Pk8%Fc!?Q\H9//H]riogadQ_BW$YWAVP6_`b'@&^g!G=pH[![kAl97=7D_R,A0Xr=@ara:baPOUU23_-['_3"8[@>_
%B-tP-0j^$mfnuDd'k6,';+Z7'T3OD_#-HgZ0dOGdaf9:qnN)h:3X<"tNg9Z5-1,P=i_nr.'8akjQEAG)B#-?B;AcL=X81D%fB!H0
%N'mg3!(9gU;NR@TLGKP\98Bik1-,bM]UY5YK:5ij(B2tFFUlGE8hZ!>m-*1p:gFfm86aHGU[=t]+ekE)(,9^M\qiaS7`V[/-)`TI
%0TLu0KKfAX&CDYrD^e@_AsW'RWM#c1h1-a1cTt]t^(@:E6s3r$QLgaVR#&\XWNn"+.O-+)nTEq=CS2oS"W9HP-Q.tl=dG2k5\7q5
%"AqnS)/i.(Y*5\HD!J$8Cf:oXr>#9qQFeW'Xn[&2C\kpQ$W.QL.@$>3!gI2VhYr.>d*s>f7GRE\,Y_%'6t5Kk:.7,GeYJkqO?+Kb
%<[Wn+]J9%GQe/C7Kd`UU.f+^i*sl'aP*^qORARjK&,SWL9F@a*b.M=)du\ZtWchfeKa6!Gj\!EY:dj^="X8SA,CXTDR#&JfiKr<P
%B7E.7RdL=AKk`M?Wb?-.^kUpScLM;QSu&_t77T(t_c6HBK&dKp0M+-D_+Z`OkdH$XD5CX+6?[I;eg:7tGBN.^X*2o9F>c1&2"Ql\
%)PmO($5/\"]Le:@`oZ<8/m)#=\2O;ZmbM)hbE)kf%6]EsF63qqkaEjK:Q.eXmG4S6&gsIWUMd@nmptF+;E;$Bb)1j24=Ru"nSNAV
%dnaX#bIX9Z-TDJkkIUE6Z8e@'kUJ0Qb4,:?gFcm((,7664:if>&:OJ0:(]XIP]Y7pd>W+#bV6UW1@*R6n\9.@FQl<pb/@UsPD6Rq
%b(<_+Fq*+>-*/Fp5Vn[IK@6p^aOXnu`8u!7Kd#)7r0ZBs#o1NLNY]CnN[#=.e3HqN<h4\b>W'?X<FgVG_\(pNIF0ca<<e6dZ4dVI
%7Rm=-FB]V<IN$YFY,GP4WQ7Z_5_d?TTqCoHA9?8a8qDO)Sj_]@#r^J&3.^!:V_thR$epiqc8=NKd[/V[&dY@?8TlQiG"(jG8`UV"
%YgKVtj3:B"ImW-]GJ9DBr\t;W!.nk#hErHKXHBuD>EtEUWS$^#.d'OmNZe]GBp'kHI`!YHDb6NPg#kAu"8k:b,$KDd#W;s*IH=j^
%nn6GOVSgC)MVj;[hFlj%a33NRFp`4^_@mA"^WJFU*!okMHFoABRD)a*L@k(/7=RjPHUV.Jq=IY5!^^*o12rbWhr8UZ=[X?%Wk<nO
%BMUGn*.3-X=>L^gdV#_Cl@Tc_nP#8p/U3NG%#R;Rfjo*L'$1e]CPahp:C,eE%OZoL(T]=V(t(rs_V:'r8^CJJ*81L38MT0;g=qMW
%)Q?N:9r:$UHG&$T=-0XC0HlE',!A2(#Vne/Q%YUoHBNSsV<(iKSqiK%U1Z[Q)+g*7XiE\&W^q_VH4K6X:Lm!2(:X`F[eY_,\f=8+
%9/-GZ^8uJN5a7UhdZ$8l5TC.h6An6<SarIf4!ki97]\T#Q\][nYZm+JQ[mA?`G+t!5*hZR/k[%ZjXkHHa=ntLJJJnmdcDopa#jW0
%X%$LkgVR/cdGi>jBRWT:YpBf968j"b^HGA3/R_D_\qX7P^6TI2?,[0Z7+fXWN>S%Z'qHAo6t%;:An#baUI(]m4V;:8GTGV$:-9t\
%#=2.cECC%hNt`#%4'F$&(s%W\=XU+J(jRa@/S't(,a_8)P9s(,S;9f(0R4*2*GQpq9r"256m9'(+KBKk4u3d2-gL#"-TXguoQ2%D
%7/s'`K?cK(dR6J1;AnJ5G:O&rL^lH5$*7(i_Q=SVK!898/\,3hU+s%6hQdHN_FBFT&8P/ZZtUDKReGAG;$FS(N51UjL5<pY[IeH!
%Mf3"&e7sb'Nd-e;*Jb%Oi`IO\#Ki4]ejUcB)-rW&`[N:$D<[cEbT1OJ1iI``aV?OeS]HgINiV9R(f-laREh5MQQRK))bcNu_ngS_
%Sc`5q,qY&Le-dUt71G_#p:"EWQ$uWH]ds"AOdsn:UO<Z3(V%*@7$21YB"`\bU!&/n,)\/ldag*iLefenTR!bc69FAtf?n*L7EXRR
%&.tsG1)=!Q>+uql(eK#?)2DNEc0qcuYYOZr)A1lBYp5Yj"`-HQ&imH_Zpkr2$+qlXbUTYe%&`$+3>>c3%ItE\.`k,q-d5#R$C]8f
%n]^67\7s&>d9C7WSR?_C"\20U0^8T`0+u\I=ir,%;J8E:IgdfiMA[LkJ(LPUrf@eU6!,<%VGJP\)qql^c"@TM[nS>C)N&cFNk:>L
%H0cmlOaa-BX_>d'W?P1GUS^1*jI;6=.@6R>N\5L$46[g7QlmS/6f3(^3YfCRs/@8@Q9d,723:2Zi5YNt&"RY#;Bc`bEVGRZ^m?)/
%#Ml.cb4,(3lUYPoGrT`SGTrVjJc_ek/U/tURAd-m]*+k._P+'hf?jN6V9Q7Ii#ub8HCZ:+lf=46g=0^=&aYK0>XiUPeiS#M_CFO-
%i^j>:7@u1DOWL;]+EbUqJB1<Z]e^37>nEaiY9TNp%TJ;2$&k()/-@1@1,)jPN_JPs#]<+3YYX\r/sG^CGTH/7:(n2$[G'(7;2O$[
%7P5f4=ktK]$*V6!O?IL[d3L4Z4/-g(m!,fUXn<$hLhKM=R1)!X==7:"@\L4ie4`8B"2,-JDHXD@!+#&sAYL>$b9dE/^!4CW$9r)G
%;QsH*.M1"4,S%m1?qDM95\lbNB0(lGlolc^M3=e<BXC?-6hAbr(Z#_r7!.j2Mo\Z!FE-D96maYE.h5EM(PrKd*gMBQGRGdl1X6oP
%e\#EUP5N]/jdB2rA:`*kV"7;AJ:9tf.F6(KZX,fXSai(;+u4:3HW<'r*q?$7Th&(r,TA<IM(LGWSnD&K`^uN5^r%8%7'm$foZ@:\
%P0:f1#>mrOS;aKUhs=?]Ko6.QJ9Ue`8M[FU,5CZt7!Tt[3s\T?$%XKX<(Iuc3Ni5:6%O\Q>T6G7j1&I^6*]F'8M>Z93;,m9ZlTpW
%ZDK.@f%7:G<#Ik:XTsPI@#PRmK*]IQ.D@S$e==G([A9`p-FGI'd&AQ.?&pIq:9$U5KK_9RCT`8HV0fqb7;IK!5&Ck;VH\aQ$]%]W
%(FD::$NPT>N-gsP!=L2!LE*%Y0?f#Q$sF%23XH=;cu@>iQ+p911r;-9RWeSm%$o&A_?$`Zm6&/cPgM\/^p7-tMcnt0GE=sj[,4oR
%elD8lOniKt\<s[3Pi<7KJT6HEQQb;o2B&,tdc]niB-Ip(@A5%*#?t*:clbZr6\bG'<(iX4M+75)Koe^8_XVhl&^tl)ip($JMUYPC
%f7$O1YZtTK#,15??)O/Y6k'I*0L/4!cnZ?3c-#7(^aO?R<Pe4Ndp58dVio&kRB`'b!]fU_&ht`MM1ZS0k&ju$.C=2=C/4WaGc,;<
%Lb.nT_OI^0^.DuV0,&>,l6Mi&,1;Zd_7IfX,!+dO=-E'=8EIokd#cJ>/qM'B\h$DXOF9TB'.p(k*tBa'S4#KkWYrpZ>QjD$9&hZQ
%\MR0/_,hbc>IYgd!MN+'+*:@Ri%C5;6cm]`O@s:$o=FstS0Tu6T_<Y?GFSf[)p*9sfB)']B8ISU>:4Hc&Kt&].R^+4=^CTjEg<Ha
%+3fsNK$b>Z1MVMF)=n+j2EEkFf.#dM)Uhb_LimmdTremJC,eBg,.`1+T'&Xql#9;a.PNk%)R]1APhDB1imib(aiq>eEq30@\hcO0
%*j#J(S(^+NLeQf@pP`(0+GOac\]?i[;gY5K$]o(T0_K.rG"1er_HT0ah)4QMX,'G&qLRi`l*Mr8m'G_#6q$sqW*Cts6P;Y!K1$#c
%LVS'OrZU$I/j:9Ym73WsWQPK+=8)Fk;%g@\D,/9Oj3bOG(mrN=8kO-f9I*5?Biqfcj3jS?S'aqCgIfA1&.'2a8u8E46jTVTrn?O=
%6HCkf??0kA*iYkuBquFe!0]_r:O=8:*3g%L_5s+nN'%R+67,5Ckj-kf#nc#><fA7ns&SCL?>(7(M:Ioh75)^k+Y[jMA[+ZB/uMpJ
%QXikOmMr%'[*R>3i'UY9W`JhB0,;9@F1En^8Q,qW_'[Q']qbe&`;-#BF&+P1Lh>h38WLH;1dIKR@@rd;UMqKKOlnRS6?c!N\%Sl&
%=3Hj9a7]!ffT2,M9%$3@EL1BJm3SL"/BF?WAUuEPp,l&`6$e]PVOngN;%QU*cr)O?"sR]&W,gd1V[m$+AWCV[-I_;+!K4s?#s^,&
%63W7*X+2T)BAuJe&MT-;.4bHU314:)c*pqV7=ns+_XA87D2#-(!T,02>o(7HX[p\phH>_3U(=$f01_B1:F,EZ8-L2-J(.cj\9cjW
%;UInP$`LchA&El:X@lm?PipCSq*bH-SI/7=F@95DOaPR\hhaX$:CGVcnSZng&7R2p\4Jqb^kX)Bg;c[>/P@J"oN%oI93%og,Xc0h
%98*qPN?o?#X)/")8DIYGg:1*.1;?"$DS0j_/-$6tV'<0f/r+6YoqY4qf'QAcb4QmOg1o)YGb)]t2@W`\dA+dk7hc:ZkG#!^^iD?4
%ktORUn5Nkd96a(_GtVIXc:g6O#inEG[t:@_Sg[2Q@O%TeIZ7.:F[ROg/^gV)n;&JabCJuSP]7U08^^uVSqP<R)]cn4<_8T"6bS<b
%Od?qi@4K*W6*H+*,`#DC&/10CciKtcCCKOi'$d>gD-H=%N7Xk0A(Hs&d\Js27ls$uQRi3)H^[i&=85).:Sb3(7s2ql[.o4W.hXW!
%%Dl7e'7CRF*>B+ejYUE/8=!qWSF[OC]af%mp:uF7O]nV$T'dRn!YLPh_RauTWdj&b;\EdcPW3g476nF@S04tMY%%hsV.@IeAD6<h
%H<<lHXQ#=/\A9`]:guuJ9.%lS:q]`F,>>sBJlopjJZ,78.XZ'5>_cGPXQQNi1"$X]XpVH`C%H#3)qIk/ari(-mM^O!Lks=0Yr`c_
%%OVciO,?W(MRc?CC?0;9Vc5@PDshCP>3F$n]9;_.Q:d2%+Fn);8&f(2*1<RL]'tr@$L&-F?C8;5A:9UG7.SO@O+0uijOCD)FNu0A
%REmp*3k18K<Y5*@jX0=U(*Zg8%9lMr)S--$*#6>YUfQ`u9d'(6nL^Q#1i`e!]9S#=AOE7,E/*W>?sR!D`kfJRFi%%V9NR(h9A*m8
%=BOJdJI=4^q-(gIpSY@"BW.)U/1Z\e=d>`1@s!Uo>_kBPQ&Vq#_A;Gg*dcn#%OD`"e,u7ub(o)p2M0*uB67<1"?F?E:1lMq<WuTs
%84J+qe>.4&\C"^sB!kDLJ1.3"iW>2o0ND0k!#"&mdM<^,m8!O\R1LXL=rQZlq,hFEU]X^KF=enS*/'?^b5M4YS][+aSK.BgoQc7k
%8[<Sn*!O>Tpj#?OVUJ-*W@,hrn^_5KYh)etKd0[Jipd:#\%,L$3;$q,,)K![>]HZnpQen5b5EpU8EiGD&F!S3$"ku477t&n:*c*$
%Z\ordYL%9O#V(GeWshUh*!^.t_\MQ=oSsDfV6HDYDGsU]]eL=c'OFLs.FM?e!uJ)tLXDs%1<^Ne4h,qFFZ=h1EAhA\e"R12Y<-T^
%?-.4l#A>YVUJ:VQlB7$JYastZ3XSF[&l1j86EDNB>Xq\H(EdHIU`<%<lD75]9uG5:2O(Xf"fn5Z$,VS"d&,c<m?:Kqnfc^37o2N6
%K-XB,.Eb8;3U6#BZ=1=CbE>@hEAf.)BK96MA.Sl1h/gpSpJ[TW\jk;nJ>gDS.EIqLVkN1XW+o38Gm_2/86hLUg48CW/5)O[,%NhU
%?QABm(AXrjSa`Hk.QHZ'@J',uk:0fb*6BMI\%b/'L^%%F#6BrUTh*94ejZ;Gouf)ic6%jYWG)q:DM`1FKDFtg3Dm\"Mq*hU,NB3*
%WDOcd;BCW6+F`!$q3:)IaE1]?I9V](I)sYi;/2+"04j<"O_ZGZn?UL8?rLuej6@p:?oVOn<buWpLd,P[D>t?Hck3qKlsOUO(KsZ\
%f:R_o#$HhHSiE7QU/hsf9Ka!QjFfs-p4HX=UdI.M$h[W-DAL(D7b4H$`Je#\D".qE7C'288nF"U;XlZ.\Yd25HF6WC8em+G:7,8,
%dUaD"Y.,1!<+4OZ^t'8b:ZeD`ihof>X"`*NOM-@JP:l(BQVio=V7/`FMleFTQ-)d"b%N+6[:XcfC4JpZ!Ra_#l6!Emd(r<&=_'aj
%Aq1A,iVYe$/>ETOiL@/2a]7F4[Q_rJ%BWu]E>Bf@FJmP?H1PgMZmK=l]k0T,Q,D5#XiYQ2lkrqk1)Gd_$3@62YRnB"ae<`:UWQ`7
%je^CVKjgPSmjMUF<>e3&=u&E'A#Z30=9h5>7.pUK%8Nc_^<TiWa76aZBgsM=CgS9GBRSNcH&C`k_>:>fRln?gR<2RhP*i4-[WEg"
%M#udBQ$=FgN'mnbA@_juYCE7HAAanul6dIJTEi#\FYjl-I%\(e;&W@i;:S,,-o#KeXuB<'%kKGmDIUuo^9%cM[r4Y,ChH+tS>RPg
%\4C$_&b2(h@(aOjcsTu"!prR]"!"[d:?S_<n<K>94:+2s[s_8[W5^$)RbSes8OLu``.lg:5R!"c>sm!)[XlK=#F2<^'7;1a5)<#f
%'.XicM!cMa30[E3U3tC+<:5f@OV[$p-jkaeA$&NOiER\>VW"qAqO+]nNnf2j6,/N/fQANEYFq#"0'R!q0=W,-C[R@C2tW*/pb%4U
%/aCR<Bo/c7b]Klf%)XVbCTQN!r%;rFFg.ULFW-'XYc[%tV7NI!+]->r"Uk['Zl>]T(Y0mmSi=$F?<\Hi>-chF$O@-@qJF&I.GDn2
%V])!iL(]WE6%^mpHD,]rOV(lH?sS>H.q+K=B]:F_mL$qf<>iD#K'I0q-%gJ"\<p.P\YS5;)g/4L5YSje#W"k>B[a"R"d(F2K2D73
%DKKW6`$TkN,+Ll'r&Do!1s!I5.B8Ca/t`M_E#CeL=Qur7a1$DX-eYN4V`E2cJ;dNiWO-ejOJ@%fAk<OQZ2d&H,N!st%4]@D;m7n>
%L:9-GD=jJn"YWN/7B=9hMmbI3W/dSpO1rh4m"GY+F1FgIi,u#D>-qj3CD37DH=&qd<6D&QGN_)_i<>$!9]t!d(?:QJ:KO<J3``c]
%(8I;6M52F=L))jJhZs#oZ%9?k485;lqYP<OPa0?bAfo\lb14[^iVnS8eSrtA,'8fE>"s,k+OLW@Ym)1:f?B;K+E;4G92#.C<N^iX
%#&0/9a7_o7"Vf^_Z`U+ZK8(0u>Tkf"<*9;s8D-j$p!k.DXp30`e<-C-?05^,.$Ra;/E!VYJa$q@^fIS$NPdj^hWZ:1="6h:OfK5b
%oJDfAfLAnLB3\*4H-b.b'tsbW&sD;l;W$d;Tg_$p()u<`#WpbW[5aN[*Ddc1VlO%$-J"/O(V5b$P%lI8;*RH*N<X"*DKXn2J/#Tt
%7Y'k&!`/H>?,q.7C.)luBbDdTZeWUK\a-3UQ!opgro8#!K=%4"C2%bV@=Y:Ep>,PW+MTNrSXhTI#M1`43SIpN]J#nBpDYN54'6P<
%McqRq-*jFL<CPF$Z`Rd&J#4lj&,nj@)%Wj[&+GT1Z"!%+f7H!N2)3^e.ruo5aYe[$K1:JU8[E@B]0NOW6KhU^/D-D\gng:VGAVud
%1)De;n1$kZT?`S+\62n\'AL[GBctPdFG5P_QBpe0_W\Wq06r_kJk_c1?ros>dIR^nMiB7#$e7-@Sn_fpBY?`VLZ*?WggS3=5r@#:
%E*bO&0"%8LYWPddgHpc_bc=E]>CZu;7#Mht$6`G<KEhr=AW3N1!2R1tN,JCMGZm]9=,U5raAgkMO.',$(9/0ja]/u[@V#`I#Anr:
%XIs*t#$Hhd$<^N"4:R%YrAKg#%4-2..a(?0:/[@K+ehhl\4\Uaafi-mJJ5l*iK:=EUo&9jTm/f="d.=iOJkbo,>EUF,ALuPK)=P7
%>Zb^LW^YYOH9?Qrb-,E?#fZ*Jh0DC@LsbIL@@gq5a`'+FQR@CE-n;@f\854nEFD\O7Dc=RY4)2:BoPQHo6K[P3q3!qZQ3R*.MmjJ
%\I%B1?@,kGf:"3p]t'2![9N^j0^D:](I8&RMd="9GXpjnAa@XV09\.XQJt6=5S*H#7D1u=A_V_!\#0=c$!oVa-=g3b)k@so6n<+'
%K5g0#2S(`s(_.dQ$EUpj5JuItjsdCD5n,VZ;H</6F$s)&a:i_t&H5JNWE5s&_3h2K\5TtB0O0`3R4jA$NS9e`)"p+NATCN`E^XLt
%.PAA1XgIShF9mD*UNE%1*`V=.g(3R%9iCsGq#+LN1[2p>ZK;A2$HEfHf[FMB2e_!BL%F9u)"rWLhM&n@XN5:Bh@X(l)e^AY-7KfR
%j=.)4jH%e0F6tch=s,U,Z0U+V$GB&IFH;q\G9K)2kd=n"P!Ug[#(og(?EeF8J9*GBPK7^H@&idsWNO#?f7VK.LF3+!U95CJ*"3+!
%UQ)+d'o9J<1b'-mZ-onIHD:1W5!m.&Z)S<7;G*'nn><<^f&dl*%%QA<UrPC;;:ImtOi9?u!gk;IcsZ-KFcEIbi`/O<8<@74OX&pU
%p;UaKisH"#eh4b/.!8Sr>`_W:VP+kpHc[Bs6<(>/U8^'8EWqJj';uZhlBfs.X[$tP/)EJ\<:eJ/$C%it_t9G<7LFHOmD0#oF(2:V
%a)g<Z95Rbi^/Ss^nB4JXf`7S)Jd`(Y'TEbbWE&O1pG!$@RZ.ti'ksn\^&cuY-1Dt7N`1gQ.;2PY4W65"Zi^`d0WWCD#'l*28DXgo
%'r%fXPufYM65G_;#3C+c&s2ibU.VT8Q5su#cE"i9.#^E_W4Qt>T@q/F*9=)W769DYGhG]k'@_[[_Ap_(r>S=YA4II<N>B6(NYkt9
%%1h9e![>-`/`n7\65h6njQT$9#,*Q+.eF'YqW;f>)mN*Gbub4tJ8K:+U-h@.luG+;WhHJpL-5AfL8DEHAJ/iJ7kXVqD<Z9N&0amp
%Y"Hb/WU,ZK;1]TMRtZ_(H(WM6e>33HE2[oEp+T8sp-:N7.:\#GK=c8?-B:7IJ5rB_G]ip*]#6&&22ijc5/B=am?kKIrj8iM"KUH"
%IS(3k31-PPltFD=oSK^YV^iq#mp>F'53Zn1OH4Irc?+/@,tU2=0s;'YMOP-u%94jo+dQT!c#Qpu"o?+Q!hG+38)PB]"I]q&#2q>P
%jN1[ol3e=cUgZe<I@%F6<)E78#6r1(&"qP:76N&TXp>m*-sfO,USnMaFPTDSWi9q990us`Ct%=PGY2,=%X(7mM?H>hE4:V4O<!1%
%1lTD)r,cPIY+m3[7fleHdSk'bP4oHkB\R'k=Y^Ei@"IgA;R-k27cV@9W)Tm"Q0X"X%.b1hShb/*:Cmlcm;Y_t%Q`pL)O*ln,iR,j
%*FTkq&&(o<oXX;.:^:-\bALaeP>GEJlX:Yn"O3-8BAsX6KGs[%[f<$fn$NA$!KkBY@ZT@LlTTLR6(?#[(4TYTrF3<E=N,b1LRV7o
%*0)TH!=Dp(1d@;4L&)7&49)!Bi;e$f!`Zr=/IL3f7A8+#)JF?qZaP*^OE2OUatgQE`U!YGY)o39@&rP)e.@CV-l6g^4ZM^1_DY-F
%=r`&&7[h"X8'0G&<a7NG`527:>=.,4"HI)UV<Aa1W>//D80c9/6Qe!IomlG4(DHnW_TAB.aA:9-<Iu>"WfYZMFW_R\4JU%lE'g[e
%]V$@Qb%4EhSa.KM;1Kc9H)ln=H2W&aOl#9ZI@EDC<=>i<!rDU:[eoP4`?80C<:&Y$9$kJTNuHR6IUTKS.S!*cnr\qLMA$\?BYaj)
%o\?J/*`\lfQPtNbR%``q,5/!"&=@=.S.c\@qmE8\6h#CK-jq.aVP(g>_BudcfRfg<I7H^7rV5Jr2Q;]YA1?50<b$RL-e=,I%cd^t
%IK?MsNO+.oM=.Uf<KotF(j&R5F.k9Q#Bkl*lJdEZ4B*[B?jN=K!(j.^[B$s,VF//&e2K:k8D<,-&HH*]$A"+JYO!6g&&SfE@6mp*
%TdGtYoMaFeFt?JDPVQY54DdPjrYRm9Qk2o0grlca;DD.D;Mj_&rC:cNenp\i_)t-gcu=aZRJJPSUlcW/3aiB2Ad#G?AuY,?9j>Ub
%1a5mj.Oi1LK5h^84`;)Te-Um%0MBg&:CG-l^a1RIp?dDZ.rc#dFkuWn^]i9^LTQ,//S_3B[6lGN$b'LL1-(D'R&/*9a5Q>f(FkYC
%MW@oZm1UcR"Xc@'K54i0-g]iE7DBh7?DhSjWa[/Qh*n&jH0SZ36l:H-<dI%^Jnd]#Ep>[XlUr367^igUXFt&FD:&qE7tLcr6F`d@
%1b'BZ8Q`5DTZE9[]+XTkdU'#cVaDb-&T1E>,o(/d1gCd)o-8nN_pk8+7g5SKbCf*p_[T%l1kdjq",Fc'\XkgsDbN5kSP+8oX.fj:
%K2@0&f>2d!.Ib.b:Z2TU`XAL<$WLAT0>n/bV4U(!W/@2;#XkCNO,5\g#Cp3D#pXZ6H-`1O'M5PLBPJ6P[mf4WW(I:R(l(T@>ZQ8(
%Ag0j!kpX<4QoB7`+Zm*3L5QdWQS4Ge:nuj3HNK0V.6@N,XVrr</'4YrNNh"YLKaA_DR#9149/DK1)+/9gS,uk1I+mjV@N5q!J*3&
%Z'I]Ym_MfE<!,/]<cU'M#0;aBk@1\FS*-1\7c\bgpCn%A']mc9)d&D9eTqs40MtrKJ4rOK<4YpI?r%&[Frd/j\g6B>F?3DJ3AuUm
%=2BP!Z4thTQKl(ch_S2,P]sZ)s"HDtWZ%&dl'+hFpCi/ZiNc)5Q2SXoirlAeKX+\8#,8[?q,2_:-)`D?Oq)FSq3?4)K1cbm(T5SD
%e"tni#)+[;k!=[/:R*n,po9mB&J0&"h,f41Z*I>/,@rN/KRjiurQ.TWai2=&h$,_VW]di^\keU?UP;-g1fbSk;O+>9h]H>e/nr2>
%GS-^/i5tSGT.LG'GR\c").Se/EfWj_C/Xk2;l#9;)7SWK:GI)mEI!e%f^rdLC%JPD#AWOmraWSn7nn+LM_c:4dA5f,1?+KIZNf\E
%;B)b8Le@LN0FgMf7lc[#kRPD0OkmfT8N?d.h16baqFBt^`H)>Ub#Z(aNYP2B,mk,o'"2N<ZmMW&G[7"XXQg*Y+*nJ:R9qFHh=L^-
%i1Uj*MubX)ng*E'U9%0K!d,$uEd4"`8.r)3%QgY)1_=s=,pbP\3XVF1fnPY@!Xk^\R$SKE3%F+rF;i[3>#i94Rphmtr1i>KM+I#T
%6V(9H2Ot5P23ksDJMNQ$'HqEm=/p?C?&REj7K`jC7Kf+J*sc^96]XJ=[`WisHh_n\<1k'aD`m/=mb%^q*(3h/5W&Grgqb:m`Wj4h
%l(\VfHN7iU.qJ&He=TUJ&0:6GhFM"TVUa21)RD45.k^C+=A9%O!EH3gWubJFh2R%<"`)"$=:-0$Kta#\TG,l5kuER,D?*KNJgB>Z
%Y9rYoPheH^"NR#J1r6jEA18E9.@*'"EQ)`-[PcDb;0Sf#==rb%%G/LWY7[4)o:mjt3CKj4of+u2LaFNRcKVs&Q!)fY&#_jL\cL>u
%'2&p*3Xjn>ROU$cLVCM2P2pA\,KLMe+9Y88QSuc9)1hsZ&t.,_^SC@5g_'o0Dpt9&<Sd,3*b6^7:W"DX$ud=.&&#%%W2AE6-T+7(
%PrZ%)kuh/XF_jlgLL;LeXe,,FWI/W#d[Q(N:EB9TNad*ckHkP+K,XFX,$E"7SW$u]3nTf\lV6%7&KDf'rMY)"#@?"mZ3MBg*B=Q@
%0,s&Q$h%VfnVSB%,G)G^oEaCreJs9UV&`#*+\.Kqm7aVXn>(:JMVYo3@lX'*6Sc_\N:,afLgD#@>F^!X2278O:h"WhQ%9U9$l)S1
%o)[e#q'_EsBrI=s,nQ3!UXXaU;s=C(m?;YS&S!i$"M"Q(-ORo%`oOru!F!VZ+9c)M"AE9<Q(f3)o8k5oj?lfMe:+I8HuR)V?W/2N
%mH\Z:&#q.)0N82jJ`?MklO^Y6aGu.CBLJXhPTWjqs7A!@;<O3j:8)%B`"+/$"pqrF$]qL,,jklD.3qX"/6C;=3QPqE(Q9_ABi'/<
%Vmu.QBiY;+'hG]1muZ.7S2!Io98=Zld?-/SB9.Zl!auN_paUZ4N'5$SLXqiC9$>>H/%d"F5f1?"7;'jlg8_TOmZZ1EQrg4B:Y<US
%C]GQ2#qhOk?l8l^kpAB1kUMkW_6PF53egdp^)@=gAC5(M.'UKYT$E&<Kj4TY0F5.Fi4sr^@"YV\%:Vd(f9Sok\CSk[WCBP7mU=!*
%oKo.\=[8EGU9M=nB(TR&FWep8jKr/IOI6WU7)5oVLBBBoda0J_S%D!kWp!Ugrk=p$_gW-eck=)4%niqR6);?&C[RB\!$KB)L!u0(
%5e[[$OnPOT=mFc`NN8)=!*3L$#.Gsgh9>LYF<_$dV:*sNLid#=HXi6R_&uNNG>uZe+JJt$4*eM^F>j6/m81[a6[\gKVQ7cF>+nL6
%3`nT=eo4<l;);/[\$E!t+G24fIL&!!a>M(eV\.jc,q<#96ni2_.p&lJ+%+%M#"n?]jPYV_)X8/"*6qXo6&QIPJ9ZipMUINjAeBTp
%SXpf`p#`+=?)qhGL`-e=0J09K*ob+N8UECn6Xi4n0[6qCQkPS)6&q\Rc8Yg\[NFVdYpeU$;h)D&q5T163<P'ue8GLFc5N9edtP`E
%1PH;`j)p>J"iE3\NiX5].GjSup#6X+M&A2D_g7OBC&n"WL-PSSU\YX>'W(-#4)e=r-;tSf7bY>jki`">d6#/*M>TnIKfP#=N=tn_
%/F!\2gPTdb9tHAR=P$9=12pptWbcgH9@#A*#-/:E'OT:g3m:Op%f@#&Z9#!.`[D,]!7&9%OQgI<^?J\-3\\RQR$n,S$EN^GJGgmc
%pi&]R3$F_(L)Gk]Zs_YqTk>BODj>K]0Z>&ORk;3--?3GKNPt!o@*"1X$!&PE-?$iG-I:du&fsr7%*HO[:Ep5oC?,g;J=ZrI-;b(H
%EEsI.bqYL?@WIid:e>$6SLO4d5F0_G,7[Mtd+(85:fkD_83tYSXuG6YGU_ZIMB'9mep>F\\fi?\9e*r@46[_ms3`t)!_64E*q2YI
%C^OIABK-%M[8k_)J?`OS]'H<BlFQ9FF9[1oSeOfFZspsBUPli@djQ4`#U;3.G%JcrJOJN8AuS^f](;L@!Js'Vd#>LBa^Xm?dP_0$
%;HrET+&'ZJn;FP@Fib\Y![euKWDee4]nt2HS42%TJO).3^a-:h(Du4t2VAoUk`OiFROcZ_"ToRnkcq't&)qi$VbT*1eLOqW>S,RX
%U4R-%HCcPm4-QO^L3Ak:Fr70C66.hkX"lt6\DB8G4NLHF<)ou+PNajuE)N`1[XfToST4m5DM9*f=]HnI6.$r\`$XfX\IGhY&#r3?
%Z&&rBD69]qogG2,g's@KlUe4ZB6btc`9>$0-2!@m5us[0eYST5C1#Kb%l<8an(4BnJ92@i<d[RkSI#?pO^on[9FW-1g'Yg1l)2AH
%$F^o[G)_G?bYgR")$?UVn,a'>r]<#`bq\i5lRHC!#<I]_K;O5'[4MfSAlJ"7*cJ)Yq@D#;WnB\(iZZRnVVfBC4e31_-6,pa![g^n
%47O@:WtKV/A3i`cH<=C2j_T^r[.2>h)A#aV!Xou5:XqpuU`Pe/rS.W,H*5bNaa((i(<J;DY"=2>LK5kHE.PHmcJXD?,D#/`KJ<O6
%N]c9kd:i[oj]]qi33?XVG[#r#%mUW+GS8=HO(2'9GX4Hkd==J)b2bZB5#qtZ-AZbT,pYH)cbNIbMo9tk#E]7N/o/<Z2*1ZP7%'Pb
%L3uDQ`XX/N_;u0=Jr1jS)q8h2V35hN4u:a(J8%q&3/puF0FBZ"L>0CQ,9:)l_<Hcd,$rLCab%)iZDt#2B`)rnM+n'r=l'LSFK.14
%9k'$dr(<?4%qAW_atKdS$;oR.3'F?llK*Q+'\uUqif:Ue(-4E2ZF^=R(V3M"4j?HTpV;uu>)*=8B9h]E?p-6II4@u%&VRokZrEJ@
%*U:Ni;)aUHY<]a4/T(X;+q=)7HJUS8G/d.lc'E[%T^bXI1H3-CdbN.dA;,[>?BU.0\6]P#0YG6#\h&+>#0G"##9:oj"-G@E#'u$Y
%\j[/VY_r=*G?bi<R/j3VXKp@=$tK1]"PG-o)g#L8W+)W!b3Q='\Ba1AE"FHPs!HpC>)aPToTJOWjtj.HE8AV1+1@n;7Os'[(!SUa
%r:[tQO,",WC*aE<'W^Rqj$RFB=?_>S\OPR'RjS5n_F`7-bKuB_:8W$E-JMsp3_em[JTq2VL%<3O'Fca*l2]\.%_j\[)cTq+fU14u
%O'EQ^"OHUX%G3AY;)IJk=\+QN`^SDuVGOpX;38)u!29HPNK^VeAjtF'%oLCU>p%J[jDW1I4VXt)4[bPCT9:Z]bRr!.5+gm/=b>1V
%BVW4_.uo[k8j3C/<R!#MQ6gLRK?Fr4!Rl7_^r-8j(5s(@h;`ouSqATm;RT",eQnLJ`-&u-K8o6,`Tq8=+9Cdn6ZW^C'U;YCZ`q#-
%Dn$17lZt+[?Hnb3X;4-L,H37p16/Y1<Bc2Wb*"dQVEc8+N,<'Ds.hc*OJg/]8o`qQPm5b>Z@\6-OJG`K<Gjo9W"`#=eM)/-V*I7a
%8V\IZ&QQ^Xc;?\LkCa=a'NH3L;Mr:$oI-'aTeV\05"@^hR1osmf:YC2c043)Y4QfOer-QN$.D>)g<+hpQ7'Q:.d[R-2nkQf-I_"-
%q'!jn#S?5c*"P`l;d#g71hZrbTo&Y']L9VFdtSTIl#u3$:h1%O=fXR9o[.pfU<sXL)f?&2Xd\%-6qWhO,[Y-!bH2!dF)R8ZFIKJi
%bYg(*gj)FrdV`?dd'@nZRUnASrD>qEn@1)UK%\`_J!LgK!<f((C'QT[bVmfr"c+2E<S&@"KuA*M<+;*-;It^jq2$KSEQpqQmN!Mb
%$(ii;R$F,Tf`4?>KDk;T?s2?FP-tM#'7)o<N!<@f-Ijq2^m5!@Q;._f(Z6]7`XB";Ob9eW?s8O25`0JqAC!/idP)L'9=/`Z8e.G/
%SgAZR_,Z@Z;!RmaLB`?@2%:0iEfQ:*?q"cm#GOP:Kn/nQ.GeO.Xt5]Ld\o9A<7qX]Dit,/i*.?Unrr'O&FX@2q7nOT()b^Arp7-W
%Knb(uN"YAS:nKi\OrI7L!?u3>:t$*u9FPAC,?c+6-PA6h]FK51[]Z)&K/C:pXVp7Mo'Y/_DIpl)a,sb\be)D5JKR:qP\^=&Od]23
%!*4p@2W8N2F_UsgLsk"G@@e\33=hEk0/3^*Qdl_m]A]0=0kF'P%QGM@Mh7ggi&Dup4et]_9skHk6uAWs<.nY8V8t^C[HM(=YS-#M
%A7hA@>M+5+MZH42CQOgOi8'34BHfe#V`'[R('YY4&&`F&4gAjkViGtZ'M'aM!/@\qN2j\*Q(V5%1.A4e1Q=ra&8ob":;lH*89,\h
%$DPu6!k2U0,4@c0cal;[#J:*uEt>p)l#\k4JquOF8rG(q_%R,7FV7S6,7IHhNH5K%F;jU%:Q]ih*(BYT@A^GkD?erR3EZt_4g1"&
%%7C:?BbFI21+rpAUtb*LXY$Ra@p&"ucR!hA6Ub]@'HOMdCTGGMMGf^=!YIcVD2uYFDHmgU`9UC[(5Su^.N7:qn;\!pY'q:2"clc'
%pFu)SAE4.e.=`]#Lp1-.T(/U]2mk?%^oCh;Zq_nYFj;cVOngA%@SH!uD4?C'iBkg`e]/SMq8sB6!)8d!20]GgAHKkW!830`H#T>6
%H8^('U]YdA/L%;qcPB+i@[76UA_W[i:LL#&ZfjI7Vjc!_;2V5/Z>P#!b(i"B,XG]^kh_Ca8^'/+3XP9[&ET99+]);MpU,-@)s;$U
%["YK$]G<?gCq`2i,2Wf4/]_[D_D:"6dEX#pF`6cI@2po)ip#79^lq2e?HY9>>3TdR6&%G7D'_BL5i/R*g4KIaGp_.T0YKa]L4L-$
%H39Ncf@`p+(!4HmqK<>q819llN[!M[*^oIS@a\[tp]uKQ(.]d4#Da?nG'1tf4i<Ko'PB#`]QA!'"IN;9;T[aLJLG6o"Ap^Pj2dlD
%Hr7Y[;[)4F+_\KH6.>o';IFWt8GQt-4KTMB?@m'oCaRYk.m2s9S)jrLeP-(iE[J(`UR8$NNa%_(?p(^d"#1+qo@/Sp9F@SNH&B6N
%\ujl[!+1^f@MhA=ll9Afl8,2^-U8s)r>k`B&hFYZU$DMI_o:K\2]QG/A)1n&8l`D534CXC%@T&g?j;aOO\+V3*)F:AKqZjFdc=$p
%Al]AH'KL@u/FFASgNBjbR<:Rtm2'$*%@XqB^u^B&FP'($83_Of:Q>97%ne3QG(s/b=LX/<2"p%eQt+$YU2Vh``sS(3i2B&YJ>eR)
%BcLX4d9h0lc76,!W/kGucQp&G+?u!$&mrm]XiK]]h^22c%#pEV*gVr[g-u(_=,oq,h!)@2NhJMt(g=(1F`HRSk,IBHookS_V*FSi
%[i"<4moIFU*OeP'WdGCHKnNfSYcUlLQ:YWK2b;@_#2lH,CXD\XTJ;R&?T;/78YjE1aKu`"JVdP<^3e\P$P4,sEq<Z$*hprD0$(JL
%Q59o$188Xe6tnrYnIr+FrZUWjN%=(T-X/#cPkJr)o@3;jUgon=+s#K,ZNfl=N]b!eJlH(rUup?>UA;^##-ubJYpLUU[T2rB9'`^:
%g$rlka0t11QNN+(N_.tj_]<(cd:2Bt1r]`o+j$7Drf^/2QHZCK]^@O*`LTc#)F?F-PQ(W-HDRjmGt+ri1B?aL9^lZcVUkt5J7&m<
%MejLX5gO9XTrJ'f15V6DR)+s1\`Q.(S)=V<Gq.CBK:3!//Z\qRC1X,d#(njtZ0#RXP'nMFNWuMg"W?r>f6`[7D(+'iEC)EXH!kH,
%U>.FiJT5'e6.f\3R3,Jo<[<IbOJU/'+r[737/@Dq6?\MLL-_toj!]<"'C1"4V8,-Hk"5FZ`<((9#WU/@IT-_b`f.GREm]Au"cuca
%Or!NhF'1;/F2f_n=dq^;!okta@J.%)Dhqjoh[,eh/qGj7"=Lb3rf_BOMd*uu2*dgO]<Z_!A$.rf@@dPh54"ZiJjXLr0sld\:iF'.
%K>W_G`"&]C"+s#X+X(A'S=sgs"/iITFo%3<bp=tqN;^\ilTY[:N_)$-T;C!/K!E38k8/]CZ;G,b@I>HR78ltbX",*N!OF=+V?(pX
%$DN9C*iam`_2o%]LfE]&Xrk[Q'R29/KJ;gd'/SR_45aWaEXDJMBh&=pJ5Qu`#R+:@agSf$bn,.PL1mffOPkF!'q8/CFsItCP(H:;
%eS6'/=s9&hH$in'W(mBF1Fs\;LsF]]:`I-H!rX!FU%1a<lXluf2j"blCXa4*+FXB5"26W$2ek=88eO6X.n5a;_(5'k)8;OJEnr-g
%KcIW14[XmY9I4UIjPl>7:V8=3D3[Z\B;uA\=Aj`=iM/-%UobP&d=)I<&\@aG7%oXY(=)XkU"194$>1;G0^IGi/hVQ*e^+TK+JmHp
%W(.GJe`bfQ+A7jiMME<si&dkfTZ]m#[Y"hc**q,3)6dZJ2/$[(\ct,@9):tA<2u*RgC*0SZP4u$7#1tL-^('4-.4bOD^lU'ooObt
%NW/p@Ct#G#G8LlE;3?7oXAL9l_`YmGcuLD?7@C$,ilPA@V=)j&!U/+8kt!Q\!n''8;Q>][#)*X6L7KDiX/)cq2N6b]Y!"Wk*]B\m
%VRq@])eM$V(8;SM\d*#8_kW-FQq_h:HuU6-%K]l+)[hMuqdJ'>!9B;.bn%S7ZaG#s0#km]qU]rf(T+0nd/rVC'.KqkBH9AB2DJ&A
%1\@=kr1>ummhrYjQmFE)TuaJ2h*hdN$5hk[f9=X1Qq?<gAnCd`s'9,JHLHGALc_[T@_65NqI$aY1c&8!]k\&$9X`?'0soZ2eZB7d
%f^@5\=mEb;%*`Usd5jD.2JOs8S73i"-/VD`#]uq8MaE4jTiQ]Bf3:P`W%(1F(*?TqNJ%e9Z4Il$9U(qD1\f7.nX\%N=N]J=NM2cR
%gbh,*\n4I:KG&FXIt:J^EdAjanjID93(-f/J>pDB+BTc/]8!#JM,J:nn<DtUM[>";AN4Bb(6$F?*BYe<3="S].LSuiLg2^'"]&ll
%!,078:fO:68*JYVps7DAf&7@&0dU32OKd,4_cBTb5#XIV-,c$_=oRA69-_Osif.]kZYTF4g;_I,n#fL"/e'cKo+ZI?:SKCH^p"C2
%Z!t^$"?l?Gb^FZ5(.R:K5YGTW<';F]>chjT&?2O0]M;&:LG:o6]U,HCM/m8N!fgubGSk[,Q-QP#OY#H'eTk6-l;35(TS2l=Ob5#%
%GA=M\q)4sm0ManILE%$q*#4DPMJ/$.6]MTRNXFF!$N5tl,**33Nf*:d%$Ze\\ISr68#65UV%Z=o--!t!7jW.EV-ZV;ECQdW`[5[0
%P@gRf?)*QpUXF'jP%LJ0PbV-7UQUjOZCPKHP[b?DUXH]J'#UJBbTde=UU'EbP3?D]nY=P/A$b^#MBGBR/rV93(fa<c[Kp>AXineK
%OV,P[UWQ\.(;u.]XVk!31UbkG9Kgk'18HYt9VVri7b0AT.3KR.pGJgsCfDS3a9&Y%"aabEm)IQ@N@OiF=g0ib6ul7@j-Ub,0t!<W
%9-f:-:.&mnE:rM[3nV9+g/58gA#`U#f"mBHW#\a)41]BW<4VV!_WaoDfOG;e8(FZ$WA5PqY!/lTI<<1!Qo9Lm`VlRc"@b6gN,B:G
%eXeLqWFAhR`i)@fZ0`F(g1!N/Z]&XW):`+N[Ol)j2q"WOU/C;KA,;Y6FsDu]!ZT\$26$t!<'/dc-Ep@lGGA@(7Q'(_C?$8fHoJ(/
%Eb)61I[uLo)C<FH>`NRT*74mM[]a^Fn+!?Ri=X>T@sXM4ocB.sFVk5"0FH9;'KX/l:kt/E:SXSG?td].#Y8[ALmenZTgEj++Nsl-
%X<$83>2HSX:+l`*:R8NN@r\/2+A.X1VAb//2%hKU&EkDkqB/&H.&<1aLbWD4B6NH-^c"mL`WAEtJ3k/BBf/B32unaH:_M"L&@f]$
%DCeK$.)6:N$`p0=2nbX+UB!6m6Q_:S//eV=1^ZTa,kTIqY['L`)hjC*+k[cp[F[30_3LIH`-\?$UQ0uJ)[67#$:o+M,iL.j_dSM>
%h74+WErcho&?fpro%PQ$\Ot0_KG[`.+q6@7ElYlaHm]RGJ8/.bEYKtP)9H,\jL2JSa5Z-=5h[0.ff'\"FW>Mg#Ro:HBWgA\=@^1i
%Nrir8"nOh`0R>:oo,-in;2G+EYkppb!>p[L5AHY@W$,iL`i4rcb;O[8g>HXjApr0jqrC"]KV$JZiIYT%>E!iN]q1`WbYi!-EcOPV
%#>_5P"P*qeE/!#&V!]FsLFum8U(!E25#%KlQK$&mIBTNi%^OT@\iNJE.NY+qPn!kj:EYN4UaG.]js9u7>Z"`s\n2:ceX;qJK5quY
%6K&J3cIrdkQm]0*3.J3J#-#HR'qAsaR*`^P6"&n%8k<dBqX#b.:!!IsP0n>5`gGhdX#!8S<)-?j0S6(@ps?P2l.j@jaWh$E%urCd
%3>?bgGi]NIRR`<`hOPT?!c9tWDK+:M&SRqoWJqb<[QA(Pc#i##R;l_N7LcjF1Fd&8S?u/Rc,Rt!)`;SOjIESso=.:bd2k0+HdlTp
%On6(WR<3dT5(#"F$HU_e=Q+S1ZKg6jVF^+neFFuNi/&sI^9)E\`[6<b_^n7-CE9C-G-%NE2>'?cI4%JlNtRL'+9WRlAKrUQ7dZIm
%b_:,[ZiImH8gNgS@s:U@(^<_V_BuB"J:N?12j0"SM'-=K'2$lL`)a9306!^Ko7k"EXHS>Uf?GZ)(TJ0'f#afZ#o"3p5lPci.*O?b
%YW]NQ-kWl/bS_H`+KB\V,`E+/;`W5I?t:7;Ll`7J*OkY9Q*TY%0U0q],?;97d!#.?Ll*CE%q^)PSrgPsJJC?D),d-%96_DD7#X^n
%%QPV7bIH[_-km\?hXYE:/;FsA)(Ig(l,4)h(mjNF[(Wt5Q@NeS%/+>tgdB^D;e;Of*(@SY!kXG\Q.3N6gMtUNN[\+(6-$#LIb(3"
%W_<0`.lk0=/7MS!g_1ApP?>bU4@S+^VUSE)`m21L<94/<+@a8"j859+QPM<GE8@fWbYhubjF5Q9RE&gC?"2#^PgYG"*fh::l@Qj`
%.]^e(rZ`;BM7p0",I_;94V!*,7Ga.K&hOE7UP[H;U1%baI@us\%Mj-f(iO6%RPR,=."@N$*2([q2f.ej-I"5;O`_'5Pn#pV-qaTW
%5P7E)r/R.oj!/Ja:`XK(ppWYep^BP[p,Cn82X0TmaA^,@C:h*V*pYs$6O^Wn/.?8-)a-KS=%c7<5e@Bj]PP7d&JTJ&VkP8!Al:gO
%i@48f-e%ETUh>C:4nUXX%Maj8PNG_uPs`f*)_f(k];->V7'bSfDbC`FK,f#mX6T*md-PJF"#(0%3cAdJj+SiL.Wek&f+ptB\eI-5
%k/QbCpc;DoNa>l,#*eL1aAQR)J-dq;NlSlM'QR28s#E$L9H9&]#b/hkd`B!0V4q0XWK%.ED<.?kZkXr'?GemJ][nV:=QGj]-0fg@
%24QJgm(@rLVF])-BrqftE\,4)Pb+g%FTj?VYJFn!jjM?9&lgBC+c\U'a\cWulIdBE3<?5_'*Q!FnT*-G-=^-IH.m6"k/=dqER["g
%(<MIISVJ!&EGpKM2)pu$Nd!AHMqdDff@dcepKHfNoWu%'-<L>f('[-LnFu-C9P0ZB8CaErC&?kE0g'ULP!L\Hp6?\="b.puS3b^,
%0[f*PTfZr0@rZZR@U<E>BN'#00q0C5T8<[R-JBajo7hPUGZR&M:dn"S!q2tEb<TX:BIR>i<&bf[q*W;.,gem<PbVUZVj\%c,gNA?
%AVL+B7BT7UpnUqr[0$5&W3D'uPl*kl?R\CYUBFJBWj?bHfh-2H:LY=)-uog=(+UjHcj(abD?eBl>A02]CnUFehAhqUjXXhCO_uiQ
%OY'";"M8lrNm'!ao@3;:Q4bpE9<>HfbLeZF$qU+j!I''r\gr1%(8agh-g&LQM'<\Ic?5FkhB(h^H&B8t\ig'`AhN+sdr5TC9Ms:5
%,k?QMe$Ubs4RS`*:>*<KPW;TNJ66$-a>(n9jLj\PU9Eegi;5U[ZN-+oFfl.ud4.u$PM58\Z61,?/87a>:/AMO+[da.b&T_"!MMEW
%rO![b@O\UCq&o5f=%Qobe.\+O@`UF,fMSZk?HeOC6&coH*gI-tSS9)N#Wn,()T0GZrK]p>bRO0nnZLmdBV?W6JIYFT#0[,V^k>&2
%o+c-ZeDW6]*FB8g-b:mH`p%N9d]f+f.IDFPN6S0gn(=cr/VaX<jS`JX,4>s6+C/I/F2F>XhJ5MP7%t+KPDo4=i0?7kN@Inhq_h\"
%)*uZ\82#8/"]bL<mh;"/R&A#PXh-fkD:KKe^q7ma_ilLum#E(=EuA^C\R;/4jpdpfD:k-0P[t@/McX1Ei.1ahSXWg'Jr(h.KE7'-
%9pS6*df<#@_.aE&/lV"o#9k11/^%I`F*JumBlS/?)-WJ?KglcB9[;fel_R7^*cgib@AiDBrddV$>sW-W_%.GpWKWT63C)d2FA:?q
%2>&Ujd2i#ck[H+<d+&!^cB!1>PS:kOKSPNS-3fT24t]04RBHE/Agt$G0Vm,sV2b[Sj+<.TBFb!:TjZf^F^\RZd)mgE-PDQakAcqA
%bp+sAQ\mV"]de.9Tn&Sr'fR'.oTh[e/n:56kQ;r,eHuukcfphtFAT@=j%p:699Too8]kb&QSL,&ZUs*mU2;qjlHlggWtCK>cO,Nl
%B,r>.MrJ>2VNKG5,Z6L"gqB@.nD\;nO:E/P"Mh%VDS&0060bJ)FhUO03m=$mOX$+/3UQU7N=$M?ep>B/7A*BqAI%_=UjBm''>9,9
%1+kL'@^Q'h+CDjB"]Q!cG_tq"2W%&g[GE1SZUUegM]VX>Dk0ef8:.0fN'X$Zmq%)*Ltc%_B*I.-h"BK#\!T?RHt(gBD-%at[g:3@
%guG[SPr'U-2k_2Q832CA:VhAeZP6QG'"8gHELhaa>_31!f6YhYQFL$(9TLE<l#:0gq7<l-&RJN'KadMdGu$2&k[BcoL/Ul8^CrO<
%?)"a5W_&ag#h,6FBV.EgS;eujPVB2;k[<P22Ueei]Z8Zm!(Q!%g8$>;/<tqTN!=`/;Hh(f9-?7!7(8!;mU;Dp?bCmW.ON#GmE0D\
%67WABfEJJ%8V35d2RJ^>ZkVg'+co=:/=(J!-+=N]"P[RIFIH^Z%7g&R_YHW6HDiWq_NOgER3\%JPiFIA;retmWgldi):am6oe][/
%?qBEU&pr'6aV$,K+ukAM7S%Lf5n8I5[K@Q-=$)7q$O[6ZFgWep.oHI#"jW#_hafD"[2<;b8?7aODNeHmJ9;Uciq-i7HOSKErF>uq
%\q=dcVoUq[=Z*i0T3Cg=9@IuB*E,a5@GYAW\g%ZQ\teIo2[XgE)kW<]ls54aQ;0FQ;(qE?T_ti'ZeeiUBfm"(%1+Fl6"COn0f@^^
%Z2H8+BP.tC8R":H2?f)\[XN.)!#B-6Sd%KU>YdX,?H]k@^ekZV,HO*;Z(kaPD$N0?grqTg<0Z$7=TsJ':m"Fr/\"t\B[;Ec>7r<1
%R&<\cC/m.R!034u$Y_Wn.RkCD0#U;=\;El`B7P5(-:RuE\Kn<<Oht_jdgdBDgWKg>ML6'FWob'SA'u*``oX9)\g;1]UfSR)E;)HP
%8oE0:WlkV\F0,M0jYE:c%Old!OoDOmZn]4RD@[aZ#*B%aA.pT[B>e9=Y)9JorjoI=G^'PS;NWo<0Nuk*RP]/=#\/HJghhS=-Kl4-
%2jfV%gS'BhW%,Vs"]=5h`WmNaBZEXHrEu3@mmr]f;U(epa2RGb@l[a]Wh\XLjdI^1!K7s9EPcHJ*1cG:9LOO_UahUfiQ8+h(_)*h
%'B(W@*Ua`-:'`V%0\9JQY^ra8,mJmd9kkSk(:?bcU-C'.&1IS^<lX4/a-X2VTkfu!=c0;uUo8tmUHMAH+&0XBQP'D3J]XC7$37u"
%`QB'%fGpA<Fr`sN%hpha!T:09,_gU0GX$G_olP*,PjD9-[ZQH$m);.r1_u?j*Q"1hgUhNZ1N*BU_m=DS:#R*McZdlLi%ZI2OU?^e
%e7Opa`Y;>X)!5&QCZ%e<""m:\X_jMUea`.qi8(pUKA!/D,=fD-)A\BZlDah"X]?'hlbaR2,4A'o=^b4%la.?3hG[3\d7%i\^8pt@
%>fh"uS1a%gmO%8-,P%@9Q.JE.;3NE-6&n"OSOAuU*:2I(2I,0&\K1b;Sg9u%>(C&.euPIe4Af]smYEI+EH4hXG_F#Q)!%[V]gA]C
%AL_VO6h@'G15*Ujn%]+">FA_J%sC]?MtW?eH`bkLH:'``"/s"J.'.SM9@PEu:iS>.UJ+upr!bCq)(-K`N0:C)@rSqq9*%@?ogBW]
%d-80Bi<iR&I=ZoPgeT1p?JcnSQA5;;2C;A7aMF_GRY*/6X<TQqZ:7T8It;`JMLlC=!dEcASlF6jQV&:iSdIgL;apdPN8^br]oolL
%]uX(/^"*d"K.BCbh=T2.f)_dnD5o]JDUo<%%XH7p_)t0CB;FArBPm^QW@%a&#"n?t#uK3dhGg\5)X5pT4j;$^qC$nIUp7C`H0TWM
%8rlX$knA<njpV/\[(1U@HH6@SI\+9I@9S9VOE3P,*no4"9B)`sV1rok<><(Kr^nW^DAb/i.?VHm<)661NCKrF%ntM%>\_<D0Xb=d
%NB+dO\)\8rX'7#*E?kZTa4)nF,03eCH$C#PNs,I.iX[i1@I%QV/J<W1X%>*I5$c9u_5%9YOJg0Hc#\\ED%*R.;^JYC\e)Efp52A+
%d:bW]Y[/HGh%e<K=0>@K4_DBi;c3%4$"E?G97_.PqAL*,,LHnDne&CYH;IfpT@ij*AYW"#f6+YGju+joU6LWZGJcg[>0L%lLhOa%
%N=o'!U`>@qs8I-f>u($k#e5US"?36<]0l(.U[qc&UW4<>]h(W1YaBBgBT[$OjJN5?a[DWWV2W9CIR"3k^dt%liSEF#"bKn.A!?\D
%=5')FN)pDZ"><)JGp[4o=9Fd@G%3n42q"/o6(Xg\R)G(R:oK)UYcYF"\iSMbOA0#E\64oJFM=p2ha_BO%rp;AUS]Tq2SPG3Kn((R
%.C*j?.Wg[Yl#[Y@[$G3gclpcHOb%Y"WH*_%b^^2!Y9cLt^*XlhK8=2;C(ZWg#,35>jaZkC?A)l4BPE-0FHT+BjTdg!f8$hH)H"[u
%98'<DE>fiRI[n]4k.Q$m_eU.AS:$Aq'sm)7a+i1c\JulZ)Er.)0V'="i^r@emHf*&Dm'jU]4Id@&q?(<n0Go.)eB)$#_g?Rru`Yg
%RRG+=&Cr\ddPD<UYFecK-B<oZ1#/57mD\BjGQs.4&oKk6\K3ec1CHkXOUrC:bAPQ*'1g`M1Q`/-7+I'J4r]Y3;3P"AQW*4s4CXkg
%OBpq$%n#>rLW81'S:GpA"H%AiVoX5(ia:=0+62YoXI-F4U]oma4-KqY<$suL/Q]WBaGblneQo0D3<32rHsmbV'VsBk6ek)$YlM<g
%,\dd30T@S3pT?tcUJija(-mN;mO+`hV/YhPaMKrGTqgp%f-h\m/-X>@?cipf8)UK=IV,ePT)mQ-9#*RV!^akXb([W:9<.H+ad$=$
%kgsM[mm37#c5S!ZP*c@!G/UId=rF/f/)Fc9>_D.U[@64&pR9C+;apWiP&Or?L?A;dCVRr!FKsn>R&.kb`iS5&b64f+3_;EkZVg+D
%VIAM'TbJg[0=7a3).tF9&]McU`;KXBh:qX.dMqqOmfgpZQo>69?o.3Up=&/h"Qoj!E0,ci@gst)`XV6oU>S(q+j$5KgFn&qAp77[
%k@2]W;R.ue82Hc"Fa2PLZ0M@nLb#$I0Q][^U!M`M[,o%afm8ji)jJ]jW8jUegDn902q;[@I,\OOgZ9>cF2_F@Wjb-HCt-0?h2UZZ
%I3(7MD]>db_AR\acL/OWGRp])2XN"-\U)"0/27"84D:JjFHpY+g00!VIRH'aL"@Rt9(J/\XLM-3HBkEIPk:Vk$KVqZN5481jfBOT
%:_$2YXh$NbAfV(edg`:2^55+*K!_U[$N=&"Z=\IU]\G+8(p)\_@"1(i[R+\G2Mp?9KVf-^n/_n8L5lM.0&;/helY1(5Os(q2>5b+
%7e+[N*RY63/[MLaRs:#VP'&8p5<3&mOl\HB\e1Kq+26(9$dn^Ob"Lf_!\:)ASf45o]YC.rc.79`jb[h`0"?[P&L.`t+K.uMi&K3A
%Lhc!K9MgQuN[K,4^%=m'-)uV0@@kMKVmmrO4P3gDg2j$$"7JmXS]7=Jet!-(=t8WM5o!@S/6^n`Y(lO#i[VB'N5hA:L_7,b-m7\b
%"XfV%PBqaIeqL7i29O,Ob!1MN@/&0dIf"1hkF@QsQF*?IXK<+AA^Eoq]-rQ.P_e.+6;.IK-@$umbEZHW)POH.U_lg+53G4a!f=W]
%6E6aJieD[Or(8-cFtes4WiVM$XLjD]gDH&<RcTdf2(FNERg&<M&&1glVE8rHQFB_[#j2rN)N6?SQuASVH**E#_t-*f=tr1Mc#;dR
%jF41*W"Z3&Z5KY;DFf!47dmqh9GF@(67:ApWu.Wr;D.B<f9MtR,X3dFNMRhg/8BbQ@Ph7M3?Of)$]+#$<'rkiR=d9#8(l6C[)GX*
%P$Lk>-#*F\Jl/n,B!T02W"D\<0Nu%2h4a;=WiJr]h-?H#kKmiMe+,rj8mbsCqJ(lNJ=7\4,V3raSY2;YQuXV%2lVXR5;s2rh2k7m
%6j8l10?UQlD8fRr^;39Ok_W[5JgJ>$g`0=[7d[@Lh8'VH>S^M!K@U90>+osS1]f)If)^.?kc_U.94D'*FACR^JgE.VAOm\LN3aD_
%jR;3\dUfLB-I%Q=`("=\&i<WjgNr,1V0Y]b>9DD,FE:quFmUJT/YNX4-s&5$GCqNsd:PD8/o,c&=M$0;;@@Y:Nc%Pb;Vqo)Mfkl\
%[HDiRNQpu#DnrOK)665ZR\tKT'pcE;nb)J1l$>G^kPf>e7<G_T0Z\HNe+6+;jV.5_O:S[;.bA(^<4D20<$V-[cZugh:WD%Ij]XdB
%N<OMbU`0(X[RN3W#BMei1s0?K$QTD5?LA$<YaEEeK,C9oHLk[tQO/'uL?@J?27YY](>*j1*L=+ilo_M/5ns+^c32``fAgJ)lc>(q
%bc!`.Ff&bb'<0.%Ji]//HHb'H-ecqQfaLo-7^UHArK\dSc3L,3@%%FB^:I;#a]-%5a"c,s2\-C("Jp&`6a&7YYp)375RH'.SKWhO
%FJ?SKg);u(\0<Hnaee6RpZ&gE2Ll&ufBrj5G6*NHMV5=mNi"7\aHX$tC0cO;D_gNn!^C:pQ\>a&0(*ocWc=g4W_6YTjclq?))nAo
%Pl\7j69`^2<MVpn)jO[B*-CJX_[hnkB.hWT\DDp782YGUde]D+GO;VNC'J\5?f&;eRBl$W*eE',ZfECdFa9p<B"G'h($nh2Aq)[G
%X+!0Dggb?*gpT&*G7'k!Q;2gm5pRq[Rl:UN<O\Rp7/2hN4t529qn/>_T.E$%QWTaZs#J/*+U,Ge7AU<I/H7=WK&*,jW9Q;S\'Z6!
%&E[lkjZQF>,>arQAFU)5F=XX&-^iPXaa9"#^^3fSc*@V^QINId[sUWXpMt!F>1!pGOj,%V#%UTSTOu)3F&EqsM:Ml&P@A7uA%H/_
%a1hYKFOi<:kZm40s$pO2.1%;<c`Zsuj5"0_%:HKDN&@m/VZ-k(#;3!u"8ah/Ds1`)$+->r'"[eK1Nmu@d9<mND.5Fn1pWS[a`+$n
%1p+>2/Mo.s7+74]Nd\<W`n?7:T!?081&')OfTd!^/qc`ddBX4&I&sdo`]46R!Mu-Ic3#olLk\gb%nLOj[^a"RQ)M:-BE]e&!UK$:
%Z/?^F87hd2&6MG>m`V9>>\.<iedl-V:#Y,oma,V!5$.;EB1JRMBBWU:F7qhg0ZI6*9RW*O/7\)upd?Jc`#qgBI*,4GAYrbllLOn@
%masHCgHg-q`Fp-1fHTA,PVe4HIunQ,XhmTTn1P"!lLk_?_`$Vg+k=Y2LWugg;@WiGKfUG]`lt2D_%2]ACRNinLFd2(="st+DZ2nt
%"O3<2b>*XTF[5M85^2![=RRJ;9YiXiJS3>=MHpYE/Hn`NV7cZrelYO1(tTaneg`3+FE'!@E5G@1]+d>_S#p^%X3!N(F<^.4p^f"e
%!u7%8Cr?f3d^pEY4Gb<Zb*7oe,$tPBJh;VF)I\+Nl_HK50<:HRC+L-mBTj7V&WUDn;]O(p/X.ObX2-CHj9.$=d`?oRA+.B9A*9#J
%D[lNj9G-j,d_3dNcFS^lj@3jc6#pRI$R#rLo"TQ<K*%^3iL4`aOD=![S1FCl3)6q8]^@\)D+BYRHITOo@LpU=hWYWtU0Bb;>mII9
%k06N20F*@cZgqh%MUN*8L(8K9__2N#f,#@b<JG<:7:dqCA9S`%:[O=/ruelL.R+@?P0<:Q-rMe2@G-R;`dNZFh3FcWMZr:Yb*^(;
%6QE5"QjhD(,&@RdeQ:#MHd5U=Xk`K_+!U'f^iYXj>"I72k%7:'NRUYTqQWlD%(Q?A#E@AH3;)+2J'O5@+6s9EptmKem]-a?B=Ji$
%:qPLS,`@3O/UsN^d_H!%\!-puEI_B.8c4=5U.%;B)Ytk^&rK_o>?8hG%'ma?&F+G2,93kX]8H`kOW.fWB[if#b$5^herT'U*@^9D
%5Ad5k%P/_ONkWFq3FXC2.YeaH[O*-9o<qtr/>Y[S`K"8X6M.',[uSm^r-)YNZ,91?Q'fWF^.PjP`#8G\nBh<^Z2@4'\!$F:XLN./
%KBVCP=#Ma+RjE"IA#ce\P.(_:=L"KD.V)jsA?dsP2gh@-c2tM!H]dc>8s>rRM2-u%.<e.ZTgP9:X9=Y/i(N9lP7C)hBXZbbHm0$u
%].$H-CN:dA@9H#VZ9uecm)N(8?`[t=J.K]:BGJb?js[cF,Z/nfb%hF.k?_K7,+Vf.1"5>Ed:pk)SsENP2<]-9q_?XR&(.sgI$Hg3
%<pUE-8)eR9I1?fM:)@P44*B.YXl/:]R:r18iA]Vt*iUkt*.0uJ1Nq7u-gfTt%G$tS@\6*;<ACj&mcJT]$Yp;`:NPY@ICS^Vpja-B
%mBH7nWj+3;WR_6=:#(PC/IRD`':nof02:]B^2J/=TGiU<idEs3gRW[\DIpMp[KVWugMN=4q[<+,Wj2":_4j?A+:]h"2MqB_"fEO1
%b85"TRZC/T+]`TX@H92@)&;I?*P:<RA0j22nXOTWka%O;6:PrnS_I3PCGn:`&O2eF1=qI9Q)9:,`P@qEj9&"&A4k`oBj[<H82^$:
%\uS=rGY7K3kYbtaT>4bsd4S6P-`>e9EH2sA%Vn##'>2_//WBLSS"ZWUJT20QrKq?d#ScW_5-`GrR!=l,`0KTTB*m51V5b^iAk_QS
%lmA19`V6,HPV5I(\LN16FU7\Y82YF6A"$n`F0??rH'Jm[$pAr-5(#3.lo>fkUK`$)CP+V)D[hC@a\nT^+Co((=`u6k)A)CJ9[1gD
%d2:>]Q.WK*p$'N4T:WEW!q0GXR7q>$4.16>nYt+:).fbBoV>f)OHj>.l'>I><V_6DL^cI`[UPCneZoXa"TsD13Qh#)Wj1_K/m:k+
%n-XfE]L#]b(?^O=#OR9n^Yj=S%O8Kl1\\tq>9eZHD!TA\Yo8_6VYfGa)c@+cBSIjI+crUenm>tTD@15"?lN+e@&A+rM1V&ZeERm(
%WPRE,LZRlAao-a)i0;H,#/-6oLhrcHM^5Phh&=U*QEAN`%/@b,2f.-O&+u`>5%ipAb`eLe!HtRG';Ol$Q->%uT<ocL5]U/8K>8:G
%)2;,XaLr3!@]L<hL8-Y0B$WJ.]@STniF.3gn&:I*r)</>D$hC&$>OY-\_GD!$s*j)4%JA;FfmXE\md?!;NRp*P?K0T4&&f-fT#-%
%09AYEU9g(u#=^m!7SKFM[%&,9dn%mNHta21B#W^qWQ#NX`R_i3g\0l?QgMb6`kG:Ce>U1=XjC,e7.,F2q)$`!D4IKR]neC4IP'#J
%,k*epYKHTYbr[HL^>K=WenXFBA#cf[K#"o)7!PD'QRJ*QZEGpf5J;%N[FSEt^:EsaiF+eUY+nHZBl'9bh2lC8Pf^?.jDOTY?Y,$B
%bfX49gY?814FM0c`2R9IR;tLu.*7ltNp&oRa,S37C&fT[MI+mQM4?E<3(QbA&_&/1ia-%GGGoa^0'cUdB7D*hR]c&,NN'q3GYY#!
%Nf<<KK=G1J,s7OJ3\W5-`tUTHlPfkbNYrU[b#AW!A!21Con9<T=#["'hOVC5@)sk]Jk>9GBfBb1ls2_2P-"uM`Sgg@%*E?6s'Eln
%dQ`9U=bKs;UcWUu,n175.--r*5$HP"g1W*sa,K[d=rQcB0c&G!/RGYaI[f`DFKZNOK99ok%1Y@-hlRms@3o1)fQYCI\'X0_0X/J;
%a-JJ=kpL4T=?iZ$4%[AnoJN=[l+4s:$sJf;#g=mU'L]-!<Eh@1K19>\7;nS,P"n0O1#9,'i**;;_S/R=p$..Bb%qNA270QMhJ''t
%(bZa-?V"<0q[XZZ[Y<M5;+Kg0(/s;TWd*/ON%@i/-l4WT<gKMb'%>cMO@BV/bn1D>LlXjt4r`dsi1h)uFY9u?#3"=/b&b]k#B.35
%6,d&d!&EXa!)5MBK/DZ)hVs<%KOKNiBX]faAD8'HCmB>(,;Ia$M\3r\5U+p88p`p7LE<YX:A`Db=EtNi0hl3PP28SaDl.,#Ljk=!
%7MD_f_:Wb\nlY+@'@/h`]=(8cS'L`[3=lg$j_h=KZ7>Zlpajfm&9X:NLB=0WNpk<U4m0&:<0q#++P#QjGHM_i0;h1C>,bLfGPa9j
%KD\*UMEs8o.B$5:Wl;el\hVaf98u06J*H#ik<gu'G5\IhU2AMW]Js%;4i$BrIQ&rSW/M4u,'HRr;aB-aoVoGWe^t\QAroVf%"2')
%pLL-;MOC\20MJR@1mK87+s!ia6;L[T#iV&b'Ff4oQtUcWIS;Wm<="*//A9`"f;%PTi[N4+2^c)G,E-`Sfok'J3cit<*'9TBLc0[H
%-n@5/T>bn^Wj-nV$%r:*L&%%e3<WKq_d5)4mMaBW=/9.RZ0c5G0I$L,-/`aH[_b3+Qtl!">T@c*^R]Le:3>+Ac\"-]X.4L.9#a,,
%PEBYn3nU/7Zt(R`Z<)K0iR3`V1ku=Fc/9COAGl$@;#3n?`):4TM:l*;n\M=o[,DJm7LCBCYLoCsF/J.fR:Ag)D7*>U;'p;F$!q:W
%(B#2IXkZO`#RTBf*4Op1UphitTNa447A,gT,:]GH"s0BTQ#ql;8;E<EkPLS=$^)j%#!oVr2PMnoeTeOYWf6]7Z-G7uGN6!6EaDlC
%,LFe/f,j^8*GJPBF-9S]@QA:+Ki8nq]@J+X`%]:unQO2/X\h?HheCVe_L.gDB.Ci^9cqLCQ]nM_gqR),LI8IE<lp9,?(P_#/4rr@
%52MDM\l2b0I$Rs'_A+0H_s(018rIKJ9Im)3faGscX`c<?(/ItnTV);U<AS!\cF,`"l\c@cl31/)p@GX-SOing6Unu_'d7>TrR)[!
%,&FXP'Ga-E_'k(rX0V9D+jZ_7Q*)')NI;CFp8t45'kFWhH@2HNFJ8CfgAPtX.tZ#(hq(J3'1@h&BTgsls%KF]5r+NQFJTpTNICP[
%F^BjNQLN!R%82l^`olp:];bCC&+P`[(9J1dTV:E,'`0W8fT.[..F$]Bd![6M-[4Hi`LJ1&H*TuObc9`_%7Nj1Cf\O45Qp2#8C]Z0
%(Xa24g]KIb&Wf+a\)]"Oo6numG3kANM[e^3CWrkBn6JY7L*CTDpYTj^20LeV's^V_U!ua8.UuM[i87T%,V?<L]d*ppVLA_;hrmLF
%CEqoq%I%1QLNs,ua)0CTYhU-+"D_d[0,DrI*8"???IER"6q%4@^=",7j.*1I1#4?l[_SX8_]PoVElPgIF/)]Yb-&EV[*`,)[^t;)
%!=X!s2_>;GS@nfgQN?BlFN9F:\>lXW9386t1\S^/^Zg^P+r&kU?#(Ie\bkA.:Z'DkCD%j?F*HifFKbDcd-\?OBd)b_\Qb>$)XKY!
%PT,S??0#;3\tBB!^i2+(<HO_<!dm5.4*9\i'g4,c<Qu%=,6u542r&qL->W$@<84S/dg(kp=g`5%$Z2jQoe%a"fo;na4ZQG/jDIF;
%H<n*7g;!nLmq27T7&&ei\K4?kB9>g2\.sJo?@97p@Q1)EF<GLGgYg_GT="?s;gmca(.9b36BCEk^J>e7F:T.Jcf-m[^I.XpD,T/K
%l&K$g\:CuBeTFm3?=gDHjK(;qmN;h[/\O]TVX!lu+D'CdeNnp9+ER^H\EQF]"(.i6I:]+"TXmsj]D?!eH[49/`)rh-3NE7K6!eRs
%aB@f0iR>FGEBg6\FC9;O+Ur^X;,nM\F>:AK5B(?!4W6N*;OB9dKjWMC5?R6@<^T4.".`qma)tmlZ0*po>k#!\R!,MaZAZ,n6@hHN
%E$i8GU1m<DbI-KUQIN@G"_4%7K&.S#19MQo%=PQO@$/TPM@np>`ZXifZdL#T.4)5cDhj$4Pa5$A:EE3HH)3N;Z!2619IHVSq(?:F
%Wi?QVA@#G@*'Qs]ZVpL<]l"]tA1uQS1fjnC(Le9d-+oO0SjZ:Ok0PYS!COC!,(oGLWbrg<QgufSl3+%'jGI6L#QY#&'_A:*5autu
%rn=!@HT"q-1hS,7o0F_p&Fo%Thp;1lB1U3B$FIuid^+)l)a"*ZUQ[4NB<*`tm"SIaLUa@TR`Rhe:&#.Qalsiuj*]b&b4"aQM-I!f
%ZBs*Uo:,9nebZ3j\8FuQm"]ha>H7rQZMc8*o!r_We:`Qm"]sf`[gih)>cA/tP-n]1#Ip\opWh]7]-6"(>85111;fH]Jj_dp]3XYa
%:-t/lhB&u&$k#mhNhbA#FtXX_5.XbuW#&?k>g?)MPKjh(9ZE)[\46b00AbfV"Y]`qWU2"ZJCF.$]s_J9R@P2m`9qk$d%MdlcCt"q
%n!6@19\+mdBZ.JTi&C\IkdK6#X$ia\dgU4W^C7D[A"q>a)KiFd<2t(Y%?sAp<Rl4UBaFm+jJjS+h1r8r0qr$jD>X\hhHRTE`f3k%
%citZlR-rV[T@NUQZ#G[YG0B46&raT`=ZECcgM.IIo?h975g?]I&[]*N'OX/&H`9f<Zbk6mVp=I'?Y4.c+I?JkgH=t6d98h@Gb*kQ
%K-jfGhZ]jO<=J^Yh6H"eG_odk]H?G8pF;@a-B/9UpN&rdiorA$rDNiN*>fkjV?+e8eQApnGrMH9p`u9'\WbI!>:1TQV&K0,dph"#
%P7fl:;"2/?@AWJFi.$b4Cd(j.>G0@^D<u^22/JT*9bSu[f3O6F]ZM@$4VKf1j$p@UN$/8^Vha.jAoBuF[2b$@9R#h.h?FdN9@gpq
%ofRmeT$Qg>&[V;7F5,gi'+/WNd[oR/lP$e'X<5t]"a.6&J3OO>#/!"#?f!dpPop*GY*?DF.@@4fb85/#AKAYbk1_KnRe_[t!%HD5
%FM$M]YZZW<$!h(6(OpI'atX0?;A!\Uab.Ude8nLMWj,7?J>jZnSZ)XBB);<?hUW5->,W'jl-85Ii\4<P;48c!lKmfi>MPbbUYiM-
%)4W3WWO`r3g=g3gG:2mOkJ:7qP(`([n[UctA_u`LlGKd/N(5$\<E7,$ni-6H6;J]h*&sG`[3\"Z6`QjK:2<01odtEP!fl@Q;5QIU
%2i0't&NI#=P,[D1M82F*[36=[522Am0;KLHG)i&pPpT(RY"%'EI%YU+U*S\g0naEPg$Hn$$AIhQN[:[9(pOe)73&/.)c@!5W7%?h
%ZpELs9r^#?%8Q-K\P-:LbTFo'IK%C149,YdN>3><3/J:QbtV-Z2:T2\e]<X]in^?QL[:mLqHda[@Wl!:@Ihs\PZZ9)1-9JV:7/p3
%3Mf&RLs'>5<pRF@dN,o!dm=q">&JZNX3;;&WqS6gVToLAG-cQ9+fV3o.."uL31%uDo_)B*HfKQK2>0UhQL?l`@CO64F=]fIgDd?`
%og3PC%GgkUb*'/&:dVB@BeS[[(VG:4;t;37,B^@3fHN[l%&8*r_b@0Z[5\ZL3OG@i+(o^%f`eKE1h.<>Vlj6,*jZ=-$[@BtiDeAG
%?_,4@^[Z`@bCn@!4d8\IcoHG40ZI"m`N7Zl`u&>U8X@A.R!A,paSGaR.eG"6LY#"=%'h;(,;m3F8X)+jBS@_Z.?=&7I[qaQAm4d[
%^Vd#3BEA+&J\0YW[t)RM0^tkU$`>:h)Pt0+?B3PoAY,PV>Qt;c]j*Xl+&WP2+23j-Ag(06V`r[HN%u&mA)o^q6(&4qh9T#p\ornG
%R-A<2o_o&S"QR4F=B'c7VDEAu^a9N=juYW*,%8`NDb'B_DLcGC`#9CkZ7sHYdQ'=p2Uj!1:Kf<X+&WPr&LX*\c-*eWVq8"C6=6Q=
%E?jJQW&cOVTj*XjWX-l[L"I2?6:7WjfiIcUWj)Y?eCsJ6(epkDSC%0OPr"18a=[i=M\tdA?G.FI44M'G,_B#cQYcG;33A[!6oB".
%?,NDnDKUOeC)F"/QO$:)3g1+5"q?Hu[ku?6q<_umI7"Und.';[VoB.i5]:nqmMnqrbohe/&ofHI@EU3)"7s3+&S'0QGNZC@_&^Xt
%61eZuA%+qM3'CG?G=#m+E-K.;RY`^oj5a$O_lb:;M0h$"oq4(1j(LBC1[GFDrh==FWtjt^j50JK+RiM&,&jP7$Ah*af)dfHj=mGR
%"tULm+&e/IoIMR:E9j(49C*L*Y9+1!IiL:&EfLYP(E1ePgfsSBa.H])Khc)aUthpP<U#KG^Q^k:%dhPQhLU#udKod:EbF&n5fsAu
%pLC5.K.WRX(]p>.L!V)g\_/M/la\GV&GfqeI$%oY5!=S5)9n5E,s(]dWhJlHNjN3l-oMhf"dl*BVO%*_kdO`?Pu"d:B\EIsH7lsl
%\Yj74HUTm2q_?XR&**o_Ehg\\.g*I@oYVNn,9Q8G7gL,)h<fTC1Po%"AC+ea,\p8-d3APFONtr1_'o_abcUE9Y;-C9Ua!&F?*MaY
%Hm"PYqK(:Y-`]DRI-.hU@I@\<3M\:+0F2l3`N.7-2me7';\gNBOPM6/nB.,d[_Aag9A%78%NT7rSLYjdfkRl4NA<"o&C%iq#oF9O
%FLXDrpKGZXZb!<VM:!4Ok@3CrGF.i=Q?E_E*",ua6HuWJK+V\A[-N_tDTqp=Ek/+t:cB`/>)_\dP\2mM<Ld\5J5F5L*X+Z7f'kft
%Q6b9O$SZ+QeRr5n8l7gM)S:cJ:0+@Zoe`G6VTWMG??<.*/50!;P0FgDJRcE*(PMrWh5BOJ2;URB#8,M%8YQp[5lfj-DH"3j)!fQr
%PT9"/RHEQqiT)YeKt]6S1nZTYY-i9dh2q'G[q/QI%1od:&cPdBC03@LR6kJj%BZ.@Lg%?@Z]AHO6P:R1c-ZGT-80>njab'Hh+%Lr
%\7^S"V+5M?=:;?`60hqnWu!L:enPd"DEW4d]]Bu@?).T7m^JNh9JuP)/Bgl47$@Z46*oO;F8pC*B)1ro_HX&frV1Et<@l2`b8_;`
%NBu=c?M7]!GO,Ml-f%OW'g?+lPR;'&<2*;FdH@Z**I<7uQm5i&`9S8IRU-Ag]#C58h3_sDi`TqPY\ujD!R`YMYse#C_UJi*0r9_B
%:#>;n'>ZQrrQIV%SqXQ%Nn#sGq]XdhYGOT1#W3oeH\T8t+'Oq'G.GSZb\LNIKtIZmfH"S?)bc)c!aXH[IVD$D)EVOJRqhSuiam8\
%K$Nul%(3hK#Yr_J8QcJQIM>VDqjeT-:jC'&?CIN5M:CmIDFA^,Mn.Gq<1JQYSWRiKH#^j4(7Bg/<hkg92KltH>-&bXEa@7,Y9246
%]+t-mM<2Z.o$S(`.V3J,M:e69Lrp?aqNfV"X"Q@mV&XcKalfjf$-4l:Qq?,H].qjg%h:n51Vf.nPXISX/E@(OUV@\N5*Jj2Hmhh\
%\kf@V:^HO6<J`pMk`4@GLJV;u29#bdC!q%2q08A[DGHLqWN76#l@:teZ5_0Gka[5#!M+chC)b0s&;(qP9fN6agYtis,/9\F))Y^k
%KE0+odj3[Zqc5t1^0NKJ@H!#HOqr[dLP,JfUFd+Bp!Up6VIV\c')8Cu$AB_m!oNBo%Lq)K=_3L0ZtX9HVSTh"pZM*R/66XYX?!D/
%\#aVoh_&6-!4WeK)GPaO%_XcU"sUsX]O@gu+(_uFjhe+0(\u)ph93dBTj(Imo$\HC\j^AnVIG]8kAC;JbZ>,aK"7Z-<5J]H[$auS
%VAd(j_qbh8*.Zc3?B5bgfA^UBLRcH?X#m+DDE,3=QR78L._2T[oE2Mp5rYMV\8]6CPf`,BUkqI.1SrU1b2$Kt%./TNg!VMI!_:%l
%aGg9Y:^E/?7Isug:\lc@)YrO>SNqin/ZNi&')M$HXfF]3bW1mp9NP)qO]3:d:5p6-556eGE8b[2.IT]),6peL38[A=nX33AgblO%
%e'Xl*o@Dp;5jOcCT2K%VAT2<^?oj3?VYUmqOY;@)`,CERfR9#Nc@fi'E+\&3$iE;m*<sK+[O`<1hJSbqghb*KPXeqBVAf=[W]>9o
%!u+s;i]"%raN6C&>9f\LKhG1>pDNAZa$HGJGl&6DU,m/#fEM8Be"E3IX8hZ#;EerG3FUl!@9D[2Vc-[&g9@1j1eVWTcJ53_@f]g4
%WN9$ig5\^%B\P<(.$\X=DdhI?;lUb$]h42T_IQ1CbeZ"Q91fU+XX6n0U`);P,bn^t0!570]ZQndL`q?cYSI>"3Kb.6j1o\V`>flO
%^LN`PdoaUl+eDE8ZL-2!Y@j5i'W=KZ,A,:2?LbT`!:Rhq96h*@-_O5a/olDqUs1NjD(BYH+RU@EUiO`g7U+%i`%o>#E.'Yq(o8li
%\"=S8IfaZP2h].ND3N)/ED27nM7fMqP=gh!gX_g6pV6\f:#_PAGtHrm(W?MeRT@qQ[%GFN9?LYhI<hR,>m'48?*rUpKOn:JAGX;s
%Y9-W$Hur1+E`gAo:0:..3r#.3`5>RFb0QumOB33l<<D=K_7Dk7>fCF)4&PW[Wj,>0FF[U48EQr'/[<WFVd@D5'Wq9g>0@*22NNK(
%Aoqn'and1:duFXd^&"+*X8U2I/0TO]al(V94NTi,mdlPF:/5(e8*+Q*k<HkAF.5gL6meU`;-tti0;*[7S[U_W=]M"RVgPpiSt+U&
%2W%'(G8]&p>!tGHr=noWK6_(f3>'qn9JuOs\Y+c+L?dI+asVd`\a:!V?<SmL-*:XaV?ncc>Y1^-q0kS5mu<46h2-%A6`QjC[q%4>
%T7H79qd(eHDiQq.rm2,e!m,3-&gcP\D,B[mr5t!n6VA*XLNJ92^t#5rK%hiep5,%b.n6NM`__j`Yf_E/o5-JdJ1n!$LKm\n^,V"Y
%S#H[:A#cel\W+lp7U]V;op>k$bMk>cS).s&=GLkV?O]Z2gWn]>-Wt$P[7J9(RUA(O')TH@qbKEo56(8qr87K"s#5V)=MfDKc4U@`
%OlaZPe"1d62.%Cg&,b=O<W4e'reDT<)G^0MBB[gLZkqWM1#d1"`5P-VN]0bN")tZb(+`/fiM7+JpH*h!K>bXHEc]?%o-Csd*D+$G
%jm%83Z+bbaE/#Q`(N<^Bl>&G9^eqZ+/#dor%>L*&bq1K_5A0-Rn<[,sd'Q>Nbr!0KWkh9K_1=_<#;b>pDg!LZ<YGJJA:7=%Q$d='
%AGA`8Og^M/4D@FT*,s77>4W`teLdRQ4[7'/<+GZ(-gYN+ef"3&/&aT0P!SQ35l7`(XaSL%$]SL,M3Ea6CSB^D<UMo5SVZR^1CNO-
%[Y)OUPH7\-d=iR9]BE0*0@;tem@^`*+e+^sqf0"D3Jk=$RXq;p5.QU?fk\&l@Mm?m?:k$eH##%#dZcKG/6JI\qbR?]db6Bt)'$Q^
%Mq[n&UcC;DK`7<b^JK\b(%;%bKX\)+\PAr5rj.!AOea?h/<.;m(K3gfZ$?u?(QV1U$9mcf1X7T@JjIM/^Lm\/>bSiV'#&(?$/Y]*
%mh]qm5I>*=NZI4*P6s44K,If7LY7F%@Vg`rTu(QI=o0Jg/Y'C^)q.[nTX8r)?urObGNQFeN>*4[ApZg5dFoJ@[80C^6c89:;pFjf
%T`kdQ)Qc@PWS+;Pm@^fS%cR3eRj[0nkRlQkFgRGM0SCZR`'iT[bl=\d*k^4M@;23l:Ds]n)Vb:8pB?3<GHmF#j.nL1f>Has(Mkc*
%QoJd@?bsuedX8_G/HS/IX7gqWdAMoIPA%L)7Pb:&O,8mBZM$rY\)Wfp1aE^6;=f\KU4-E+me^1+T#uGd%?TCQD_pEs[SUi@N4U3j
%Wqqa]qFA?_>-_7ZHA._#WWf]lWkc]1@`WZ,MH>SNO]+m$f%;JbD;&Ea=.uJ4&]E=g)SaNo#Y_]X!=b>a!h/^UlWd$u-7+lCMqP/n
%<QL@BqpNm'Tp%d%?>X0TSuKA6BeIVR`UifBeVIe.e2UEXVa$CT$!i0\HQ<HCA&!pj;X*qmNiX:]1uKhKAE_IuG.k\\D/GP(,I5Yg
%Ss+3_`YYY7@2Uo+9.EsR:J/_eoLY''kq>CT(-!=;_h0$HldhIXp@XAj\8b[sKbFqF!i,Z:geF'to4BU-?_3@idO[t=IufJYTO:RX
%*H,MM\OMOh:'?MqQu,oL6LmH1nem\CeHe"mT@NY."c0cm^Q8bUPYn9@dS4pVKLs\n'Ru`@hVE*:NF5XD+I\8'S_ZIYjU?T47Z=.&
%M0>_ja0eir)kNd^4O6"KXj*"jgY\#8nS7g]LK2,.?g9CU>Ibjer:lL.NT\Hg=CF;8/A4_[53kpc70\#>P[T=]Eo3+++WKrf.!Xe.
%O^nm)-J_:2?T,JnE#30F/Th`#d%F2Y>gtl9RS3:MN(4c73k@Z[<.+q1`R2)6ApA2s4@[UkDEH:jY(Id=,f":UmUg6!6t+O?rq\t`
%Q`J-gg)i7FCa2W:h&]g8D:";RDA1WXHEgo1Sf\B!-S>*?K3Xh%6,p'u6/K#T4dP?'hiaD*1[lT]`B.9(OKi^n^lkO3I_'f?/I=PV
%:XEb"BSA_`IBQk7!26P1GV3rCeClrCM;b[eBkIIH.QoWA94s_Uo5TOt;%&+=IlVqnjlX'g?,IpR3ot^+M-?cB50dA?kOdT_:'djZ
%De-k=WdPLkaQ:?UT$dtjY;5WBB'\p4c-8ij2h(b,Z9WUFB.)8dC=867GYUG=G:b$fGadHVnA<o<G:rC*;5Pj`e[]V]=Cl7hS)B[I
%IL]^hP6(HDS)a\J_*KkIg/FaTgADTOIC1g>K1poAm1S!OG:_$l(2?.C(X=Uh<28qHc[!TaN^_(-1+</:<e%4JEF5]'0Wr5d3Z\`E
%O7cKq>M;W-:@/EUC3l%0PZ$FVVCRFr?hicIB$@,R>9n&PcIqU'I\X9_"lHH,SmWsP"SrMc#&[Z(5tTVX#0#8bTlVRB7Ci(GjFZ\3
%?CEp00P6l]Dc=],_2734[\Dh))D)3.+)B7(`JHGO_b8`PkT,En5]1<;UrQ[aB]3\,ni@2^TJ`fKXM1Kp"d.K:V"c;`P/Y\sc^L6R
%Ln-=6r,kB1.+g:&YL$%\hX\URaeZ`=V"*02L#(HaGFK\Aj#Pe&-:r2WH#X23a4Wh(Qd^4Sp0K=;YFa7/jE/G11f[dGU5_BifV@8>
%E61$9Nn8Y`.\(g#*\rV#_c;m89VXOc!_\,]E!8b<m(>6(s4b4o<ej/RGV!Re,puXc<l?$%=YS",Z2"n5s)faS=K-@H>&2YdE"m?r
%[/n+;*UQOGo47ZZ-YJKp;7MUb(_.MR!c5JkSQP/CY*b/bpL13`d.Kkd\8NA4)70FKFhY[ME%XbBLT$hsS9$"F>L]0/fO\ujc!S/V
%+C15N=c%K<46]gc1K=lBn,nCM:++.^B:9&kU\#:d-DJ/#4gn_1-Rj4E8LJ?iI`e&n=Nq!=N`+;r$u5E;3R5%\,aG9;F>e2>H?[nX
%B+TbaNK*5;"Ze0/QD.e$ZC=SR#CMe&VF)ms_raT%!fX19?H+7G\nAQmO1J/_Ki#B$>1,^lLGaRPeHmg,Rm"n%b'pqj8%F5f+P\Qf
%9am0UqifLm<3D7WJQ<,V563fjo=D/Hg0X(D<Vq6O)SqS<3i8%\.tT1K1,`sfX05V`:Wfm!mbCEl9jO?B=f/+P799l=DW=JrUN\=Q
%1ij*tX;g>@J=boCF]^PdZ0Vf6^84"B-NI>c:9J[L@ZpFV0T&o7'A8lEpWItpf='89B!?<U[;rPI6.g)%eLsm`7Oq5nOh?DeEBE0m
%f>i78,[T?D/+*5$Ad#H2.]bVhl'%)`e&hR\^YSc3A0RWRq&Y=*b+;DZ&R`P72P4AH:uska'6AV8G!HdHISl.!%o+g4Dj+">iCDL/
%ptlBrGQLKj&/QMRL?g\CZSsG4mqgW@[JjYY!nWHpc3/hLAZu*(Xn]r6IKU^RM?M]dO?/<;Y#U8Q/kj80\0HS<$(t!2iY?_P"m0)e
%8iLn^g\^;tSbc1/56)boJe\-kq83u]-tte;g,Bl@jQophpN=`QqX:+QILHnJDGad_F&$4rr;Jn"I!_?Jn*FIIFi-RpoiQu5eE\3P
%XEp@qVmVZCD5D7d19ZVD/bc0=^gg[)\Ws5YRd@)r@WZ$Djm]-ZK<C0d%7GRO,&RKl7Vk3]KL@ZM,Rt&.KFohX$Cps?9-RsM&MS,O
%Eo"`/IV_"AU/l+hJphO5a()7jI4l!mD:cKN\.?E:>bmsseM3q2,u,FT:aYCK&p6nTfWTB;8jpu7,PPCs(mA0:Pe9X2q,Seg:cf)3
%fkcZ_.oLoS9uCPu,3dt:DJaEX\;:rp`blMhK!%'VJ"?L(&*bLZ+Q"FZb!-@1_D>:9,n>Oh1-qCuOPc%;cbh`_0c\0LlotCV'"`9m
%ab_;Dj;ZQB<PdG974];oj<_qRLC&k6)TEa06XG[rd&>jG9b@0pbm`8nL(#G,J[`5R:X78ROu):^G2M+NL^K7[$m[)\)$V5tCirFe
%+#r=<*:bYX^o'2E,2D*q*j+$LrDRWpMg9ua4N^IR*="$,m2U('(/!7jLs0X5VACrh3nl17bk!u"OsN[RBX-W<P46FCba8W[f)n,$
%V;:b(->3M?AW1V:C^nL!@AIW&!*gONq>2L+HBR_"Arh]nK+-X[94:CQYa[9Y$Id`Y?jdpsBUJ=Q>2=1c8/&!Y[ii^7MHcO*aWN+T
%-s!aY:7OQ90UG*G5-MQW=]3=nG.-&rR#<(<jb$cYn9P`/VYfL$?D/uYi!s95,k<OF]bE582$>PA^%^8>f8h_)32,Cs4NZMRMJ0$5
%4FC.0X?H+m4=._fo)7]G'[EC`1%u@d=Uf0bjD6*-e]S0=^"=&E=7=eQLn.s<48(0F>0t,@7QW",qjoED3/dH1k,)YV"I,)\c.V2H
%6^(VXMoq6jXTOicV%)5.WUY.TfSa>2E[jSk;[Q1OOJt.;B'\S-T4[/>fM,Wb7m7BbmnI/aSm\CI)<BjVf>],9krK+%fL]+"BH)'$
%i[J;<AnS0`C$F[`UhZGWkE?Rl=hI9akX#q$[G,:sPmfEGgL=u9m;*R%?AR!%2e">\"5Y)5+`0*&5(e+FRbUQ7le6CmNk`>\/VWYq
%&keGi(/p+Kj6SKCC3f5T>%jVb-DBN9pTP9tnjY9H:QJ:T!@?jNm!)YY*R<GT)4du\anE"Y9p;H0,o;p$_NiknfKdHbgD`plV2TP0
%9O*Jq&4Chm7oIl%<4I<-*^,S3#\WO3DF)hle)L*pmS:md$TuP2CXI0j/P>*gj-k<lJoRO6cc8=3)hNfos"$0g4BuNYWmRMa3QrOl
%PL@@5_uS+4IPif*=\m4KjN'\BV'+\F!hB[LYl#2k+tR%#g:mld+CulO(gGmN:@@Zuo#Rs:c:UB^>r<bV[S*#jXQoX1Qj)r+*:$Qo
%HJY@`H)qN@$'+nGSg]4bNk2GGo0:E2l\YR9EXfI*didqU$`FD!ZPEf0'sQ3C%-mM+K2#dW;n!!gn/<:,6ujf&)Ym&WA<Mc^NeIH:
%45Q+VH)(`glfPfq^8O1t7%h:1Lh'WijiO<hks-(.dfZ?J@4gm[.Smnp6Gp7HY9E_kg5NBNK+1Del-Se3n@>rep0B9<Ve14M$QSL\
%LH<ne0J?=c?>n;Zpk:#fHlebpJkVuL&GSGfg_8m("Q,+<!CMsc#WOOAEsr'(RU-ig[[D[hp9]H[NPIZ/J5OorP_jMlCu<$me&3tt
%I(-Jec($SSDnClMRTGjJ9jX53#QGV<aJ)YBq/20bO`*?T8i9E<#PgQ$iZlW$_O$38$A7,%#<`Vk5NHoUq7IBZn6J`=#M*RIIi;h&
%3i]jj^ple4i^h7j?h_S$"hbFZ-o3\.:e:>UVI`R2gt\;9<XoFLO9Ce86jNdXhV65*=$E1t/6.@5Ef/s&bjR@g3Lt_l>s4Mh.Zitu
%\!+A2(+Cu+K7JP>++s06A,D>hg3(XTKUucYSoR+4)mGuClMR/QoLY6e"4%;QR-_PDUlb-1@>n.(k++5o%dFnciO#0lB0Dgk2?!`l
%YP*F-YpmTJeKi;F:^q0?qUC!4+j++<@O/-`ZZYpe-Ra:dZdXs/6o?:hlgV*jI8*BJ.O6V]P,SeE9/4M\L1O3\J[Hd3K1=<pA"-0[
%*6Nns[??qH#YFW>K>M$G]!\1R6+UMt:t$tkNn.Dan!D25K$id._7f9rLO(*Q:6bnh2aNSK'raXiasa25/a^-e]N2(9GAAAFR&slS
%SSS-a2"p8A9<EtM0[,SaB%s1K=:5"7,:u(UF1jX=n!A.@!a=d(!m:1N]6F6Q]S9I\P$]!Z0^CO;(1=_YJAVTs:?),QM$q8Y(n>_Y
%HN+3@Tof(F`5O*7#8HhG1?PLiTA='5C^1Z;<f@>/7\gc/,)nm&7EH`20TN@oC?X`bFhNK</k$quUQBO0</aCG\O@ioYjJfRK3$?V
%.qIqqS'1P!ANUFF:%spMDr-4$?1V!,Ho(VsCgP3baG!=kkPOO_n-+#[#t"l+2,@C[Z]6<>D`9k2XPHOT-K!_&>NOoZ4YC0oPb!$S
%p<sks(V\9.ZRC$"1$aqtHUpXjT`-QKe6,d["D*[-.IVlQNdGk3Wea-i(9PV_eS771IX?@[M"sBU_]`Oo!>+b7n.YHP^%<N6rZRb]
%mc(B&6,ZbIjJ`\FB*c%1K`*)!%C9T,5D#Uf%ge5:m9%7PONKr04Inh*e"W)7faSt\9-hS+B:?*o(1bF;%PDK4L62:ulVKBN_%l't
%bfk\X<V4"5I7X.)mr*N"!bQK0=pY"pX=ZYNE^uN_mV-!52XK2P$D'bPrPKBO7V?p\%?BO9UH.WM3b?mGShg8E3=`)0=nuaODl25i
%oTi'C6mCpG!DVg?2K_RP3il*4;r^"oTNr/cTH%l<f/Ff`%&F;dBQF^I=k^8i\8I).DdY.V`jC9&mJ5HWq9n*L*(_$TC5HR@@^+:N
%e"a>!AWUV&arokqfDfa_/`:-RaO=+olgbnbM[VUA#!=HsVR7SJfoTobaSn)2=rYmpN[c@L24(*'bn833RT29+O:5g:Z*gbjaN+c)
%M^+"o#+TT%mKXVF+Q]r/muZG3Jjt$28pg%ECe\7l7DsbAT`B_H)9prMCC5aPY#*62XahD0#;'[kOJZM$d`9g9GL2p0q!1jPb<)X0
%*g7E/lBFs?K/D353#K6G.6ANTE<mCJ`1/,%[$_n_pK9c!FQ>aEo)t;WAI=+qbmhgL;jk8!JmpqRg-tU/SQ]5"f#/8UCo)`,9!Zsr
%P'Xl8h>;PR]<>BXpt-rQBXg.9;M9S:/It=`;%9gTS&D\fM?#:NZobX8./?HqY_iT>OOiR'77mi$I8\\N2Iqs)\$kBa#Qa"Ubu-1,
%6qpRY)B48`0G\ueO0)/5-K[8BG6om-31Y&?&bh88^73[e.k.QbYR>_8bE4r6>\gX,J_/p)E!8--U@UPc]?Jp#e05U<0tgr"8,K6g
%(Q\W]$/:kb9VrN8[2P=k#WYQ#K7H8<'?8l+OT:"dF'j/-@8!)aj5d!P`CG_68%F=ZTE,G4k=L]N_fmno'QTasdpo$Sq7,M/BKAT=
%^(/iG:45R&1m2Pe@`qq?ahD'5S'$&iLn:A*oG4K^,0*?t9IXMq'Jaoj3(8NPVdeL_>n8>->";4dom4>7BJijT*7I"u?n%c;]]`:6
%9SN*&]kkN&;a*oRcRMnTd<i(:SA7I_@ehD(FN\/EF)0kAB'3b"i1AP-9_DBOHdme?AO@NH+h-3^8*r-8'VXIQWN'%^>SXn1*GhZL
%aYd]%T\UGCK+b]FEeQ#8$VR64^gb\>Otu5Yki8&uqh3?#._d]NG=bEmIDXNtQBi,FY6t)3Y)gme/-[-'KKrX7[A4a?NL`ag\nT%2
%V&!-!3#4R0[_fG6;lP'G\@p9&(@fMTAM?sAQJ)\6@s..R6]RK@DH75N8,C>92h$t^@dW:=6,oX)W:DsN9;QB0TCh(F]W5qF-48dN
%m;:,\NS637B1Gb;2$!6@osV[gI#a$lD%W5RFi8/spXcb\Po8$*KTLaB+FUtrf@MC219qd%M`[3$,Y7B&S6+@@^8'5LJTF7W'f'/+
%fJ.$^E2X+;<6@cU/jjm987%Q4&)'=@jd!:+68"F!"j_2&1,RnT(.:+,_5:;KUkAr8?QZ`)W_.Hq-'eL951$_fFl7$`4:%=e\ce,+
%=s-ps#2ZP$grFlXB/cu+_]/7>7FkY+NOYTtMZFTJ/9leZ^-)k\,(FP!8mms4B-cD\>k]u-r.Bm/BO\/#BJ>)S!G/mNP';n62[aA;
%ZGaCPo9Pm'Zok'.JGA"SQ5e6]WGX:No6E@&6T4WdVrg:oZ<Z:*#&:'"m^`60L4&@ps8A>A0;"]P1#\3T1BoEUeV!CT5Eh^bRVZnX
%U?-+GX,W%5.>pu@4d'(Xo1cdLlQE2[pPjDJ>n&f5lDlU5^6o?!`i4b<r-^!l3Z5:abP8%r'._PZ6ZC(XThhU)3GRrg3)fno&fNI>
%21<"@fTuXNC,"d9j%TDKOB\&"m6FV@b3jqXCDdam_/8piJ&q%3LG7J6=SZ.55&kXZhbP"c0a6EM3=ZWNP<aqkJn9Z-BoTB8!tH5n
%%sk&]D-BKD-2E#Sd;^\IP65K`>.IH$kTG&;4nJG8("%!"nt<X[Fa\J#ZeD?W_sH#Mhf;6;gq3g-n@"2)hFLlXH.sHOd7&$0#9e")
%U^ebuZ:Qa"[NIOa$?`oW//6s"5!"<QR7Me=A:[&FafH<<T!S1EFmf*G#G&Oq*oR./n[F\>mRaI60r8&.8kp4VIg4F\+M"htC!p\t
%Z"55+)3&-I<Qk?aDU.Nr3:Bq4E1(i-HnT47(CTt;#$JG`C[)`T3Cj9.L:fK@onU5s0J[;Z%>TBD!k[;#q_=YHK=aE"Y-Qm9>OnoA
%G`kZ4,WT9^a"=+4Zaj?DgmX@'+D6:W=htT\N)XKp-o>2G,p*@kF5Y;O6J8<F3fi@;_CefO0#TB#j=EPK%I=jJs)(E3Upp753G7%,
%Q]]nGR4iYlWXIt1.op.;Usu-Ml`ZHsZ$ken`3rb7K#(%B_7r<#iG-k5"l$k'#*D*^,u*LVo46*`89K9IU`=>ROuR*X,PAFJL"'kK
%3KGN\Yif(^UmB2bBmiQ!8_ZGtXd*6+V-MhY-h7L9M[Scp:bin$>C9A5lV,*bEA",ibZ/P#D(cmM/1mEA#;AeJX>t&X?sO0mI;DPo
%d/4<2R^\$4dRE889R#hub[bE@9pD.Vn;sk4HQEK"b^_bJYplUXk_eFck9+Qj!q;'p!ct+o1_gC9U!u$dUf?/liH:LeD7ada.i7"k
%(?L+l!r-3+ERM[F8OX<sKRh?>(rJMq`pN,l8J20dAh%@?gVNO1m<M\+Ob(&CDjDB<UCh[!Pe*P)[p^MQ@R.H$#k0b;#&bQ)p\r2`
%ko("iRbZC5[%-goU</GY(jGq?lF)KZQr[66A(G5VoCt8q<@*R4(_TU3KO6eh^i[<3:-Bl##RAT#4)mh9IUnMnAAq_q"Ig`>.te,.
%C?t)*GSS/,Jg6Rg:D#IScOY(p-2GX%ok^P53gS#5*M]TM$,>*U\M2okD,5]=(%m@R=HCg+n?$ng01U^)pa*BJ3r/#>3NmT@"ZP-S
%Wg4uXSD&Cc>e_h57//>BU'k(6.T4a1n&KP-/M%,XO'<)OUTZK,5Q%\Q^kLmCRhU@'`POc4]+;2%>B-D``e)4pY8^Dg7Hk!"$GN.Q
%m95,5p$"aq:-'tMT9?e-IT$NtL$f-"2LhPtls*RcW#JZ@1BO[Y'c4f!Ad*%#'e'3bm@4E@NiYlk2AqJRro!WDku#W[aO];]!WADN
%\]/EXS)Q1uU#KBiOM1P54$QiK.D!k1i%=i(j1NToCL6+`9-4,eNTlCM!%W1?WSj>]T/n6)B?=u;<1H*//oa5<jh.XEESeRKERP+W
%='D)@?QL'[]o_N"hsr,ZZrE$rdWm#S,;G;t"2gaLl4kd!U:3TAGAka_jW6o:nLEQB^9^oW/V>D!m+o-O.[S<pp[B-uZ$j/_Htm?s
%d"IgerBW#FZ0%mG:i*T0d\!F@&4F=bkdkd$35$Q4)Mk[EFb2'?\$A'(QD8s;!N42%29DoJBoGV`aX681W:1^7m"b,\UO<oXg>.]Q
%JQ8>*YB,dk6BgE=RN[HUG']7+B[\E8F3,"@PAoSKhYBhLV41&b,Ji:X'm#OGMc7]B1eJX-))\1GA`EW_q6Xkb=@^J?B6S;ji\RR&
%>J$$H./LN5^<3R`Yo7J]mTeAGHq&]fp[[oKJRE*W/B_(c&!Yb;N`a+EX,dQE3cF-L:rZCq=;jFFKD%[]qsk/SLO5N]<^'DU^M=eC
%(ZjPAlH/!a+qKftd<@:<ghIQCOo06%@g3s\6Rp/F?>uf=hOUO4O^KT1]D6+ICF.A0)+9tEr.+dKPAAjSTb2+Ba^p'E>+uQO)e97j
%[)*a[ONnjMe;dSL@^WAM+'e3eP#3sjK[4>$reofsE0p1IfSH)[ZW70?H)I3+F$HOJW$C_<^itQ!$Ei^bWsfmTh2GpQql\1qg9Ifb
%DN/pTd51=`dS<bBW*S/ThnWM#Jdi,.oS;\nMcR=9$6Y,V1u9/(Gu*nHo5iDps'7#op6OO*V`W9[(93<T`r(668<0N[c_.)pC1Nsr
%<*!=rq=!G;ZKJGRo,)#-]gRQ;%*)+sjU=RZ?KHC8)'#2bE4TTh=sbU40Po`4Xq\edRWjo2Gn<jVf7iWpg/:NaA'J5<V3Rh7e!=3T
%N%qs)=!2:cRCb[PBA50_8<e7lOAfl&9hkoGEm.Cb@]&97'<1gd+B[E*c7^s@7b.MM)S`7R%$NK(@'XEX3R_8*24kJq",1,EUipmq
%;NfK[DEB6>g(Cru100OY/AaDoGn6('fIde2S*mf6]l[4M)I->)nY(;d!n"+12afB92%jl&G-n27"MaBm$CKZ<?fu,7H'Z&S8l]:s
%)2l.qcu/CmS&N?aI'a2Nj%.=rpF"&,%`LD&m$[,_FH!=);E(KME4"Oq9E:7(gc>s9Xn4%.Lg/gheRNO&HH!pk>EPhTHaB)5?\2`b
%=tq5Th0A5,\;P3`E]@HJfZ[>9q!8(2Z>rE",rBSl:%3Wk%[W0fom<NnH?Xl6m9FA++45Kh*[JQ<s5]QLKu\Hk=r.1)?;na0YtJT>
%GkIU'+G4j.QG^f&\(&PS;P)_:g76mA*e;5nPConYFJ!g,m#m";lab(_>pK:X.O\>"YWkkT=PWL!/!kG!+e<r<G$\at`uOXO&fn8P
%)Gh%WRc1JX<-2Fs?TK#67sa1&RTtTs%B5(G>3GNuce=@%."b",JNFq>OcWL/oAh)Z5p<Trmu0O5qDK7%64_*@l%W0H4A72GqttD4
%>WE_n^KktVoK_i^ejRmcgW]W^-sj"oBIXg2"'VB?lSW^o1"FpqoLtOiBhI\LmAoTlXCER;4u];gOi-2]Xr@Z4C3=hLUD(j8>+tD6
%8FKVIqr$R>2NdqMkr1;$jsgI[ceq.sh.7R[]sfJ=@3.83KX<!c7;X/*-T4h4V3fHT'DjN7PD6fG;OoDd>,<_<.YB-OgdKY%QIJ<t
%(="Odi^b)rOK5L'9len4USsV!l_7]V2>#Eb]`J%+em#B._mNN*&%a=*ob/.N)!7+oaj&'!LfcA3QDE56Ki!+>eNIN=18baOckT`/
%oA!iCbI\.&5VmDH_n:J$m0lm75#E!ZF0\#uCBJjIk6lHCWiLP,%3-EQcO.A_.Li6E:r`]IHC&@fA@XV=g=e_7RD*A0$>H8fKlob_
%ZT]U?V6?!=Un"r#Sq`f=p=2/lB=sY5,Y2r3=)9i#X?S6GLW5N#%;LHY6(E*4^e0L4(4.;##NLhg'N%VPV3tS;I5E)>rX@So!giVm
%6'WP#+?i]7LtAdp\o:@&78OUWIst&^`->]1:d(mET%)RVM5R(2;4`I's!$ZdleTE"_[N9_Y7"!$PtYAclo81BI!.!/>`,8U1ROWe
%[2.RG="ij`;LN$ZdI4_B\F[is?l5;+hM.h*bD/MCS.%7TQF+I`0i@!b9!gr@Ud=bS&(mp`D589&SPj8Hh5YUZ>d$"Jp/MUFAg6fq
%)R62\RVJ;?dCA%PFBan/^[\/O;_O!L3b-?&da[THaLU(M'?;^cPe!-A<(iM2SnsY*$8Bn,;^1EmX#Im4j,>484M$/2MPS=\7]NOO
%h=Upta1:H>]\(41o6`dsiDqAd4Q4"k?Rf0*9%m#QgVl),Upi?7k[qq,S]!T4N'loo%q<61m#;en!P8te8UkYoO6O6^l:.3&d8!9B
%3s#"@ML"*^^Rq1/Y=818p!oS^hSMlrb\1ob;fY@Z"#pXk?+jF=]H#n5F\G>if(,%acZ`'\+usg^HrI7a:u%TpGHMZ[G]i=E?Itu\
%)6X+o1L2G-mDH2=H'11Hq7sg,a,23rAh&ZPq;_qm+n<i]#sI1k2THm#8Z$pR4jScI6j.#N7Lm<ZjA"ZGhOT6Z<LfI\m='/UdoU6l
%DK+Cs7`JE05jB'1=)cm5KRtD2G>eSGVXnO'PIkj35Gl"<f_QL's65!icU3H<^X?.jOOk$o0JGp#A$Rf/1OrV#?nBRFRq'gR3HRkH
%UjFo(lJZ7#B=pdeoa[]RRb91b_e0p6(Dq&c1X;38)]%T*/Vto[m>VG8.S89@0Mhu0Y%5LVNJ29N)GJ!09(no:])7gaEK%M2pNsY^
%S]?.W%6TFhHZJ$bI+NOqh%d?rh:[RbPAE+c^AtOB/j2O6o02-U,,(ZHb]?Wdf'Q$Xn%(HX0]COM59?pO."]7I8!d3ZZM:215'LYt
%S>kW.\u[eti$l6qa\49T"_:7mB4&Sf_<V4JeI7',3il39?EACaaQdMQY0s;UdMi(G9'?BBgTCJmo"L<.b'B7<aV5$m2;0D3L4u+6
%:s>XEk)_jaO/p`ugl3<L0<J)#@Eekn]th\PN&^KEM/"b+<)]Q%r=ou(k9^7!J'n!;Uc%U>Ff^38HP#hS'pOpH2!n;*O`riVh&1IP
%6k%,lHt'CJPZJ_*6pE>mkp28OQYBbHW=`"O7:BSWSS]B=q]C%]J;JOnPV5/kL.rhhq#OEg=.ghNBWQ-tE\dH:ML_F,_T9c7`qp4c
%=(e:p.)_J_A<%\eZf]\Z"0Z&cH'?Fj\e(E>E#K1?'fj=fngG1%28deo.%XZ'Y9[1rV:u##g7os]:J2s8gOl4>q"Y)e?^pI+eJ[aH
%`tr9MdWK"Z\OS0X3DZg',Ge4[-uI?>AT&PfIPt)iG!8Q(<]#]J[.nILDC,LMj%RF$773X`1bNup;?e^jYs1?bD'UghR*m-%:o`4s
%AaB:1,08q4UP^JGdBZRWo$st4FDXudq@JILdFh\hUXW[0d3/.K<R#oh#BXVUb8o$'f8,??2'<g(q;>NPlQ51iP;mnLaR^rp+\I!_
%Up."2h-HB1qAg?fY[;E"g^4HAQ1[dQ9oHf<C'!@3`#>*m9iDETj!M^m\D6/b7J(C*2QdutM1%_I6Ap64ChYir(P>2XW[kMD0XHub
%9`$*jq:=*W1"-.O8Ekeb9@Rc\9)Y,Lm/QMB8M,DfA,^EHP5cI`npE@V.r!krngaJu5aLB#IH7brhT"a;r4hdn5Q(""i.E.MH9k&T
%J2]j:jWWh(dIh)W\NHBc)]rk_T3<1>dJf7(Ime':XP+bZs6oahS:\<olg`#\r<%BD6"U(H8&-RQqltXnBknB&@c>SB3>-9X&OFk)
%,uJHBJB:F)XsIWV'!RHX,n*#H/dRph6nA=iAca,[Jr%0-cmYT+\I^N7LtFt_qX5LVZCh!^?"s%p7XRUc4Y5tA'8c2"c+eZ6#]0eM
%]-B)c0u<:6o_7+<JBW1AYWJMa*>@cL."B![$HR%="hQ#MfO:K@OCWQ2qE#lE/j!B8AihWt*K\qa$?cZM^JD\C%p^SYl>b_,,34Xo
%1>(gfFG0!E,/tcL$^-;P8&W[4/Q-nA"`$QCW`,jF's.%MCPHK:lsn`B\,^nA[QQ#=+-;X%!Vi7E,I'c;+9ToP6''0=gL\0Lnl3.!
%=I9"k'^iTEoO3INY#^"jaF1![+'5r_Lqq'lj?pfV&V^+L<.7A[59Sj5.boNT9E-RNpK_5(W5<sa.f\m7?ZQ->o)dY=+Vjp*E]Y@U
%h._+so6?:qi:l=):M0:?lL&)Kpjbn[:i:[OP.7h`W(fu4-9**/Y($iOMp@oW:#WP1a:NF$jmREJ=Gqj5;`4JF;ouEm(2qhTb+qcE
%G?KT=UiLPkU`Cg;et*4,\cOIiIdcYL/q0nk*nQ8[.(femiWH4Pk8jA.:V,/U\@Z%^-SOPj(U<Cl4+W^+Sf:\:OQ#'NVgoW`M.c*F
%_$;jZKBi(0SbnLXIRnfMUuEK$!snZ/S;R+aWme^H7:kmSK)$SSrIF;sK)k9e;-!BSbGA`M#=X=6",cn/l2?-eJ):[mm8H7X5-?Bm
%dt/*&ap5lLh[3V*0okW`m,Ha4$<D#p2WY@O\VU%?mH,cf;@D!_b]4^aZi\fZ<kMHV,Uo>O$gn>i&i'=_]V@(q&A]UEaMBTrWOPsM
%0p9d*45^#8P3_mF/3b\t*tc\WamMY%r(m+G`d;q:P&Gs?YO=bSSIs+X9pR+!fi"l.*,U-1_?S2_T:K6@>!-d/*>WlMgB////#E/E
%p1Ll-(56!F8B#M+c_g&q'jN[Yp*52"-NV40A,-%fN%p-TqS"G@$+Y26king\O0Ue5ZdBj13/H,[8+sa@,5-MPRUYoZ/1&7@>%73=
%25;dp4`elW:B?r>\D]fjVBKXJ&?q0S#t5q?0N:M=hom6S$dlFb#l?Hs*$;cC&HNE"'3t5c,j\aNA^$&i4hH!uEubrKUlAL2"tXd^
%<kAr;g^/\+XbGOS,#`c&)264\&oM;c)*g;p[RV+7*$_.'?dBmQ&&DoB[@*50h3Oag^qSN%CZf)'E.i\qn!B`eLZT2PMS8Dg:k\`t
%6I$DKLP_[*7F:_%B:j1d2'XAf?dM%_:sP8BfiF@??)"t<UVL9`G_oH1'O`miB+lL[J_:TZ@@W@$,?0KAo3kWX\oH?*2`]VV`Z7f$
%6HUr8Lo)G>@>Tk&[6E?UYSbb%IUhQI+mGF-S]cY/f3.L]<&_.T6V,jE,iH]TFS:MmKEStX!j3gMpQL,cb#qO<fQH]V.;3'*nj*[E
%.L(hCcRRkC1_tnO[$pMf#3='Q\r2M[=ABBMEK#?d9!BMJgo`MB?db6WZY+bHU-!5ffTdcNmh2j9M>=adN+/T[dIW3YU.34D0'$:S
%FI_ZCf:=l#Nu_fkhD>7'R@lK5^u\$$qeGedffphf8putNmp_2:Rj@&a!eM>tD5!`@mt>NKVh+&2U!m&tN7L<KU3b2Y$q8%a,S=CD
%YeruH.jX1:'(R[^3MAi'<?gi^B-lU`B,R\$"<D4Y?8oKX09ipWDoZVS!s1qM!C**`:B@ed\Euo(/1"uA&hn9Mqp]g_$+m>Cr)+`I
%.t.#T;c<=!YEZQ_9#)r'kdhDrD`JQJ5B]\V\ul1[;IZdZ!W/2S,!'H[WCSd[#jcgKbmRInmuEC)Q>!]ne@]pfa.+_b_=8_]kGFo7
%C$ru?0:<lo\ll_$8ijAoi?[cr'l%&F.umGJjt2g^6+]_8H&XaQmTE%UQ3*RR0n<oiBq;olm3"S=k*?(p!27cO>^o;.g2Pko1JfI!
%B8@51ed32Q"KceJ-9^P:iF<8goB$VS@Lnj;#L)-o-M+Q&UOYho>1=..GY-'APoJ-95t$L3%.@1#foCu<4kJRn9!:k7*`95cWCL+.
%W=EqOb+YpcF^oa4e7V!(1^Z8gL&?lrc:B+>V<X$3TqTjm=X/&?L4W`#+kNKNIo=4@.H'F^p*jB_'XpO=(`ER[OTHk&kCmP'f3`^7
%r57p"P#?S7<k4^UI::hsAG'Gqqc^\3/G>0q;?);21=dP/6/-.;%QI=n[!#KT\hW#bSe(dIil44a5G+T):u>aG<!`KU-1ec1"T1/F
%cCH*hd"n+RmOELV4.'j'+lr&/YR*H5PWguq3`GjW4]'L=.,n>CZ9F.j-q1e96DdKYF/XW2e1"r!Z0tQF5q1`='Qd.YGVQms<7`"F
%9j^kd@'9;Z1t9.g0(4_#*>88-c$,L$C$pCS]j^R"R,Z+\!B[0OYuAF^lKqNcN[\l4'X2'S)ES*RU1E,[ar0%0\TMT=2mIkC)@@lt
%%!3-d!4gYGQt8?&!9"YiKdNLrD!2l#-g7j`5GImF.cY"BO)NDI$0Z(+">5:()'RCeOF.:\E@QZpe7W@>lI@I!Lg;6?^WY<.S$=b_
%OO5=??Q!C<1H_"9/'X:o^NIn#9r;k&pi4ER'$QR(gP]X<'7!3u0NDLRoPGTf5;(@3(OHJ0`k6^,\=CP:dK2%66,0dWo@hrsJBM*N
%0.l+&(A(6-33Sm>@.[K8V4gT$Kb(/L?pK0EGCcuged"uSiKN'cefm(A;]V[CA6LX5HFQ`E@]GdQN^I%+l7Lr@(A)q=S&V"#]8o*P
%c`:@/>W(TjRSP/DBsTYHf!)]"^nrtspj1d/>tVAXd-i9GGMWpU,9r0)h-_mQ#eLPsls^^+2ZpKl"Lt/mf@C-Bh2eOI0KgAho9.``
%WXE"eL!9-T2LIeX^OS1LaCHu4="$#ZT$(HqYHQul(\Hu#\GfLC^(7@@WaB,ZBJ*t$f/:8Mg#n'Jpd19q&T>IXa^F#.0OT8&p*nq*
%(\d5'=P?3WnH(%a+hPIMnR'@(0OR@pMR7j!Z5<9$$eXgbr;$K7J#?/^Hl+BJeRCL5C"s\rC3$BWQI_c`k88ot@$'j'n5^Jb043%h
%R/)Ms0AcBAeF2"Iqn@u+UU_SPNB3?kIiOi"KqJ6r96JoX9ZJ02FO$@rT"/bH'0@T'42oGFLlCDg'eR6=GNLc:&4,5hOop=TP!e]]
%h:_PCG(ajF_gqDecpTQu7i4!>$s=j1bSC;hNMf4ea*r\MA&Ei#?-j`JjF.s8;*7d:&'aS&/p[O_3cQ&le_$WWAqF'1IEt+QG!4$[
%\G9FGZ7]g>(U2:K:R[>-lb_e.!S=o=q-Cd':Z>uo/1NBj@q/Qmq5XpmC$T#/,[te'4=o1`?u9(+4_U'ud`tnUS3t23m)O2i+g@Fh
%^q!eYk6YUO]YkK-e[jgYdqEgUboB3cpM'BppgY\b\0kY![Ou6D(UDHsRIZ'ur?=FV!Q2b&POE!3]l3E$lT49a4o)\WI]%89LJE/8
%9>5q??I4n>DsetlER.0/DTN\KdL07L"jHr%4p?o;ig+rm-bYln?bkFb4@;:jUPmm\"l/<N[WV\$]^m!9d#9UFC)8S!$ej>-rUJ1B
%oOBPc\>roNM_=4.(\#Ilq\69G4u^O4LqegHZh#k?<SFA]0^Xl>)t]a43EZS,Yp79B6&4laeT]V$r9[Fu68*5r(GN7T\`8B[p-OL^
%60l:gM;[-dJ;%=bN%\R@(G`]4)<cdUpd1j,+a_"TdGR$S+$6'JXjd+VA3h`PO==AS?7f^;(9i15:l`l"!L^s!GDnpQClmB#]&]J:
%5:0`MMJi?Y<W5qHj(DUAoJn5o]o%E[>[taL)-4iH2Kh"=kj0-%g((/pbr,b<^sbG8V\`8,p3DY[Cf3,.&sp_bWY&$?4)(oirXdKG
%^%^B?l4-e-r2aA%+N7)#$9qC,d]B-)'*8s$q:GfU4"1k^i`OkcNV@FS=/;;SFjOZda$J0lL"7#34gpm*(ikA3El8fUg;k5&PkhLa
%B,MWP^jO5bpK<UtOuU9]&]ss:3JTZC?^Qh?p,&LlWihs%km#kX9"fgB/;oFh\&c1'Qt"N$%8q>`?F]o-o>,#^76*Ysc;Ujb/8XP\
%/B!oQfk-I7#]_CkC-EMP\);NCQsQTm`?9(+a<7!#YF63tmH_F\<OTMrHo^]`2^FoT\40hpr/qRJ?ZLPhEY!g#0:.0mL1T#=!="P'
%\E.-J/^<U9i:8)lGg?%S?(,G5ZfS8lkn8L;^?/^*7&9I8h7WLXQMIA/+0S-#G7Zs`USID=."2>$EKm*F$ZSiJ+u`-1Qu@2B?d>EY
%63;+*aif;'U>s'a1qtn[KTB?M[E(B7BY$7EPUURs$i/udSTM:;GgPZ]PpRdH[0_b=g28q/':tAuM8PD>3E^WOq#[&I\mM;ObJ$bK
%\W$bCH(!]9:XC>QS)H$hL+<@#_RWN;Ur7u<;.ofZ&k+09,XuK\VlrLQmiqR]4qKlWAhVCfUE_M=#!Di<7r7.m]_X>:6_hE]J$pW`
%_$`N:5Q:YPC5;E\CK;'Dnu$Z;-J>[<\VENF:J`i(<AKC8Xq_N/'eg*aFGTFM?+BlFP/(A`VLPh:"CT0/Do0h71*=,2)6Pb'J-:5(
%(_bt+f12IkOj>teO>5L#l*ZIQ1qJbC]ctsZ,_ka@Z`45>Ll0p3+M;X\XFi9i"2ONiN%C:mKQK#85!FUZ6$9(2goJt$hun2!9pV&s
%Cbpn8hZXojEo$8TAoGQDDn!Zrg%4<aX>)r^S5U$BF1(d/8.u+`*RaV2o]<ZUhZjIlO/pS'Pqe>lJ#8<[L_JV1@M*@>HJ+*1+2#L^
%0dYM9HoWJ0HS##M6,#,!a%`#brO"qLDU^@RU]RT7/IWOfA`Y&VM!I,eHolQcp3Lq3]=Yd-)2iRWI!F(,%O%*HAHYQDZ8lD<"rTuI
%8Sd*MZ2_/#59Jae)G)KZ,Ra.DlcIJ>ch*b@9uSNHT?lMmaeXlFL.qH29%J5F_ttO"mRp'tpeqJkqJuE$T!4ONE+\O$<q%+;a?r_Z
%nN[;)]=&tFGjP_7n=93MkstAnU&7qAZ4Rh=ZcOBK@m3C1XaG-,8sdH8iY("9ae2=Mn#B/nej8AH^\V*Z@jZ\hI/'du0hok&A")j-
%):QOJ!lDmQ2iTf"CmTV:pA";>TMql:p,H[K:LcJ`rG(_4[:@pX+3$.p4Yl/>)Y_oO8Y2gL`6M[jYG\QW&28/*Zt#-4MG_F6ZsTs6
%XG8N)bR\3PmiEA<3/s0nF;(I\OiV^S>L:#FbH^@MZts>)DE`#K:Xtina"^[*Qp[\JYi+a^4@_adEo:aEAI1BOec"g3TC1@NA%/b1
%^G<_50/CQEC\E84HIDNP)R"+6,ZJOc'Q%=0T1Bu:A382:lm-<f\iK:WC3^k2q@&EL0@_.]@j_#-_e=_g88k?]JroK`ZpLVmcs,g0
%;?SiK=9e.pX,TQ9XB#\?e\k9e103=L#(;TF5Pu7J%'#O8[i$P!akR^n]2Y4o#5+5tb*ROiW>h'I4S>g@ale`4]0M*hU6-s,n?Nh@
%p4Y,\TrVkj;B*.fLG%;3)nRp6fEmh'$^HRbJVtsa5hNg3acg,?-BfWP/K(r./"`3dG,+sni>JrXbTaTEP&"ROFA`EVbdQ=S0JZ1=
%+"$2QlYUuO-L%alp+g;Y^]t('PBuS:KkH]XSa7o*S/^u@XBRX=1>Aj<KLlnl<3:<>,ZH_1!"%,aCK*$@.!BCr3.?sr.X#24jL@9J
%]>*(qlU!&[/\e>TLdA'>k#DW1>%o>NEc&,FHlb\O<tUcHH2EARlb[YZ^#VJkPqnma/(.$%#oJRu2^j=*qVP7":gbiCZp.uBUZK%M
%YVo`XXo&(CH%JJg>dC;;-7qI!1r2$,R(F7r&2tSlPX0a&dULa,W-!W1^')Li;Ll?7E^"0g\>4cZd]$;sm5nd"I-\/8?$OF[8nhI!
%.j6<*>dEbMme8rDC%FJ=&a6Nt8(3b,dX-Q7'B7dWdE!F?WCp#:M8Ur1(K&%1bN<Wf$8%MaI*&<PZbN#kcef9)/&4O[2`G^WK@l=D
%C12spX_GIVh7"f2BgSq4E'9TV"Or:NhZien#t)XhcIgUe4RH/^N=Rj)8Nm^YTgS(%Vep4f=3?_k'KE7=>I#Soh2oq'H-oI\X7BN>
%PjtOpoY#cEY>pVFp$@-9!"Ga#F\-"$l6%@9W;J&q!@DWpZ\N-h?A(7(#WK67pQu5U7<dhA7uh;j\fLNfg'?Y^`)lO]^Adjkk6YKY
%%;s%b%Q(!di(nGg1q'!a^DF8JW:F^[&-gCK4/`9e45P!:?j!8FdrAVg8fERPM$Mh1in>$oTlb6<(M>^#iaS"s87iERk[pgtqQ3r/
%$p&e+OE479BX%1N8';t@:M-/>i5@QhSnG0`AU.),UXOB:JatQ)0Q9F5q?2odnH0EL-M$h@:i`"Rq)SXN3<+)Ifb(Foo_iNU:FRZk
%,eL[R;In.KGtAG8S0J*]ftRHBP9BBhlaA_SAYNeIc7Aoc=Y<ll&EF0@^-S_'+R-9qZ_A<kO-WXT:qCM"$c7b$S>HS83qo/ZDG2q]
%HsFl&BSpE4@1U#nTEB=nlP!33La7@6p<(Q))pRrkQ1#Rn$L'=9O=*&PF$:'SnI*!gChpcQ)Vk!JlrF/i^PBh[LqpD5,r'73^/AFg
%fIY$e:b*j^:&27R9ie4$5Eg602d6P!CW]e:(;A(4\*c3E<SmHH-U&=J<3odc=V_)22e15J6VPa*p7IC=p80p4P*)^h!r"9^28s3B
%"'^M=Weaa]NHohk1g#WS/hELi\7V.fK4kEpKMIr1eGu<<p4m7I0P9rp52F=EJ!@51R\tQ+R-"=1=4:8i5ls/1XG7t6md@KA7Q=L@
%[;<^prf$m'4P3n[SjkG$](d=/C%Om#j5CVKnKb>lLm\<FSmE-g3kD(P(sbNAdpT\m2sBId^]$5^'1FLl.[7UqD^MAYHJ'_Ik%Mh$
%^<MYDj((r$:,/!+:6Bq5p\/qW,"8@Vm(AmY]B_Sq2[=qA%d)(s+S!/b'ri]c+[\H=o-NHhRd.^3o^Xl1NkfKA.96OO)\[uoc%$H^
%8T3qBS]X"T3EZ>&:0Wt[43imjG"60BE,#3^[-[a*\$SaNRu.FBr>RQS]41@;CN[$5*?J`n\75't][(5*@bTLA'M"[*\\tUT98$.'
%)?0Ci;DG\!)`-?)S"9%r7Ve$S3-O`@_PfPYkBtUGOnr+AQGt_-Sk&*"_90\o<qE_2'Q,dVO[4t?'[!dS@t#&b-['RR>GUAO0W7k<
%,pr"3,qo)Tk^>R-ejTb"+,_m-AAk1\?fa"kDk8?B;GKKho.T=RA=`80g'nG;m37IZRb..?HPN8'3i-n!4lP]%+!0PM6[*.JQ&`Md
%=`H"t-0H5`+BsMP:OQ>DoQeG>K-!$9kn;G."h8/,0Jkb*DJ`,CEegLt5X3JN4$Q^26-hj=8tn"qAAb?ajQ4<S*"=p%EtPloYOj4?
%r=XS.6LgF5S'-fT^+ECA#b0>]B<*:MMo&p;HWMSI5Se$.ZDi(h(tBQs\TD\"3kcl/J0]6Y'WE*of?N@B$/;+qE-GUDYpg:Lg&ltN
%b;%=7W[jdhe/Y"d@W*UZKHHL4,l@?n)ZUGD>-t:^^5VEIUHO140/-J5RDd@pV$I_b,@9Mq4PWOS;.e@T1Ub]]SJpE\G?*nCn7Qsf
%C#]#eHo$s;<BoNW#rj;I_1G=:.:=g"0CV!f'uQE<)P_,T/g$+<^mp9'H&'C;#cWogJb%-Pl.hW[Y*Y2j:''1,m`:Al,(?9,W,tS2
%_""YneQMT#+kY;gT<^*2am)U9TLL:@?)ljqEq*k'Rnu&>)ERO:AS<aFFLmKP$C^D:0aYJTjp&mqB"75o)3Z_'#/Z,](/eCAOro:P
%0S,p@?`t9oqk_8XR!T43=H#Q2;NT8gSBWQ)S\-\bDt6MGH+<f1)0GoHk7Jq>H8g&,:M[DNPu<uehW.@Z9hoVN`IA5*Wu/40T-cR/
%/WrMDE%bC^-ltH`6%9*aRG.5*XTbehgug$%ZGW#qRah:"%#<J%)iOMSa9Y^!a=G2eLN`ZOpN\VmPHdglnHq/h&Wl:AP<]-=]P(:6
%5QgR2L2C$9fP9tZ$mJC%d[btN<@_N#\!7[=>>]]JQ8ISG2(2C,OV.0h.>X[er/P!PCNPA:Ot$2LO3uT0pL8H`kg"Gggr)Ag/cuP_
%Xj^XL:1BjXRH6a,lEmL\YepmrHJD^N<g^k[6:@VBW`fVpd)UQ?U^kdC=%Kg]cJ?<#H9j[)>,7fkC_HaEIX"1hmsE[^fa[hBpWaJ&
%AU4gehHmcfXHRLBC=2ZrmQ8ZAK5cl.[Pjl,W,+Tl\7+rmnP2VfjG27,DC].oV<4q"g@bLh:c)=B1=h+Y7"gOE&+CR)PqjX<b%A49
%#_jd(\i%4h`H9.<XtV%/TLmFAm"_Pcj"dl#2)+k,P^(L'iA72pSff@UU9/F'R3%k>[X[.pWQ)XkM06nNq0:)H-*'"*ocpe50r*V'
%NX'Q@;d<J8D6?EWLrc2<m=K64SX`n;V"]e$T/]VaeXKDCc;t>BF`Q[@earZ]o$7P<I5<XN@%N<*'9hS^$Up;:*09IMW$4Qf.7f7.
%+(EhLl=!kZ\8<?$pg@&bnt=*?;Ll+.NF)>+g^3kAGttpV>\G4tUG5E)F2tVjo9qA2^IV+>Nj!\[OIu^S6\\dnb=CDoQ#PhV3?1=X
%`YeC]1ZttTnnFt4_OAW:TPc24M!MlGAkrJa[$hqM]S8M?KZIaE6DB(.Fj+D7HI[W[mE5)kbHpUQ0.r_!R?Ul]ZUP$2<)NYD2(b^U
%a!MKLZcIL.>lB4tV]W.r[4+<oY1c?"r+M<D@nL.!YKCm:VUb,$@sS0HEDNE`C!6dY7?JWuA^G<O^7_sG7NIoeFJqj2pmPU]TM@?K
%=oFcU@1">,7^NU=k$&<)`?=qX`n&bj2#+Suf_TER`te0GCq)6##ph<'R>`G%d/>Y-:XYg&qRZb$1>7cCQVe]#^<.Qsej,a:or8aI
%,P,ACY-5V`lbJPKMcX3K``-FaBT9_5@/$?)O&u.q1]t<@(Bd=f'@^hMPXS5qQJel6+MXO'F.#!'VH]]fZr<F4\QJ`Kff!+>pC-;0
%(?a07C;dYfVNiu7't8igCuJkMDI(oQ8]ggVntb*sAdeIjMW/dAZHbIs5U-Sj(5l'\OuYaCnOh)9kJJLK>Od_>A,m@WS'[Mh`h%uR
%Z,=0F,<@'A#H)g%Coc-rI$I"59ksu2/1#4bii+t&3K^.c4/-8['-J?L,g@ns]Lg;tRajt9;'-3n99j)8\uSe;N6E8o:b"KF#SQ51
%g/Uas[Qak:VC%P>op-t]9;?#>oY+PB0-b27PPh*UD*?9f.d't;rKq?d>`=D10r8-><1?uVcWSnpY:62<4kN.($o80]]FNLBAabmo
%nU+.%[d1!5Q(("BlDo]h=Q3ZT1E[&$en8W0h;`"fq4/CJ^O5L@ff'X<CPbO4GFc.`*9=!I<^19G**PdN/K:PVZq[lrK6;#GBG1Q;
%<S=E_0tB@jlo\r#c'+O*_mF[anN^%0H2]]\QF?`0W&"U3BiE%a#X]"?[@C@Q7&F+42fI^=UofViI4sq<[:(\1'o.;iNFqQ-ZBhTQ
%)#5e^k#aR>1\Lt`^\1U](<L=![?3EK:0N!=d!Jf7>(ABObo^@&#BikXQR^V1pD^2HG\W\@rK(dXTXGOXJQh*2D]i]Vq;uZ=goL]f
%/@l>r;?2s,mJFV8XZJDBqb?s+$*A5'ke2F=2>5`!4E$-(T"IZtX-Iau)tUqRXKWCVkYj4DZLD;,0GK#$_tqf+8b?MmZ-umP&[kKS
%pMATcH\KC5197X>nq*P<;91Y,pW#r$;"^aETMYpXrCS2)-<Kub+T"n6+LWsJVUIe2j:1b5g?oB>1UV6\d"MPFF]naU3!2k&Gj-iB
%_^?t*MR'ul)l3ou\3su+:p?oeLSd@XdWjT8C@(8Q;-i#B[8GVgE,`!9`gW1@eK6?GN:1E+oF.1Y9F4Q674`_I_jp7mGuZ[iRV9g4
%XQEU9\;Z'(frC:YH'V(XH?#gqa`@_:*SQpK6+5r,PA)!m(Wq0OS"hp+pOlaHAQi7th7]9IYO_(^l"U,!YKAEKl9dX*XeclIQYpZn
%o@Da_:9ZI!3!*L@Oo*<G&Grc4ca,K]#4K5H>!FZi'A/Ke%EZZDit(YqT:'f!i1)9Q#Es-b+"U6YWS.mqc1ee$/Q/5cXNf-9GS4/q
%/HX&Ki:@bn$"JYm_VHXVoj`<_`<EtKUTP3\U"/I7#TIb(Z3BStooILVl]A-Y"JQX_!AhAjII(!>B9o@G*1SVR.M_6-^0inJ;0)QW
%2hOQW81-=0dETM*gGLilh&J&:]*$D=Jp<s#Wm4$ZBJkrt;sCsY*dt)G2l"4%=DCSWER&@[$JgMlnGmM#cjJ+\//P=T/gIgAF22"N
%)-"L9k'*@8iAnsMA^CSmXCN$Kc,TS>/&3?aEjHb+_?t6QJ;0jpk*+,VI*DhUInmAK`!Zd:R]sY$2r&`Q*T-C$`'T,oZs#*?#j4KH
%>r-.9D=Z6@'F6@-:IaW\&Lr=*MD'g8h*tXJ]kgB;_!n!r0MN=o)3[1=81+Nc(a;if&P7e7Zp[HZ@KpD\Gs"V=++"L]3Ep9;!uf3L
%Cq<am4GdoT^YL(#RcZWt:Z(HlZs#`9(`YTci^%^Nr?aOXY,jrXSH4.rBlP%<roIg#I>e9@+C\"samCo\;NXgrVWL2A17Hh]6'sG-
%5pP;!O@jiG<+pd8#JGqK6*9W)j<M\TCaDd<`YPjCP7F;/fQ4_IC1t7i.&Kn>p/IijkAnH5I)Q]E60R'eH5"VH9.t\@ar;?TW6HC9
%p+[]>%*Kt.JN`8^G>1OOAQc(!gS@:UAQ.eo8eOjY[11@udj/^6-_*=gS+S@.)WL]EIp<=l_al(1169ca]S'oB(cc[;[IfeTH'1hl
%@db+si+nG4OA80ZNc1ZiFhP)F3=T>HqVLY)5b$r\FRI;jm3^/jJ-=5;9<mkCS!M&s[@O(71q03.[XR(EE;J"23"k+AeGRf2U:>%k
%ZhX\Q<k@6YG"U<bdK8UG\o"UJJjHm2BM'GTmA\aXdXn(0DEV[+OViK!4>oG9l-nn_Z/k68[Ome2!!5[hU/:lbU8=L3FRA$D3:<@\
%\9PnD&b@ieQ8`;nPeW>_#]]X"_jGqdUpl4D"fnDS$Q;iKZcR\%B2.)F;p&:cK-ikrS^<T%%mc2H5FUuJoZd&p\f?]VNo5t;5>SS=
%N5>X+jclf]KbdCcQ'\/[=e@+I6fQFlG7M6=B?:t17n!s7?Z'3k*cp3[QqJ-NPodI1Or28%:h1rf6>pOEoU:ti_-tVo8o^p*$^^]g
%^+$2$)EMkh>l1pD'%=5S]+H?^KZHWPJ).N.-7gN_?+D-=EnmgI$o6L'*Mi#E%.^e,WMsAQGKM_bm>]Y_:W?A_-%NOV_X<DD16*#9
%R9,nr(:E`T@^g!#>U%I%<$u'rX;6YJ50Knn5jN)^](^g+#BkC]:"X&=d;3Q11E5t/5Z&QD)sX_\!j6>C:Y47Gc*7PVRI+AU9c5eb
%2)dl3+4Qn!qPr&(8qt8-M]MXX`Rb>MOXDd'9(cFD:N>.9WNoopQKEtLX+0F^k9lHQflCE$4U<3E![t^jM_.`[lr_.JVKAXG@?njk
%ZnWc?qoWVM6[##`Em[5JR,$0';%3Vs7d'aC:.k0>Qk@F!XI%=M3Qn\kd&'iSZ$ESLm9msRY[S5TiFKG#Xkj-0!V0Z1>aF8(CYL9S
%&=C^Gq,Q3Y&+sgtc^h2>[n-k;,Nu)S74r:?8@6!S&h6iTALJ(KLR:Wn-hBqfhi8W]Za^@UIJ\mS"irGh=D;Cfd3k6;(;+@24'Wkk
%FcQ0r5W%%3`2?a6"?sB'Y?@8$]PMNTd]RT\)d>@=hA3X=DN;K_]QXTc#0/Z;hI-!,r%[$q"c"eC%E7&i.`g@_X&WDCpEt-L_,,fR
%I1BZsB/nB.R%t[+]Td):]D&&@G&_&JYO(7V>+H@GHQEaI?j2&6PGM@ug;C'RUMq%PE`(J#l1q[gW9@Q.Ir$`8j)@-$k5<JNTgp64
%-TP1ng"o3P`.?CX]tR44_@i6+iC]U0:g`"jI@A?M6itfkUGl<meZ0qJ,HAlK=M)]R.R&3Dan54h-<]G1EL$AYm6,VQa,Ya_r(7$]
%J)@B5@IpJ.i2A6BVG6>eV&T\0h-:JdZK6T[m;:pWd$$$AdpHmN7FH<1g<a/fNe4>dTTJ<9FgsKqj3:?s9J'bT\OL$;jV3$pqrhad
%DLN:>GrCZpM_O,_:+4aB_a?r-b"s&]L,3KNMl@:mJ`<6PQ9KXc.JB93UC2Le[HDul3M=&Wl)B!(hFj#dfet=RG`Gt=:WO]["'ml[
%!p2#6CGSN-A01Ai3An5`9adNLm?k#PP3?:f@m!f-lKkgTAf[*fo1BXS.dn[^(<o2jSRe"a',(ZS94DT?#tf,]r"S&sLsg%4G8kIp
%7-OPfRr=<2VCl7@bopK8#$U,<%IX2/T@s4HM-%q?0t/Y96?E+MYp`P`f6R8!3A#o-)<S8L8umTUq#ro)1O4&670?#K!"2*H?+ZP,
%LQ\cl0JkF*dQsqIRC04R"U^<ilW1=JM^:ia&Z!CEe`Hre+(Dku^qE,S%P5cUrQ\K5D5TUiV_B.Y+-aLL'HIUk/uN*se,/epl/7tn
%ec(&goZa/-@h[buq'(_>\=,V\p3"s$#BN.'B`gJC)+\2.jQpSJ^'aG,jT=EU`G=?b#mkVGA,7FPZfXtJl$H7RMV$=HP(37kXS>D-
%q:<,Z;qkUh]hZB[1\-D.[YjP-Eq34C[l/j:M6&pL^3UgK2!+WH=u8HOILA*u7sR#]'g(O=PCM*lJpbkH*r_u''`P5Qj\hR(]cOlf
%r$CebgO96$Ao8rahhGrc0F"AiPn7+tJOtk!38_E_[2W[jb7/8pm?:ArfWD5js2Y'_D$s'9%HUA=R$2'&E:XX_bZVr14cEcA-.JHA
%Fa6fD^%Aj(Ur4,dGJDiRlU>YT3'VCZ#-$QA%=EfsS-g([+(o_ILurBa"]OA*HGu:SV]sX^LicEZI@+,,-e'+3SgG,f@$@G65gU[<
%\kKh_/QN,,CZA1/q,uV/+QtARGU)Kb2LB5;#pl"iElm&B7hoZUG0+E"oAE:>AKIWmT_V.Gmu)eRAu*rRX6Em.gAU<op=4&ubblXK
%_cNQ%'oXsBKthEcHq<_(3(NF=ItcM#GHF9oXY0.U.D?E:4O*kbGH"VV%F(Fis6b0o;!JY7[Nq<D.N^VgZqEflCdo]%Ph>RMs*M/]
%l?UJX/P&"n(j-D,(g7ao7i&:;gQ]\i^iQ/',QM[W?,Z1%S%_Zk2(JujnjV(,68F*8_824TiTddm_>?&MOM8uT<Q%3*+(QKmgBaG5
%ApTtIQ_NC$EQ+kOmT>L>mMten_m^h!qNW3Mb`J]68=bs8&L!Q?;Cq*t/sgDob%r8[E\MumC*J3Y==bVtD+?1An6o!a9k-igX>e&D
%C`CNe_]GG#MOj;(Tq\tV:%jC3F$p]\eFndr_,M+96(#1df/3NS,?o!<-E>E^VKd[1C.mD<_<[J1G!Hj)VD'$QWZGRfX\(Tbfu2t#
%BRDZhrg\[]f/15oq>pqlYm?@6HB-X7[d":DVh:rfDj[u3:b1l+1+8fASfiob'ucf+7J2(P4j+%N^h-Wl%t)!8fir[eVX]Y"MJE[1
%/bC=*"P2n9JJnMOo3Qf=>G"&oFWRXA#E!?6PnAse%."j`NCEoH+Xh+3',pu(7SpZ>Zu6(**!.8'TZe!EF9l1n")<=9oF=1+A"`E!
%Hp%UcO$W&`i;A*MEld`(A=XS-?j%FKN^el['=cc,gn[<>nZi\?b1_[%28:e!9p8Gg_)640o`gh&YJh@N?OW;17bnFK[YH".`G[PG
%D]RD=%daiUa9PA[EOT63p3jqs`Z[h*SRLF;!i:+JArAYrDl!'5<Ge3oV72p87qE1ODSnJ-0OgX37pPF>k"Q]_bDSCLKfo9BDL`='
%_32Cbkp;d[W6(Q3g\RS'?Xgrq1$%2IF+dT%(!Xn;e3kB@'oS>IhB8YEnU/3*ATStIm9.[XEI,OIU!LpI2g(`UY^^o6Ua?Tam[!0!
%Zl.-&28G//2r\)cbO=_:4sa?W.[q^Tqd?+Y!7MKY2$/(5_.R7Cg]4-/":bpYN$El7&G.seU5m$o6br+,6p(N/&&Hh,!;Hha4p9#h
%_>>HFJIpoc7UCnt+<l2j(bm7%nVE;r:beE(,9LZ2fGnRUrT</0BY#2=DlIq"3!Oo>X1#.i%@>s7QqL=lg0.<o1JOk-f<t40Llt\n
%C4Ee,.!Fd;fWKdNPtmT.%bfIOAU8;>iSEMd]9L[_c[YUZ*1_9/N5?<>8CjUbAdoJ1R0qVI7=;9?Y#!mBpAQY0K-@#*OQBlk]J*qX
%(c1cB3E\g60k9X?@@tj0;WD=L=&_i9X$,#g!>EnK")$LN1MX`DEO$!V@YW)a"#c\n_p=EeB\Z-;kXaI;[LJ\d#4-LX^:b-Yhk6*L
%f*;'D.:ca)F$Yi`.<h;M_fjZe?g59hFj0#0jHptYh@@)@#OS`_p?Efnnqc7Ma>lEI_;7+l&%TQtm+&^coup@YpO3i;9/W-$@-*VJ
%PN5tFPieZM)T[L,hF'OWr!^f]<L5"Hl6#:hO[%WhjtI)1e=G4X,$e[d0\u3tre+Gt!W0>2UngStb1H0:K\9oY<4%T+^]["L<#GcO
%`*`lpJ4%BXY4Lc#_nNf5i'i<^'!fJh>2.gH;JI1+@i'jGPp:Brq7^X+qf6GVrEFnA>@iS`oe(#.DY*DV#D5mHXpkB7n-$I+rZQ^#
%`<_3:OadWC8H^:f6K/bHR>cs[7S(,Nqa<^=[+m6:Vi;#%n'Uj7)+:UiFp==pVZ$0I"V<S65H;JihZ$-&gnt\FqK83*[u5KplB22/
%`"m@NFU1]0E([n2`rTcWFjgcqBTCpgAECSn<n!CkHUY@)!g7]NB-m)Vf3"+o/Z;2%#mo>i"S0XH\l*RP:Odmggk4Hg=1IZ!SXEiE
%4lO2mFZ830nlj/eT:Ab!q<XVm``6&/rkFo>oUqJQ==t.Y.RNAk"NVHGKYBmjQ*2l4nc,dfblN(R>6GT3$::d[&?QMr.tS]2>ob\`
%fqO6gBWnlNkjoODO+r1`&No7VK"gVjO[A^k<YZ+2Qhtpj:r,4m3Y)q`h]arAGVqQZK+:qg"*JTmn"OZ+;4)/&DAtk.#11,'&TI%d
%%$M,$DBmNa&-t5uVN%6h,OjR!8-@fcD+2C3)M.$9Yg!aF<s0HaSJK@PUkA/o[j&CHNDOO9e7ApY.tX=Q5S)s.dN!L[6^o7GYR#D9
%H7aeP0-\in#W,&SI`4foL2Z?YFLhn<d')YT52IJ8KNG5i&Sl(`H3:u96`=?(l?i_\-uY4`_CO>u#W4L9h18t'+k!P"2En](Pda0o
%i>(]JKR+PfmQe;.&Em4a=s&;:$M2b9QG,Nd0rcD(CD8^C\I&%E_LWWKor8E-!^6_5d0Kra$Y0^`@JdRg&3r/Uoo4KV=TU`72_3h`
%+Q6+8mlkVo@d7CS?_;p`p^jSl#ga))rBm*+#l>`rib,."lj@>S7+2G34bCn?&-o'-3!tCDOmdi`P>h:P^'g2B'B#4i7BAm`_9-W!
%!ZVl.l:Xf2LEHdIkFgXU%7s7ge7s?/R(l5M-mdf\'(Tmb$TR^iK$HP'LS0IP:scN34)B8XcUK<l7hi0b\r-2Gs5nY+:P"].\'NOd
%s8H_;b4MVYA:"U[>\$iNAp52jD:t#f<!.3uj/4VBZ(&n9*lm@-5$;Z$c$ULPI"?$X<Yr3b0jH=&ea.;",3hXa8C?H7.e2ccKflqU
%7@^]QeME*!R"h3AAmT:[q=:IqHWs^Y@q\ip>(\P$3`a54D2l^3<D:5&HIl8j5pc'"aMpLphgH8*c_[Z4goTKFj*;<?U"_bg31!KK
%Dlhp+#<Hg61<3u"E4;NqU\OJWL827"NU^`+6![]g`/C?[h+OBNnopZ_LCGLm^A;HmYiZ_$*QbV,)VWsROCBufBJ"36IpU_HCPd+.
%:MOqIVjJBoei&>Fp/'hEVKu6_9^&I<LO.lX,AAtQ\jT3:cDRnmrYh*se"U^Si\1cFMpc9a=ucLAl:K1JarBL0(^1@EMqbi'WAP*c
%Vsi1jYb%.s_n^Tp9c=5edr[MWXK=J$gR>6W?p+p5)-@DJg%O^,ZJtq$%0Pp)-YXH#:GF^8/F#]8UP4<t'k.+/TdePHYdUCu]l+cj
%%mS5>"0:7f=p>a#\N)%YQOkVPB/e-mY](onH_R$A>6`Zrk1&At+*NR.l14<^[%*P>jkI(Z*d6)"a0S&P+)KQ1ARI[&!`(Co3)1M3
%=R@9Y@KE+8>U.Mnn<UPX@6$f;"p6eteD9]\L&>[HQ*$S5k3bdB'\Lm<gM#M.9m:+5oX&c\n6_cL`Hcm=0Wg-+DBVmEVV5L[*k(kL
%lsKY-[>;MOGHTKXJ(Wjd@K)%mCk_[,[_c(4s5?[t;"^&u1\k`0bl=mV[)2_ODg8<1]0JAuNpNl]E,*m<]q"FV)Ulj7MDh<]_eTE^
%!Gskda]<Wa@;g#ugn0ltUBU\e>.1I%:Hr*Z:]EDq/)<G'.?.q'<9&jB34l2mkl/JFn[B9,7PuWuW?p_kj1'[rU_c/pi"G,bra=#9
%76Y>SjO">8"I_8MDBi)oRH6@2b[CMkEmk&:q"uKC1Rapg(fIp0:7qOs5(Um0U1-0.)Gj#oiie,UfF07eY^'@MiC&A!ko'0_^@G'l
%icl;.,%;58^O<U%4[&.?d.>.[#5\+rB$B;1R\TlH=V$-++4feZO2"p]kkSZC?hema4?i,,Aao25X)R"i)tih:Wb4Hlh=EGXYG*,d
%r70g@RbpFpio0>IT@*M`W0a7W]B<gSmH&VBYo]N'AaD("qUad&G<c(fhgbX_foQ.'mC,=Zq"MQ&`G[s?Ds./uiUu5<s8!Nrrf?X]
%rq?*$q<bq'IkZ<M9E+<SJ,T7OrUBfe++Esb?iQ9RrXYWM_Vi)%I/\&Va1S<H;Yu5VI/:t]q9T*#o0<.[htXJ:[sdTbnkml.m\Ao/
%h++;+h+'&Hcpqd_g!B[73>EtEJ&BD'eZJ6MfiGlNAFqbFkQq\^C%SfMs"$+k.usaMqR&iC^\c_Lc$us^DW4`mn703+.%/?C-^;CB
%b!4rfFNbiQKHKfn7nopbVN65#B$f-NQ8@ltgOC30)tUI-q&B1jZQ?:>O,*R1=/=;*$02?9,JN>pE`r9@?AA/^mE<j?lg\P"*i31t
%jq7;uB`DfD1:3*eHl:X.>q\SB"T:*_=.&\mB^\9K015W8LR4]_f(7)35-0/Mg1NR_%.0f2?AA/VcS%YtA[a>1K<*bUbOBLdk9",=
%L2YB$f)I`Jh=da>8G5:(7id)jNuGbf(&rnMlVEmtO+5"LI/FXii8^F`"X!cK*;nPTlPhdE-K"jLj\H9H@]V]6#oM!_Na]`fRlrKp
%6,IiYE>HG'qQ&c+mubrBKDs'':=UGpl$Xq4AL\7Wr4i6[kPomn,bt;;s(D-)MbejtlpT*8C3c%Cl0:&!1$.Wp[^l1Q?!5ICc["!_
%?U=hoUJ0""DgD9D.oS5*.HsNc)tQ3ko8TZh+)PaFn<9K#kl>DlnO3.,B>+1lp3hD"n+,:_i:Z%mo"j`-g-%e"d-j0s,U[\`p5a_!
%e)10(YC?.?^]2i&If70&s-6UVBE+>8cHh"<iViA?s7ELUc[YoikMQ42pRcs/Rt(8,07NZkDgqU;^]+\-aG6O>p7't>r\q$%>b9`S
%O8QWIr:;pb*BtD7o3_Ie^Xga0o0JbG_seJDk23ITs86Loqrp?De%`PErgVgF^c+8DrWiEE\^S)ms5mti%t=B,b<Q!H?iT,(Ie_M:
%J,A^7IK"j`q`fT*jc=ocgE1n;ro7o]rT'<[qr.SRnad:+r\]c5nXoD[IK&>HJ,ET$COZ3Z]Dq_ss3@8+O04!%B7KUss7>!CTDX2pS\Bm~>
%AI9_PrivateDataEnd
